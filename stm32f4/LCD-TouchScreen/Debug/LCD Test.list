
LCD Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000172b0  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005cf8  0801745c  0801745c  0002745c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0801d154  0801d154  0002d154  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0801d15c  0801d15c  0002d15c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0801d160  0801d160  0002d160  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000338  20000000  0801d164  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .ccmram       00000000  10000000  10000000  00030338  2**0
                  CONTENTS
  8 .bss          0001bf0c  20000338  20000338  00030338  2**2
                  ALLOC
  9 ._user_heap_stack 00000600  2001c244  2001c244  00030338  2**0
                  ALLOC
 10 .ARM.attributes 00000030  00000000  00000000  00030338  2**0
                  CONTENTS, READONLY
 11 .debug_info   00039d87  00000000  00000000  00030368  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00004dd2  00000000  00000000  0006a0ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000c979  00000000  00000000  0006eec1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00001018  00000000  00000000  0007b840  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00001418  00000000  00000000  0007c858  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   00009b0a  00000000  00000000  0007dc70  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    00008123  00000000  00000000  0008777a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      000000ea  00000000  00000000  0008f89d  2**0
                  CONTENTS, READONLY
 19 .debug_frame  00002f80  00000000  00000000  0008f988  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000338 	.word	0x20000338
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08017444 	.word	0x08017444

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	2000033c 	.word	0x2000033c
 80001e8:	08017444 	.word	0x08017444

080001ec <strlen>:
 80001ec:	4603      	mov	r3, r0
 80001ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f2:	2a00      	cmp	r2, #0
 80001f4:	d1fb      	bne.n	80001ee <strlen+0x2>
 80001f6:	1a18      	subs	r0, r3, r0
 80001f8:	3801      	subs	r0, #1
 80001fa:	4770      	bx	lr

080001fc <__aeabi_uldivmod>:
 80001fc:	b953      	cbnz	r3, 8000214 <__aeabi_uldivmod+0x18>
 80001fe:	b94a      	cbnz	r2, 8000214 <__aeabi_uldivmod+0x18>
 8000200:	2900      	cmp	r1, #0
 8000202:	bf08      	it	eq
 8000204:	2800      	cmpeq	r0, #0
 8000206:	bf1c      	itt	ne
 8000208:	f04f 31ff 	movne.w	r1, #4294967295
 800020c:	f04f 30ff 	movne.w	r0, #4294967295
 8000210:	f000 b97a 	b.w	8000508 <__aeabi_idiv0>
 8000214:	f1ad 0c08 	sub.w	ip, sp, #8
 8000218:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800021c:	f000 f806 	bl	800022c <__udivmoddi4>
 8000220:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000224:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000228:	b004      	add	sp, #16
 800022a:	4770      	bx	lr

0800022c <__udivmoddi4>:
 800022c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000230:	468c      	mov	ip, r1
 8000232:	460d      	mov	r5, r1
 8000234:	4604      	mov	r4, r0
 8000236:	9e08      	ldr	r6, [sp, #32]
 8000238:	2b00      	cmp	r3, #0
 800023a:	d151      	bne.n	80002e0 <__udivmoddi4+0xb4>
 800023c:	428a      	cmp	r2, r1
 800023e:	4617      	mov	r7, r2
 8000240:	d96d      	bls.n	800031e <__udivmoddi4+0xf2>
 8000242:	fab2 fe82 	clz	lr, r2
 8000246:	f1be 0f00 	cmp.w	lr, #0
 800024a:	d00b      	beq.n	8000264 <__udivmoddi4+0x38>
 800024c:	f1ce 0c20 	rsb	ip, lr, #32
 8000250:	fa01 f50e 	lsl.w	r5, r1, lr
 8000254:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000258:	fa02 f70e 	lsl.w	r7, r2, lr
 800025c:	ea4c 0c05 	orr.w	ip, ip, r5
 8000260:	fa00 f40e 	lsl.w	r4, r0, lr
 8000264:	ea4f 4a17 	mov.w	sl, r7, lsr #16
 8000268:	0c25      	lsrs	r5, r4, #16
 800026a:	fbbc f8fa 	udiv	r8, ip, sl
 800026e:	fa1f f987 	uxth.w	r9, r7
 8000272:	fb0a cc18 	mls	ip, sl, r8, ip
 8000276:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 800027a:	fb08 f309 	mul.w	r3, r8, r9
 800027e:	42ab      	cmp	r3, r5
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x6c>
 8000282:	19ed      	adds	r5, r5, r7
 8000284:	f108 32ff 	add.w	r2, r8, #4294967295
 8000288:	f080 8123 	bcs.w	80004d2 <__udivmoddi4+0x2a6>
 800028c:	42ab      	cmp	r3, r5
 800028e:	f240 8120 	bls.w	80004d2 <__udivmoddi4+0x2a6>
 8000292:	f1a8 0802 	sub.w	r8, r8, #2
 8000296:	443d      	add	r5, r7
 8000298:	1aed      	subs	r5, r5, r3
 800029a:	b2a4      	uxth	r4, r4
 800029c:	fbb5 f0fa 	udiv	r0, r5, sl
 80002a0:	fb0a 5510 	mls	r5, sl, r0, r5
 80002a4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80002a8:	fb00 f909 	mul.w	r9, r0, r9
 80002ac:	45a1      	cmp	r9, r4
 80002ae:	d909      	bls.n	80002c4 <__udivmoddi4+0x98>
 80002b0:	19e4      	adds	r4, r4, r7
 80002b2:	f100 33ff 	add.w	r3, r0, #4294967295
 80002b6:	f080 810a 	bcs.w	80004ce <__udivmoddi4+0x2a2>
 80002ba:	45a1      	cmp	r9, r4
 80002bc:	f240 8107 	bls.w	80004ce <__udivmoddi4+0x2a2>
 80002c0:	3802      	subs	r0, #2
 80002c2:	443c      	add	r4, r7
 80002c4:	eba4 0409 	sub.w	r4, r4, r9
 80002c8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80002cc:	2100      	movs	r1, #0
 80002ce:	2e00      	cmp	r6, #0
 80002d0:	d061      	beq.n	8000396 <__udivmoddi4+0x16a>
 80002d2:	fa24 f40e 	lsr.w	r4, r4, lr
 80002d6:	2300      	movs	r3, #0
 80002d8:	6034      	str	r4, [r6, #0]
 80002da:	6073      	str	r3, [r6, #4]
 80002dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d907      	bls.n	80002f4 <__udivmoddi4+0xc8>
 80002e4:	2e00      	cmp	r6, #0
 80002e6:	d054      	beq.n	8000392 <__udivmoddi4+0x166>
 80002e8:	2100      	movs	r1, #0
 80002ea:	e886 0021 	stmia.w	r6, {r0, r5}
 80002ee:	4608      	mov	r0, r1
 80002f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002f4:	fab3 f183 	clz	r1, r3
 80002f8:	2900      	cmp	r1, #0
 80002fa:	f040 808e 	bne.w	800041a <__udivmoddi4+0x1ee>
 80002fe:	42ab      	cmp	r3, r5
 8000300:	d302      	bcc.n	8000308 <__udivmoddi4+0xdc>
 8000302:	4282      	cmp	r2, r0
 8000304:	f200 80fa 	bhi.w	80004fc <__udivmoddi4+0x2d0>
 8000308:	1a84      	subs	r4, r0, r2
 800030a:	eb65 0503 	sbc.w	r5, r5, r3
 800030e:	2001      	movs	r0, #1
 8000310:	46ac      	mov	ip, r5
 8000312:	2e00      	cmp	r6, #0
 8000314:	d03f      	beq.n	8000396 <__udivmoddi4+0x16a>
 8000316:	e886 1010 	stmia.w	r6, {r4, ip}
 800031a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800031e:	b912      	cbnz	r2, 8000326 <__udivmoddi4+0xfa>
 8000320:	2701      	movs	r7, #1
 8000322:	fbb7 f7f2 	udiv	r7, r7, r2
 8000326:	fab7 fe87 	clz	lr, r7
 800032a:	f1be 0f00 	cmp.w	lr, #0
 800032e:	d134      	bne.n	800039a <__udivmoddi4+0x16e>
 8000330:	1beb      	subs	r3, r5, r7
 8000332:	0c3a      	lsrs	r2, r7, #16
 8000334:	fa1f fc87 	uxth.w	ip, r7
 8000338:	2101      	movs	r1, #1
 800033a:	fbb3 f8f2 	udiv	r8, r3, r2
 800033e:	0c25      	lsrs	r5, r4, #16
 8000340:	fb02 3318 	mls	r3, r2, r8, r3
 8000344:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000348:	fb0c f308 	mul.w	r3, ip, r8
 800034c:	42ab      	cmp	r3, r5
 800034e:	d907      	bls.n	8000360 <__udivmoddi4+0x134>
 8000350:	19ed      	adds	r5, r5, r7
 8000352:	f108 30ff 	add.w	r0, r8, #4294967295
 8000356:	d202      	bcs.n	800035e <__udivmoddi4+0x132>
 8000358:	42ab      	cmp	r3, r5
 800035a:	f200 80d1 	bhi.w	8000500 <__udivmoddi4+0x2d4>
 800035e:	4680      	mov	r8, r0
 8000360:	1aed      	subs	r5, r5, r3
 8000362:	b2a3      	uxth	r3, r4
 8000364:	fbb5 f0f2 	udiv	r0, r5, r2
 8000368:	fb02 5510 	mls	r5, r2, r0, r5
 800036c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8000370:	fb0c fc00 	mul.w	ip, ip, r0
 8000374:	45a4      	cmp	ip, r4
 8000376:	d907      	bls.n	8000388 <__udivmoddi4+0x15c>
 8000378:	19e4      	adds	r4, r4, r7
 800037a:	f100 33ff 	add.w	r3, r0, #4294967295
 800037e:	d202      	bcs.n	8000386 <__udivmoddi4+0x15a>
 8000380:	45a4      	cmp	ip, r4
 8000382:	f200 80b8 	bhi.w	80004f6 <__udivmoddi4+0x2ca>
 8000386:	4618      	mov	r0, r3
 8000388:	eba4 040c 	sub.w	r4, r4, ip
 800038c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000390:	e79d      	b.n	80002ce <__udivmoddi4+0xa2>
 8000392:	4631      	mov	r1, r6
 8000394:	4630      	mov	r0, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	f1ce 0420 	rsb	r4, lr, #32
 800039e:	fa05 f30e 	lsl.w	r3, r5, lr
 80003a2:	fa07 f70e 	lsl.w	r7, r7, lr
 80003a6:	fa20 f804 	lsr.w	r8, r0, r4
 80003aa:	0c3a      	lsrs	r2, r7, #16
 80003ac:	fa25 f404 	lsr.w	r4, r5, r4
 80003b0:	ea48 0803 	orr.w	r8, r8, r3
 80003b4:	fbb4 f1f2 	udiv	r1, r4, r2
 80003b8:	ea4f 4518 	mov.w	r5, r8, lsr #16
 80003bc:	fb02 4411 	mls	r4, r2, r1, r4
 80003c0:	fa1f fc87 	uxth.w	ip, r7
 80003c4:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 80003c8:	fb01 f30c 	mul.w	r3, r1, ip
 80003cc:	42ab      	cmp	r3, r5
 80003ce:	fa00 f40e 	lsl.w	r4, r0, lr
 80003d2:	d909      	bls.n	80003e8 <__udivmoddi4+0x1bc>
 80003d4:	19ed      	adds	r5, r5, r7
 80003d6:	f101 30ff 	add.w	r0, r1, #4294967295
 80003da:	f080 808a 	bcs.w	80004f2 <__udivmoddi4+0x2c6>
 80003de:	42ab      	cmp	r3, r5
 80003e0:	f240 8087 	bls.w	80004f2 <__udivmoddi4+0x2c6>
 80003e4:	3902      	subs	r1, #2
 80003e6:	443d      	add	r5, r7
 80003e8:	1aeb      	subs	r3, r5, r3
 80003ea:	fa1f f588 	uxth.w	r5, r8
 80003ee:	fbb3 f0f2 	udiv	r0, r3, r2
 80003f2:	fb02 3310 	mls	r3, r2, r0, r3
 80003f6:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 80003fa:	fb00 f30c 	mul.w	r3, r0, ip
 80003fe:	42ab      	cmp	r3, r5
 8000400:	d907      	bls.n	8000412 <__udivmoddi4+0x1e6>
 8000402:	19ed      	adds	r5, r5, r7
 8000404:	f100 38ff 	add.w	r8, r0, #4294967295
 8000408:	d26f      	bcs.n	80004ea <__udivmoddi4+0x2be>
 800040a:	42ab      	cmp	r3, r5
 800040c:	d96d      	bls.n	80004ea <__udivmoddi4+0x2be>
 800040e:	3802      	subs	r0, #2
 8000410:	443d      	add	r5, r7
 8000412:	1aeb      	subs	r3, r5, r3
 8000414:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000418:	e78f      	b.n	800033a <__udivmoddi4+0x10e>
 800041a:	f1c1 0720 	rsb	r7, r1, #32
 800041e:	fa22 f807 	lsr.w	r8, r2, r7
 8000422:	408b      	lsls	r3, r1
 8000424:	fa05 f401 	lsl.w	r4, r5, r1
 8000428:	ea48 0303 	orr.w	r3, r8, r3
 800042c:	fa20 fe07 	lsr.w	lr, r0, r7
 8000430:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8000434:	40fd      	lsrs	r5, r7
 8000436:	ea4e 0e04 	orr.w	lr, lr, r4
 800043a:	fbb5 f9fc 	udiv	r9, r5, ip
 800043e:	ea4f 441e 	mov.w	r4, lr, lsr #16
 8000442:	fb0c 5519 	mls	r5, ip, r9, r5
 8000446:	fa1f f883 	uxth.w	r8, r3
 800044a:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 800044e:	fb09 f408 	mul.w	r4, r9, r8
 8000452:	42ac      	cmp	r4, r5
 8000454:	fa02 f201 	lsl.w	r2, r2, r1
 8000458:	fa00 fa01 	lsl.w	sl, r0, r1
 800045c:	d908      	bls.n	8000470 <__udivmoddi4+0x244>
 800045e:	18ed      	adds	r5, r5, r3
 8000460:	f109 30ff 	add.w	r0, r9, #4294967295
 8000464:	d243      	bcs.n	80004ee <__udivmoddi4+0x2c2>
 8000466:	42ac      	cmp	r4, r5
 8000468:	d941      	bls.n	80004ee <__udivmoddi4+0x2c2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	441d      	add	r5, r3
 8000470:	1b2d      	subs	r5, r5, r4
 8000472:	fa1f fe8e 	uxth.w	lr, lr
 8000476:	fbb5 f0fc 	udiv	r0, r5, ip
 800047a:	fb0c 5510 	mls	r5, ip, r0, r5
 800047e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 8000482:	fb00 f808 	mul.w	r8, r0, r8
 8000486:	45a0      	cmp	r8, r4
 8000488:	d907      	bls.n	800049a <__udivmoddi4+0x26e>
 800048a:	18e4      	adds	r4, r4, r3
 800048c:	f100 35ff 	add.w	r5, r0, #4294967295
 8000490:	d229      	bcs.n	80004e6 <__udivmoddi4+0x2ba>
 8000492:	45a0      	cmp	r8, r4
 8000494:	d927      	bls.n	80004e6 <__udivmoddi4+0x2ba>
 8000496:	3802      	subs	r0, #2
 8000498:	441c      	add	r4, r3
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	eba4 0408 	sub.w	r4, r4, r8
 80004a2:	fba0 8902 	umull	r8, r9, r0, r2
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c6      	mov	lr, r8
 80004aa:	464d      	mov	r5, r9
 80004ac:	d315      	bcc.n	80004da <__udivmoddi4+0x2ae>
 80004ae:	d012      	beq.n	80004d6 <__udivmoddi4+0x2aa>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x29c>
 80004b2:	ebba 030e 	subs.w	r3, sl, lr
 80004b6:	eb64 0405 	sbc.w	r4, r4, r5
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40cb      	lsrs	r3, r1
 80004c0:	431f      	orrs	r7, r3
 80004c2:	40cc      	lsrs	r4, r1
 80004c4:	6037      	str	r7, [r6, #0]
 80004c6:	6074      	str	r4, [r6, #4]
 80004c8:	2100      	movs	r1, #0
 80004ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ce:	4618      	mov	r0, r3
 80004d0:	e6f8      	b.n	80002c4 <__udivmoddi4+0x98>
 80004d2:	4690      	mov	r8, r2
 80004d4:	e6e0      	b.n	8000298 <__udivmoddi4+0x6c>
 80004d6:	45c2      	cmp	sl, r8
 80004d8:	d2ea      	bcs.n	80004b0 <__udivmoddi4+0x284>
 80004da:	ebb8 0e02 	subs.w	lr, r8, r2
 80004de:	eb69 0503 	sbc.w	r5, r9, r3
 80004e2:	3801      	subs	r0, #1
 80004e4:	e7e4      	b.n	80004b0 <__udivmoddi4+0x284>
 80004e6:	4628      	mov	r0, r5
 80004e8:	e7d7      	b.n	800049a <__udivmoddi4+0x26e>
 80004ea:	4640      	mov	r0, r8
 80004ec:	e791      	b.n	8000412 <__udivmoddi4+0x1e6>
 80004ee:	4681      	mov	r9, r0
 80004f0:	e7be      	b.n	8000470 <__udivmoddi4+0x244>
 80004f2:	4601      	mov	r1, r0
 80004f4:	e778      	b.n	80003e8 <__udivmoddi4+0x1bc>
 80004f6:	3802      	subs	r0, #2
 80004f8:	443c      	add	r4, r7
 80004fa:	e745      	b.n	8000388 <__udivmoddi4+0x15c>
 80004fc:	4608      	mov	r0, r1
 80004fe:	e708      	b.n	8000312 <__udivmoddi4+0xe6>
 8000500:	f1a8 0802 	sub.w	r8, r8, #2
 8000504:	443d      	add	r5, r7
 8000506:	e72b      	b.n	8000360 <__udivmoddi4+0x134>

08000508 <__aeabi_idiv0>:
 8000508:	4770      	bx	lr
 800050a:	bf00      	nop

0800050c <LCD_IO_Init>:

/**
 * @brief  Configures the LCD_SPI interface.
 */
void LCD_IO_Init(void)
{
 800050c:	4770      	bx	lr
	...

08000510 <LCD_IO_WriteReg>:

/**
 * @brief  Writes register address.
 */
void LCD_IO_WriteReg(uint8_t Reg)
{
 8000510:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000512:	ac02      	add	r4, sp, #8
	HAL_GPIO_WritePin(ILI9341_WRX_DCX_GPIO_Port, ILI9341_WRX_DCX_Pin, GPIO_PIN_RESET);
	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_RESET);
 8000514:	4d0d      	ldr	r5, [pc, #52]	; (800054c <LCD_IO_WriteReg+0x3c>)
{
 8000516:	f804 0d01 	strb.w	r0, [r4, #-1]!
	HAL_GPIO_WritePin(ILI9341_WRX_DCX_GPIO_Port, ILI9341_WRX_DCX_Pin, GPIO_PIN_RESET);
 800051a:	2200      	movs	r2, #0
 800051c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000520:	480b      	ldr	r0, [pc, #44]	; (8000550 <LCD_IO_WriteReg+0x40>)
 8000522:	f001 f947 	bl	80017b4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_RESET);
 8000526:	4628      	mov	r0, r5
 8000528:	2200      	movs	r2, #0
 800052a:	2104      	movs	r1, #4
 800052c:	f001 f942 	bl	80017b4 <HAL_GPIO_WritePin>

	HAL_SPI_Transmit(&hspi5, &Reg, 1, HAL_MAX_DELAY);
 8000530:	f04f 33ff 	mov.w	r3, #4294967295
 8000534:	4621      	mov	r1, r4
 8000536:	2201      	movs	r2, #1
 8000538:	4806      	ldr	r0, [pc, #24]	; (8000554 <LCD_IO_WriteReg+0x44>)
 800053a:	f002 fc7c 	bl	8002e36 <HAL_SPI_Transmit>

	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_SET);
 800053e:	2201      	movs	r2, #1
 8000540:	2104      	movs	r1, #4
 8000542:	4628      	mov	r0, r5
 8000544:	f001 f936 	bl	80017b4 <HAL_GPIO_WritePin>
}
 8000548:	b003      	add	sp, #12
 800054a:	bd30      	pop	{r4, r5, pc}
 800054c:	40020800 	.word	0x40020800
 8000550:	40020c00 	.word	0x40020c00
 8000554:	2001bf08 	.word	0x2001bf08

08000558 <LCD_IO_WriteData>:
/**
 * @brief  Writes register value.
 */

void LCD_IO_WriteData(uint16_t RegValue)
{
 8000558:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800055a:	ac02      	add	r4, sp, #8
	HAL_GPIO_WritePin(ILI9341_WRX_DCX_GPIO_Port, ILI9341_WRX_DCX_Pin, GPIO_PIN_SET);
	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_RESET);
 800055c:	4d0d      	ldr	r5, [pc, #52]	; (8000594 <LCD_IO_WriteData+0x3c>)
{
 800055e:	f824 0d02 	strh.w	r0, [r4, #-2]!
	HAL_GPIO_WritePin(ILI9341_WRX_DCX_GPIO_Port, ILI9341_WRX_DCX_Pin, GPIO_PIN_SET);
 8000562:	2201      	movs	r2, #1
 8000564:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000568:	480b      	ldr	r0, [pc, #44]	; (8000598 <LCD_IO_WriteData+0x40>)
 800056a:	f001 f923 	bl	80017b4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_RESET);
 800056e:	4628      	mov	r0, r5
 8000570:	2200      	movs	r2, #0
 8000572:	2104      	movs	r1, #4
 8000574:	f001 f91e 	bl	80017b4 <HAL_GPIO_WritePin>

	HAL_SPI_Transmit(&hspi5, (uint8_t *)&RegValue, 1, HAL_MAX_DELAY);
 8000578:	f04f 33ff 	mov.w	r3, #4294967295
 800057c:	4621      	mov	r1, r4
 800057e:	2201      	movs	r2, #1
 8000580:	4806      	ldr	r0, [pc, #24]	; (800059c <LCD_IO_WriteData+0x44>)
 8000582:	f002 fc58 	bl	8002e36 <HAL_SPI_Transmit>

	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_SET);
 8000586:	2201      	movs	r2, #1
 8000588:	2104      	movs	r1, #4
 800058a:	4628      	mov	r0, r5
 800058c:	f001 f912 	bl	80017b4 <HAL_GPIO_WritePin>
}
 8000590:	b003      	add	sp, #12
 8000592:	bd30      	pop	{r4, r5, pc}
 8000594:	40020800 	.word	0x40020800
 8000598:	40020c00 	.word	0x40020c00
 800059c:	2001bf08 	.word	0x2001bf08

080005a0 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 80005a0:	b530      	push	{r4, r5, lr}
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80005a2:	2430      	movs	r4, #48	; 0x30
{
 80005a4:	b0a1      	sub	sp, #132	; 0x84
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80005a6:	4622      	mov	r2, r4
 80005a8:	2100      	movs	r1, #0
 80005aa:	a808      	add	r0, sp, #32
 80005ac:	f016 ff39 	bl	8017422 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80005b0:	2214      	movs	r2, #20
 80005b2:	2100      	movs	r1, #0
 80005b4:	a803      	add	r0, sp, #12
 80005b6:	f016 ff34 	bl	8017422 <memset>
	RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80005ba:	2100      	movs	r1, #0
 80005bc:	4622      	mov	r2, r4
 80005be:	a814      	add	r0, sp, #80	; 0x50
 80005c0:	f016 ff2f 	bl	8017422 <memset>

	/**Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 80005c4:	2400      	movs	r4, #0
 80005c6:	4b22      	ldr	r3, [pc, #136]	; (8000650 <SystemClock_Config+0xb0>)
 80005c8:	9401      	str	r4, [sp, #4]
 80005ca:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80005cc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80005d0:	641a      	str	r2, [r3, #64]	; 0x40
 80005d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80005d4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80005d8:	9301      	str	r3, [sp, #4]
 80005da:	9b01      	ldr	r3, [sp, #4]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80005dc:	4b1d      	ldr	r3, [pc, #116]	; (8000654 <SystemClock_Config+0xb4>)
 80005de:	9402      	str	r4, [sp, #8]
 80005e0:	681a      	ldr	r2, [r3, #0]
 80005e2:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80005e6:	601a      	str	r2, [r3, #0]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80005ee:	9302      	str	r3, [sp, #8]
 80005f0:	9b02      	ldr	r3, [sp, #8]
	/**Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80005f2:	2301      	movs	r3, #1
 80005f4:	9308      	str	r3, [sp, #32]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80005f6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80005fa:	9309      	str	r3, [sp, #36]	; 0x24
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80005fc:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
	RCC_OscInitStruct.PLL.PLLM = 4;
	RCC_OscInitStruct.PLL.PLLN = 180;
 8000600:	22b4      	movs	r2, #180	; 0xb4
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000602:	2502      	movs	r5, #2
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000604:	930f      	str	r3, [sp, #60]	; 0x3c
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
	RCC_OscInitStruct.PLL.PLLQ = 4;
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000606:	a808      	add	r0, sp, #32
	RCC_OscInitStruct.PLL.PLLM = 4;
 8000608:	2304      	movs	r3, #4
	RCC_OscInitStruct.PLL.PLLN = 180;
 800060a:	9211      	str	r2, [sp, #68]	; 0x44
	RCC_OscInitStruct.PLL.PLLM = 4;
 800060c:	9310      	str	r3, [sp, #64]	; 0x40
	RCC_OscInitStruct.PLL.PLLQ = 4;
 800060e:	9313      	str	r3, [sp, #76]	; 0x4c
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000610:	950e      	str	r5, [sp, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000612:	9512      	str	r5, [sp, #72]	; 0x48
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000614:	f001 ffc0 	bl	8002598 <HAL_RCC_OscConfig>
	{
		Error_Handler();
	}
	/**Activate the Over-Drive mode
	 */
	if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000618:	f001 ff82 	bl	8002520 <HAL_PWREx_EnableOverDrive>
	{
		Error_Handler();
	}
	/**Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800061c:	230f      	movs	r3, #15
 800061e:	9303      	str	r3, [sp, #12]
			|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000620:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000624:	9306      	str	r3, [sp, #24]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000626:	2105      	movs	r1, #5
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000628:	f44f 5380 	mov.w	r3, #4096	; 0x1000
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800062c:	a803      	add	r0, sp, #12
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800062e:	9307      	str	r3, [sp, #28]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000630:	9504      	str	r5, [sp, #16]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000632:	9405      	str	r4, [sp, #20]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000634:	f002 f960 	bl	80028f8 <HAL_RCC_ClockConfig>
	{
		Error_Handler();
	}
	PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000638:	2308      	movs	r3, #8
 800063a:	9314      	str	r3, [sp, #80]	; 0x50
	PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 800063c:	2332      	movs	r3, #50	; 0x32
 800063e:	9318      	str	r3, [sp, #96]	; 0x60
	PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
	PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000640:	a814      	add	r0, sp, #80	; 0x50
	PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8000642:	2305      	movs	r3, #5
 8000644:	931a      	str	r3, [sp, #104]	; 0x68
	PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8000646:	941d      	str	r4, [sp, #116]	; 0x74
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000648:	f002 fa00 	bl	8002a4c <HAL_RCCEx_PeriphCLKConfig>
	{
		Error_Handler();
	}
}
 800064c:	b021      	add	sp, #132	; 0x84
 800064e:	bd30      	pop	{r4, r5, pc}
 8000650:	40023800 	.word	0x40023800
 8000654:	40007000 	.word	0x40007000

08000658 <main>:
{
 8000658:	b500      	push	{lr}
 800065a:	b08f      	sub	sp, #60	; 0x3c
	HAL_Init();
 800065c:	f000 fd46 	bl	80010ec <HAL_Init>
	SystemClock_Config();
 8000660:	f7ff ff9e 	bl	80005a0 <SystemClock_Config>
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000664:	2214      	movs	r2, #20
 8000666:	2100      	movs	r1, #0
 8000668:	a809      	add	r0, sp, #36	; 0x24
 800066a:	f016 feda 	bl	8017422 <memset>

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOF_CLK_ENABLE();
 800066e:	2400      	movs	r4, #0
 8000670:	4b57      	ldr	r3, [pc, #348]	; (80007d0 <main+0x178>)
 8000672:	9401      	str	r4, [sp, #4]
 8000674:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	__HAL_RCC_GPIOG_CLK_ENABLE();
	__HAL_RCC_GPIOE_CLK_ENABLE();
	__HAL_RCC_GPIOD_CLK_ENABLE();

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_RESET);
 8000676:	4857      	ldr	r0, [pc, #348]	; (80007d4 <main+0x17c>)
	__HAL_RCC_GPIOF_CLK_ENABLE();
 8000678:	f042 0220 	orr.w	r2, r2, #32
 800067c:	631a      	str	r2, [r3, #48]	; 0x30
 800067e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000680:	f002 0220 	and.w	r2, r2, #32
 8000684:	9201      	str	r2, [sp, #4]
 8000686:	9a01      	ldr	r2, [sp, #4]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8000688:	9402      	str	r4, [sp, #8]
 800068a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800068c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000690:	631a      	str	r2, [r3, #48]	; 0x30
 8000692:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000694:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8000698:	9202      	str	r2, [sp, #8]
 800069a:	9a02      	ldr	r2, [sp, #8]
	__HAL_RCC_GPIOC_CLK_ENABLE();
 800069c:	9403      	str	r4, [sp, #12]
 800069e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006a0:	f042 0204 	orr.w	r2, r2, #4
 80006a4:	631a      	str	r2, [r3, #48]	; 0x30
 80006a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006a8:	f002 0204 	and.w	r2, r2, #4
 80006ac:	9203      	str	r2, [sp, #12]
 80006ae:	9a03      	ldr	r2, [sp, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 80006b0:	9404      	str	r4, [sp, #16]
 80006b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006b4:	f042 0201 	orr.w	r2, r2, #1
 80006b8:	631a      	str	r2, [r3, #48]	; 0x30
 80006ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006bc:	f002 0201 	and.w	r2, r2, #1
 80006c0:	9204      	str	r2, [sp, #16]
 80006c2:	9a04      	ldr	r2, [sp, #16]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80006c4:	9405      	str	r4, [sp, #20]
 80006c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006c8:	f042 0202 	orr.w	r2, r2, #2
 80006cc:	631a      	str	r2, [r3, #48]	; 0x30
 80006ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006d0:	f002 0202 	and.w	r2, r2, #2
 80006d4:	9205      	str	r2, [sp, #20]
 80006d6:	9a05      	ldr	r2, [sp, #20]
	__HAL_RCC_GPIOG_CLK_ENABLE();
 80006d8:	9406      	str	r4, [sp, #24]
 80006da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006dc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80006e0:	631a      	str	r2, [r3, #48]	; 0x30
 80006e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006e4:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80006e8:	9206      	str	r2, [sp, #24]
 80006ea:	9a06      	ldr	r2, [sp, #24]
	__HAL_RCC_GPIOE_CLK_ENABLE();
 80006ec:	9407      	str	r4, [sp, #28]
 80006ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006f0:	f042 0210 	orr.w	r2, r2, #16
 80006f4:	631a      	str	r2, [r3, #48]	; 0x30
 80006f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006f8:	f002 0210 	and.w	r2, r2, #16
 80006fc:	9207      	str	r2, [sp, #28]
 80006fe:	9a07      	ldr	r2, [sp, #28]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 8000700:	9408      	str	r4, [sp, #32]
 8000702:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000704:	f042 0208 	orr.w	r2, r2, #8
 8000708:	631a      	str	r2, [r3, #48]	; 0x30
 800070a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800070c:	f003 0308 	and.w	r3, r3, #8
 8000710:	9308      	str	r3, [sp, #32]
	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_RESET);
 8000712:	4622      	mov	r2, r4
 8000714:	2104      	movs	r1, #4
	__HAL_RCC_GPIOD_CLK_ENABLE();
 8000716:	9b08      	ldr	r3, [sp, #32]
	HAL_GPIO_WritePin(ILI9341_CSX_GPIO_Port, ILI9341_CSX_Pin, GPIO_PIN_RESET);
 8000718:	f001 f84c 	bl	80017b4 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOD, ILI9341_RDX_Pin|ILI9341_WRX_DCX_Pin, GPIO_PIN_RESET);
 800071c:	4622      	mov	r2, r4
 800071e:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000722:	482d      	ldr	r0, [pc, #180]	; (80007d8 <main+0x180>)
 8000724:	f001 f846 	bl	80017b4 <HAL_GPIO_WritePin>

	/*Configure GPIO pin : ILI9341_CSX_Pin */
	GPIO_InitStruct.Pin = ILI9341_CSX_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000728:	2501      	movs	r5, #1
	GPIO_InitStruct.Pin = ILI9341_CSX_Pin;
 800072a:	2304      	movs	r3, #4
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
	HAL_GPIO_Init(ILI9341_CSX_GPIO_Port, &GPIO_InitStruct);
 800072c:	a909      	add	r1, sp, #36	; 0x24
 800072e:	4829      	ldr	r0, [pc, #164]	; (80007d4 <main+0x17c>)
	GPIO_InitStruct.Pin = ILI9341_CSX_Pin;
 8000730:	9309      	str	r3, [sp, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000732:	950a      	str	r5, [sp, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000734:	940b      	str	r4, [sp, #44]	; 0x2c
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000736:	940c      	str	r4, [sp, #48]	; 0x30
	HAL_GPIO_Init(ILI9341_CSX_GPIO_Port, &GPIO_InitStruct);
 8000738:	f000 feac 	bl	8001494 <HAL_GPIO_Init>
	/*Configure GPIO pins : ILI9341_RDX_Pin ILI9341_WRX_DCX_Pin */
	GPIO_InitStruct.Pin = ILI9341_RDX_Pin|ILI9341_WRX_DCX_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800073c:	a909      	add	r1, sp, #36	; 0x24
	GPIO_InitStruct.Pin = ILI9341_RDX_Pin|ILI9341_WRX_DCX_Pin;
 800073e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000742:	4825      	ldr	r0, [pc, #148]	; (80007d8 <main+0x180>)
	GPIO_InitStruct.Pin = ILI9341_RDX_Pin|ILI9341_WRX_DCX_Pin;
 8000744:	9309      	str	r3, [sp, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000746:	950a      	str	r5, [sp, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000748:	940b      	str	r4, [sp, #44]	; 0x2c
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800074a:	940c      	str	r4, [sp, #48]	; 0x30
	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800074c:	f000 fea2 	bl	8001494 <HAL_GPIO_Init>
	hspi5.Instance = SPI5;
 8000750:	4822      	ldr	r0, [pc, #136]	; (80007dc <main+0x184>)
	hspi5.Init.Mode = SPI_MODE_MASTER;
 8000752:	4a23      	ldr	r2, [pc, #140]	; (80007e0 <main+0x188>)
	hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8000754:	6084      	str	r4, [r0, #8]
	hspi5.Init.Mode = SPI_MODE_MASTER;
 8000756:	f44f 7382 	mov.w	r3, #260	; 0x104
 800075a:	e880 000c 	stmia.w	r0, {r2, r3}
	hspi5.Init.NSS = SPI_NSS_SOFT;
 800075e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000762:	6183      	str	r3, [r0, #24]
	hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000764:	2318      	movs	r3, #24
 8000766:	61c3      	str	r3, [r0, #28]
	hspi5.Init.CRCPolynomial = 10;
 8000768:	230a      	movs	r3, #10
 800076a:	62c3      	str	r3, [r0, #44]	; 0x2c
	hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800076c:	60c4      	str	r4, [r0, #12]
	hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 800076e:	6104      	str	r4, [r0, #16]
	hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000770:	6144      	str	r4, [r0, #20]
	hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000772:	6204      	str	r4, [r0, #32]
	hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000774:	6244      	str	r4, [r0, #36]	; 0x24
	hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000776:	6284      	str	r4, [r0, #40]	; 0x28
	if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000778:	f002 fb20 	bl	8002dbc <HAL_SPI_Init>
	hcrc.Instance = CRC;
 800077c:	4819      	ldr	r0, [pc, #100]	; (80007e4 <main+0x18c>)
 800077e:	4b1a      	ldr	r3, [pc, #104]	; (80007e8 <main+0x190>)
	hi2c3.Instance = I2C3;
 8000780:	4d1a      	ldr	r5, [pc, #104]	; (80007ec <main+0x194>)
	hcrc.Instance = CRC;
 8000782:	6003      	str	r3, [r0, #0]
	if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000784:	f000 fd68 	bl	8001258 <HAL_CRC_Init>
	hi2c3.Init.ClockSpeed = 100000;
 8000788:	4919      	ldr	r1, [pc, #100]	; (80007f0 <main+0x198>)
 800078a:	4b1a      	ldr	r3, [pc, #104]	; (80007f4 <main+0x19c>)
	hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800078c:	60ac      	str	r4, [r5, #8]
	hi2c3.Init.ClockSpeed = 100000;
 800078e:	e885 000a 	stmia.w	r5, {r1, r3}
	if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000792:	4628      	mov	r0, r5
	hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000794:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000798:	612b      	str	r3, [r5, #16]
	hi2c3.Init.OwnAddress1 = 0;
 800079a:	60ec      	str	r4, [r5, #12]
	hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800079c:	616c      	str	r4, [r5, #20]
	hi2c3.Init.OwnAddress2 = 0;
 800079e:	61ac      	str	r4, [r5, #24]
	hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80007a0:	61ec      	str	r4, [r5, #28]
	hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80007a2:	622c      	str	r4, [r5, #32]
	if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80007a4:	f001 f9d4 	bl	8001b50 <HAL_I2C_Init>
	if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80007a8:	4621      	mov	r1, r4
 80007aa:	4628      	mov	r0, r5
 80007ac:	f001 fbe4 	bl	8001f78 <HAL_I2CEx_ConfigAnalogFilter>
	if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80007b0:	4621      	mov	r1, r4
 80007b2:	4628      	mov	r0, r5
 80007b4:	f001 fbff 	bl	8001fb6 <HAL_I2CEx_ConfigDigitalFilter>
	GRAPHICS_HW_Init();
 80007b8:	f003 fbca 	bl	8003f50 <GRAPHICS_HW_Init>
	BSP_TS_Init(ILI9341_LCD_PIXEL_WIDTH, ILI9341_LCD_PIXEL_HEIGHT);
 80007bc:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80007c0:	20f0      	movs	r0, #240	; 0xf0
 80007c2:	f000 fbed 	bl	8000fa0 <BSP_TS_Init>
	GRAPHICS_Init();
 80007c6:	f003 fbd0 	bl	8003f6a <GRAPHICS_Init>
	GRAPHICS_MainTask();
 80007ca:	f002 fcb9 	bl	8003140 <GRAPHICS_MainTask>
 80007ce:	e7fe      	b.n	80007ce <main+0x176>
 80007d0:	40023800 	.word	0x40023800
 80007d4:	40020800 	.word	0x40020800
 80007d8:	40020c00 	.word	0x40020c00
 80007dc:	2001bf08 	.word	0x2001bf08
 80007e0:	40015000 	.word	0x40015000
 80007e4:	2001bf60 	.word	0x2001bf60
 80007e8:	40023000 	.word	0x40023000
 80007ec:	2001beb4 	.word	0x2001beb4
 80007f0:	40005c00 	.word	0x40005c00
 80007f4:	000186a0 	.word	0x000186a0

080007f8 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 80007f8:	4770      	bx	lr
	...

080007fc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80007fc:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80007fe:	4b0c      	ldr	r3, [pc, #48]	; (8000830 <HAL_MspInit+0x34>)
 8000800:	2100      	movs	r1, #0
 8000802:	9100      	str	r1, [sp, #0]
 8000804:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000806:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800080a:	645a      	str	r2, [r3, #68]	; 0x44
 800080c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800080e:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8000812:	9200      	str	r2, [sp, #0]
 8000814:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000816:	9101      	str	r1, [sp, #4]
 8000818:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800081a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800081e:	641a      	str	r2, [r3, #64]	; 0x40
 8000820:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000822:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000826:	9301      	str	r3, [sp, #4]
 8000828:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800082a:	b002      	add	sp, #8
 800082c:	4770      	bx	lr
 800082e:	bf00      	nop
 8000830:	40023800 	.word	0x40023800

08000834 <HAL_CRC_MspInit>:
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{

  if(hcrc->Instance==CRC)
 8000834:	6802      	ldr	r2, [r0, #0]
 8000836:	4b09      	ldr	r3, [pc, #36]	; (800085c <HAL_CRC_MspInit+0x28>)
 8000838:	429a      	cmp	r2, r3
{
 800083a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800083c:	d10b      	bne.n	8000856 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800083e:	2300      	movs	r3, #0
 8000840:	9301      	str	r3, [sp, #4]
 8000842:	4b07      	ldr	r3, [pc, #28]	; (8000860 <HAL_CRC_MspInit+0x2c>)
 8000844:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000846:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800084a:	631a      	str	r2, [r3, #48]	; 0x30
 800084c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800084e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000852:	9301      	str	r3, [sp, #4]
 8000854:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000856:	b002      	add	sp, #8
 8000858:	4770      	bx	lr
 800085a:	bf00      	nop
 800085c:	40023000 	.word	0x40023000
 8000860:	40023800 	.word	0x40023800

08000864 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000868:	4604      	mov	r4, r0
 800086a:	b089      	sub	sp, #36	; 0x24

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800086c:	2214      	movs	r2, #20
 800086e:	2100      	movs	r1, #0
 8000870:	a803      	add	r0, sp, #12
 8000872:	f016 fdd6 	bl	8017422 <memset>
  if(hi2c->Instance==I2C3)
 8000876:	6822      	ldr	r2, [r4, #0]
 8000878:	4b22      	ldr	r3, [pc, #136]	; (8000904 <HAL_I2C_MspInit+0xa0>)
 800087a:	429a      	cmp	r2, r3
 800087c:	d13f      	bne.n	80008fe <HAL_I2C_MspInit+0x9a>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800087e:	4c22      	ldr	r4, [pc, #136]	; (8000908 <HAL_I2C_MspInit+0xa4>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000880:	4822      	ldr	r0, [pc, #136]	; (800090c <HAL_I2C_MspInit+0xa8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000882:	2500      	movs	r5, #0
 8000884:	9500      	str	r5, [sp, #0]
 8000886:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000888:	f043 0304 	orr.w	r3, r3, #4
 800088c:	6323      	str	r3, [r4, #48]	; 0x30
 800088e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000890:	f003 0304 	and.w	r3, r3, #4
 8000894:	9300      	str	r3, [sp, #0]
 8000896:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000898:	9501      	str	r5, [sp, #4]
 800089a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800089c:	f043 0301 	orr.w	r3, r3, #1
 80008a0:	6323      	str	r3, [r4, #48]	; 0x30
 80008a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80008a4:	f003 0301 	and.w	r3, r3, #1
 80008a8:	9301      	str	r3, [sp, #4]
 80008aa:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80008ac:	f04f 0912 	mov.w	r9, #18
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80008b0:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80008b4:	f04f 0801 	mov.w	r8, #1
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008b8:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80008ba:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008bc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80008be:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80008c0:	f8cd 9010 	str.w	r9, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80008c4:	f8cd 8014 	str.w	r8, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008c8:	9706      	str	r7, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80008ca:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80008cc:	f000 fde2 	bl	8001494 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80008d0:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008d4:	a903      	add	r1, sp, #12
 80008d6:	480e      	ldr	r0, [pc, #56]	; (8000910 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80008d8:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80008da:	f8cd 9010 	str.w	r9, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80008de:	f8cd 8014 	str.w	r8, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008e2:	9706      	str	r7, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80008e4:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008e6:	f000 fdd5 	bl	8001494 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80008ea:	9502      	str	r5, [sp, #8]
 80008ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008ee:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80008f2:	6423      	str	r3, [r4, #64]	; 0x40
 80008f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008f6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80008fa:	9302      	str	r3, [sp, #8]
 80008fc:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80008fe:	b009      	add	sp, #36	; 0x24
 8000900:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000904:	40005c00 	.word	0x40005c00
 8000908:	40023800 	.word	0x40023800
 800090c:	40020800 	.word	0x40020800
 8000910:	40020000 	.word	0x40020000

08000914 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000914:	b510      	push	{r4, lr}
 8000916:	4604      	mov	r4, r0
 8000918:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800091a:	2214      	movs	r2, #20
 800091c:	2100      	movs	r1, #0
 800091e:	a803      	add	r0, sp, #12
 8000920:	f016 fd7f 	bl	8017422 <memset>
  if(hspi->Instance==SPI5)
 8000924:	6822      	ldr	r2, [r4, #0]
 8000926:	4b14      	ldr	r3, [pc, #80]	; (8000978 <HAL_SPI_MspInit+0x64>)
 8000928:	429a      	cmp	r2, r3
 800092a:	d123      	bne.n	8000974 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 800092c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8000930:	2100      	movs	r1, #0
 8000932:	9101      	str	r1, [sp, #4]
 8000934:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000936:	4811      	ldr	r0, [pc, #68]	; (800097c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8000938:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800093c:	645a      	str	r2, [r3, #68]	; 0x44
 800093e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000940:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8000944:	9201      	str	r2, [sp, #4]
 8000946:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000948:	9102      	str	r1, [sp, #8]
 800094a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800094c:	f042 0220 	orr.w	r2, r2, #32
 8000950:	631a      	str	r2, [r3, #48]	; 0x30
 8000952:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000954:	f003 0320 	and.w	r3, r3, #32
 8000958:	9302      	str	r3, [sp, #8]
 800095a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800095c:	f44f 7360 	mov.w	r3, #896	; 0x380
 8000960:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000962:	2302      	movs	r3, #2
 8000964:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000966:	2303      	movs	r3, #3
 8000968:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800096a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800096c:	2305      	movs	r3, #5
 800096e:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000970:	f000 fd90 	bl	8001494 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8000974:	b008      	add	sp, #32
 8000976:	bd10      	pop	{r4, pc}
 8000978:	40015000 	.word	0x40015000
 800097c:	40021400 	.word	0x40021400

08000980 <NMI_Handler>:
 8000980:	4770      	bx	lr

08000982 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000982:	e7fe      	b.n	8000982 <HardFault_Handler>

08000984 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000984:	e7fe      	b.n	8000984 <MemManage_Handler>

08000986 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000986:	e7fe      	b.n	8000986 <BusFault_Handler>

08000988 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000988:	e7fe      	b.n	8000988 <UsageFault_Handler>

0800098a <SVC_Handler>:
 800098a:	4770      	bx	lr

0800098c <DebugMon_Handler>:
 800098c:	4770      	bx	lr

0800098e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800098e:	4770      	bx	lr

08000990 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000990:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000992:	f000 fbc5 	bl	8001120 <HAL_IncTick>
  GRAPHICS_IncTick();
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000996:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  GRAPHICS_IncTick();
 800099a:	f003 bad1 	b.w	8003f40 <GRAPHICS_IncTick>
	...

080009a0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80009a0:	4801      	ldr	r0, [pc, #4]	; (80009a8 <LTDC_IRQHandler+0x8>)
 80009a2:	f001 bc27 	b.w	80021f4 <HAL_LTDC_IRQHandler>
 80009a6:	bf00      	nop
 80009a8:	2001bf70 	.word	0x2001bf70

080009ac <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80009ac:	4801      	ldr	r0, [pc, #4]	; (80009b4 <DMA2D_IRQHandler+0x8>)
 80009ae:	f000 bc93 	b.w	80012d8 <HAL_DMA2D_IRQHandler>
 80009b2:	bf00      	nop
 80009b4:	2001c018 	.word	0x2001c018

080009b8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80009b8:	490f      	ldr	r1, [pc, #60]	; (80009f8 <SystemInit+0x40>)
 80009ba:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 80009be:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80009c2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 80009c6:	4b0d      	ldr	r3, [pc, #52]	; (80009fc <SystemInit+0x44>)
 80009c8:	681a      	ldr	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80009ca:	2000      	movs	r0, #0
  RCC->CR |= (uint32_t)0x00000001;
 80009cc:	f042 0201 	orr.w	r2, r2, #1
 80009d0:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 80009d2:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80009d4:	681a      	ldr	r2, [r3, #0]
 80009d6:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80009da:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80009de:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80009e0:	4a07      	ldr	r2, [pc, #28]	; (8000a00 <SystemInit+0x48>)
 80009e2:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80009e4:	681a      	ldr	r2, [r3, #0]
 80009e6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80009ea:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80009ec:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80009ee:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80009f2:	608b      	str	r3, [r1, #8]
 80009f4:	4770      	bx	lr
 80009f6:	bf00      	nop
 80009f8:	e000ed00 	.word	0xe000ed00
 80009fc:	40023800 	.word	0x40023800
 8000a00:	24003010 	.word	0x24003010

08000a04 <IOE_Init>:
 8000a04:	4770      	bx	lr

08000a06 <IOE_ITConfig>:

/**
 * @brief  IOE Low Level Interrupt configuration.
 */
void IOE_ITConfig(void)
{
 8000a06:	4770      	bx	lr

08000a08 <IOE_Write>:
 * @param  Addr: I2C Address
 * @param  Reg: Reg Address
 * @param  Value: Data to be written
 */
void IOE_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8000a08:	b510      	push	{r4, lr}
 8000a0a:	b086      	sub	sp, #24
 8000a0c:	ac06      	add	r4, sp, #24
	HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, HAL_MAX_DELAY);
 8000a0e:	f04f 33ff 	mov.w	r3, #4294967295
{
 8000a12:	f804 2d01 	strb.w	r2, [r4, #-1]!
	HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, HAL_MAX_DELAY);
 8000a16:	9302      	str	r3, [sp, #8]
 8000a18:	2301      	movs	r3, #1
 8000a1a:	460a      	mov	r2, r1
 8000a1c:	9301      	str	r3, [sp, #4]
 8000a1e:	4601      	mov	r1, r0
 8000a20:	9400      	str	r4, [sp, #0]
 8000a22:	4802      	ldr	r0, [pc, #8]	; (8000a2c <IOE_Write+0x24>)
 8000a24:	f001 f902 	bl	8001c2c <HAL_I2C_Mem_Write>
}
 8000a28:	b006      	add	sp, #24
 8000a2a:	bd10      	pop	{r4, pc}
 8000a2c:	2001beb4 	.word	0x2001beb4

08000a30 <IOE_Read>:
 * @param  Addr: I2C Address
 * @param  Reg: Reg Address
 * @retval The read data
 */
uint8_t IOE_Read(uint8_t Addr, uint8_t Reg)
{
 8000a30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	uint8_t value = 0;
 8000a32:	aa06      	add	r2, sp, #24
 8000a34:	2300      	movs	r3, #0
 8000a36:	f802 3d01 	strb.w	r3, [r2, #-1]!
	HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, HAL_MAX_DELAY);
 8000a3a:	f04f 33ff 	mov.w	r3, #4294967295
 8000a3e:	9302      	str	r3, [sp, #8]
 8000a40:	2301      	movs	r3, #1
 8000a42:	e88d 000c 	stmia.w	sp, {r2, r3}
 8000a46:	460a      	mov	r2, r1
 8000a48:	4601      	mov	r1, r0
 8000a4a:	4804      	ldr	r0, [pc, #16]	; (8000a5c <IOE_Read+0x2c>)
 8000a4c:	f001 f984 	bl	8001d58 <HAL_I2C_Mem_Read>

	return value;
}
 8000a50:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8000a54:	b007      	add	sp, #28
 8000a56:	f85d fb04 	ldr.w	pc, [sp], #4
 8000a5a:	bf00      	nop
 8000a5c:	2001beb4 	.word	0x2001beb4

08000a60 <IOE_ReadMultiple>:
 * @param  pBuffer: pointer to data buffer
 * @param  Length: length of the data
 * @retval 0 if no problems to read multiple data
 */
uint16_t IOE_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *pBuffer, uint16_t Length)
{
 8000a60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	uint8_t value = 0;
	HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, HAL_MAX_DELAY);
 8000a62:	f04f 34ff 	mov.w	r4, #4294967295
 8000a66:	e88d 001c 	stmia.w	sp, {r2, r3, r4}
 8000a6a:	460a      	mov	r2, r1
 8000a6c:	2301      	movs	r3, #1
 8000a6e:	4601      	mov	r1, r0
 8000a70:	4802      	ldr	r0, [pc, #8]	; (8000a7c <IOE_ReadMultiple+0x1c>)
 8000a72:	f001 f971 	bl	8001d58 <HAL_I2C_Mem_Read>

	return value;
}
 8000a76:	2000      	movs	r0, #0
 8000a78:	b004      	add	sp, #16
 8000a7a:	bd10      	pop	{r4, pc}
 8000a7c:	2001beb4 	.word	0x2001beb4

08000a80 <IOE_Delay>:
 * @brief  IOE Delay.
 * @param  Delay in ms
 */
void IOE_Delay(uint32_t Delay)
{
	HAL_Delay(Delay);
 8000a80:	f000 bb60 	b.w	8001144 <HAL_Delay>

08000a84 <ili9341_Init>:
  * @brief  Power on the LCD.
  * @param  None
  * @retval None
  */
void ili9341_Init(void)
{
 8000a84:	b508      	push	{r3, lr}
  /* Initialize ILI9341 low level bus layer ----------------------------------*/
  LCD_IO_Init();
 8000a86:	f7ff fd41 	bl	800050c <LCD_IO_Init>
  * @param  LCD_Reg: address of the selected register.
  * @retval None
  */
void ili9341_WriteReg(uint8_t LCD_Reg)
{
  LCD_IO_WriteReg(LCD_Reg);
 8000a8a:	20ca      	movs	r0, #202	; 0xca
 8000a8c:	f7ff fd40 	bl	8000510 <LCD_IO_WriteReg>
  * @param  LCD_Reg: address of the selected register.
  * @retval None
  */
void ili9341_WriteData(uint16_t RegValue)
{
  LCD_IO_WriteData(RegValue);
 8000a90:	20c3      	movs	r0, #195	; 0xc3
 8000a92:	f7ff fd61 	bl	8000558 <LCD_IO_WriteData>
 8000a96:	2008      	movs	r0, #8
 8000a98:	f7ff fd5e 	bl	8000558 <LCD_IO_WriteData>
 8000a9c:	2050      	movs	r0, #80	; 0x50
 8000a9e:	f7ff fd5b 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000aa2:	20cf      	movs	r0, #207	; 0xcf
 8000aa4:	f7ff fd34 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000aa8:	2000      	movs	r0, #0
 8000aaa:	f7ff fd55 	bl	8000558 <LCD_IO_WriteData>
 8000aae:	20c1      	movs	r0, #193	; 0xc1
 8000ab0:	f7ff fd52 	bl	8000558 <LCD_IO_WriteData>
 8000ab4:	2030      	movs	r0, #48	; 0x30
 8000ab6:	f7ff fd4f 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000aba:	20ed      	movs	r0, #237	; 0xed
 8000abc:	f7ff fd28 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000ac0:	2064      	movs	r0, #100	; 0x64
 8000ac2:	f7ff fd49 	bl	8000558 <LCD_IO_WriteData>
 8000ac6:	2003      	movs	r0, #3
 8000ac8:	f7ff fd46 	bl	8000558 <LCD_IO_WriteData>
 8000acc:	2012      	movs	r0, #18
 8000ace:	f7ff fd43 	bl	8000558 <LCD_IO_WriteData>
 8000ad2:	2081      	movs	r0, #129	; 0x81
 8000ad4:	f7ff fd40 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000ad8:	20e8      	movs	r0, #232	; 0xe8
 8000ada:	f7ff fd19 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000ade:	2085      	movs	r0, #133	; 0x85
 8000ae0:	f7ff fd3a 	bl	8000558 <LCD_IO_WriteData>
 8000ae4:	2000      	movs	r0, #0
 8000ae6:	f7ff fd37 	bl	8000558 <LCD_IO_WriteData>
 8000aea:	2078      	movs	r0, #120	; 0x78
 8000aec:	f7ff fd34 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000af0:	20cb      	movs	r0, #203	; 0xcb
 8000af2:	f7ff fd0d 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000af6:	2039      	movs	r0, #57	; 0x39
 8000af8:	f7ff fd2e 	bl	8000558 <LCD_IO_WriteData>
 8000afc:	202c      	movs	r0, #44	; 0x2c
 8000afe:	f7ff fd2b 	bl	8000558 <LCD_IO_WriteData>
 8000b02:	2000      	movs	r0, #0
 8000b04:	f7ff fd28 	bl	8000558 <LCD_IO_WriteData>
 8000b08:	2034      	movs	r0, #52	; 0x34
 8000b0a:	f7ff fd25 	bl	8000558 <LCD_IO_WriteData>
 8000b0e:	2002      	movs	r0, #2
 8000b10:	f7ff fd22 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b14:	20f7      	movs	r0, #247	; 0xf7
 8000b16:	f7ff fcfb 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b1a:	2020      	movs	r0, #32
 8000b1c:	f7ff fd1c 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b20:	20ea      	movs	r0, #234	; 0xea
 8000b22:	f7ff fcf5 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b26:	2000      	movs	r0, #0
 8000b28:	f7ff fd16 	bl	8000558 <LCD_IO_WriteData>
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	f7ff fd13 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b32:	20b1      	movs	r0, #177	; 0xb1
 8000b34:	f7ff fcec 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b38:	2000      	movs	r0, #0
 8000b3a:	f7ff fd0d 	bl	8000558 <LCD_IO_WriteData>
 8000b3e:	201b      	movs	r0, #27
 8000b40:	f7ff fd0a 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b44:	20b6      	movs	r0, #182	; 0xb6
 8000b46:	f7ff fce3 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b4a:	200a      	movs	r0, #10
 8000b4c:	f7ff fd04 	bl	8000558 <LCD_IO_WriteData>
 8000b50:	20a2      	movs	r0, #162	; 0xa2
 8000b52:	f7ff fd01 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b56:	20c0      	movs	r0, #192	; 0xc0
 8000b58:	f7ff fcda 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b5c:	2010      	movs	r0, #16
 8000b5e:	f7ff fcfb 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b62:	20c1      	movs	r0, #193	; 0xc1
 8000b64:	f7ff fcd4 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b68:	2010      	movs	r0, #16
 8000b6a:	f7ff fcf5 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b6e:	20c5      	movs	r0, #197	; 0xc5
 8000b70:	f7ff fcce 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b74:	2045      	movs	r0, #69	; 0x45
 8000b76:	f7ff fcef 	bl	8000558 <LCD_IO_WriteData>
 8000b7a:	2015      	movs	r0, #21
 8000b7c:	f7ff fcec 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b80:	20c7      	movs	r0, #199	; 0xc7
 8000b82:	f7ff fcc5 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b86:	2090      	movs	r0, #144	; 0x90
 8000b88:	f7ff fce6 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b8c:	2036      	movs	r0, #54	; 0x36
 8000b8e:	f7ff fcbf 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b92:	20c8      	movs	r0, #200	; 0xc8
 8000b94:	f7ff fce0 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000b98:	20f2      	movs	r0, #242	; 0xf2
 8000b9a:	f7ff fcb9 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000b9e:	2000      	movs	r0, #0
 8000ba0:	f7ff fcda 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000ba4:	20b0      	movs	r0, #176	; 0xb0
 8000ba6:	f7ff fcb3 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000baa:	20c2      	movs	r0, #194	; 0xc2
 8000bac:	f7ff fcd4 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000bb0:	20b6      	movs	r0, #182	; 0xb6
 8000bb2:	f7ff fcad 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000bb6:	200a      	movs	r0, #10
 8000bb8:	f7ff fcce 	bl	8000558 <LCD_IO_WriteData>
 8000bbc:	20a7      	movs	r0, #167	; 0xa7
 8000bbe:	f7ff fccb 	bl	8000558 <LCD_IO_WriteData>
 8000bc2:	2027      	movs	r0, #39	; 0x27
 8000bc4:	f7ff fcc8 	bl	8000558 <LCD_IO_WriteData>
 8000bc8:	2004      	movs	r0, #4
 8000bca:	f7ff fcc5 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000bce:	202a      	movs	r0, #42	; 0x2a
 8000bd0:	f7ff fc9e 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	f7ff fcbf 	bl	8000558 <LCD_IO_WriteData>
 8000bda:	2000      	movs	r0, #0
 8000bdc:	f7ff fcbc 	bl	8000558 <LCD_IO_WriteData>
 8000be0:	2000      	movs	r0, #0
 8000be2:	f7ff fcb9 	bl	8000558 <LCD_IO_WriteData>
 8000be6:	20ef      	movs	r0, #239	; 0xef
 8000be8:	f7ff fcb6 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000bec:	202b      	movs	r0, #43	; 0x2b
 8000bee:	f7ff fc8f 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	f7ff fcb0 	bl	8000558 <LCD_IO_WriteData>
 8000bf8:	2000      	movs	r0, #0
 8000bfa:	f7ff fcad 	bl	8000558 <LCD_IO_WriteData>
 8000bfe:	2001      	movs	r0, #1
 8000c00:	f7ff fcaa 	bl	8000558 <LCD_IO_WriteData>
 8000c04:	203f      	movs	r0, #63	; 0x3f
 8000c06:	f7ff fca7 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000c0a:	20f6      	movs	r0, #246	; 0xf6
 8000c0c:	f7ff fc80 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000c10:	2001      	movs	r0, #1
 8000c12:	f7ff fca1 	bl	8000558 <LCD_IO_WriteData>
 8000c16:	2000      	movs	r0, #0
 8000c18:	f7ff fc9e 	bl	8000558 <LCD_IO_WriteData>
 8000c1c:	2006      	movs	r0, #6
 8000c1e:	f7ff fc9b 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000c22:	202c      	movs	r0, #44	; 0x2c
 8000c24:	f7ff fc74 	bl	8000510 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8000c28:	20c8      	movs	r0, #200	; 0xc8
 8000c2a:	f003 f824 	bl	8003c76 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8000c2e:	2026      	movs	r0, #38	; 0x26
 8000c30:	f7ff fc6e 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000c34:	2001      	movs	r0, #1
 8000c36:	f7ff fc8f 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000c3a:	20e0      	movs	r0, #224	; 0xe0
 8000c3c:	f7ff fc68 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000c40:	200f      	movs	r0, #15
 8000c42:	f7ff fc89 	bl	8000558 <LCD_IO_WriteData>
 8000c46:	2029      	movs	r0, #41	; 0x29
 8000c48:	f7ff fc86 	bl	8000558 <LCD_IO_WriteData>
 8000c4c:	2024      	movs	r0, #36	; 0x24
 8000c4e:	f7ff fc83 	bl	8000558 <LCD_IO_WriteData>
 8000c52:	200c      	movs	r0, #12
 8000c54:	f7ff fc80 	bl	8000558 <LCD_IO_WriteData>
 8000c58:	200e      	movs	r0, #14
 8000c5a:	f7ff fc7d 	bl	8000558 <LCD_IO_WriteData>
 8000c5e:	2009      	movs	r0, #9
 8000c60:	f7ff fc7a 	bl	8000558 <LCD_IO_WriteData>
 8000c64:	204e      	movs	r0, #78	; 0x4e
 8000c66:	f7ff fc77 	bl	8000558 <LCD_IO_WriteData>
 8000c6a:	2078      	movs	r0, #120	; 0x78
 8000c6c:	f7ff fc74 	bl	8000558 <LCD_IO_WriteData>
 8000c70:	203c      	movs	r0, #60	; 0x3c
 8000c72:	f7ff fc71 	bl	8000558 <LCD_IO_WriteData>
 8000c76:	2009      	movs	r0, #9
 8000c78:	f7ff fc6e 	bl	8000558 <LCD_IO_WriteData>
 8000c7c:	2013      	movs	r0, #19
 8000c7e:	f7ff fc6b 	bl	8000558 <LCD_IO_WriteData>
 8000c82:	2005      	movs	r0, #5
 8000c84:	f7ff fc68 	bl	8000558 <LCD_IO_WriteData>
 8000c88:	2017      	movs	r0, #23
 8000c8a:	f7ff fc65 	bl	8000558 <LCD_IO_WriteData>
 8000c8e:	2011      	movs	r0, #17
 8000c90:	f7ff fc62 	bl	8000558 <LCD_IO_WriteData>
 8000c94:	2000      	movs	r0, #0
 8000c96:	f7ff fc5f 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000c9a:	20e1      	movs	r0, #225	; 0xe1
 8000c9c:	f7ff fc38 	bl	8000510 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8000ca0:	2000      	movs	r0, #0
 8000ca2:	f7ff fc59 	bl	8000558 <LCD_IO_WriteData>
 8000ca6:	2016      	movs	r0, #22
 8000ca8:	f7ff fc56 	bl	8000558 <LCD_IO_WriteData>
 8000cac:	201b      	movs	r0, #27
 8000cae:	f7ff fc53 	bl	8000558 <LCD_IO_WriteData>
 8000cb2:	2004      	movs	r0, #4
 8000cb4:	f7ff fc50 	bl	8000558 <LCD_IO_WriteData>
 8000cb8:	2011      	movs	r0, #17
 8000cba:	f7ff fc4d 	bl	8000558 <LCD_IO_WriteData>
 8000cbe:	2007      	movs	r0, #7
 8000cc0:	f7ff fc4a 	bl	8000558 <LCD_IO_WriteData>
 8000cc4:	2031      	movs	r0, #49	; 0x31
 8000cc6:	f7ff fc47 	bl	8000558 <LCD_IO_WriteData>
 8000cca:	2033      	movs	r0, #51	; 0x33
 8000ccc:	f7ff fc44 	bl	8000558 <LCD_IO_WriteData>
 8000cd0:	2042      	movs	r0, #66	; 0x42
 8000cd2:	f7ff fc41 	bl	8000558 <LCD_IO_WriteData>
 8000cd6:	2005      	movs	r0, #5
 8000cd8:	f7ff fc3e 	bl	8000558 <LCD_IO_WriteData>
 8000cdc:	200c      	movs	r0, #12
 8000cde:	f7ff fc3b 	bl	8000558 <LCD_IO_WriteData>
 8000ce2:	200a      	movs	r0, #10
 8000ce4:	f7ff fc38 	bl	8000558 <LCD_IO_WriteData>
 8000ce8:	2028      	movs	r0, #40	; 0x28
 8000cea:	f7ff fc35 	bl	8000558 <LCD_IO_WriteData>
 8000cee:	202f      	movs	r0, #47	; 0x2f
 8000cf0:	f7ff fc32 	bl	8000558 <LCD_IO_WriteData>
 8000cf4:	200f      	movs	r0, #15
 8000cf6:	f7ff fc2f 	bl	8000558 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8000cfa:	2011      	movs	r0, #17
 8000cfc:	f7ff fc08 	bl	8000510 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8000d00:	20c8      	movs	r0, #200	; 0xc8
 8000d02:	f002 ffb8 	bl	8003c76 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8000d06:	2029      	movs	r0, #41	; 0x29
 8000d08:	f7ff fc02 	bl	8000510 <LCD_IO_WriteReg>
 8000d0c:	202c      	movs	r0, #44	; 0x2c
}
 8000d0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8000d12:	f7ff bbfd 	b.w	8000510 <LCD_IO_WriteReg>

08000d16 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8000d16:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8000d18:	b2c4      	uxtb	r4, r0
 8000d1a:	2202      	movs	r2, #2
 8000d1c:	2103      	movs	r1, #3
 8000d1e:	4620      	mov	r0, r4
 8000d20:	f7ff fe72 	bl	8000a08 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8000d24:	200a      	movs	r0, #10
 8000d26:	f7ff feab 	bl	8000a80 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8000d2a:	4620      	mov	r0, r4
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	2103      	movs	r1, #3
 8000d30:	f7ff fe6a 	bl	8000a08 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 8000d34:	2002      	movs	r0, #2
}
 8000d36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8000d3a:	f7ff bea1 	b.w	8000a80 <IOE_Delay>

08000d3e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8000d3e:	b538      	push	{r3, r4, r5, lr}
 8000d40:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8000d42:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8000d44:	f7ff fe5e 	bl	8000a04 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8000d48:	2100      	movs	r1, #0
 8000d4a:	4620      	mov	r0, r4
 8000d4c:	f7ff fe70 	bl	8000a30 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8000d50:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8000d52:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8000d54:	4620      	mov	r0, r4
 8000d56:	f7ff fe6b 	bl	8000a30 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8000d5a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8000d5e:	b280      	uxth	r0, r0
 8000d60:	bd38      	pop	{r3, r4, r5, pc}

08000d62 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8000d62:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8000d64:	b2c4      	uxtb	r4, r0
 8000d66:	2140      	movs	r1, #64	; 0x40
 8000d68:	4620      	mov	r0, r4
 8000d6a:	f7ff fe61 	bl	8000a30 <IOE_Read>
  
  if(state > 0)
 8000d6e:	0603      	lsls	r3, r0, #24
 8000d70:	d507      	bpl.n	8000d82 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8000d72:	214c      	movs	r1, #76	; 0x4c
 8000d74:	4620      	mov	r0, r4
 8000d76:	f7ff fe5b 	bl	8000a30 <IOE_Read>
    {
      ret = 1;
 8000d7a:	3000      	adds	r0, #0
 8000d7c:	bf18      	it	ne
 8000d7e:	2001      	movne	r0, #1
 8000d80:	bd10      	pop	{r4, pc}
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8000d82:	4620      	mov	r0, r4
 8000d84:	2201      	movs	r2, #1
 8000d86:	214b      	movs	r1, #75	; 0x4b
 8000d88:	f7ff fe3e 	bl	8000a08 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8000d8c:	4620      	mov	r0, r4
 8000d8e:	2200      	movs	r2, #0
 8000d90:	214b      	movs	r1, #75	; 0x4b
 8000d92:	f7ff fe39 	bl	8000a08 <IOE_Write>
  uint8_t ret = 0;
 8000d96:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8000d98:	bd10      	pop	{r4, pc}

08000d9a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8000d9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8000d9c:	2304      	movs	r3, #4
 8000d9e:	b2c4      	uxtb	r4, r0
{
 8000da0:	460e      	mov	r6, r1
 8000da2:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8000da4:	21d7      	movs	r1, #215	; 0xd7
 8000da6:	eb0d 0203 	add.w	r2, sp, r3
 8000daa:	4620      	mov	r0, r4
 8000dac:	f7ff fe58 	bl	8000a60 <IOE_ReadMultiple>
 8000db0:	9b01      	ldr	r3, [sp, #4]
 8000db2:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8000db4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8000db6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8000dba:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8000dbc:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8000dbe:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8000dc0:	2201      	movs	r2, #1
 8000dc2:	214b      	movs	r1, #75	; 0x4b
 8000dc4:	f7ff fe20 	bl	8000a08 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8000dc8:	2200      	movs	r2, #0
 8000dca:	214b      	movs	r1, #75	; 0x4b
 8000dcc:	4620      	mov	r0, r4
 8000dce:	f7ff fe1b 	bl	8000a08 <IOE_Write>
}
 8000dd2:	b002      	add	sp, #8
 8000dd4:	bd70      	pop	{r4, r5, r6, pc}
	...

08000dd8 <stmpe811_Init>:
{
 8000dd8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8000dda:	4a0b      	ldr	r2, [pc, #44]	; (8000e08 <stmpe811_Init+0x30>)
 8000ddc:	7813      	ldrb	r3, [r2, #0]
 8000dde:	4298      	cmp	r0, r3
{
 8000de0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8000de2:	d010      	beq.n	8000e06 <stmpe811_Init+0x2e>
 8000de4:	7851      	ldrb	r1, [r2, #1]
 8000de6:	4288      	cmp	r0, r1
 8000de8:	d103      	bne.n	8000df2 <stmpe811_Init+0x1a>
 8000dea:	bd10      	pop	{r4, pc}
 8000dec:	b959      	cbnz	r1, 8000e06 <stmpe811_Init+0x2e>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8000dee:	2301      	movs	r3, #1
 8000df0:	e001      	b.n	8000df6 <stmpe811_Init+0x1e>
    if(stmpe811[idx] == DeviceAddr)
 8000df2:	2b00      	cmp	r3, #0
 8000df4:	d1fa      	bne.n	8000dec <stmpe811_Init+0x14>
      stmpe811[empty] = DeviceAddr;
 8000df6:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8000df8:	f7ff fe04 	bl	8000a04 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8000dfc:	4620      	mov	r0, r4
}
 8000dfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8000e02:	f7ff bf88 	b.w	8000d16 <stmpe811_Reset>
 8000e06:	bd10      	pop	{r4, pc}
 8000e08:	2000066c 	.word	0x2000066c

08000e0c <stmpe811_EnableGlobalIT>:
{
 8000e0c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8000e0e:	b2c4      	uxtb	r4, r0
 8000e10:	2109      	movs	r1, #9
 8000e12:	4620      	mov	r0, r4
 8000e14:	f7ff fe0c 	bl	8000a30 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8000e18:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8000e1c:	b2d2      	uxtb	r2, r2
 8000e1e:	4620      	mov	r0, r4
 8000e20:	2109      	movs	r1, #9
}
 8000e22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8000e26:	f7ff bdef 	b.w	8000a08 <IOE_Write>

08000e2a <stmpe811_DisableGlobalIT>:
{
 8000e2a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8000e2c:	b2c4      	uxtb	r4, r0
 8000e2e:	2109      	movs	r1, #9
 8000e30:	4620      	mov	r0, r4
 8000e32:	f7ff fdfd 	bl	8000a30 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8000e36:	2109      	movs	r1, #9
 8000e38:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8000e3c:	4620      	mov	r0, r4
}
 8000e3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8000e42:	f7ff bde1 	b.w	8000a08 <IOE_Write>

08000e46 <stmpe811_EnableITSource>:
{
 8000e46:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8000e48:	b2c5      	uxtb	r5, r0
{
 8000e4a:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8000e4c:	4628      	mov	r0, r5
 8000e4e:	210a      	movs	r1, #10
 8000e50:	f7ff fdee 	bl	8000a30 <IOE_Read>
  tmp |= Source; 
 8000e54:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8000e58:	b2d2      	uxtb	r2, r2
 8000e5a:	4628      	mov	r0, r5
 8000e5c:	210a      	movs	r1, #10
}
 8000e5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8000e62:	f7ff bdd1 	b.w	8000a08 <IOE_Write>

08000e66 <stmpe811_TS_EnableIT>:
{
 8000e66:	b510      	push	{r4, lr}
 8000e68:	4604      	mov	r4, r0
  IOE_ITConfig();
 8000e6a:	f7ff fdcc 	bl	8000a06 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8000e6e:	4620      	mov	r0, r4
 8000e70:	211f      	movs	r1, #31
 8000e72:	f7ff ffe8 	bl	8000e46 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8000e76:	4620      	mov	r0, r4
}
 8000e78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8000e7c:	f7ff bfc6 	b.w	8000e0c <stmpe811_EnableGlobalIT>

08000e80 <stmpe811_DisableITSource>:
{
 8000e80:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8000e82:	b2c5      	uxtb	r5, r0
{
 8000e84:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8000e86:	4628      	mov	r0, r5
 8000e88:	210a      	movs	r1, #10
 8000e8a:	f7ff fdd1 	bl	8000a30 <IOE_Read>
  tmp &= ~Source; 
 8000e8e:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8000e92:	b2d2      	uxtb	r2, r2
 8000e94:	4628      	mov	r0, r5
 8000e96:	210a      	movs	r1, #10
}
 8000e98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8000e9c:	f7ff bdb4 	b.w	8000a08 <IOE_Write>

08000ea0 <stmpe811_TS_DisableIT>:
{
 8000ea0:	b510      	push	{r4, lr}
 8000ea2:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8000ea4:	f7ff ffc1 	bl	8000e2a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	211f      	movs	r1, #31
}
 8000eac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8000eb0:	f7ff bfe6 	b.w	8000e80 <stmpe811_DisableITSource>

08000eb4 <stmpe811_ReadGITStatus>:
{
 8000eb4:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8000eb6:	b2c0      	uxtb	r0, r0
{
 8000eb8:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8000eba:	210b      	movs	r1, #11
 8000ebc:	f7ff fdb8 	bl	8000a30 <IOE_Read>
}
 8000ec0:	4020      	ands	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8000ec4:	211f      	movs	r1, #31
 8000ec6:	f7ff bff5 	b.w	8000eb4 <stmpe811_ReadGITStatus>

08000eca <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8000eca:	460a      	mov	r2, r1
 8000ecc:	b2c0      	uxtb	r0, r0
 8000ece:	210b      	movs	r1, #11
 8000ed0:	f7ff bd9a 	b.w	8000a08 <IOE_Write>

08000ed4 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8000ed4:	211f      	movs	r1, #31
 8000ed6:	f7ff bff8 	b.w	8000eca <stmpe811_ClearGlobalIT>

08000eda <stmpe811_IO_EnableAF>:
{
 8000eda:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8000edc:	b2c5      	uxtb	r5, r0
{
 8000ede:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8000ee0:	4628      	mov	r0, r5
 8000ee2:	2117      	movs	r1, #23
 8000ee4:	f7ff fda4 	bl	8000a30 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8000ee8:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8000eec:	b2d2      	uxtb	r2, r2
 8000eee:	4628      	mov	r0, r5
 8000ef0:	2117      	movs	r1, #23
}
 8000ef2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8000ef6:	f7ff bd87 	b.w	8000a08 <IOE_Write>

08000efa <stmpe811_TS_Start>:
{
 8000efa:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8000efc:	b2c4      	uxtb	r4, r0
{
 8000efe:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8000f00:	2104      	movs	r1, #4
 8000f02:	4620      	mov	r0, r4
 8000f04:	f7ff fd94 	bl	8000a30 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8000f08:	2104      	movs	r1, #4
 8000f0a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8000f0e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8000f10:	4620      	mov	r0, r4
 8000f12:	f7ff fd79 	bl	8000a08 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8000f16:	4630      	mov	r0, r6
 8000f18:	21f0      	movs	r1, #240	; 0xf0
 8000f1a:	f7ff ffde 	bl	8000eda <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8000f1e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8000f22:	4620      	mov	r0, r4
 8000f24:	2104      	movs	r1, #4
 8000f26:	f7ff fd6f 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8000f2a:	2249      	movs	r2, #73	; 0x49
 8000f2c:	2120      	movs	r1, #32
 8000f2e:	4620      	mov	r0, r4
 8000f30:	f7ff fd6a 	bl	8000a08 <IOE_Write>
  IOE_Delay(2); 
 8000f34:	2002      	movs	r0, #2
 8000f36:	f7ff fda3 	bl	8000a80 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	2201      	movs	r2, #1
 8000f3e:	2121      	movs	r1, #33	; 0x21
 8000f40:	f7ff fd62 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8000f44:	4620      	mov	r0, r4
 8000f46:	229a      	movs	r2, #154	; 0x9a
 8000f48:	2141      	movs	r1, #65	; 0x41
 8000f4a:	f7ff fd5d 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8000f4e:	4620      	mov	r0, r4
 8000f50:	2201      	movs	r2, #1
 8000f52:	214a      	movs	r1, #74	; 0x4a
 8000f54:	f7ff fd58 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8000f58:	4620      	mov	r0, r4
 8000f5a:	2201      	movs	r2, #1
 8000f5c:	214b      	movs	r1, #75	; 0x4b
 8000f5e:	f7ff fd53 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8000f62:	4620      	mov	r0, r4
 8000f64:	2200      	movs	r2, #0
 8000f66:	214b      	movs	r1, #75	; 0x4b
 8000f68:	f7ff fd4e 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	2201      	movs	r2, #1
 8000f70:	2156      	movs	r1, #86	; 0x56
 8000f72:	f7ff fd49 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8000f76:	4620      	mov	r0, r4
 8000f78:	2201      	movs	r2, #1
 8000f7a:	2158      	movs	r1, #88	; 0x58
 8000f7c:	f7ff fd44 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8000f80:	4620      	mov	r0, r4
 8000f82:	2201      	movs	r2, #1
 8000f84:	2140      	movs	r1, #64	; 0x40
 8000f86:	f7ff fd3f 	bl	8000a08 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8000f8a:	4620      	mov	r0, r4
 8000f8c:	22ff      	movs	r2, #255	; 0xff
 8000f8e:	210b      	movs	r1, #11
 8000f90:	f7ff fd3a 	bl	8000a08 <IOE_Write>
  IOE_Delay(2); 
 8000f94:	2002      	movs	r0, #2
}
 8000f96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8000f9a:	f7ff bd71 	b.w	8000a80 <IOE_Delay>
	...

08000fa0 <BSP_TS_Init>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD  
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000fa0:	b538      	push	{r3, r4, r5, lr}
  uint8_t ret = TS_ERROR;

  /* Initialize x and y positions boundaries */
  TsXBoundary = XSize;
 8000fa2:	4b0c      	ldr	r3, [pc, #48]	; (8000fd4 <BSP_TS_Init+0x34>)
  TsYBoundary = YSize;

  /* Read ID and verify if the IO expander is ready */
  if(stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000fa4:	4c0c      	ldr	r4, [pc, #48]	; (8000fd8 <BSP_TS_Init+0x38>)
  TsXBoundary = XSize;
 8000fa6:	8018      	strh	r0, [r3, #0]
  TsYBoundary = YSize;
 8000fa8:	4b0c      	ldr	r3, [pc, #48]	; (8000fdc <BSP_TS_Init+0x3c>)
  if(stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000faa:	2082      	movs	r0, #130	; 0x82
  TsYBoundary = YSize;
 8000fac:	8019      	strh	r1, [r3, #0]
  if(stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000fae:	6863      	ldr	r3, [r4, #4]
 8000fb0:	4798      	blx	r3
 8000fb2:	f640 0311 	movw	r3, #2065	; 0x811
 8000fb6:	4298      	cmp	r0, r3
 8000fb8:	d10a      	bne.n	8000fd0 <BSP_TS_Init+0x30>
  {
    /* Initialize the TS driver structure */
    TsDrv = &stmpe811_ts_drv;
 8000fba:	4d09      	ldr	r5, [pc, #36]	; (8000fe0 <BSP_TS_Init+0x40>)
  }

  if(ret == TS_OK)
  {
    /* Initialize the LL TS Driver */
    TsDrv->Init(TS_I2C_ADDRESS);
 8000fbc:	6823      	ldr	r3, [r4, #0]
    TsDrv = &stmpe811_ts_drv;
 8000fbe:	602c      	str	r4, [r5, #0]
    TsDrv->Init(TS_I2C_ADDRESS);
 8000fc0:	2082      	movs	r0, #130	; 0x82
 8000fc2:	4798      	blx	r3
    TsDrv->Start(TS_I2C_ADDRESS);
 8000fc4:	682b      	ldr	r3, [r5, #0]
 8000fc6:	2082      	movs	r0, #130	; 0x82
 8000fc8:	68db      	ldr	r3, [r3, #12]
 8000fca:	4798      	blx	r3
    ret = TS_OK;
 8000fcc:	2000      	movs	r0, #0
 8000fce:	bd38      	pop	{r3, r4, r5, pc}
  uint8_t ret = TS_ERROR;
 8000fd0:	2001      	movs	r0, #1
  }

  return ret;
}
 8000fd2:	bd38      	pop	{r3, r4, r5, pc}
 8000fd4:	20000674 	.word	0x20000674
 8000fd8:	20000308 	.word	0x20000308
 8000fdc:	20000676 	.word	0x20000676
 8000fe0:	20000670 	.word	0x20000670

08000fe4 <BSP_TS_GetState>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000fe4:	b573      	push	{r0, r1, r4, r5, r6, lr}
  static uint32_t _x = 0, _y = 0;
  uint16_t xDiff, yDiff , x , y, xr, yr;
  
  TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000fe6:	4d2a      	ldr	r5, [pc, #168]	; (8001090 <BSP_TS_GetState+0xac>)
 8000fe8:	682b      	ldr	r3, [r5, #0]
{
 8000fea:	4604      	mov	r4, r0
  TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000fec:	691b      	ldr	r3, [r3, #16]
 8000fee:	2082      	movs	r0, #130	; 0x82
 8000ff0:	4798      	blx	r3
 8000ff2:	b280      	uxth	r0, r0
 8000ff4:	8020      	strh	r0, [r4, #0]
  
  if(TsState->TouchDetected)
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d048      	beq.n	800108c <BSP_TS_GetState+0xa8>
  {
    TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000ffa:	682b      	ldr	r3, [r5, #0]
 8000ffc:	f10d 0206 	add.w	r2, sp, #6
 8001000:	695b      	ldr	r3, [r3, #20]
 8001002:	a901      	add	r1, sp, #4
 8001004:	2082      	movs	r0, #130	; 0x82
 8001006:	4798      	blx	r3
    
    /* Y value first correction */
    y -= 360;  
 8001008:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800100c:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
    
    /* Y value second correction */
    yr = y / 11;
 8001010:	b29b      	uxth	r3, r3
 8001012:	220b      	movs	r2, #11
 8001014:	fbb3 f3f2 	udiv	r3, r3, r2
    
    /* Return y position value */
    if(yr <= 0)
 8001018:	b133      	cbz	r3, 8001028 <BSP_TS_GetState+0x44>
    {
      yr = 0;
    }
    else if (yr > TsYBoundary)
 800101a:	4a1e      	ldr	r2, [pc, #120]	; (8001094 <BSP_TS_GetState+0xb0>)
 800101c:	8812      	ldrh	r2, [r2, #0]
 800101e:	4293      	cmp	r3, r2
    {
      yr = TsYBoundary - 1;
 8001020:	bf84      	itt	hi
 8001022:	f102 33ff 	addhi.w	r3, r2, #4294967295
 8001026:	b29b      	uxthhi	r3, r3
    else
    {}
    y = yr;
    
    /* X value first correction */
    if(x <= 3000)
 8001028:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800102c:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001030:	428a      	cmp	r2, r1
    {
      x = 3870 - x;
 8001032:	bf95      	itete	ls
 8001034:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
    }
    else
    {
      x = 3800 - x;
 8001038:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
      x = 3870 - x;
 800103c:	320e      	addls	r2, #14
      x = 3800 - x;
 800103e:	3208      	addhi	r2, #8
 8001040:	f8ad 2004 	strh.w	r2, [sp, #4]
    }
    
    /* X value second correction */  
    xr = x / 15;
 8001044:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 8001048:	220f      	movs	r2, #15
 800104a:	fbb0 f0f2 	udiv	r0, r0, r2
    
    /* Return X position value */
    if(xr <= 0)
 800104e:	b130      	cbz	r0, 800105e <BSP_TS_GetState+0x7a>
    {
      xr = 0;
    }
    else if (xr > TsXBoundary)
 8001050:	4a11      	ldr	r2, [pc, #68]	; (8001098 <BSP_TS_GetState+0xb4>)
 8001052:	8812      	ldrh	r2, [r2, #0]
 8001054:	4290      	cmp	r0, r2
    {
      xr = TsXBoundary - 1;
 8001056:	bf84      	itt	hi
 8001058:	f102 30ff 	addhi.w	r0, r2, #4294967295
 800105c:	b280      	uxthhi	r0, r0
    }
    else 
    {}
    
    x = xr;
    xDiff = x > _x? (x - _x): (_x - x);
 800105e:	4e0f      	ldr	r6, [pc, #60]	; (800109c <BSP_TS_GetState+0xb8>)
    yDiff = y > _y? (y - _y): (_y - y); 
 8001060:	4d0f      	ldr	r5, [pc, #60]	; (80010a0 <BSP_TS_GetState+0xbc>)
    xDiff = x > _x? (x - _x): (_x - x);
 8001062:	6832      	ldr	r2, [r6, #0]
    yDiff = y > _y? (y - _y): (_y - y); 
 8001064:	6829      	ldr	r1, [r5, #0]
    xDiff = x > _x? (x - _x): (_x - x);
 8001066:	4290      	cmp	r0, r2
 8001068:	bf8c      	ite	hi
 800106a:	1a82      	subhi	r2, r0, r2
 800106c:	1a12      	subls	r2, r2, r0
    yDiff = y > _y? (y - _y): (_y - y); 
 800106e:	428b      	cmp	r3, r1
 8001070:	bf8c      	ite	hi
 8001072:	1a59      	subhi	r1, r3, r1
 8001074:	1ac9      	subls	r1, r1, r3
    xDiff = x > _x? (x - _x): (_x - x);
 8001076:	b292      	uxth	r2, r2
    yDiff = y > _y? (y - _y): (_y - y); 
 8001078:	b289      	uxth	r1, r1
    
    if (xDiff + yDiff > 5)
 800107a:	440a      	add	r2, r1
 800107c:	2a05      	cmp	r2, #5
    {
      _x = x;
 800107e:	bfc4      	itt	gt
 8001080:	6030      	strgt	r0, [r6, #0]
      _y = y; 
 8001082:	602b      	strgt	r3, [r5, #0]
    }
    
    /* Update the X position */
    TsState->X = _x;
 8001084:	6833      	ldr	r3, [r6, #0]
 8001086:	8063      	strh	r3, [r4, #2]
    
    /* Update the Y position */  
    TsState->Y = _y;
 8001088:	682b      	ldr	r3, [r5, #0]
 800108a:	80a3      	strh	r3, [r4, #4]
  }
}
 800108c:	b002      	add	sp, #8
 800108e:	bd70      	pop	{r4, r5, r6, pc}
 8001090:	20000670 	.word	0x20000670
 8001094:	20000676 	.word	0x20000676
 8001098:	20000674 	.word	0x20000674
 800109c:	20000678 	.word	0x20000678
 80010a0:	2000067c 	.word	0x2000067c

080010a4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80010a4:	b538      	push	{r3, r4, r5, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80010a6:	4a0e      	ldr	r2, [pc, #56]	; (80010e0 <HAL_InitTick+0x3c>)
 80010a8:	4b0e      	ldr	r3, [pc, #56]	; (80010e4 <HAL_InitTick+0x40>)
{
 80010aa:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80010ac:	7818      	ldrb	r0, [r3, #0]
 80010ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80010b2:	fbb3 f3f0 	udiv	r3, r3, r0
 80010b6:	6810      	ldr	r0, [r2, #0]
 80010b8:	fbb0 f0f3 	udiv	r0, r0, r3
 80010bc:	f000 f8b6 	bl	800122c <HAL_SYSTICK_Config>
 80010c0:	4604      	mov	r4, r0
 80010c2:	b958      	cbnz	r0, 80010dc <HAL_InitTick+0x38>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80010c4:	2d0f      	cmp	r5, #15
 80010c6:	d809      	bhi.n	80010dc <HAL_InitTick+0x38>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80010c8:	4602      	mov	r2, r0
 80010ca:	4629      	mov	r1, r5
 80010cc:	f04f 30ff 	mov.w	r0, #4294967295
 80010d0:	f000 f85e 	bl	8001190 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80010d4:	4b04      	ldr	r3, [pc, #16]	; (80010e8 <HAL_InitTick+0x44>)
 80010d6:	4620      	mov	r0, r4
 80010d8:	601d      	str	r5, [r3, #0]
 80010da:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80010dc:	2001      	movs	r0, #1
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 80010de:	bd38      	pop	{r3, r4, r5, pc}
 80010e0:	20000304 	.word	0x20000304
 80010e4:	20000330 	.word	0x20000330
 80010e8:	20000334 	.word	0x20000334

080010ec <HAL_Init>:
{
 80010ec:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80010ee:	4b0b      	ldr	r3, [pc, #44]	; (800111c <HAL_Init+0x30>)
 80010f0:	681a      	ldr	r2, [r3, #0]
 80010f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80010f6:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80010f8:	681a      	ldr	r2, [r3, #0]
 80010fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80010fe:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001100:	681a      	ldr	r2, [r3, #0]
 8001102:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001106:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001108:	2003      	movs	r0, #3
 800110a:	f000 f82f 	bl	800116c <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 800110e:	2000      	movs	r0, #0
 8001110:	f7ff ffc8 	bl	80010a4 <HAL_InitTick>
  HAL_MspInit();
 8001114:	f7ff fb72 	bl	80007fc <HAL_MspInit>
}
 8001118:	2000      	movs	r0, #0
 800111a:	bd08      	pop	{r3, pc}
 800111c:	40023c00 	.word	0x40023c00

08001120 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8001120:	4a03      	ldr	r2, [pc, #12]	; (8001130 <HAL_IncTick+0x10>)
 8001122:	4b04      	ldr	r3, [pc, #16]	; (8001134 <HAL_IncTick+0x14>)
 8001124:	6811      	ldr	r1, [r2, #0]
 8001126:	781b      	ldrb	r3, [r3, #0]
 8001128:	440b      	add	r3, r1
 800112a:	6013      	str	r3, [r2, #0]
 800112c:	4770      	bx	lr
 800112e:	bf00      	nop
 8001130:	2001bf68 	.word	0x2001bf68
 8001134:	20000330 	.word	0x20000330

08001138 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001138:	4b01      	ldr	r3, [pc, #4]	; (8001140 <HAL_GetTick+0x8>)
 800113a:	6818      	ldr	r0, [r3, #0]
}
 800113c:	4770      	bx	lr
 800113e:	bf00      	nop
 8001140:	2001bf68 	.word	0x2001bf68

08001144 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001144:	b538      	push	{r3, r4, r5, lr}
 8001146:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8001148:	f7ff fff6 	bl	8001138 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800114c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800114e:	bf1c      	itt	ne
 8001150:	4b05      	ldrne	r3, [pc, #20]	; (8001168 <HAL_Delay+0x24>)
 8001152:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8001154:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8001156:	bf18      	it	ne
 8001158:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800115a:	f7ff ffed 	bl	8001138 <HAL_GetTick>
 800115e:	1b40      	subs	r0, r0, r5
 8001160:	4284      	cmp	r4, r0
 8001162:	d8fa      	bhi.n	800115a <HAL_Delay+0x16>
  {
  }
}
 8001164:	bd38      	pop	{r3, r4, r5, pc}
 8001166:	bf00      	nop
 8001168:	20000330 	.word	0x20000330

0800116c <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800116c:	4a07      	ldr	r2, [pc, #28]	; (800118c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800116e:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001170:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001174:	041b      	lsls	r3, r3, #16
 8001176:	0c1b      	lsrs	r3, r3, #16
 8001178:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
 800117c:	0200      	lsls	r0, r0, #8
 800117e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001182:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8001186:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8001188:	60d3      	str	r3, [r2, #12]
 800118a:	4770      	bx	lr
 800118c:	e000ed00 	.word	0xe000ed00

08001190 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001190:	4b17      	ldr	r3, [pc, #92]	; (80011f0 <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001192:	b530      	push	{r4, r5, lr}
 8001194:	68dc      	ldr	r4, [r3, #12]
 8001196:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800119a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800119e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80011a0:	2b04      	cmp	r3, #4
 80011a2:	bf28      	it	cs
 80011a4:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80011a6:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011a8:	f04f 0501 	mov.w	r5, #1
 80011ac:	fa05 f303 	lsl.w	r3, r5, r3
 80011b0:	f103 33ff 	add.w	r3, r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80011b4:	bf8c      	ite	hi
 80011b6:	3c03      	subhi	r4, #3
 80011b8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011ba:	4019      	ands	r1, r3
 80011bc:	40a1      	lsls	r1, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80011be:	fa05 f404 	lsl.w	r4, r5, r4
 80011c2:	3c01      	subs	r4, #1
 80011c4:	4022      	ands	r2, r4
  if ((int32_t)(IRQn) < 0)
 80011c6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011c8:	ea42 0201 	orr.w	r2, r2, r1
 80011cc:	ea4f 1202 	mov.w	r2, r2, lsl #4
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011d0:	bfaf      	iteee	ge
 80011d2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011d6:	f000 000f 	andlt.w	r0, r0, #15
 80011da:	4b06      	ldrlt	r3, [pc, #24]	; (80011f4 <HAL_NVIC_SetPriority+0x64>)
 80011dc:	b2d2      	uxtblt	r2, r2
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011de:	bfa5      	ittet	ge
 80011e0:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
 80011e4:	b2d2      	uxtbge	r2, r2
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011e6:	541a      	strblt	r2, [r3, r0]
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011e8:	f880 2300 	strbge.w	r2, [r0, #768]	; 0x300
 80011ec:	bd30      	pop	{r4, r5, pc}
 80011ee:	bf00      	nop
 80011f0:	e000ed00 	.word	0xe000ed00
 80011f4:	e000ed14 	.word	0xe000ed14

080011f8 <HAL_NVIC_EnableIRQ>:
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 80011f8:	0942      	lsrs	r2, r0, #5
 80011fa:	2301      	movs	r3, #1
 80011fc:	f000 001f 	and.w	r0, r0, #31
 8001200:	fa03 f000 	lsl.w	r0, r3, r0
 8001204:	4b01      	ldr	r3, [pc, #4]	; (800120c <HAL_NVIC_EnableIRQ+0x14>)
 8001206:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800120a:	4770      	bx	lr
 800120c:	e000e100 	.word	0xe000e100

08001210 <HAL_NVIC_DisableIRQ>:
  NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8001210:	0943      	lsrs	r3, r0, #5
 8001212:	2201      	movs	r2, #1
 8001214:	f000 001f 	and.w	r0, r0, #31
 8001218:	fa02 f000 	lsl.w	r0, r2, r0
 800121c:	3320      	adds	r3, #32
 800121e:	4a02      	ldr	r2, [pc, #8]	; (8001228 <HAL_NVIC_DisableIRQ+0x18>)
 8001220:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8001224:	4770      	bx	lr
 8001226:	bf00      	nop
 8001228:	e000e100 	.word	0xe000e100

0800122c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800122c:	3801      	subs	r0, #1
 800122e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8001232:	d20a      	bcs.n	800124a <HAL_SYSTICK_Config+0x1e>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001234:	4b06      	ldr	r3, [pc, #24]	; (8001250 <HAL_SYSTICK_Config+0x24>)
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001236:	4a07      	ldr	r2, [pc, #28]	; (8001254 <HAL_SYSTICK_Config+0x28>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001238:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800123a:	21f0      	movs	r1, #240	; 0xf0
 800123c:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001240:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001242:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001244:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001246:	601a      	str	r2, [r3, #0]
 8001248:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 800124a:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 800124c:	4770      	bx	lr
 800124e:	bf00      	nop
 8001250:	e000e010 	.word	0xe000e010
 8001254:	e000ed00 	.word	0xe000ed00

08001258 <HAL_CRC_Init>:
  * @param  hcrc pointer to a CRC_HandleTypeDef structure that contains
  *         the configuration information for CRC
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001258:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if(hcrc == NULL)
 800125a:	4604      	mov	r4, r0
 800125c:	b160      	cbz	r0, 8001278 <HAL_CRC_Init+0x20>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if(hcrc->State == HAL_CRC_STATE_RESET)
 800125e:	7943      	ldrb	r3, [r0, #5]
 8001260:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001264:	b913      	cbnz	r3, 800126c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001266:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8001268:	f7ff fae4 	bl	8000834 <HAL_CRC_MspInit>
  }
  
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_BUSY;
 800126c:	2302      	movs	r3, #2
 800126e:	7163      	strb	r3, [r4, #5]
   
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001270:	2301      	movs	r3, #1
 8001272:	7163      	strb	r3, [r4, #5]
  
  /* Return function status */
  return HAL_OK;
 8001274:	2000      	movs	r0, #0
 8001276:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8001278:	2001      	movs	r0, #1
}
 800127a:	bd10      	pop	{r4, pc}

0800127c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800127c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800127e:	4604      	mov	r4, r0
 8001280:	b330      	cbz	r0, 80012d0 <HAL_DMA2D_Init+0x54>
  assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));
  assert_param(IS_DMA2D_MODE(hdma2d->Init.Mode));
  assert_param(IS_DMA2D_CMODE(hdma2d->Init.ColorMode));
  assert_param(IS_DMA2D_OFFSET(hdma2d->Init.OutputOffset));

  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8001282:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8001286:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800128a:	b91b      	cbnz	r3, 8001294 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800128c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8001290:	f002 f9d8 	bl	8003644 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8001294:	6822      	ldr	r2, [r4, #0]
 8001296:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8001298:	2302      	movs	r3, #2
 800129a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800129e:	6813      	ldr	r3, [r2, #0]
 80012a0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80012a4:	430b      	orrs	r3, r1
 80012a6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80012a8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80012aa:	68a1      	ldr	r1, [r4, #8]
 80012ac:	f023 0307 	bic.w	r3, r3, #7
 80012b0:	430b      	orrs	r3, r1
 80012b2:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);  
 80012b4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80012b6:	68e1      	ldr	r1, [r4, #12]
 80012b8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80012bc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80012c0:	430b      	orrs	r3, r1
 80012c2:	6413      	str	r3, [r2, #64]	; 0x40

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80012c4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80012c6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80012c8:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80012ca:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
 80012ce:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80012d0:	2001      	movs	r0, #1
}
 80012d2:	bd10      	pop	{r4, pc}

080012d4 <HAL_DMA2D_LineEventCallback>:
 80012d4:	4770      	bx	lr

080012d6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 80012d6:	4770      	bx	lr

080012d8 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80012d8:	6803      	ldr	r3, [r0, #0]
{
 80012da:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80012dc:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80012de:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != RESET)
 80012e0:	07f2      	lsls	r2, r6, #31
{
 80012e2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != RESET)
 80012e4:	d514      	bpl.n	8001310 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != RESET)
 80012e6:	05e9      	lsls	r1, r5, #23
 80012e8:	d512      	bpl.n	8001310 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80012ea:	681a      	ldr	r2, [r3, #0]
 80012ec:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80012f0:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80012f2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80012f4:	f042 0201 	orr.w	r2, r2, #1
 80012f8:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80012fa:	2201      	movs	r2, #1
 80012fc:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80012fe:	2304      	movs	r3, #4
 8001300:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8001304:	2300      	movs	r3, #0
 8001306:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800130a:	6943      	ldr	r3, [r0, #20]
 800130c:	b103      	cbz	r3, 8001310 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800130e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != RESET)
 8001310:	06b2      	lsls	r2, r6, #26
 8001312:	d516      	bpl.n	8001342 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != RESET)
 8001314:	04ab      	lsls	r3, r5, #18
 8001316:	d514      	bpl.n	8001342 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8001318:	6823      	ldr	r3, [r4, #0]
 800131a:	681a      	ldr	r2, [r3, #0]
 800131c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8001320:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8001322:	2220      	movs	r2, #32
 8001324:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8001326:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001328:	f043 0302 	orr.w	r3, r3, #2
 800132c:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800132e:	2304      	movs	r3, #4
 8001330:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8001334:	2300      	movs	r3, #0
 8001336:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800133a:	6963      	ldr	r3, [r4, #20]
 800133c:	b10b      	cbz	r3, 8001342 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800133e:	4620      	mov	r0, r4
 8001340:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != RESET)
 8001342:	0730      	lsls	r0, r6, #28
 8001344:	d516      	bpl.n	8001374 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != RESET)
 8001346:	0529      	lsls	r1, r5, #20
 8001348:	d514      	bpl.n	8001374 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800134a:	6823      	ldr	r3, [r4, #0]
 800134c:	681a      	ldr	r2, [r3, #0]
 800134e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001352:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8001354:	2208      	movs	r2, #8
 8001356:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8001358:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800135a:	f043 0304 	orr.w	r3, r3, #4
 800135e:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8001360:	2304      	movs	r3, #4
 8001362:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8001366:	2300      	movs	r3, #0
 8001368:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800136c:	6963      	ldr	r3, [r4, #20]
 800136e:	b10b      	cbz	r3, 8001374 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8001370:	4620      	mov	r0, r4
 8001372:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != RESET)
 8001374:	0772      	lsls	r2, r6, #29
 8001376:	d50b      	bpl.n	8001390 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != RESET)
 8001378:	056b      	lsls	r3, r5, #21
 800137a:	d509      	bpl.n	8001390 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	681a      	ldr	r2, [r3, #0]
 8001380:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001384:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8001386:	2204      	movs	r2, #4
 8001388:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800138a:	4620      	mov	r0, r4
 800138c:	f7ff ffa2 	bl	80012d4 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != RESET)
 8001390:	07b0      	lsls	r0, r6, #30
 8001392:	d514      	bpl.n	80013be <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != RESET)
 8001394:	05a9      	lsls	r1, r5, #22
 8001396:	d512      	bpl.n	80013be <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	681a      	ldr	r2, [r3, #0]
 800139c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80013a0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80013a2:	2202      	movs	r2, #2
 80013a4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80013a6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80013a8:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80013aa:	2301      	movs	r3, #1
 80013ac:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80013b0:	2300      	movs	r3, #0
 80013b2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 80013b6:	6923      	ldr	r3, [r4, #16]
 80013b8:	b10b      	cbz	r3, 80013be <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80013ba:	4620      	mov	r0, r4
 80013bc:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != RESET)
 80013be:	06f2      	lsls	r2, r6, #27
 80013c0:	d513      	bpl.n	80013ea <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != RESET)
 80013c2:	04eb      	lsls	r3, r5, #19
 80013c4:	d511      	bpl.n	80013ea <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80013c6:	6823      	ldr	r3, [r4, #0]
 80013c8:	681a      	ldr	r2, [r3, #0]
 80013ca:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80013ce:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80013d0:	2210      	movs	r2, #16
 80013d2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80013d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80013d6:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80013d8:	2301      	movs	r3, #1
 80013da:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80013de:	2300      	movs	r3, #0
 80013e0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80013e4:	4620      	mov	r0, r4
 80013e6:	f7ff ff76 	bl	80012d6 <HAL_DMA2D_CLUTLoadingCpltCallback>
 80013ea:	bd70      	pop	{r4, r5, r6, pc}

080013ec <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(pLayerCfg->AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80013ec:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80013f0:	2b01      	cmp	r3, #1
{
 80013f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013f4:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80013f8:	d03f      	beq.n	800147a <HAL_DMA2D_ConfigLayer+0x8e>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D BGPFCR register configuration -----------------------------------*/
  /* Prepare the value to be written to the BGPFCCR register */

  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80013fa:	010e      	lsls	r6, r1, #4
 80013fc:	1985      	adds	r5, r0, r6
  __HAL_LOCK(hdma2d);
 80013fe:	2201      	movs	r2, #1
 8001400:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8001404:	69ea      	ldr	r2, [r5, #28]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8001406:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800140a:	f1a2 0709 	sub.w	r7, r2, #9
 800140e:	2f01      	cmp	r7, #1
 8001410:	6803      	ldr	r3, [r0, #0]
  {
    regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_POSITION_BGPFCCR_AM) | (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8001412:	f8d5 e020 	ldr.w	lr, [r5, #32]
 8001416:	6a6c      	ldr	r4, [r5, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8001418:	d811      	bhi.n	800143e <HAL_DMA2D_ConfigLayer+0x52>
    regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_POSITION_BGPFCCR_AM) | (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800141a:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
 800141e:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8001422:	4322      	orrs	r2, r4
  {
    regValue =  pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_POSITION_BGPFCCR_AM) | (pLayerCfg->InputAlpha << DMA2D_POSITION_BGPFCCR_ALPHA);
  }
  
  /* Configure the background DMA2D layer */
  if(LayerIdx == 0)
 8001424:	b981      	cbnz	r1, 8001448 <HAL_DMA2D_ConfigLayer+0x5c>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA), regValue);
 8001426:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8001428:	4919      	ldr	r1, [pc, #100]	; (8001490 <HAL_DMA2D_ConfigLayer+0xa4>)
 800142a:	4021      	ands	r1, r4
 800142c:	430a      	orrs	r2, r1
 800142e:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8001430:	6982      	ldr	r2, [r0, #24]
 8001432:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8001434:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8001436:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800143a:	629a      	str	r2, [r3, #40]	; 0x28
 800143c:	e017      	b.n	800146e <HAL_DMA2D_ConfigLayer+0x82>
    regValue =  pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_POSITION_BGPFCCR_AM) | (pLayerCfg->InputAlpha << DMA2D_POSITION_BGPFCCR_ALPHA);
 800143e:	0624      	lsls	r4, r4, #24
 8001440:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8001444:	4322      	orrs	r2, r4
  if(LayerIdx == 0)
 8001446:	b1d1      	cbz	r1, 800147e <HAL_DMA2D_ConfigLayer+0x92>
  }
  /* Configure the foreground DMA2D layer */
  else
  {
     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA), regValue);
 8001448:	69dd      	ldr	r5, [r3, #28]
 800144a:	4c11      	ldr	r4, [pc, #68]	; (8001490 <HAL_DMA2D_ConfigLayer+0xa4>)

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800144c:	2f01      	cmp	r7, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA), regValue);
 800144e:	ea04 0405 	and.w	r4, r4, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8001452:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA), regValue);
 8001454:	ea42 0204 	orr.w	r2, r2, r4
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8001458:	bf98      	it	ls
 800145a:	eb00 1101 	addls.w	r1, r0, r1, lsl #4
    MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA), regValue);
 800145e:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8001460:	69b2      	ldr	r2, [r6, #24]
 8001462:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8001464:	bf9e      	ittt	ls
 8001466:	6a4a      	ldrls	r2, [r1, #36]	; 0x24
 8001468:	f022 427f 	bicls.w	r2, r2, #4278190080	; 0xff000000
 800146c:	621a      	strls	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800146e:	2301      	movs	r3, #1
 8001470:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8001474:	2300      	movs	r3, #0
 8001476:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800147a:	4618      	mov	r0, r3
 800147c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA), regValue);
 800147e:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8001480:	4903      	ldr	r1, [pc, #12]	; (8001490 <HAL_DMA2D_ConfigLayer+0xa4>)
 8001482:	4021      	ands	r1, r4
 8001484:	430a      	orrs	r2, r1
 8001486:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8001488:	6982      	ldr	r2, [r0, #24]
 800148a:	619a      	str	r2, [r3, #24]
 800148c:	e7ef      	b.n	800146e <HAL_DMA2D_ConfigLayer+0x82>
 800148e:	bf00      	nop
 8001490:	00fcfff0 	.word	0x00fcfff0

08001494 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001498:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800149a:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800149c:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8001664 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80014a0:	4a6e      	ldr	r2, [pc, #440]	; (800165c <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80014a2:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8001668 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80014a6:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80014a8:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 80014aa:	f04f 0e01 	mov.w	lr, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80014ae:	9c01      	ldr	r4, [sp, #4]
    ioposition = 0x01U << position;
 80014b0:	fa0e fe03 	lsl.w	lr, lr, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80014b4:	ea0e 0604 	and.w	r6, lr, r4
    if(iocurrent == ioposition)
 80014b8:	45b6      	cmp	lr, r6
 80014ba:	f040 80b6 	bne.w	800162a <HAL_GPIO_Init+0x196>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80014be:	684c      	ldr	r4, [r1, #4]
 80014c0:	f024 0710 	bic.w	r7, r4, #16
 80014c4:	2f02      	cmp	r7, #2
 80014c6:	d116      	bne.n	80014f6 <HAL_GPIO_Init+0x62>
        temp = GPIOx->AFR[position >> 3U];
 80014c8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80014cc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80014d0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80014d4:	f8da 5020 	ldr.w	r5, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80014d8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80014dc:	f04f 0c0f 	mov.w	ip, #15
 80014e0:	fa0c fc0b 	lsl.w	ip, ip, fp
 80014e4:	ea25 0c0c 	bic.w	ip, r5, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80014e8:	690d      	ldr	r5, [r1, #16]
 80014ea:	fa05 f50b 	lsl.w	r5, r5, fp
 80014ee:	ea45 050c 	orr.w	r5, r5, ip
        GPIOx->AFR[position >> 3U] = temp;
 80014f2:	f8ca 5020 	str.w	r5, [sl, #32]
 80014f6:	ea4f 0a43 	mov.w	sl, r3, lsl #1
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80014fa:	2503      	movs	r5, #3
      temp = GPIOx->MODER;
 80014fc:	f8d0 b000 	ldr.w	fp, [r0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001500:	fa05 f50a 	lsl.w	r5, r5, sl
 8001504:	43ed      	mvns	r5, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001506:	f004 0c03 	and.w	ip, r4, #3
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800150a:	ea0b 0b05 	and.w	fp, fp, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800150e:	fa0c fc0a 	lsl.w	ip, ip, sl
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001512:	3f01      	subs	r7, #1
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001514:	ea4c 0c0b 	orr.w	ip, ip, fp
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001518:	2f01      	cmp	r7, #1
      GPIOx->MODER = temp;
 800151a:	f8c0 c000 	str.w	ip, [r0]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800151e:	d811      	bhi.n	8001544 <HAL_GPIO_Init+0xb0>
        temp = GPIOx->OSPEEDR; 
 8001520:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001522:	ea07 0b05 	and.w	fp, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001526:	68cf      	ldr	r7, [r1, #12]
 8001528:	fa07 fc0a 	lsl.w	ip, r7, sl
 800152c:	ea4c 070b 	orr.w	r7, ip, fp
        GPIOx->OSPEEDR = temp;
 8001530:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8001532:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001534:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8001538:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800153c:	409f      	lsls	r7, r3
 800153e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8001542:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8001544:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001546:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001548:	688f      	ldr	r7, [r1, #8]
 800154a:	fa07 f70a 	lsl.w	r7, r7, sl
 800154e:	433d      	orrs	r5, r7
      GPIOx->PUPDR = temp;
 8001550:	60c5      	str	r5, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8001552:	00e5      	lsls	r5, r4, #3
 8001554:	d569      	bpl.n	800162a <HAL_GPIO_Init+0x196>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001556:	f04f 0b00 	mov.w	fp, #0
 800155a:	f8cd b00c 	str.w	fp, [sp, #12]
 800155e:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001562:	4d3f      	ldr	r5, [pc, #252]	; (8001660 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001564:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8001568:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 800156c:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8001570:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8001574:	9703      	str	r7, [sp, #12]
 8001576:	9f03      	ldr	r7, [sp, #12]
 8001578:	f023 0703 	bic.w	r7, r3, #3
 800157c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8001580:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001584:	f003 0c03 	and.w	ip, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8001588:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800158c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8001590:	f04f 0e0f 	mov.w	lr, #15
 8001594:	fa0e fe0c 	lsl.w	lr, lr, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001598:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800159a:	ea2a 0e0e 	bic.w	lr, sl, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800159e:	d04b      	beq.n	8001638 <HAL_GPIO_Init+0x1a4>
 80015a0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80015a4:	42a8      	cmp	r0, r5
 80015a6:	d049      	beq.n	800163c <HAL_GPIO_Init+0x1a8>
 80015a8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80015ac:	42a8      	cmp	r0, r5
 80015ae:	d047      	beq.n	8001640 <HAL_GPIO_Init+0x1ac>
 80015b0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80015b4:	42a8      	cmp	r0, r5
 80015b6:	d045      	beq.n	8001644 <HAL_GPIO_Init+0x1b0>
 80015b8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80015bc:	42a8      	cmp	r0, r5
 80015be:	d043      	beq.n	8001648 <HAL_GPIO_Init+0x1b4>
 80015c0:	4548      	cmp	r0, r9
 80015c2:	d043      	beq.n	800164c <HAL_GPIO_Init+0x1b8>
 80015c4:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 80015c8:	42a8      	cmp	r0, r5
 80015ca:	d041      	beq.n	8001650 <HAL_GPIO_Init+0x1bc>
 80015cc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80015d0:	42a8      	cmp	r0, r5
 80015d2:	d03f      	beq.n	8001654 <HAL_GPIO_Init+0x1c0>
 80015d4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80015d8:	42a8      	cmp	r0, r5
 80015da:	d03d      	beq.n	8001658 <HAL_GPIO_Init+0x1c4>
 80015dc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80015e0:	42a8      	cmp	r0, r5
 80015e2:	bf14      	ite	ne
 80015e4:	250a      	movne	r5, #10
 80015e6:	2509      	moveq	r5, #9
 80015e8:	fa05 f50c 	lsl.w	r5, r5, ip
 80015ec:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80015f0:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80015f2:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80015f4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80015f6:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80015fa:	bf0c      	ite	eq
 80015fc:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80015fe:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8001600:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8001602:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001604:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8001608:	bf0c      	ite	eq
 800160a:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800160c:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 800160e:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001610:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001612:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8001616:	bf0c      	ite	eq
 8001618:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800161a:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 800161c:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800161e:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001620:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8001622:	bf54      	ite	pl
 8001624:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8001626:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8001628:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800162a:	3301      	adds	r3, #1
 800162c:	2b10      	cmp	r3, #16
 800162e:	f47f af3c 	bne.w	80014aa <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 8001632:	b005      	add	sp, #20
 8001634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001638:	465d      	mov	r5, fp
 800163a:	e7d5      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 800163c:	2501      	movs	r5, #1
 800163e:	e7d3      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 8001640:	2502      	movs	r5, #2
 8001642:	e7d1      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 8001644:	2503      	movs	r5, #3
 8001646:	e7cf      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 8001648:	2504      	movs	r5, #4
 800164a:	e7cd      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 800164c:	2505      	movs	r5, #5
 800164e:	e7cb      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 8001650:	2506      	movs	r5, #6
 8001652:	e7c9      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 8001654:	2507      	movs	r5, #7
 8001656:	e7c7      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 8001658:	2508      	movs	r5, #8
 800165a:	e7c5      	b.n	80015e8 <HAL_GPIO_Init+0x154>
 800165c:	40013c00 	.word	0x40013c00
 8001660:	40020000 	.word	0x40020000
 8001664:	40023800 	.word	0x40023800
 8001668:	40021400 	.word	0x40021400

0800166c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800166c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;

        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8001670:	4e4c      	ldr	r6, [pc, #304]	; (80017a4 <HAL_GPIO_DeInit+0x138>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8001672:	f8df a138 	ldr.w	sl, [pc, #312]	; 80017ac <HAL_GPIO_DeInit+0x140>
 8001676:	f8df b138 	ldr.w	fp, [pc, #312]	; 80017b0 <HAL_GPIO_DeInit+0x144>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800167a:	2400      	movs	r4, #0
    ioposition = 0x01U << position;
 800167c:	f04f 0901 	mov.w	r9, #1
 8001680:	fa09 f204 	lsl.w	r2, r9, r4
    if(iocurrent == ioposition)
 8001684:	ea32 0301 	bics.w	r3, r2, r1
 8001688:	d174      	bne.n	8001774 <HAL_GPIO_DeInit+0x108>
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800168a:	2303      	movs	r3, #3
 800168c:	fa04 f509 	lsl.w	r5, r4, r9
 8001690:	6807      	ldr	r7, [r0, #0]
 8001692:	fa03 f505 	lsl.w	r5, r3, r5
 8001696:	43ed      	mvns	r5, r5
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001698:	fa24 fc03 	lsr.w	ip, r4, r3
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800169c:	402f      	ands	r7, r5
 800169e:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 80016a2:	6007      	str	r7, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80016a4:	f004 0e07 	and.w	lr, r4, #7
 80016a8:	f8dc 8020 	ldr.w	r8, [ip, #32]
 80016ac:	270f      	movs	r7, #15
 80016ae:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80016b2:	fa07 fe0e 	lsl.w	lr, r7, lr
 80016b6:	ea28 0e0e 	bic.w	lr, r8, lr
 80016ba:	f8cc e020 	str.w	lr, [ip, #32]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80016be:	f8d0 e008 	ldr.w	lr, [r0, #8]
 80016c2:	ea05 0e0e 	and.w	lr, r5, lr
 80016c6:	f8c0 e008 	str.w	lr, [r0, #8]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80016ca:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80016ce:	43d2      	mvns	r2, r2
 80016d0:	ea02 0e0e 	and.w	lr, r2, lr
 80016d4:	f8c0 e004 	str.w	lr, [r0, #4]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80016d8:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 80016dc:	ea05 050e 	and.w	r5, r5, lr
 80016e0:	60c5      	str	r5, [r0, #12]
 80016e2:	f024 0503 	bic.w	r5, r4, #3
 80016e6:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80016ea:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 80016ee:	ea04 0e03 	and.w	lr, r4, r3
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80016f2:	4b2d      	ldr	r3, [pc, #180]	; (80017a8 <HAL_GPIO_DeInit+0x13c>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 80016f4:	f8d5 c008 	ldr.w	ip, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 80016f8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80016fc:	fa07 f70e 	lsl.w	r7, r7, lr
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8001700:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8001702:	ea0c 0c07 	and.w	ip, ip, r7
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8001706:	d03a      	beq.n	800177e <HAL_GPIO_DeInit+0x112>
 8001708:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800170c:	4298      	cmp	r0, r3
 800170e:	d038      	beq.n	8001782 <HAL_GPIO_DeInit+0x116>
 8001710:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001714:	4298      	cmp	r0, r3
 8001716:	d036      	beq.n	8001786 <HAL_GPIO_DeInit+0x11a>
 8001718:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800171c:	4298      	cmp	r0, r3
 800171e:	d034      	beq.n	800178a <HAL_GPIO_DeInit+0x11e>
 8001720:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001724:	4298      	cmp	r0, r3
 8001726:	d032      	beq.n	800178e <HAL_GPIO_DeInit+0x122>
 8001728:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800172c:	4298      	cmp	r0, r3
 800172e:	d030      	beq.n	8001792 <HAL_GPIO_DeInit+0x126>
 8001730:	4550      	cmp	r0, sl
 8001732:	d030      	beq.n	8001796 <HAL_GPIO_DeInit+0x12a>
 8001734:	4558      	cmp	r0, fp
 8001736:	d030      	beq.n	800179a <HAL_GPIO_DeInit+0x12e>
 8001738:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
 800173c:	4298      	cmp	r0, r3
 800173e:	d02e      	beq.n	800179e <HAL_GPIO_DeInit+0x132>
 8001740:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001744:	4298      	cmp	r0, r3
 8001746:	bf0c      	ite	eq
 8001748:	2309      	moveq	r3, #9
 800174a:	230a      	movne	r3, #10
 800174c:	fa03 f30e 	lsl.w	r3, r3, lr
 8001750:	459c      	cmp	ip, r3
 8001752:	d10f      	bne.n	8001774 <HAL_GPIO_DeInit+0x108>
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8001754:	68ab      	ldr	r3, [r5, #8]
 8001756:	ea23 0707 	bic.w	r7, r3, r7
 800175a:	60af      	str	r7, [r5, #8]
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800175c:	6833      	ldr	r3, [r6, #0]
 800175e:	4013      	ands	r3, r2
 8001760:	6033      	str	r3, [r6, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8001762:	6873      	ldr	r3, [r6, #4]
 8001764:	4013      	ands	r3, r2
 8001766:	6073      	str	r3, [r6, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8001768:	68b3      	ldr	r3, [r6, #8]
 800176a:	4013      	ands	r3, r2
 800176c:	60b3      	str	r3, [r6, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800176e:	68f3      	ldr	r3, [r6, #12]
 8001770:	401a      	ands	r2, r3
 8001772:	60f2      	str	r2, [r6, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001774:	3401      	adds	r4, #1
 8001776:	2c10      	cmp	r4, #16
 8001778:	d180      	bne.n	800167c <HAL_GPIO_DeInit+0x10>
      }
    }
  }
}
 800177a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800177e:	2300      	movs	r3, #0
 8001780:	e7e4      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 8001782:	464b      	mov	r3, r9
 8001784:	e7e2      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 8001786:	2302      	movs	r3, #2
 8001788:	e7e0      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 800178a:	2303      	movs	r3, #3
 800178c:	e7de      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 800178e:	2304      	movs	r3, #4
 8001790:	e7dc      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 8001792:	2305      	movs	r3, #5
 8001794:	e7da      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 8001796:	2306      	movs	r3, #6
 8001798:	e7d8      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 800179a:	2307      	movs	r3, #7
 800179c:	e7d6      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 800179e:	2308      	movs	r3, #8
 80017a0:	e7d4      	b.n	800174c <HAL_GPIO_DeInit+0xe0>
 80017a2:	bf00      	nop
 80017a4:	40013c00 	.word	0x40013c00
 80017a8:	40020000 	.word	0x40020000
 80017ac:	40021800 	.word	0x40021800
 80017b0:	40021c00 	.word	0x40021c00

080017b4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80017b4:	b10a      	cbz	r2, 80017ba <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80017b6:	6181      	str	r1, [r0, #24]
 80017b8:	4770      	bx	lr
 80017ba:	0409      	lsls	r1, r1, #16
 80017bc:	e7fb      	b.n	80017b6 <HAL_GPIO_WritePin+0x2>

080017be <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80017be:	6802      	ldr	r2, [r0, #0]
 80017c0:	6953      	ldr	r3, [r2, #20]
 80017c2:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80017c6:	d00d      	beq.n	80017e4 <I2C_IsAcknowledgeFailed+0x26>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80017c8:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80017cc:	6153      	str	r3, [r2, #20]

    hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 80017ce:	2304      	movs	r3, #4
 80017d0:	6403      	str	r3, [r0, #64]	; 0x40
    hi2c->PreviousState = I2C_STATE_NONE;
    hi2c->State= HAL_I2C_STATE_READY;
 80017d2:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 80017d4:	2300      	movs	r3, #0
 80017d6:	6303      	str	r3, [r0, #48]	; 0x30

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80017d8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    hi2c->State= HAL_I2C_STATE_READY;
 80017dc:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_ERROR;
 80017e0:	2001      	movs	r0, #1
 80017e2:	4770      	bx	lr
  }
  return HAL_OK;
 80017e4:	4618      	mov	r0, r3
}
 80017e6:	4770      	bx	lr

080017e8 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80017e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80017ec:	4604      	mov	r4, r0
 80017ee:	4617      	mov	r7, r2
 80017f0:	4699      	mov	r9, r3
  while(__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80017f2:	f3c1 4807 	ubfx	r8, r1, #16, #8
 80017f6:	b28e      	uxth	r6, r1
 80017f8:	6825      	ldr	r5, [r4, #0]
 80017fa:	f1b8 0f01 	cmp.w	r8, #1
 80017fe:	bf0c      	ite	eq
 8001800:	696b      	ldreq	r3, [r5, #20]
 8001802:	69ab      	ldrne	r3, [r5, #24]
 8001804:	ea36 0303 	bics.w	r3, r6, r3
 8001808:	bf14      	ite	ne
 800180a:	2001      	movne	r0, #1
 800180c:	2000      	moveq	r0, #0
 800180e:	b908      	cbnz	r0, 8001814 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x2c>
}
 8001810:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001814:	696b      	ldr	r3, [r5, #20]
 8001816:	055a      	lsls	r2, r3, #21
 8001818:	d512      	bpl.n	8001840 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x58>
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 800181a:	682b      	ldr	r3, [r5, #0]
 800181c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001820:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001822:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8001826:	616b      	str	r3, [r5, #20]
      hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 8001828:	2304      	movs	r3, #4
 800182a:	6423      	str	r3, [r4, #64]	; 0x40
      hi2c->State= HAL_I2C_STATE_READY;
 800182c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800182e:	2300      	movs	r3, #0
 8001830:	6323      	str	r3, [r4, #48]	; 0x30
      __HAL_UNLOCK(hi2c);
 8001832:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      hi2c->State= HAL_I2C_STATE_READY;
 8001836:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      return HAL_ERROR;
 800183a:	2001      	movs	r0, #1
 800183c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if(Timeout != HAL_MAX_DELAY)
 8001840:	1c7b      	adds	r3, r7, #1
 8001842:	d0d9      	beq.n	80017f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 8001844:	b94f      	cbnz	r7, 800185a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x72>
        hi2c->PreviousState = I2C_STATE_NONE;
 8001846:	2300      	movs	r3, #0
        hi2c->State= HAL_I2C_STATE_READY;
 8001848:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800184a:	6323      	str	r3, [r4, #48]	; 0x30
        __HAL_UNLOCK(hi2c);
 800184c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->State= HAL_I2C_STATE_READY;
 8001850:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        return HAL_TIMEOUT;
 8001854:	2003      	movs	r0, #3
 8001856:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 800185a:	f7ff fc6d 	bl	8001138 <HAL_GetTick>
 800185e:	eba0 0009 	sub.w	r0, r0, r9
 8001862:	4287      	cmp	r7, r0
 8001864:	d2c8      	bcs.n	80017f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8001866:	e7ee      	b.n	8001846 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>

08001868 <I2C_WaitOnFlagUntilTimeout>:
{
 8001868:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800186c:	9e08      	ldr	r6, [sp, #32]
 800186e:	4604      	mov	r4, r0
 8001870:	4690      	mov	r8, r2
 8001872:	461f      	mov	r7, r3
  while((__HAL_I2C_GET_FLAG(hi2c, Flag) ? SET : RESET) == Status) 
 8001874:	f3c1 4907 	ubfx	r9, r1, #16, #8
 8001878:	b28d      	uxth	r5, r1
 800187a:	6823      	ldr	r3, [r4, #0]
 800187c:	f1b9 0f01 	cmp.w	r9, #1
 8001880:	bf0c      	ite	eq
 8001882:	695b      	ldreq	r3, [r3, #20]
 8001884:	699b      	ldrne	r3, [r3, #24]
 8001886:	ea35 0303 	bics.w	r3, r5, r3
 800188a:	bf0c      	ite	eq
 800188c:	2301      	moveq	r3, #1
 800188e:	2300      	movne	r3, #0
 8001890:	4543      	cmp	r3, r8
 8001892:	d002      	beq.n	800189a <I2C_WaitOnFlagUntilTimeout+0x32>
  return HAL_OK;
 8001894:	2000      	movs	r0, #0
}
 8001896:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if(Timeout != HAL_MAX_DELAY)
 800189a:	1c7b      	adds	r3, r7, #1
 800189c:	d0ed      	beq.n	800187a <I2C_WaitOnFlagUntilTimeout+0x12>
      if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 800189e:	b95f      	cbnz	r7, 80018b8 <I2C_WaitOnFlagUntilTimeout+0x50>
        hi2c->PreviousState = I2C_STATE_NONE;
 80018a0:	2300      	movs	r3, #0
        hi2c->State= HAL_I2C_STATE_READY;
 80018a2:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 80018a4:	6323      	str	r3, [r4, #48]	; 0x30
        __HAL_UNLOCK(hi2c);
 80018a6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->State= HAL_I2C_STATE_READY;
 80018aa:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        __HAL_UNLOCK(hi2c);
 80018ae:	2003      	movs	r0, #3
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80018b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80018b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 80018b8:	f7ff fc3e 	bl	8001138 <HAL_GetTick>
 80018bc:	1b80      	subs	r0, r0, r6
 80018be:	4287      	cmp	r7, r0
 80018c0:	d2db      	bcs.n	800187a <I2C_WaitOnFlagUntilTimeout+0x12>
 80018c2:	e7ed      	b.n	80018a0 <I2C_WaitOnFlagUntilTimeout+0x38>

080018c4 <I2C_WaitOnTXEFlagUntilTimeout>:
{    
 80018c4:	b570      	push	{r4, r5, r6, lr}
 80018c6:	4604      	mov	r4, r0
 80018c8:	460d      	mov	r5, r1
 80018ca:	4616      	mov	r6, r2
  while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80018cc:	6823      	ldr	r3, [r4, #0]
 80018ce:	695b      	ldr	r3, [r3, #20]
 80018d0:	061b      	lsls	r3, r3, #24
 80018d2:	d501      	bpl.n	80018d8 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;      
 80018d4:	2000      	movs	r0, #0
 80018d6:	bd70      	pop	{r4, r5, r6, pc}
    if(I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80018d8:	4620      	mov	r0, r4
 80018da:	f7ff ff70 	bl	80017be <I2C_IsAcknowledgeFailed>
 80018de:	b9a8      	cbnz	r0, 800190c <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if(Timeout != HAL_MAX_DELAY)
 80018e0:	1c6a      	adds	r2, r5, #1
 80018e2:	d0f3      	beq.n	80018cc <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 80018e4:	b965      	cbnz	r5, 8001900 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80018e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80018e8:	f043 0320 	orr.w	r3, r3, #32
 80018ec:	6423      	str	r3, [r4, #64]	; 0x40
        hi2c->State= HAL_I2C_STATE_READY;
 80018ee:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 80018f0:	2300      	movs	r3, #0
 80018f2:	6323      	str	r3, [r4, #48]	; 0x30
        __HAL_UNLOCK(hi2c);
 80018f4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->State= HAL_I2C_STATE_READY;
 80018f8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        __HAL_UNLOCK(hi2c);
 80018fc:	2003      	movs	r0, #3
 80018fe:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 8001900:	f7ff fc1a 	bl	8001138 <HAL_GetTick>
 8001904:	1b80      	subs	r0, r0, r6
 8001906:	4285      	cmp	r5, r0
 8001908:	d2e0      	bcs.n	80018cc <I2C_WaitOnTXEFlagUntilTimeout+0x8>
 800190a:	e7ec      	b.n	80018e6 <I2C_WaitOnTXEFlagUntilTimeout+0x22>
      return HAL_ERROR;
 800190c:	2001      	movs	r0, #1
}
 800190e:	bd70      	pop	{r4, r5, r6, pc}

08001910 <I2C_RequestMemoryWrite>:
{
 8001910:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8001914:	4615      	mov	r5, r2
  hi2c->Instance->CR1 |= I2C_CR1_START;
 8001916:	6802      	ldr	r2, [r0, #0]
{
 8001918:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800191a:	4698      	mov	r8, r3
  hi2c->Instance->CR1 |= I2C_CR1_START;
 800191c:	6813      	ldr	r3, [r2, #0]
 800191e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001922:	6013      	str	r3, [r2, #0]
{
 8001924:	460f      	mov	r7, r1
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8001926:	9600      	str	r6, [sp, #0]
 8001928:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800192a:	2200      	movs	r2, #0
 800192c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8001930:	4604      	mov	r4, r0
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8001932:	f7ff ff99 	bl	8001868 <I2C_WaitOnFlagUntilTimeout>
 8001936:	b968      	cbnz	r0, 8001954 <I2C_RequestMemoryWrite+0x44>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8001938:	6823      	ldr	r3, [r4, #0]
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800193a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800193c:	491c      	ldr	r1, [pc, #112]	; (80019b0 <I2C_RequestMemoryWrite+0xa0>)
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800193e:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 8001942:	611f      	str	r7, [r3, #16]
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8001944:	4620      	mov	r0, r4
 8001946:	4633      	mov	r3, r6
 8001948:	f7ff ff4e 	bl	80017e8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800194c:	b130      	cbz	r0, 800195c <I2C_RequestMemoryWrite+0x4c>
    if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800194e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001950:	2b04      	cmp	r3, #4
 8001952:	d018      	beq.n	8001986 <I2C_RequestMemoryWrite+0x76>
      return HAL_TIMEOUT;
 8001954:	2003      	movs	r0, #3
}
 8001956:	b004      	add	sp, #16
 8001958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800195c:	6823      	ldr	r3, [r4, #0]
 800195e:	9003      	str	r0, [sp, #12]
 8001960:	695a      	ldr	r2, [r3, #20]
 8001962:	9203      	str	r2, [sp, #12]
 8001964:	699b      	ldr	r3, [r3, #24]
 8001966:	9303      	str	r3, [sp, #12]
  if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001968:	4632      	mov	r2, r6
 800196a:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800196c:	9b03      	ldr	r3, [sp, #12]
  if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800196e:	4620      	mov	r0, r4
 8001970:	f7ff ffa8 	bl	80018c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8001974:	b148      	cbz	r0, 800198a <I2C_RequestMemoryWrite+0x7a>
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001976:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001978:	2b04      	cmp	r3, #4
 800197a:	d1eb      	bne.n	8001954 <I2C_RequestMemoryWrite+0x44>
        hi2c->Instance->CR1 |= I2C_CR1_STOP;
 800197c:	6822      	ldr	r2, [r4, #0]
 800197e:	6813      	ldr	r3, [r2, #0]
 8001980:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001984:	6013      	str	r3, [r2, #0]
      return HAL_ERROR;
 8001986:	2001      	movs	r0, #1
 8001988:	e7e5      	b.n	8001956 <I2C_RequestMemoryWrite+0x46>
  if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800198a:	f1b8 0f01 	cmp.w	r8, #1
 800198e:	6823      	ldr	r3, [r4, #0]
 8001990:	d102      	bne.n	8001998 <I2C_RequestMemoryWrite+0x88>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8001992:	b2ed      	uxtb	r5, r5
 8001994:	611d      	str	r5, [r3, #16]
 8001996:	e7de      	b.n	8001956 <I2C_RequestMemoryWrite+0x46>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8001998:	0a2a      	lsrs	r2, r5, #8
 800199a:	611a      	str	r2, [r3, #16]
    if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800199c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800199e:	4632      	mov	r2, r6
 80019a0:	4620      	mov	r0, r4
 80019a2:	f7ff ff8f 	bl	80018c4 <I2C_WaitOnTXEFlagUntilTimeout>
 80019a6:	2800      	cmp	r0, #0
 80019a8:	d1e5      	bne.n	8001976 <I2C_RequestMemoryWrite+0x66>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80019aa:	6823      	ldr	r3, [r4, #0]
 80019ac:	e7f1      	b.n	8001992 <I2C_RequestMemoryWrite+0x82>
 80019ae:	bf00      	nop
 80019b0:	00010002 	.word	0x00010002

080019b4 <I2C_RequestMemoryRead>:
{
 80019b4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80019b8:	4698      	mov	r8, r3
  hi2c->Instance->CR1 |= I2C_CR1_ACK;
 80019ba:	6803      	ldr	r3, [r0, #0]
{
 80019bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80019be:	4616      	mov	r6, r2
  hi2c->Instance->CR1 |= I2C_CR1_ACK;
 80019c0:	681a      	ldr	r2, [r3, #0]
 80019c2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80019c6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_START;
 80019c8:	681a      	ldr	r2, [r3, #0]
 80019ca:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80019ce:	601a      	str	r2, [r3, #0]
{
 80019d0:	460f      	mov	r7, r1
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80019d2:	9500      	str	r5, [sp, #0]
 80019d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80019d6:	2200      	movs	r2, #0
 80019d8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80019dc:	4604      	mov	r4, r0
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80019de:	f7ff ff43 	bl	8001868 <I2C_WaitOnFlagUntilTimeout>
 80019e2:	b980      	cbnz	r0, 8001a06 <I2C_RequestMemoryRead+0x52>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80019e4:	6823      	ldr	r3, [r4, #0]
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80019e6:	492f      	ldr	r1, [pc, #188]	; (8001aa4 <I2C_RequestMemoryRead+0xf0>)
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80019e8:	b2ff      	uxtb	r7, r7
 80019ea:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 80019ee:	611a      	str	r2, [r3, #16]
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80019f0:	4620      	mov	r0, r4
 80019f2:	462b      	mov	r3, r5
 80019f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80019f6:	f7ff fef7 	bl	80017e8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80019fa:	b140      	cbz	r0, 8001a0e <I2C_RequestMemoryRead+0x5a>
    if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80019fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80019fe:	2b04      	cmp	r3, #4
 8001a00:	d101      	bne.n	8001a06 <I2C_RequestMemoryRead+0x52>
      return HAL_ERROR;
 8001a02:	2001      	movs	r0, #1
 8001a04:	e000      	b.n	8001a08 <I2C_RequestMemoryRead+0x54>
      return HAL_TIMEOUT;
 8001a06:	2003      	movs	r0, #3
}
 8001a08:	b004      	add	sp, #16
 8001a0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001a0e:	6823      	ldr	r3, [r4, #0]
 8001a10:	9003      	str	r0, [sp, #12]
 8001a12:	695a      	ldr	r2, [r3, #20]
 8001a14:	9203      	str	r2, [sp, #12]
 8001a16:	699b      	ldr	r3, [r3, #24]
 8001a18:	9303      	str	r3, [sp, #12]
  if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a1a:	462a      	mov	r2, r5
 8001a1c:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001a1e:	9b03      	ldr	r3, [sp, #12]
  if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a20:	4620      	mov	r0, r4
 8001a22:	f7ff ff4f 	bl	80018c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8001a26:	b140      	cbz	r0, 8001a3a <I2C_RequestMemoryRead+0x86>
    if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001a28:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001a2a:	2b04      	cmp	r3, #4
 8001a2c:	d1eb      	bne.n	8001a06 <I2C_RequestMemoryRead+0x52>
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8001a2e:	6822      	ldr	r2, [r4, #0]
 8001a30:	6813      	ldr	r3, [r2, #0]
 8001a32:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001a36:	6013      	str	r3, [r2, #0]
 8001a38:	e7e3      	b.n	8001a02 <I2C_RequestMemoryRead+0x4e>
  if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8001a3a:	f1b8 0f01 	cmp.w	r8, #1
 8001a3e:	6823      	ldr	r3, [r4, #0]
 8001a40:	d124      	bne.n	8001a8c <I2C_RequestMemoryRead+0xd8>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8001a42:	b2f6      	uxtb	r6, r6
 8001a44:	611e      	str	r6, [r3, #16]
  if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a46:	462a      	mov	r2, r5
 8001a48:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001a4a:	4620      	mov	r0, r4
 8001a4c:	f7ff ff3a 	bl	80018c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8001a50:	4602      	mov	r2, r0
 8001a52:	2800      	cmp	r0, #0
 8001a54:	d1e8      	bne.n	8001a28 <I2C_RequestMemoryRead+0x74>
  hi2c->Instance->CR1 |= I2C_CR1_START;
 8001a56:	6821      	ldr	r1, [r4, #0]
 8001a58:	680b      	ldr	r3, [r1, #0]
 8001a5a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a5e:	600b      	str	r3, [r1, #0]
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8001a60:	4620      	mov	r0, r4
 8001a62:	9500      	str	r5, [sp, #0]
 8001a64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001a66:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8001a6a:	f7ff fefd 	bl	8001868 <I2C_WaitOnFlagUntilTimeout>
 8001a6e:	2800      	cmp	r0, #0
 8001a70:	d1c9      	bne.n	8001a06 <I2C_RequestMemoryRead+0x52>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8001a72:	6823      	ldr	r3, [r4, #0]
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8001a74:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001a76:	490b      	ldr	r1, [pc, #44]	; (8001aa4 <I2C_RequestMemoryRead+0xf0>)
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8001a78:	f047 0701 	orr.w	r7, r7, #1
 8001a7c:	611f      	str	r7, [r3, #16]
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8001a7e:	4620      	mov	r0, r4
 8001a80:	462b      	mov	r3, r5
 8001a82:	f7ff feb1 	bl	80017e8 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001a86:	2800      	cmp	r0, #0
 8001a88:	d1b8      	bne.n	80019fc <I2C_RequestMemoryRead+0x48>
 8001a8a:	e7bd      	b.n	8001a08 <I2C_RequestMemoryRead+0x54>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8001a8c:	0a32      	lsrs	r2, r6, #8
 8001a8e:	611a      	str	r2, [r3, #16]
    if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001a90:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001a92:	462a      	mov	r2, r5
 8001a94:	4620      	mov	r0, r4
 8001a96:	f7ff ff15 	bl	80018c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8001a9a:	2800      	cmp	r0, #0
 8001a9c:	d1c4      	bne.n	8001a28 <I2C_RequestMemoryRead+0x74>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8001a9e:	6823      	ldr	r3, [r4, #0]
 8001aa0:	e7cf      	b.n	8001a42 <I2C_RequestMemoryRead+0x8e>
 8001aa2:	bf00      	nop
 8001aa4:	00010002 	.word	0x00010002

08001aa8 <I2C_WaitOnRXNEFlagUntilTimeout>:
{  
 8001aa8:	b570      	push	{r4, r5, r6, lr}
 8001aaa:	4604      	mov	r4, r0
 8001aac:	460d      	mov	r5, r1
 8001aae:	4616      	mov	r6, r2
  while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8001ab0:	6820      	ldr	r0, [r4, #0]
 8001ab2:	6943      	ldr	r3, [r0, #20]
 8001ab4:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8001ab8:	d001      	beq.n	8001abe <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8001aba:	2000      	movs	r0, #0
}
 8001abc:	bd70      	pop	{r4, r5, r6, pc}
    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8001abe:	6942      	ldr	r2, [r0, #20]
 8001ac0:	06d2      	lsls	r2, r2, #27
 8001ac2:	d50b      	bpl.n	8001adc <I2C_WaitOnRXNEFlagUntilTimeout+0x34>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001ac4:	f06f 0210 	mvn.w	r2, #16
 8001ac8:	6142      	str	r2, [r0, #20]
      hi2c->State= HAL_I2C_STATE_READY;
 8001aca:	2220      	movs	r2, #32
      hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001acc:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8001ace:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      hi2c->PreviousState = I2C_STATE_NONE;
 8001ad2:	6323      	str	r3, [r4, #48]	; 0x30
      return HAL_ERROR;
 8001ad4:	2001      	movs	r0, #1
      hi2c->State= HAL_I2C_STATE_READY;
 8001ad6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      return HAL_ERROR;
 8001ada:	bd70      	pop	{r4, r5, r6, pc}
    if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 8001adc:	b95d      	cbnz	r5, 8001af6 <I2C_WaitOnRXNEFlagUntilTimeout+0x4e>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001ade:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001ae0:	f043 0320 	orr.w	r3, r3, #32
 8001ae4:	6423      	str	r3, [r4, #64]	; 0x40
      hi2c->State= HAL_I2C_STATE_READY;
 8001ae6:	2320      	movs	r3, #32
 8001ae8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      __HAL_UNLOCK(hi2c);
 8001aec:	2300      	movs	r3, #0
 8001aee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8001af2:	2003      	movs	r0, #3
 8001af4:	bd70      	pop	{r4, r5, r6, pc}
    if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 8001af6:	f7ff fb1f 	bl	8001138 <HAL_GetTick>
 8001afa:	1b80      	subs	r0, r0, r6
 8001afc:	4285      	cmp	r5, r0
 8001afe:	d2d7      	bcs.n	8001ab0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
 8001b00:	e7ed      	b.n	8001ade <I2C_WaitOnRXNEFlagUntilTimeout+0x36>

08001b02 <I2C_WaitOnBTFFlagUntilTimeout>:
{  
 8001b02:	b570      	push	{r4, r5, r6, lr}
 8001b04:	4604      	mov	r4, r0
 8001b06:	460d      	mov	r5, r1
 8001b08:	4616      	mov	r6, r2
  while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8001b0a:	6823      	ldr	r3, [r4, #0]
 8001b0c:	695b      	ldr	r3, [r3, #20]
 8001b0e:	075b      	lsls	r3, r3, #29
 8001b10:	d501      	bpl.n	8001b16 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8001b12:	2000      	movs	r0, #0
 8001b14:	bd70      	pop	{r4, r5, r6, pc}
    if(I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8001b16:	4620      	mov	r0, r4
 8001b18:	f7ff fe51 	bl	80017be <I2C_IsAcknowledgeFailed>
 8001b1c:	b9a8      	cbnz	r0, 8001b4a <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if(Timeout != HAL_MAX_DELAY)
 8001b1e:	1c6a      	adds	r2, r5, #1
 8001b20:	d0f3      	beq.n	8001b0a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 8001b22:	b965      	cbnz	r5, 8001b3e <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001b24:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b26:	f043 0320 	orr.w	r3, r3, #32
 8001b2a:	6423      	str	r3, [r4, #64]	; 0x40
        hi2c->State= HAL_I2C_STATE_READY;
 8001b2c:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 8001b2e:	2300      	movs	r3, #0
 8001b30:	6323      	str	r3, [r4, #48]	; 0x30
        __HAL_UNLOCK(hi2c);
 8001b32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->State= HAL_I2C_STATE_READY;
 8001b36:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        __HAL_UNLOCK(hi2c);
 8001b3a:	2003      	movs	r0, #3
 8001b3c:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 8001b3e:	f7ff fafb 	bl	8001138 <HAL_GetTick>
 8001b42:	1b80      	subs	r0, r0, r6
 8001b44:	4285      	cmp	r5, r0
 8001b46:	d2e0      	bcs.n	8001b0a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
 8001b48:	e7ec      	b.n	8001b24 <I2C_WaitOnBTFFlagUntilTimeout+0x22>
      return HAL_ERROR;
 8001b4a:	2001      	movs	r0, #1
}
 8001b4c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001b50 <HAL_I2C_Init>:
{
 8001b50:	b570      	push	{r4, r5, r6, lr}
  if(hi2c == NULL)
 8001b52:	4604      	mov	r4, r0
 8001b54:	2800      	cmp	r0, #0
 8001b56:	d062      	beq.n	8001c1e <HAL_I2C_Init+0xce>
  if(hi2c->State == HAL_I2C_STATE_RESET)
 8001b58:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8001b5c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001b60:	b91b      	cbnz	r3, 8001b6a <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8001b62:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8001b66:	f7fe fe7d 	bl	8000864 <HAL_I2C_MspInit>
  __HAL_I2C_DISABLE(hi2c);
 8001b6a:	6822      	ldr	r2, [r4, #0]
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8001b6c:	4e2d      	ldr	r6, [pc, #180]	; (8001c24 <HAL_I2C_Init+0xd4>)
  freqrange = I2C_FREQRANGE(pclk1);
 8001b6e:	4d2e      	ldr	r5, [pc, #184]	; (8001c28 <HAL_I2C_Init+0xd8>)
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001b70:	2324      	movs	r3, #36	; 0x24
 8001b72:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8001b76:	6813      	ldr	r3, [r2, #0]
 8001b78:	f023 0301 	bic.w	r3, r3, #1
 8001b7c:	6013      	str	r3, [r2, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8001b7e:	f000 ff55 	bl	8002a2c <HAL_RCC_GetPCLK1Freq>
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8001b82:	6863      	ldr	r3, [r4, #4]
  hi2c->Instance->CR2 = freqrange;
 8001b84:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8001b86:	fbb0 f5f5 	udiv	r5, r0, r5
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8001b8a:	42b3      	cmp	r3, r6
 8001b8c:	bf84      	itt	hi
 8001b8e:	f44f 7196 	movhi.w	r1, #300	; 0x12c
 8001b92:	4369      	mulhi	r1, r5
  hi2c->Instance->CR2 = freqrange;
 8001b94:	6055      	str	r5, [r2, #4]
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8001b96:	bf91      	iteee	ls
 8001b98:	1c69      	addls	r1, r5, #1
 8001b9a:	f44f 757a 	movhi.w	r5, #1000	; 0x3e8
 8001b9e:	fbb1 f1f5 	udivhi	r1, r1, r5
 8001ba2:	3101      	addhi	r1, #1
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8001ba4:	42b3      	cmp	r3, r6
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8001ba6:	6211      	str	r1, [r2, #32]
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8001ba8:	d821      	bhi.n	8001bee <HAL_I2C_Init+0x9e>
 8001baa:	005b      	lsls	r3, r3, #1
 8001bac:	fbb0 f0f3 	udiv	r0, r0, r3
 8001bb0:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8001bb4:	2b03      	cmp	r3, #3
 8001bb6:	bf98      	it	ls
 8001bb8:	2004      	movls	r0, #4
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001bba:	6a21      	ldr	r1, [r4, #32]
 8001bbc:	69e3      	ldr	r3, [r4, #28]
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8001bbe:	61d0      	str	r0, [r2, #28]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001bc0:	430b      	orrs	r3, r1
 8001bc2:	6013      	str	r3, [r2, #0]
  hi2c->Instance->OAR1 = (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1);
 8001bc4:	68e1      	ldr	r1, [r4, #12]
 8001bc6:	6923      	ldr	r3, [r4, #16]
 8001bc8:	430b      	orrs	r3, r1
 8001bca:	6093      	str	r3, [r2, #8]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2);
 8001bcc:	69a1      	ldr	r1, [r4, #24]
 8001bce:	6963      	ldr	r3, [r4, #20]
 8001bd0:	430b      	orrs	r3, r1
 8001bd2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8001bd4:	6813      	ldr	r3, [r2, #0]
 8001bd6:	f043 0301 	orr.w	r3, r3, #1
 8001bda:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001bdc:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8001bde:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001be0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8001be2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8001be6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8001be8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8001bec:	bd70      	pop	{r4, r5, r6, pc}
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8001bee:	68a1      	ldr	r1, [r4, #8]
 8001bf0:	b949      	cbnz	r1, 8001c06 <HAL_I2C_Init+0xb6>
 8001bf2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8001bf6:	fbb0 f0f3 	udiv	r0, r0, r3
 8001bfa:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8001bfe:	b163      	cbz	r3, 8001c1a <HAL_I2C_Init+0xca>
 8001c00:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 8001c04:	e7d9      	b.n	8001bba <HAL_I2C_Init+0x6a>
 8001c06:	2119      	movs	r1, #25
 8001c08:	434b      	muls	r3, r1
 8001c0a:	fbb0 f0f3 	udiv	r0, r0, r3
 8001c0e:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8001c12:	b113      	cbz	r3, 8001c1a <HAL_I2C_Init+0xca>
 8001c14:	f440 4040 	orr.w	r0, r0, #49152	; 0xc000
 8001c18:	e7cf      	b.n	8001bba <HAL_I2C_Init+0x6a>
 8001c1a:	2001      	movs	r0, #1
 8001c1c:	e7cd      	b.n	8001bba <HAL_I2C_Init+0x6a>
    return HAL_ERROR;
 8001c1e:	2001      	movs	r0, #1
}
 8001c20:	bd70      	pop	{r4, r5, r6, pc}
 8001c22:	bf00      	nop
 8001c24:	000186a0 	.word	0x000186a0
 8001c28:	000f4240 	.word	0x000f4240

08001c2c <HAL_I2C_Mem_Write>:
{
 8001c2c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8001c30:	4604      	mov	r4, r0
 8001c32:	469a      	mov	sl, r3
 8001c34:	4688      	mov	r8, r1
 8001c36:	4691      	mov	r9, r2
 8001c38:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  tickstart = HAL_GetTick();
 8001c3a:	f7ff fa7d 	bl	8001138 <HAL_GetTick>
  if(hi2c->State == HAL_I2C_STATE_READY)
 8001c3e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8001c42:	2b20      	cmp	r3, #32
  tickstart = HAL_GetTick();
 8001c44:	4605      	mov	r5, r0
  if(hi2c->State == HAL_I2C_STATE_READY)
 8001c46:	d003      	beq.n	8001c50 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8001c48:	2002      	movs	r0, #2
}
 8001c4a:	b002      	add	sp, #8
 8001c4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8001c50:	9000      	str	r0, [sp, #0]
 8001c52:	2319      	movs	r3, #25
 8001c54:	2201      	movs	r2, #1
 8001c56:	493e      	ldr	r1, [pc, #248]	; (8001d50 <HAL_I2C_Mem_Write+0x124>)
 8001c58:	4620      	mov	r0, r4
 8001c5a:	f7ff fe05 	bl	8001868 <I2C_WaitOnFlagUntilTimeout>
 8001c5e:	2800      	cmp	r0, #0
 8001c60:	d1f2      	bne.n	8001c48 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8001c62:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8001c66:	2b01      	cmp	r3, #1
 8001c68:	d0ee      	beq.n	8001c48 <HAL_I2C_Mem_Write+0x1c>
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8001c70:	6823      	ldr	r3, [r4, #0]
 8001c72:	681a      	ldr	r2, [r3, #0]
 8001c74:	07d2      	lsls	r2, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8001c76:	bf5e      	ittt	pl
 8001c78:	681a      	ldrpl	r2, [r3, #0]
 8001c7a:	f042 0201 	orrpl.w	r2, r2, #1
 8001c7e:	601a      	strpl	r2, [r3, #0]
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8001c80:	681a      	ldr	r2, [r3, #0]
 8001c82:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001c86:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8001c88:	2321      	movs	r3, #33	; 0x21
 8001c8a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8001c8e:	2340      	movs	r3, #64	; 0x40
 8001c90:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->pBuffPtr    = pData;
 8001c94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001c96:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001c98:	2700      	movs	r7, #0
    hi2c->XferCount   = Size;
 8001c9a:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001c9e:	6427      	str	r7, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8001ca0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8001ca2:	4b2c      	ldr	r3, [pc, #176]	; (8001d54 <HAL_I2C_Mem_Write+0x128>)
 8001ca4:	62e3      	str	r3, [r4, #44]	; 0x2c
    hi2c->XferSize    = hi2c->XferCount;
 8001ca6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001ca8:	8523      	strh	r3, [r4, #40]	; 0x28
    if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8001caa:	9501      	str	r5, [sp, #4]
 8001cac:	9600      	str	r6, [sp, #0]
 8001cae:	4653      	mov	r3, sl
 8001cb0:	464a      	mov	r2, r9
 8001cb2:	4641      	mov	r1, r8
 8001cb4:	4620      	mov	r0, r4
 8001cb6:	f7ff fe2b 	bl	8001910 <I2C_RequestMemoryWrite>
 8001cba:	2800      	cmp	r0, #0
 8001cbc:	d02a      	beq.n	8001d14 <HAL_I2C_Mem_Write+0xe8>
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001cbe:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8001cc0:	f884 703c 	strb.w	r7, [r4, #60]	; 0x3c
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001cc4:	2b04      	cmp	r3, #4
 8001cc6:	d107      	bne.n	8001cd8 <HAL_I2C_Mem_Write+0xac>
        return HAL_ERROR;
 8001cc8:	2001      	movs	r0, #1
 8001cca:	e7be      	b.n	8001c4a <HAL_I2C_Mem_Write+0x1e>
      if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001ccc:	f7ff fdfa 	bl	80018c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8001cd0:	b120      	cbz	r0, 8001cdc <HAL_I2C_Mem_Write+0xb0>
        if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001cd2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001cd4:	2b04      	cmp	r3, #4
 8001cd6:	d034      	beq.n	8001d42 <HAL_I2C_Mem_Write+0x116>
          return HAL_TIMEOUT;
 8001cd8:	2003      	movs	r0, #3
 8001cda:	e7b6      	b.n	8001c4a <HAL_I2C_Mem_Write+0x1e>
      hi2c->Instance->DR = (*hi2c->pBuffPtr++);
 8001cdc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001cde:	6827      	ldr	r7, [r4, #0]
      hi2c->XferSize--;
 8001ce0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->Instance->DR = (*hi2c->pBuffPtr++);
 8001ce2:	1c4b      	adds	r3, r1, #1
 8001ce4:	6263      	str	r3, [r4, #36]	; 0x24
 8001ce6:	780b      	ldrb	r3, [r1, #0]
 8001ce8:	613b      	str	r3, [r7, #16]
      hi2c->XferCount--;
 8001cea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001cec:	3b01      	subs	r3, #1
 8001cee:	b29b      	uxth	r3, r3
 8001cf0:	8563      	strh	r3, [r4, #42]	; 0x2a
      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8001cf2:	697b      	ldr	r3, [r7, #20]
      hi2c->XferSize--;
 8001cf4:	1e50      	subs	r0, r2, #1
 8001cf6:	b280      	uxth	r0, r0
      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8001cf8:	075b      	lsls	r3, r3, #29
      hi2c->XferSize--;
 8001cfa:	8520      	strh	r0, [r4, #40]	; 0x28
      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8001cfc:	d50a      	bpl.n	8001d14 <HAL_I2C_Mem_Write+0xe8>
 8001cfe:	b148      	cbz	r0, 8001d14 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = (*hi2c->pBuffPtr++);
 8001d00:	1c8b      	adds	r3, r1, #2
 8001d02:	6263      	str	r3, [r4, #36]	; 0x24
 8001d04:	784b      	ldrb	r3, [r1, #1]
 8001d06:	613b      	str	r3, [r7, #16]
        hi2c->XferCount--;
 8001d08:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001d0a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8001d0c:	3a02      	subs	r2, #2
        hi2c->XferCount--;
 8001d0e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8001d10:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8001d12:	8563      	strh	r3, [r4, #42]	; 0x2a
    while(hi2c->XferSize > 0U)
 8001d14:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if(I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001d16:	462a      	mov	r2, r5
 8001d18:	4631      	mov	r1, r6
 8001d1a:	4620      	mov	r0, r4
    while(hi2c->XferSize > 0U)
 8001d1c:	2b00      	cmp	r3, #0
 8001d1e:	d1d5      	bne.n	8001ccc <HAL_I2C_Mem_Write+0xa0>
    if(I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001d20:	f7ff feef 	bl	8001b02 <I2C_WaitOnBTFFlagUntilTimeout>
 8001d24:	2800      	cmp	r0, #0
 8001d26:	d1d4      	bne.n	8001cd2 <HAL_I2C_Mem_Write+0xa6>
    hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8001d28:	6822      	ldr	r2, [r4, #0]
 8001d2a:	6813      	ldr	r3, [r2, #0]
 8001d2c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001d30:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8001d32:	2320      	movs	r3, #32
 8001d34:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8001d38:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001d3c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8001d40:	e783      	b.n	8001c4a <HAL_I2C_Mem_Write+0x1e>
        hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8001d42:	6822      	ldr	r2, [r4, #0]
 8001d44:	6813      	ldr	r3, [r2, #0]
 8001d46:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001d4a:	6013      	str	r3, [r2, #0]
 8001d4c:	e7bc      	b.n	8001cc8 <HAL_I2C_Mem_Write+0x9c>
 8001d4e:	bf00      	nop
 8001d50:	00100002 	.word	0x00100002
 8001d54:	ffff0000 	.word	0xffff0000

08001d58 <HAL_I2C_Mem_Read>:
{
 8001d58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d5c:	4604      	mov	r4, r0
 8001d5e:	b086      	sub	sp, #24
 8001d60:	469a      	mov	sl, r3
 8001d62:	460d      	mov	r5, r1
 8001d64:	4691      	mov	r9, r2
 8001d66:	9f10      	ldr	r7, [sp, #64]	; 0x40
  tickstart = HAL_GetTick();
 8001d68:	f7ff f9e6 	bl	8001138 <HAL_GetTick>
  if(hi2c->State == HAL_I2C_STATE_READY)
 8001d6c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8001d70:	2b20      	cmp	r3, #32
  tickstart = HAL_GetTick();
 8001d72:	4606      	mov	r6, r0
  if(hi2c->State == HAL_I2C_STATE_READY)
 8001d74:	d004      	beq.n	8001d80 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8001d76:	2502      	movs	r5, #2
}
 8001d78:	4628      	mov	r0, r5
 8001d7a:	b006      	add	sp, #24
 8001d7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8001d80:	9000      	str	r0, [sp, #0]
 8001d82:	2319      	movs	r3, #25
 8001d84:	2201      	movs	r2, #1
 8001d86:	4979      	ldr	r1, [pc, #484]	; (8001f6c <HAL_I2C_Mem_Read+0x214>)
 8001d88:	4620      	mov	r0, r4
 8001d8a:	f7ff fd6d 	bl	8001868 <I2C_WaitOnFlagUntilTimeout>
 8001d8e:	2800      	cmp	r0, #0
 8001d90:	d1f1      	bne.n	8001d76 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8001d92:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8001d96:	2b01      	cmp	r3, #1
 8001d98:	d0ed      	beq.n	8001d76 <HAL_I2C_Mem_Read+0x1e>
 8001d9a:	2301      	movs	r3, #1
 8001d9c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8001da0:	6823      	ldr	r3, [r4, #0]
 8001da2:	681a      	ldr	r2, [r3, #0]
 8001da4:	07d2      	lsls	r2, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8001da6:	bf5e      	ittt	pl
 8001da8:	681a      	ldrpl	r2, [r3, #0]
 8001daa:	f042 0201 	orrpl.w	r2, r2, #1
 8001dae:	601a      	strpl	r2, [r3, #0]
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8001db0:	681a      	ldr	r2, [r3, #0]
 8001db2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001db6:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8001db8:	2322      	movs	r3, #34	; 0x22
 8001dba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8001dbe:	2340      	movs	r3, #64	; 0x40
 8001dc0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->pBuffPtr    = pData;
 8001dc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001dc6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001dc8:	f04f 0800 	mov.w	r8, #0
    hi2c->XferCount   = Size;
 8001dcc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001dd0:	f8c4 8040 	str.w	r8, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8001dd4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8001dd6:	4b66      	ldr	r3, [pc, #408]	; (8001f70 <HAL_I2C_Mem_Read+0x218>)
 8001dd8:	62e3      	str	r3, [r4, #44]	; 0x2c
    hi2c->XferSize    = hi2c->XferCount;
 8001dda:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001ddc:	8523      	strh	r3, [r4, #40]	; 0x28
    if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8001dde:	4629      	mov	r1, r5
 8001de0:	9601      	str	r6, [sp, #4]
 8001de2:	9700      	str	r7, [sp, #0]
 8001de4:	4653      	mov	r3, sl
 8001de6:	464a      	mov	r2, r9
 8001de8:	4620      	mov	r0, r4
 8001dea:	f7ff fde3 	bl	80019b4 <I2C_RequestMemoryRead>
 8001dee:	4605      	mov	r5, r0
 8001df0:	b130      	cbz	r0, 8001e00 <HAL_I2C_Mem_Read+0xa8>
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001df2:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8001df4:	f884 803c 	strb.w	r8, [r4, #60]	; 0x3c
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8001df8:	2b04      	cmp	r3, #4
 8001dfa:	d13a      	bne.n	8001e72 <HAL_I2C_Mem_Read+0x11a>
              return HAL_ERROR;
 8001dfc:	2501      	movs	r5, #1
 8001dfe:	e7bb      	b.n	8001d78 <HAL_I2C_Mem_Read+0x20>
    if(hi2c->XferSize == 0U)
 8001e00:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8001e02:	6823      	ldr	r3, [r4, #0]
 8001e04:	b992      	cbnz	r2, 8001e2c <HAL_I2C_Mem_Read+0xd4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001e06:	9002      	str	r0, [sp, #8]
 8001e08:	695a      	ldr	r2, [r3, #20]
 8001e0a:	9202      	str	r2, [sp, #8]
 8001e0c:	699a      	ldr	r2, [r3, #24]
 8001e0e:	9202      	str	r2, [sp, #8]
 8001e10:	9a02      	ldr	r2, [sp, #8]
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8001e12:	681a      	ldr	r2, [r3, #0]
 8001e14:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001e18:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8001e1a:	2320      	movs	r3, #32
 8001e1c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001e20:	2300      	movs	r3, #0
 8001e22:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8001e26:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8001e2a:	e7a5      	b.n	8001d78 <HAL_I2C_Mem_Read+0x20>
    else if(hi2c->XferSize == 1U)
 8001e2c:	2a01      	cmp	r2, #1
 8001e2e:	d122      	bne.n	8001e76 <HAL_I2C_Mem_Read+0x11e>
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 8001e30:	681a      	ldr	r2, [r3, #0]
 8001e32:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001e36:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001e38:	9003      	str	r0, [sp, #12]
 8001e3a:	695a      	ldr	r2, [r3, #20]
 8001e3c:	9203      	str	r2, [sp, #12]
 8001e3e:	699a      	ldr	r2, [r3, #24]
 8001e40:	9203      	str	r2, [sp, #12]
 8001e42:	9a03      	ldr	r2, [sp, #12]
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8001e44:	681a      	ldr	r2, [r3, #0]
 8001e46:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001e4a:	601a      	str	r2, [r3, #0]
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001e4c:	f8df 8124 	ldr.w	r8, [pc, #292]	; 8001f74 <HAL_I2C_Mem_Read+0x21c>
    while(hi2c->XferSize > 0U)
 8001e50:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8001e52:	2b00      	cmp	r3, #0
 8001e54:	d0e1      	beq.n	8001e1a <HAL_I2C_Mem_Read+0xc2>
      if(hi2c->XferSize <= 3U)
 8001e56:	2b03      	cmp	r3, #3
 8001e58:	d86b      	bhi.n	8001f32 <HAL_I2C_Mem_Read+0x1da>
        if(hi2c->XferSize== 1U)
 8001e5a:	2b01      	cmp	r3, #1
 8001e5c:	d123      	bne.n	8001ea6 <HAL_I2C_Mem_Read+0x14e>
          if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)      
 8001e5e:	4632      	mov	r2, r6
 8001e60:	4639      	mov	r1, r7
 8001e62:	4620      	mov	r0, r4
 8001e64:	f7ff fe20 	bl	8001aa8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8001e68:	2800      	cmp	r0, #0
 8001e6a:	d039      	beq.n	8001ee0 <HAL_I2C_Mem_Read+0x188>
            if(hi2c->ErrorCode == HAL_I2C_ERROR_TIMEOUT)
 8001e6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e6e:	2b20      	cmp	r3, #32
 8001e70:	d1c4      	bne.n	8001dfc <HAL_I2C_Mem_Read+0xa4>
              return HAL_TIMEOUT;
 8001e72:	2503      	movs	r5, #3
 8001e74:	e780      	b.n	8001d78 <HAL_I2C_Mem_Read+0x20>
    else if(hi2c->XferSize == 2U)
 8001e76:	2a02      	cmp	r2, #2
 8001e78:	d10e      	bne.n	8001e98 <HAL_I2C_Mem_Read+0x140>
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 8001e7a:	681a      	ldr	r2, [r3, #0]
 8001e7c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001e80:	601a      	str	r2, [r3, #0]
      hi2c->Instance->CR1 |= I2C_CR1_POS;
 8001e82:	681a      	ldr	r2, [r3, #0]
 8001e84:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001e88:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001e8a:	9004      	str	r0, [sp, #16]
 8001e8c:	695a      	ldr	r2, [r3, #20]
 8001e8e:	9204      	str	r2, [sp, #16]
 8001e90:	699b      	ldr	r3, [r3, #24]
 8001e92:	9304      	str	r3, [sp, #16]
 8001e94:	9b04      	ldr	r3, [sp, #16]
 8001e96:	e7d9      	b.n	8001e4c <HAL_I2C_Mem_Read+0xf4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8001e98:	9005      	str	r0, [sp, #20]
 8001e9a:	695a      	ldr	r2, [r3, #20]
 8001e9c:	9205      	str	r2, [sp, #20]
 8001e9e:	699b      	ldr	r3, [r3, #24]
 8001ea0:	9305      	str	r3, [sp, #20]
 8001ea2:	9b05      	ldr	r3, [sp, #20]
 8001ea4:	e7d2      	b.n	8001e4c <HAL_I2C_Mem_Read+0xf4>
        else if(hi2c->XferSize == 2U)
 8001ea6:	2b02      	cmp	r3, #2
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001ea8:	9600      	str	r6, [sp, #0]
 8001eaa:	463b      	mov	r3, r7
 8001eac:	f04f 0200 	mov.w	r2, #0
 8001eb0:	4641      	mov	r1, r8
 8001eb2:	4620      	mov	r0, r4
        else if(hi2c->XferSize == 2U)
 8001eb4:	d122      	bne.n	8001efc <HAL_I2C_Mem_Read+0x1a4>
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001eb6:	f7ff fcd7 	bl	8001868 <I2C_WaitOnFlagUntilTimeout>
 8001eba:	2800      	cmp	r0, #0
 8001ebc:	d1d9      	bne.n	8001e72 <HAL_I2C_Mem_Read+0x11a>
          hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8001ebe:	6823      	ldr	r3, [r4, #0]
 8001ec0:	681a      	ldr	r2, [r3, #0]
 8001ec2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ec6:	601a      	str	r2, [r3, #0]
          (*hi2c->pBuffPtr++) = hi2c->Instance->DR;
 8001ec8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001eca:	691b      	ldr	r3, [r3, #16]
 8001ecc:	1c51      	adds	r1, r2, #1
 8001ece:	6261      	str	r1, [r4, #36]	; 0x24
 8001ed0:	7013      	strb	r3, [r2, #0]
          hi2c->XferSize--;
 8001ed2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8001ed4:	3b01      	subs	r3, #1
 8001ed6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8001ed8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001eda:	3b01      	subs	r3, #1
 8001edc:	b29b      	uxth	r3, r3
 8001ede:	8563      	strh	r3, [r4, #42]	; 0x2a
          (*hi2c->pBuffPtr++) = hi2c->Instance->DR;
 8001ee0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ee2:	1c5a      	adds	r2, r3, #1
 8001ee4:	6262      	str	r2, [r4, #36]	; 0x24
 8001ee6:	6822      	ldr	r2, [r4, #0]
          (*hi2c->pBuffPtr++) = hi2c->Instance->DR;
 8001ee8:	6912      	ldr	r2, [r2, #16]
 8001eea:	701a      	strb	r2, [r3, #0]
          hi2c->XferSize--;
 8001eec:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8001eee:	3b01      	subs	r3, #1
 8001ef0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8001ef2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001ef4:	3b01      	subs	r3, #1
 8001ef6:	b29b      	uxth	r3, r3
 8001ef8:	8563      	strh	r3, [r4, #42]	; 0x2a
 8001efa:	e7a9      	b.n	8001e50 <HAL_I2C_Mem_Read+0xf8>
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001efc:	f7ff fcb4 	bl	8001868 <I2C_WaitOnFlagUntilTimeout>
 8001f00:	4602      	mov	r2, r0
 8001f02:	2800      	cmp	r0, #0
 8001f04:	d1b5      	bne.n	8001e72 <HAL_I2C_Mem_Read+0x11a>
          hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 8001f06:	6823      	ldr	r3, [r4, #0]
 8001f08:	6819      	ldr	r1, [r3, #0]
 8001f0a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8001f0e:	6019      	str	r1, [r3, #0]
          (*hi2c->pBuffPtr++) = hi2c->Instance->DR;
 8001f10:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001f12:	691b      	ldr	r3, [r3, #16]
 8001f14:	1c48      	adds	r0, r1, #1
 8001f16:	6260      	str	r0, [r4, #36]	; 0x24
 8001f18:	700b      	strb	r3, [r1, #0]
          hi2c->XferSize--;
 8001f1a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001f1c:	9600      	str	r6, [sp, #0]
          hi2c->XferSize--;
 8001f1e:	3b01      	subs	r3, #1
 8001f20:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8001f22:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001f24:	3b01      	subs	r3, #1
 8001f26:	b29b      	uxth	r3, r3
 8001f28:	8563      	strh	r3, [r4, #42]	; 0x2a
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8001f2a:	4641      	mov	r1, r8
 8001f2c:	463b      	mov	r3, r7
 8001f2e:	4620      	mov	r0, r4
 8001f30:	e7c1      	b.n	8001eb6 <HAL_I2C_Mem_Read+0x15e>
        if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8001f32:	4632      	mov	r2, r6
 8001f34:	4639      	mov	r1, r7
 8001f36:	4620      	mov	r0, r4
 8001f38:	f7ff fdb6 	bl	8001aa8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8001f3c:	2800      	cmp	r0, #0
 8001f3e:	d195      	bne.n	8001e6c <HAL_I2C_Mem_Read+0x114>
        (*hi2c->pBuffPtr++) = hi2c->Instance->DR;
 8001f40:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f42:	1c5a      	adds	r2, r3, #1
 8001f44:	6262      	str	r2, [r4, #36]	; 0x24
 8001f46:	6822      	ldr	r2, [r4, #0]
 8001f48:	6912      	ldr	r2, [r2, #16]
 8001f4a:	701a      	strb	r2, [r3, #0]
        hi2c->XferSize--;
 8001f4c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
        if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8001f4e:	6822      	ldr	r2, [r4, #0]
        hi2c->XferSize--;
 8001f50:	3b01      	subs	r3, #1
 8001f52:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8001f54:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8001f56:	3b01      	subs	r3, #1
 8001f58:	b29b      	uxth	r3, r3
 8001f5a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8001f5c:	6953      	ldr	r3, [r2, #20]
 8001f5e:	075b      	lsls	r3, r3, #29
 8001f60:	f57f af76 	bpl.w	8001e50 <HAL_I2C_Mem_Read+0xf8>
          (*hi2c->pBuffPtr++) = hi2c->Instance->DR;
 8001f64:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f66:	1c59      	adds	r1, r3, #1
 8001f68:	6261      	str	r1, [r4, #36]	; 0x24
 8001f6a:	e7bd      	b.n	8001ee8 <HAL_I2C_Mem_Read+0x190>
 8001f6c:	00100002 	.word	0x00100002
 8001f70:	ffff0000 	.word	0xffff0000
 8001f74:	00010004 	.word	0x00010004

08001f78 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));
  
  if(hi2c->State == HAL_I2C_STATE_READY)
 8001f78:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8001f7c:	b2d2      	uxtb	r2, r2
 8001f7e:	2a20      	cmp	r2, #32
{
 8001f80:	b510      	push	{r4, lr}
  if(hi2c->State == HAL_I2C_STATE_READY)
 8001f82:	d116      	bne.n	8001fb2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8001f84:	2324      	movs	r3, #36	; 0x24
 8001f86:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);    
 8001f8a:	6803      	ldr	r3, [r0, #0]
 8001f8c:	681c      	ldr	r4, [r3, #0]
 8001f8e:	f024 0401 	bic.w	r4, r4, #1
 8001f92:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8001f94:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8001f96:	f024 0410 	bic.w	r4, r4, #16
 8001f9a:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8001f9c:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8001f9e:	4321      	orrs	r1, r4
 8001fa0:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c); 
 8001fa2:	6819      	ldr	r1, [r3, #0]
 8001fa4:	f041 0101 	orr.w	r1, r1, #1
 8001fa8:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8001faa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 8001fae:	2000      	movs	r0, #0
 8001fb0:	bd10      	pop	{r4, pc}
  }
  else
  {
    return HAL_BUSY;
 8001fb2:	2002      	movs	r0, #2
  }
}
 8001fb4:	bd10      	pop	{r4, pc}

08001fb6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8001fb6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));
  
  if(hi2c->State == HAL_I2C_STATE_READY)
 8001fb8:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 8001fbc:	b2e4      	uxtb	r4, r4
 8001fbe:	2c20      	cmp	r4, #32
 8001fc0:	d116      	bne.n	8001ff0 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
    
    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);  
 8001fc2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8001fc4:	2324      	movs	r3, #36	; 0x24
 8001fc6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);  
 8001fca:	6815      	ldr	r5, [r2, #0]
 8001fcc:	f025 0501 	bic.w	r5, r5, #1
 8001fd0:	6015      	str	r5, [r2, #0]
    
    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8001fd2:	6a55      	ldr	r5, [r2, #36]	; 0x24
    
    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8001fd4:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8001fd8:	402b      	ands	r3, r5
    
    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8001fda:	430b      	orrs	r3, r1
    
    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8001fdc:	b29b      	uxth	r3, r3
 8001fde:	6253      	str	r3, [r2, #36]	; 0x24
    
    __HAL_I2C_ENABLE(hi2c); 
 8001fe0:	6813      	ldr	r3, [r2, #0]
 8001fe2:	f043 0301 	orr.w	r3, r3, #1
 8001fe6:	6013      	str	r3, [r2, #0]
    
    hi2c->State = HAL_I2C_STATE_READY;
 8001fe8:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d
    
    return HAL_OK; 
 8001fec:	2000      	movs	r0, #0
 8001fee:	bd30      	pop	{r4, r5, pc}
  }
  else
  {
    return HAL_BUSY; 
 8001ff0:	2002      	movs	r0, #2
  }
}  
 8001ff2:	bd30      	pop	{r4, r5, pc}

08001ff4 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8001ff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1 = 0U;
  uint32_t tmp2 = 0U;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8001ff8:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8001ffa:	6804      	ldr	r4, [r0, #0]
 8001ffc:	684f      	ldr	r7, [r1, #4]
 8001ffe:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8002000:	f8d1 e000 	ldr.w	lr, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);  
 8002004:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8002008:	3284      	adds	r2, #132	; 0x84
 800200a:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800200c:	f10e 0601 	add.w	r6, lr, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8002010:	6858      	ldr	r0, [r3, #4]
 8002012:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8002016:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8002018:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800201a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800201e:	f3c0 400b 	ubfx	r0, r0, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8002022:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8002024:	4430      	add	r0, r6
 8002026:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800202a:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800202c:	68e0      	ldr	r0, [r4, #12]
 800202e:	68cd      	ldr	r5, [r1, #12]
 8002030:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8002034:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8002036:	6898      	ldr	r0, [r3, #8]
 8002038:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800203c:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);  
 800203e:	68e6      	ldr	r6, [r4, #12]
 8002040:	6888      	ldr	r0, [r1, #8]
 8002042:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8002046:	3001      	adds	r0, #1
 8002048:	4430      	add	r0, r6
 800204a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800204e:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8002050:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8002052:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8002054:	f020 0007 	bic.w	r0, r0, #7
 8002058:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800205a:	f04f 0c00 	mov.w	ip, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800205e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8002060:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8002062:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8002066:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800206a:	f8c3 c018 	str.w	ip, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2); 
 800206e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8002072:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8002076:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800207a:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800207e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8002080:	6958      	ldr	r0, [r3, #20]
 8002082:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8002086:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8002088:	6948      	ldr	r0, [r1, #20]
 800208a:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800208c:	69d8      	ldr	r0, [r3, #28]
 800208e:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8002092:	f020 0007 	bic.w	r0, r0, #7
 8002096:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8002098:	6a08      	ldr	r0, [r1, #32]
 800209a:	69cd      	ldr	r5, [r1, #28]
 800209c:	4305      	orrs	r5, r0
 800209e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80020a0:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80020a2:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80020a4:	f8c3 c028 	str.w	ip, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80020a8:	6298      	str	r0, [r3, #40]	; 0x28

  if(pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80020aa:	b31e      	cbz	r6, 80020f4 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80020ac:	2e01      	cmp	r6, #1
 80020ae:	d023      	beq.n	80020f8 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80020b0:	1eb0      	subs	r0, r6, #2
 80020b2:	2802      	cmp	r0, #2
 80020b4:	d922      	bls.n	80020fc <LTDC_SetConfig+0x108>
    (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
      (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80020b6:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80020b8:	bf0c      	ite	eq
 80020ba:	2002      	moveq	r0, #2
 80020bc:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80020be:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80020c0:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80020c4:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80020c6:	6a8d      	ldr	r5, [r1, #40]	; 0x28

  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80020c8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80020ca:	eba7 070e 	sub.w	r7, r7, lr
 80020ce:	4345      	muls	r5, r0
 80020d0:	4378      	muls	r0, r7
 80020d2:	3003      	adds	r0, #3
 80020d4:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80020d8:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80020da:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80020dc:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80020e0:	f020 0007 	bic.w	r0, r0, #7
 80020e4:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80020e6:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */  
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80020e8:	58a3      	ldr	r3, [r4, r2]
 80020ea:	f043 0301 	orr.w	r3, r3, #1
 80020ee:	50a3      	str	r3, [r4, r2]
 80020f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80020f4:	2004      	movs	r0, #4
 80020f6:	e7e2      	b.n	80020be <LTDC_SetConfig+0xca>
    tmp = 3U;
 80020f8:	2003      	movs	r0, #3
 80020fa:	e7e0      	b.n	80020be <LTDC_SetConfig+0xca>
    tmp = 2U;
 80020fc:	2002      	movs	r0, #2
 80020fe:	e7de      	b.n	80020be <LTDC_SetConfig+0xca>

08002100 <HAL_LTDC_Init>:
{
 8002100:	b538      	push	{r3, r4, r5, lr}
  if(hltdc == NULL)
 8002102:	4604      	mov	r4, r0
 8002104:	2800      	cmp	r0, #0
 8002106:	d063      	beq.n	80021d0 <HAL_LTDC_Init+0xd0>
  if(hltdc->State == HAL_LTDC_STATE_RESET)
 8002108:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800210c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002110:	b91b      	cbnz	r3, 800211a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8002112:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8002116:	f001 f969 	bl	80033ec <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800211a:	2302      	movs	r3, #2
 800211c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8002120:	6823      	ldr	r3, [r4, #0]
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8002122:	68a0      	ldr	r0, [r4, #8]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8002124:	699a      	ldr	r2, [r3, #24]
 8002126:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800212a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800212c:	6862      	ldr	r2, [r4, #4]
 800212e:	6999      	ldr	r1, [r3, #24]
 8002130:	4302      	orrs	r2, r0
 8002132:	68e0      	ldr	r0, [r4, #12]
 8002134:	4302      	orrs	r2, r0
  hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8002136:	6920      	ldr	r0, [r4, #16]
 8002138:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |=  (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800213a:	430a      	orrs	r2, r1
 800213c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800213e:	689a      	ldr	r2, [r3, #8]
 8002140:	4924      	ldr	r1, [pc, #144]	; (80021d4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8002142:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8002144:	400a      	ands	r2, r1
 8002146:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8002148:	689a      	ldr	r2, [r3, #8]
 800214a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800214e:	69a0      	ldr	r0, [r4, #24]
 8002150:	4302      	orrs	r2, r0
 8002152:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8002154:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8002156:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8002158:	400a      	ands	r2, r1
 800215a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800215c:	68da      	ldr	r2, [r3, #12]
 800215e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8002162:	6a20      	ldr	r0, [r4, #32]
 8002164:	4302      	orrs	r2, r0
 8002166:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8002168:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800216a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800216c:	400a      	ands	r2, r1
 800216e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8002170:	691a      	ldr	r2, [r3, #16]
 8002172:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8002176:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002178:	4302      	orrs	r2, r0
 800217a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800217c:	695a      	ldr	r2, [r3, #20]
 800217e:	4011      	ands	r1, r2
 8002180:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8002182:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8002184:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8002186:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800218a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800218c:	430a      	orrs	r2, r1
 800218e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8002190:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8002192:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8002196:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800219a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800219e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80021a0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80021a2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80021a6:	430a      	orrs	r2, r1
 80021a8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80021ac:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80021b0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80021b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80021b4:	f042 0206 	orr.w	r2, r2, #6
 80021b8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80021ba:	699a      	ldr	r2, [r3, #24]
 80021bc:	f042 0201 	orr.w	r2, r2, #1
 80021c0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;  
 80021c2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80021c4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;  
 80021c6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80021ca:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  return HAL_OK;
 80021ce:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80021d0:	2001      	movs	r0, #1
}
 80021d2:	bd38      	pop	{r3, r4, r5, pc}
 80021d4:	f000f800 	.word	0xf000f800

080021d8 <HAL_LTDC_DeInit>:
{
 80021d8:	b510      	push	{r4, lr}
 80021da:	4604      	mov	r4, r0
  HAL_LTDC_MspDeInit(hltdc); 
 80021dc:	f001 f98a 	bl	80034f4 <HAL_LTDC_MspDeInit>
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80021e0:	2000      	movs	r0, #0
 80021e2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  __HAL_UNLOCK(hltdc);
 80021e6:	f884 00a0 	strb.w	r0, [r4, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_RESET;
 80021ea:	f884 00a1 	strb.w	r0, [r4, #161]	; 0xa1
}
 80021ee:	bd10      	pop	{r4, pc}

080021f0 <HAL_LTDC_ErrorCallback>:
 80021f0:	4770      	bx	lr

080021f2 <HAL_LTDC_ReloadEventCallback>:
{
 80021f2:	4770      	bx	lr

080021f4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80021f4:	6803      	ldr	r3, [r0, #0]
{
 80021f6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80021f8:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80021fa:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if(((isrflags & LTDC_ISR_TERRIF) != RESET) && ((itsources & LTDC_IER_TERRIE) != RESET))
 80021fc:	0772      	lsls	r2, r6, #29
{
 80021fe:	4604      	mov	r4, r0
  if(((isrflags & LTDC_ISR_TERRIF) != RESET) && ((itsources & LTDC_IER_TERRIE) != RESET))
 8002200:	d514      	bpl.n	800222c <HAL_LTDC_IRQHandler+0x38>
 8002202:	0769      	lsls	r1, r5, #29
 8002204:	d512      	bpl.n	800222c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8002206:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002208:	f022 0204 	bic.w	r2, r2, #4
 800220c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800220e:	2204      	movs	r2, #4
 8002210:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8002212:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8002216:	f043 0301 	orr.w	r3, r3, #1
 800221a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800221e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8002220:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8002224:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8002228:	f7ff ffe2 	bl	80021f0 <HAL_LTDC_ErrorCallback>
  if(((isrflags & LTDC_ISR_FUIF) != RESET) && ((itsources & LTDC_IER_FUIE) != RESET))
 800222c:	07b2      	lsls	r2, r6, #30
 800222e:	d516      	bpl.n	800225e <HAL_LTDC_IRQHandler+0x6a>
 8002230:	07ab      	lsls	r3, r5, #30
 8002232:	d514      	bpl.n	800225e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8002234:	6823      	ldr	r3, [r4, #0]
 8002236:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002238:	f022 0202 	bic.w	r2, r2, #2
 800223c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800223e:	2202      	movs	r2, #2
 8002240:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8002242:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8002246:	4313      	orrs	r3, r2
 8002248:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800224c:	2304      	movs	r3, #4
 800224e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8002252:	2300      	movs	r3, #0
 8002254:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8002258:	4620      	mov	r0, r4
 800225a:	f7ff ffc9 	bl	80021f0 <HAL_LTDC_ErrorCallback>
  if(((isrflags & LTDC_ISR_LIF) != RESET) && ((itsources & LTDC_IER_LIE) != RESET))
 800225e:	07f0      	lsls	r0, r6, #31
 8002260:	d510      	bpl.n	8002284 <HAL_LTDC_IRQHandler+0x90>
 8002262:	07e9      	lsls	r1, r5, #31
 8002264:	d50e      	bpl.n	8002284 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8002266:	6823      	ldr	r3, [r4, #0]
 8002268:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800226a:	f022 0201 	bic.w	r2, r2, #1
 800226e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8002270:	2201      	movs	r2, #1
 8002272:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8002274:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8002276:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800227a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800227e:	4620      	mov	r0, r4
 8002280:	f001 fd14 	bl	8003cac <HAL_LTDC_LineEventCallback>
  if(((isrflags & LTDC_ISR_RRIF) != RESET) && ((itsources & LTDC_IER_RRIE) != RESET))
 8002284:	0732      	lsls	r2, r6, #28
 8002286:	d511      	bpl.n	80022ac <HAL_LTDC_IRQHandler+0xb8>
 8002288:	072b      	lsls	r3, r5, #28
 800228a:	d50f      	bpl.n	80022ac <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800228c:	6823      	ldr	r3, [r4, #0]
 800228e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002290:	f022 0208 	bic.w	r2, r2, #8
 8002294:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8002296:	2208      	movs	r2, #8
 8002298:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800229a:	2301      	movs	r3, #1
 800229c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80022a0:	2300      	movs	r3, #0
 80022a2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80022a6:	4620      	mov	r0, r4
 80022a8:	f7ff ffa3 	bl	80021f2 <HAL_LTDC_ReloadEventCallback>
 80022ac:	bd70      	pop	{r4, r5, r6, pc}

080022ae <HAL_LTDC_ConfigLayer>:
{   
 80022ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 80022b0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80022b4:	2b01      	cmp	r3, #1
{   
 80022b6:	4606      	mov	r6, r0
 80022b8:	468e      	mov	lr, r1
 80022ba:	4694      	mov	ip, r2
 80022bc:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80022c0:	d01d      	beq.n	80022fe <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 80022c2:	2434      	movs	r4, #52	; 0x34
 80022c4:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80022c6:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 80022ca:	fb04 6402 	mla	r4, r4, r2, r6
 80022ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 80022d0:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 80022d2:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 80022d4:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;  
 80022d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022e2:	682b      	ldr	r3, [r5, #0]
 80022e4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80022e6:	4630      	mov	r0, r6
 80022e8:	4662      	mov	r2, ip
 80022ea:	4671      	mov	r1, lr
 80022ec:	f7ff fe82 	bl	8001ff4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80022f0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80022f2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80022f4:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80022f6:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80022fa:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80022fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08002300 <HAL_LTDC_ConfigColorKeying>:
  __HAL_LOCK(hltdc);
 8002300:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8002304:	2b01      	cmp	r3, #1
{
 8002306:	b510      	push	{r4, lr}
 8002308:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hltdc);
 800230c:	d013      	beq.n	8002336 <HAL_LTDC_ConfigColorKeying+0x36>
  LTDC_LAYER(hltdc, LayerIdx)->CKCR &=  ~(LTDC_LxCKCR_CKBLUE | LTDC_LxCKCR_CKGREEN | LTDC_LxCKCR_CKRED);
 800230e:	6804      	ldr	r4, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8002310:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->CKCR &=  ~(LTDC_LxCKCR_CKBLUE | LTDC_LxCKCR_CKGREEN | LTDC_LxCKCR_CKRED);
 8002314:	eb04 12c2 	add.w	r2, r4, r2, lsl #7
 8002318:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800231c:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002320:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8002324:	2301      	movs	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CKCR  = RGBValue;
 8002326:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800232a:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800232c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8002330:	2300      	movs	r3, #0
 8002332:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8002336:	4618      	mov	r0, r3
}
 8002338:	bd10      	pop	{r4, pc}

0800233a <HAL_LTDC_ConfigCLUT>:
{
 800233a:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 800233c:	f890 40a0 	ldrb.w	r4, [r0, #160]	; 0xa0
 8002340:	2c01      	cmp	r4, #1
 8002342:	f04f 0402 	mov.w	r4, #2
 8002346:	d031      	beq.n	80023ac <HAL_LTDC_ConfigCLUT+0x72>
 8002348:	2501      	movs	r5, #1
    LTDC_LAYER(hltdc, LayerIdx)->CLUTWR  = tmp;
 800234a:	01de      	lsls	r6, r3, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;  
 800234c:	f880 40a1 	strb.w	r4, [r0, #161]	; 0xa1
    if(hltdc->LayerCfg[LayerIdx].PixelFormat == LTDC_PIXEL_FORMAT_AL44)
 8002350:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 8002352:	f880 50a0 	strb.w	r5, [r0, #160]	; 0xa0
 8002356:	3684      	adds	r6, #132	; 0x84
  for(counter = 0U; (counter < CLUTSize); counter++)
 8002358:	2500      	movs	r5, #0
    if(hltdc->LayerCfg[LayerIdx].PixelFormat == LTDC_PIXEL_FORMAT_AL44)
 800235a:	fb04 0303 	mla	r3, r4, r3, r0
      tmp  = (((counter + 16U*counter) << 24U) | ((uint32_t)(*pCLUT) & 0xFFU) | ((uint32_t)(*pCLUT) & 0xFF00U) | ((uint32_t)(*pCLUT) & 0xFF0000U));
 800235e:	f04f 5e88 	mov.w	lr, #285212672	; 0x11000000
  for(counter = 0U; (counter < CLUTSize); counter++)
 8002362:	4295      	cmp	r5, r2
 8002364:	d107      	bne.n	8002376 <HAL_LTDC_ConfigCLUT+0x3c>
  hltdc->State = HAL_LTDC_STATE_READY; 
 8002366:	2301      	movs	r3, #1
 8002368:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);  
 800236c:	2300      	movs	r3, #0
 800236e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  return HAL_OK;
 8002372:	4618      	mov	r0, r3
 8002374:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if(hltdc->LayerCfg[LayerIdx].PixelFormat == LTDC_PIXEL_FORMAT_AL44)
 8002376:	6c9c      	ldr	r4, [r3, #72]	; 0x48
 8002378:	f851 7025 	ldr.w	r7, [r1, r5, lsl #2]
 800237c:	2c06      	cmp	r4, #6
      tmp  = (((counter + 16U*counter) << 24U) | ((uint32_t)(*pCLUT) & 0xFFU) | ((uint32_t)(*pCLUT) & 0xFF00U) | ((uint32_t)(*pCLUT) & 0xFF0000U));
 800237e:	bf03      	ittte	eq
 8002380:	b2fc      	uxtbeq	r4, r7
 8002382:	fb0e fc05 	muleq.w	ip, lr, r5
 8002386:	ea44 040c 	orreq.w	r4, r4, ip
      tmp  = ((counter << 24U) | ((uint32_t)(*pCLUT) & 0xFFU) | ((uint32_t)(*pCLUT) & 0xFF00U) | ((uint32_t)(*pCLUT) & 0xFF0000U));
 800238a:	b2bc      	uxthne	r4, r7
      tmp  = (((counter + 16U*counter) << 24U) | ((uint32_t)(*pCLUT) & 0xFFU) | ((uint32_t)(*pCLUT) & 0xFF00U) | ((uint32_t)(*pCLUT) & 0xFF0000U));
 800238c:	bf0c      	ite	eq
 800238e:	f407 4c7f 	andeq.w	ip, r7, #65280	; 0xff00
      tmp  = ((counter << 24U) | ((uint32_t)(*pCLUT) & 0xFFU) | ((uint32_t)(*pCLUT) & 0xFF00U) | ((uint32_t)(*pCLUT) & 0xFF0000U));
 8002392:	ea44 6405 	orrne.w	r4, r4, r5, lsl #24
 8002396:	f407 077f 	and.w	r7, r7, #16711680	; 0xff0000
      tmp  = (((counter + 16U*counter) << 24U) | ((uint32_t)(*pCLUT) & 0xFFU) | ((uint32_t)(*pCLUT) & 0xFF00U) | ((uint32_t)(*pCLUT) & 0xFF0000U));
 800239a:	bf08      	it	eq
 800239c:	ea44 040c 	orreq.w	r4, r4, ip
      tmp  = ((counter << 24U) | ((uint32_t)(*pCLUT) & 0xFFU) | ((uint32_t)(*pCLUT) & 0xFF00U) | ((uint32_t)(*pCLUT) & 0xFF0000U));
 80023a0:	433c      	orrs	r4, r7
    LTDC_LAYER(hltdc, LayerIdx)->CLUTWR  = tmp;
 80023a2:	6807      	ldr	r7, [r0, #0]
 80023a4:	4437      	add	r7, r6
  for(counter = 0U; (counter < CLUTSize); counter++)
 80023a6:	3501      	adds	r5, #1
    LTDC_LAYER(hltdc, LayerIdx)->CLUTWR  = tmp;
 80023a8:	643c      	str	r4, [r7, #64]	; 0x40
 80023aa:	e7da      	b.n	8002362 <HAL_LTDC_ConfigCLUT+0x28>
  __HAL_LOCK(hltdc);
 80023ac:	4620      	mov	r0, r4
}
 80023ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

080023b0 <HAL_LTDC_EnableColorKeying>:
  __HAL_LOCK(hltdc);
 80023b0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80023b4:	2b01      	cmp	r3, #1
 80023b6:	f04f 0302 	mov.w	r3, #2
 80023ba:	d00f      	beq.n	80023dc <HAL_LTDC_EnableColorKeying+0x2c>
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_COLKEN;
 80023bc:	01c9      	lsls	r1, r1, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80023be:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_COLKEN;
 80023c2:	3184      	adds	r1, #132	; 0x84
 80023c4:	6803      	ldr	r3, [r0, #0]
 80023c6:	585a      	ldr	r2, [r3, r1]
 80023c8:	f042 0202 	orr.w	r2, r2, #2
 80023cc:	505a      	str	r2, [r3, r1]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80023ce:	2201      	movs	r2, #1
 80023d0:	625a      	str	r2, [r3, #36]	; 0x24
  __HAL_UNLOCK(hltdc);
 80023d2:	2300      	movs	r3, #0
  hltdc->State = HAL_LTDC_STATE_READY; 
 80023d4:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80023d8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80023dc:	4618      	mov	r0, r3
}
 80023de:	4770      	bx	lr

080023e0 <HAL_LTDC_DisableColorKeying>:
  __HAL_LOCK(hltdc);
 80023e0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80023e4:	2b01      	cmp	r3, #1
 80023e6:	f04f 0302 	mov.w	r3, #2
 80023ea:	d00f      	beq.n	800240c <HAL_LTDC_DisableColorKeying+0x2c>
  LTDC_LAYER(hltdc, LayerIdx)->CR &= ~(uint32_t)LTDC_LxCR_COLKEN;
 80023ec:	01c9      	lsls	r1, r1, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80023ee:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->CR &= ~(uint32_t)LTDC_LxCR_COLKEN;
 80023f2:	3184      	adds	r1, #132	; 0x84
 80023f4:	6803      	ldr	r3, [r0, #0]
 80023f6:	585a      	ldr	r2, [r3, r1]
 80023f8:	f022 0202 	bic.w	r2, r2, #2
 80023fc:	505a      	str	r2, [r3, r1]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80023fe:	2201      	movs	r2, #1
 8002400:	625a      	str	r2, [r3, #36]	; 0x24
  __HAL_UNLOCK(hltdc);
 8002402:	2300      	movs	r3, #0
  hltdc->State = HAL_LTDC_STATE_READY; 
 8002404:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8002408:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800240c:	4618      	mov	r0, r3
}
 800240e:	4770      	bx	lr

08002410 <HAL_LTDC_SetWindowPosition>:
{
 8002410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 8002412:	f890 40a0 	ldrb.w	r4, [r0, #160]	; 0xa0
 8002416:	2c01      	cmp	r4, #1
{
 8002418:	4605      	mov	r5, r0
 800241a:	469e      	mov	lr, r3
 800241c:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hltdc);
 8002420:	d01d      	beq.n	800245e <HAL_LTDC_SetWindowPosition+0x4e>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8002422:	f880 40a1 	strb.w	r4, [r0, #161]	; 0xa1
  pLayerCfg->WindowX0 = X0;
 8002426:	2434      	movs	r4, #52	; 0x34
 8002428:	435c      	muls	r4, r3
 800242a:	1906      	adds	r6, r0, r4
  __HAL_LOCK(hltdc);
 800242c:	2701      	movs	r7, #1
  pLayerCfg->WindowX1 = X0 + pLayerCfg->ImageWidth;
 800242e:	6e33      	ldr	r3, [r6, #96]	; 0x60
  __HAL_LOCK(hltdc);
 8002430:	f880 70a0 	strb.w	r7, [r0, #160]	; 0xa0
  pLayerCfg->WindowX0 = X0;
 8002434:	63b1      	str	r1, [r6, #56]	; 0x38
  pLayerCfg->WindowX1 = X0 + pLayerCfg->ImageWidth;
 8002436:	4419      	add	r1, r3
 8002438:	63f1      	str	r1, [r6, #60]	; 0x3c
  pLayerCfg->WindowY1 = Y0 + pLayerCfg->ImageHeight;
 800243a:	6e71      	ldr	r1, [r6, #100]	; 0x64
  pLayerCfg->WindowY0 = Y0;
 800243c:	6432      	str	r2, [r6, #64]	; 0x40
  pLayerCfg->WindowY1 = Y0 + pLayerCfg->ImageHeight;
 800243e:	4411      	add	r1, r2
 8002440:	6471      	str	r1, [r6, #68]	; 0x44
  pLayerCfg = &hltdc->LayerCfg[LayerIdx];
 8002442:	f104 0138 	add.w	r1, r4, #56	; 0x38
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8002446:	4401      	add	r1, r0
 8002448:	4672      	mov	r2, lr
 800244a:	f7ff fdd3 	bl	8001ff4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800244e:	682b      	ldr	r3, [r5, #0]
  __HAL_UNLOCK(hltdc);
 8002450:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8002452:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8002454:	f885 70a1 	strb.w	r7, [r5, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8002458:	f885 00a0 	strb.w	r0, [r5, #160]	; 0xa0
  return HAL_OK;
 800245c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  __HAL_LOCK(hltdc);
 800245e:	4620      	mov	r0, r4
}
 8002460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08002462 <HAL_LTDC_SetAlpha>:
  __HAL_LOCK(hltdc);
 8002462:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8002466:	2b01      	cmp	r3, #1
{
 8002468:	b570      	push	{r4, r5, r6, lr}
 800246a:	f04f 0302 	mov.w	r3, #2
 800246e:	4604      	mov	r4, r0
  __HAL_LOCK(hltdc);
 8002470:	d015      	beq.n	800249e <HAL_LTDC_SetAlpha+0x3c>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8002472:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pLayerCfg->Alpha = Alpha;
 8002476:	2334      	movs	r3, #52	; 0x34
 8002478:	4353      	muls	r3, r2
 800247a:	18c6      	adds	r6, r0, r3
  __HAL_LOCK(hltdc);
 800247c:	2501      	movs	r5, #1
 800247e:	f880 50a0 	strb.w	r5, [r0, #160]	; 0xa0
  pLayerCfg->Alpha = Alpha;
 8002482:	64f1      	str	r1, [r6, #76]	; 0x4c
  pLayerCfg = &hltdc->LayerCfg[LayerIdx];
 8002484:	f103 0138 	add.w	r1, r3, #56	; 0x38
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8002488:	4401      	add	r1, r0
 800248a:	f7ff fdb3 	bl	8001ff4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800248e:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hltdc);
 8002490:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8002492:	625d      	str	r5, [r3, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8002494:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8002498:	f884 00a0 	strb.w	r0, [r4, #160]	; 0xa0
  return HAL_OK;
 800249c:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hltdc);
 800249e:	4618      	mov	r0, r3
}
 80024a0:	bd70      	pop	{r4, r5, r6, pc}

080024a2 <HAL_LTDC_SetAddress>:
  __HAL_LOCK(hltdc);
 80024a2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80024a6:	2b01      	cmp	r3, #1
{
 80024a8:	b570      	push	{r4, r5, r6, lr}
 80024aa:	f04f 0302 	mov.w	r3, #2
 80024ae:	4604      	mov	r4, r0
  __HAL_LOCK(hltdc);
 80024b0:	d015      	beq.n	80024de <HAL_LTDC_SetAddress+0x3c>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80024b2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pLayerCfg->FBStartAdress = Address;
 80024b6:	2334      	movs	r3, #52	; 0x34
 80024b8:	4353      	muls	r3, r2
 80024ba:	18c6      	adds	r6, r0, r3
  __HAL_LOCK(hltdc);
 80024bc:	2501      	movs	r5, #1
 80024be:	f880 50a0 	strb.w	r5, [r0, #160]	; 0xa0
  pLayerCfg->FBStartAdress = Address;
 80024c2:	65f1      	str	r1, [r6, #92]	; 0x5c
  pLayerCfg = &hltdc->LayerCfg[LayerIdx];
 80024c4:	f103 0138 	add.w	r1, r3, #56	; 0x38
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80024c8:	4401      	add	r1, r0
 80024ca:	f7ff fd93 	bl	8001ff4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80024ce:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hltdc);
 80024d0:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80024d2:	625d      	str	r5, [r3, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80024d4:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80024d8:	f884 00a0 	strb.w	r0, [r4, #160]	; 0xa0
  return HAL_OK;
 80024dc:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hltdc);
 80024de:	4618      	mov	r0, r3
}
 80024e0:	bd70      	pop	{r4, r5, r6, pc}
	...

080024e4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80024e4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80024e8:	2b01      	cmp	r3, #1
 80024ea:	f04f 0302 	mov.w	r3, #2
 80024ee:	d012      	beq.n	8002516 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80024f0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80024f4:	6803      	ldr	r3, [r0, #0]
 80024f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80024f8:	f022 0201 	bic.w	r2, r2, #1
 80024fc:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80024fe:	4a07      	ldr	r2, [pc, #28]	; (800251c <HAL_LTDC_ProgramLineEvent+0x38>)
 8002500:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8002502:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002504:	f042 0201 	orr.w	r2, r2, #1
 8002508:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800250a:	2301      	movs	r3, #1
 800250c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8002510:	2300      	movs	r3, #0
 8002512:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8002516:	4618      	mov	r0, r3
}
 8002518:	4770      	bx	lr
 800251a:	bf00      	nop
 800251c:	40016800 	.word	0x40016800

08002520 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8002520:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8002522:	2300      	movs	r3, #0
 8002524:	9301      	str	r3, [sp, #4]
 8002526:	4b18      	ldr	r3, [pc, #96]	; (8002588 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8002528:	4c18      	ldr	r4, [pc, #96]	; (800258c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800252a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800252c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002530:	641a      	str	r2, [r3, #64]	; 0x40
 8002532:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002534:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002538:	9301      	str	r3, [sp, #4]
 800253a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800253c:	4b14      	ldr	r3, [pc, #80]	; (8002590 <HAL_PWREx_EnableOverDrive+0x70>)
 800253e:	2201      	movs	r2, #1
 8002540:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8002542:	f7fe fdf9 	bl	8001138 <HAL_GetTick>
 8002546:	4605      	mov	r5, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8002548:	6863      	ldr	r3, [r4, #4]
 800254a:	03da      	lsls	r2, r3, #15
 800254c:	d50b      	bpl.n	8002566 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800254e:	4b11      	ldr	r3, [pc, #68]	; (8002594 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002550:	4c0e      	ldr	r4, [pc, #56]	; (800258c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8002552:	2201      	movs	r2, #1
 8002554:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8002556:	f7fe fdef 	bl	8001138 <HAL_GetTick>
 800255a:	4605      	mov	r5, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800255c:	6863      	ldr	r3, [r4, #4]
 800255e:	039b      	lsls	r3, r3, #14
 8002560:	d50a      	bpl.n	8002578 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8002562:	2000      	movs	r0, #0
 8002564:	e006      	b.n	8002574 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002566:	f7fe fde7 	bl	8001138 <HAL_GetTick>
 800256a:	1b40      	subs	r0, r0, r5
 800256c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002570:	d9ea      	bls.n	8002548 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8002572:	2003      	movs	r0, #3
}
 8002574:	b003      	add	sp, #12
 8002576:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002578:	f7fe fdde 	bl	8001138 <HAL_GetTick>
 800257c:	1b40      	subs	r0, r0, r5
 800257e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002582:	d9eb      	bls.n	800255c <HAL_PWREx_EnableOverDrive+0x3c>
 8002584:	e7f5      	b.n	8002572 <HAL_PWREx_EnableOverDrive+0x52>
 8002586:	bf00      	nop
 8002588:	40023800 	.word	0x40023800
 800258c:	40007000 	.word	0x40007000
 8002590:	420e0040 	.word	0x420e0040
 8002594:	420e0044 	.word	0x420e0044

08002598 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002598:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800259c:	4604      	mov	r4, r0
 800259e:	b918      	cbnz	r0, 80025a8 <HAL_RCC_OscConfig+0x10>
  {
    return HAL_ERROR;
 80025a0:	2001      	movs	r0, #1
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
}
 80025a2:	b002      	add	sp, #8
 80025a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80025a8:	6803      	ldr	r3, [r0, #0]
 80025aa:	07dd      	lsls	r5, r3, #31
 80025ac:	d410      	bmi.n	80025d0 <HAL_RCC_OscConfig+0x38>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80025ae:	6823      	ldr	r3, [r4, #0]
 80025b0:	0798      	lsls	r0, r3, #30
 80025b2:	d458      	bmi.n	8002666 <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80025b4:	6823      	ldr	r3, [r4, #0]
 80025b6:	071a      	lsls	r2, r3, #28
 80025b8:	f100 809a 	bmi.w	80026f0 <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80025bc:	6823      	ldr	r3, [r4, #0]
 80025be:	075b      	lsls	r3, r3, #29
 80025c0:	f100 80b8 	bmi.w	8002734 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80025c4:	69a2      	ldr	r2, [r4, #24]
 80025c6:	2a00      	cmp	r2, #0
 80025c8:	f040 8119 	bne.w	80027fe <HAL_RCC_OscConfig+0x266>
  return HAL_OK;
 80025cc:	2000      	movs	r0, #0
 80025ce:	e7e8      	b.n	80025a2 <HAL_RCC_OscConfig+0xa>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80025d0:	4ba6      	ldr	r3, [pc, #664]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 80025d2:	689a      	ldr	r2, [r3, #8]
 80025d4:	f002 020c 	and.w	r2, r2, #12
 80025d8:	2a04      	cmp	r2, #4
 80025da:	d007      	beq.n	80025ec <HAL_RCC_OscConfig+0x54>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80025dc:	689a      	ldr	r2, [r3, #8]
 80025de:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80025e2:	2a08      	cmp	r2, #8
 80025e4:	d10a      	bne.n	80025fc <HAL_RCC_OscConfig+0x64>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80025e6:	685b      	ldr	r3, [r3, #4]
 80025e8:	0259      	lsls	r1, r3, #9
 80025ea:	d507      	bpl.n	80025fc <HAL_RCC_OscConfig+0x64>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80025ec:	4b9f      	ldr	r3, [pc, #636]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	039a      	lsls	r2, r3, #14
 80025f2:	d5dc      	bpl.n	80025ae <HAL_RCC_OscConfig+0x16>
 80025f4:	6863      	ldr	r3, [r4, #4]
 80025f6:	2b00      	cmp	r3, #0
 80025f8:	d1d9      	bne.n	80025ae <HAL_RCC_OscConfig+0x16>
 80025fa:	e7d1      	b.n	80025a0 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80025fc:	6863      	ldr	r3, [r4, #4]
 80025fe:	4d9b      	ldr	r5, [pc, #620]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 8002600:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002604:	d111      	bne.n	800262a <HAL_RCC_OscConfig+0x92>
 8002606:	682b      	ldr	r3, [r5, #0]
 8002608:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800260c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800260e:	f7fe fd93 	bl	8001138 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002612:	4d96      	ldr	r5, [pc, #600]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8002614:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002616:	682b      	ldr	r3, [r5, #0]
 8002618:	039b      	lsls	r3, r3, #14
 800261a:	d4c8      	bmi.n	80025ae <HAL_RCC_OscConfig+0x16>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800261c:	f7fe fd8c 	bl	8001138 <HAL_GetTick>
 8002620:	1b80      	subs	r0, r0, r6
 8002622:	2864      	cmp	r0, #100	; 0x64
 8002624:	d9f7      	bls.n	8002616 <HAL_RCC_OscConfig+0x7e>
            return HAL_TIMEOUT;
 8002626:	2003      	movs	r0, #3
 8002628:	e7bb      	b.n	80025a2 <HAL_RCC_OscConfig+0xa>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800262a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800262e:	d104      	bne.n	800263a <HAL_RCC_OscConfig+0xa2>
 8002630:	682b      	ldr	r3, [r5, #0]
 8002632:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002636:	602b      	str	r3, [r5, #0]
 8002638:	e7e5      	b.n	8002606 <HAL_RCC_OscConfig+0x6e>
 800263a:	682a      	ldr	r2, [r5, #0]
 800263c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002640:	602a      	str	r2, [r5, #0]
 8002642:	682a      	ldr	r2, [r5, #0]
 8002644:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002648:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800264a:	2b00      	cmp	r3, #0
 800264c:	d1df      	bne.n	800260e <HAL_RCC_OscConfig+0x76>
        tickstart = HAL_GetTick();
 800264e:	f7fe fd73 	bl	8001138 <HAL_GetTick>
 8002652:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002654:	682b      	ldr	r3, [r5, #0]
 8002656:	039f      	lsls	r7, r3, #14
 8002658:	d5a9      	bpl.n	80025ae <HAL_RCC_OscConfig+0x16>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800265a:	f7fe fd6d 	bl	8001138 <HAL_GetTick>
 800265e:	1b80      	subs	r0, r0, r6
 8002660:	2864      	cmp	r0, #100	; 0x64
 8002662:	d9f7      	bls.n	8002654 <HAL_RCC_OscConfig+0xbc>
 8002664:	e7df      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8002666:	4b81      	ldr	r3, [pc, #516]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 8002668:	689a      	ldr	r2, [r3, #8]
 800266a:	f012 0f0c 	tst.w	r2, #12
 800266e:	d007      	beq.n	8002680 <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002670:	689a      	ldr	r2, [r3, #8]
 8002672:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8002676:	2a08      	cmp	r2, #8
 8002678:	d111      	bne.n	800269e <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800267a:	685b      	ldr	r3, [r3, #4]
 800267c:	025e      	lsls	r6, r3, #9
 800267e:	d40e      	bmi.n	800269e <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002680:	4b7a      	ldr	r3, [pc, #488]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 8002682:	681a      	ldr	r2, [r3, #0]
 8002684:	0795      	lsls	r5, r2, #30
 8002686:	d502      	bpl.n	800268e <HAL_RCC_OscConfig+0xf6>
 8002688:	68e2      	ldr	r2, [r4, #12]
 800268a:	2a01      	cmp	r2, #1
 800268c:	d188      	bne.n	80025a0 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800268e:	681a      	ldr	r2, [r3, #0]
 8002690:	6921      	ldr	r1, [r4, #16]
 8002692:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8002696:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800269a:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800269c:	e78a      	b.n	80025b4 <HAL_RCC_OscConfig+0x1c>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800269e:	68e2      	ldr	r2, [r4, #12]
 80026a0:	4b73      	ldr	r3, [pc, #460]	; (8002870 <HAL_RCC_OscConfig+0x2d8>)
 80026a2:	b1b2      	cbz	r2, 80026d2 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 80026a4:	2201      	movs	r2, #1
 80026a6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80026a8:	f7fe fd46 	bl	8001138 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80026ac:	4d6f      	ldr	r5, [pc, #444]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80026ae:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80026b0:	682b      	ldr	r3, [r5, #0]
 80026b2:	0798      	lsls	r0, r3, #30
 80026b4:	d507      	bpl.n	80026c6 <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80026b6:	682b      	ldr	r3, [r5, #0]
 80026b8:	6922      	ldr	r2, [r4, #16]
 80026ba:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80026be:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80026c2:	602b      	str	r3, [r5, #0]
 80026c4:	e776      	b.n	80025b4 <HAL_RCC_OscConfig+0x1c>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80026c6:	f7fe fd37 	bl	8001138 <HAL_GetTick>
 80026ca:	1b80      	subs	r0, r0, r6
 80026cc:	2802      	cmp	r0, #2
 80026ce:	d9ef      	bls.n	80026b0 <HAL_RCC_OscConfig+0x118>
 80026d0:	e7a9      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
        __HAL_RCC_HSI_DISABLE();
 80026d2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80026d4:	f7fe fd30 	bl	8001138 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80026d8:	4d64      	ldr	r5, [pc, #400]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80026da:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80026dc:	682b      	ldr	r3, [r5, #0]
 80026de:	0799      	lsls	r1, r3, #30
 80026e0:	f57f af68 	bpl.w	80025b4 <HAL_RCC_OscConfig+0x1c>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80026e4:	f7fe fd28 	bl	8001138 <HAL_GetTick>
 80026e8:	1b80      	subs	r0, r0, r6
 80026ea:	2802      	cmp	r0, #2
 80026ec:	d9f6      	bls.n	80026dc <HAL_RCC_OscConfig+0x144>
 80026ee:	e79a      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80026f0:	6962      	ldr	r2, [r4, #20]
 80026f2:	4b60      	ldr	r3, [pc, #384]	; (8002874 <HAL_RCC_OscConfig+0x2dc>)
 80026f4:	b17a      	cbz	r2, 8002716 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80026f6:	2201      	movs	r2, #1
 80026f8:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80026fa:	f7fe fd1d 	bl	8001138 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80026fe:	4d5b      	ldr	r5, [pc, #364]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8002700:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002702:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8002704:	079f      	lsls	r7, r3, #30
 8002706:	f53f af59 	bmi.w	80025bc <HAL_RCC_OscConfig+0x24>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800270a:	f7fe fd15 	bl	8001138 <HAL_GetTick>
 800270e:	1b80      	subs	r0, r0, r6
 8002710:	2802      	cmp	r0, #2
 8002712:	d9f6      	bls.n	8002702 <HAL_RCC_OscConfig+0x16a>
 8002714:	e787      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
      __HAL_RCC_LSI_DISABLE();
 8002716:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8002718:	f7fe fd0e 	bl	8001138 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800271c:	4d53      	ldr	r5, [pc, #332]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 800271e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002720:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8002722:	0798      	lsls	r0, r3, #30
 8002724:	f57f af4a 	bpl.w	80025bc <HAL_RCC_OscConfig+0x24>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002728:	f7fe fd06 	bl	8001138 <HAL_GetTick>
 800272c:	1b80      	subs	r0, r0, r6
 800272e:	2802      	cmp	r0, #2
 8002730:	d9f6      	bls.n	8002720 <HAL_RCC_OscConfig+0x188>
 8002732:	e778      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002734:	4b4d      	ldr	r3, [pc, #308]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 8002736:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002738:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800273c:	d128      	bne.n	8002790 <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 800273e:	9201      	str	r2, [sp, #4]
 8002740:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002742:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002746:	641a      	str	r2, [r3, #64]	; 0x40
 8002748:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800274a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800274e:	9301      	str	r3, [sp, #4]
 8002750:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8002752:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002754:	4d48      	ldr	r5, [pc, #288]	; (8002878 <HAL_RCC_OscConfig+0x2e0>)
 8002756:	682b      	ldr	r3, [r5, #0]
 8002758:	05d9      	lsls	r1, r3, #23
 800275a:	d51b      	bpl.n	8002794 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800275c:	68a3      	ldr	r3, [r4, #8]
 800275e:	4d43      	ldr	r5, [pc, #268]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 8002760:	2b01      	cmp	r3, #1
 8002762:	d127      	bne.n	80027b4 <HAL_RCC_OscConfig+0x21c>
 8002764:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8002766:	f043 0301 	orr.w	r3, r3, #1
 800276a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800276c:	f7fe fce4 	bl	8001138 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002770:	4d3e      	ldr	r5, [pc, #248]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8002772:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002774:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002778:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800277a:	079b      	lsls	r3, r3, #30
 800277c:	d539      	bpl.n	80027f2 <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 800277e:	2e00      	cmp	r6, #0
 8002780:	f43f af20 	beq.w	80025c4 <HAL_RCC_OscConfig+0x2c>
      __HAL_RCC_PWR_CLK_DISABLE();
 8002784:	4a39      	ldr	r2, [pc, #228]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 8002786:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8002788:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800278c:	6413      	str	r3, [r2, #64]	; 0x40
 800278e:	e719      	b.n	80025c4 <HAL_RCC_OscConfig+0x2c>
    FlagStatus       pwrclkchanged = RESET;
 8002790:	2600      	movs	r6, #0
 8002792:	e7df      	b.n	8002754 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002794:	682b      	ldr	r3, [r5, #0]
 8002796:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800279a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800279c:	f7fe fccc 	bl	8001138 <HAL_GetTick>
 80027a0:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80027a2:	682b      	ldr	r3, [r5, #0]
 80027a4:	05da      	lsls	r2, r3, #23
 80027a6:	d4d9      	bmi.n	800275c <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80027a8:	f7fe fcc6 	bl	8001138 <HAL_GetTick>
 80027ac:	1bc0      	subs	r0, r0, r7
 80027ae:	2802      	cmp	r0, #2
 80027b0:	d9f7      	bls.n	80027a2 <HAL_RCC_OscConfig+0x20a>
 80027b2:	e738      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80027b4:	2b05      	cmp	r3, #5
 80027b6:	d104      	bne.n	80027c2 <HAL_RCC_OscConfig+0x22a>
 80027b8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80027ba:	f043 0304 	orr.w	r3, r3, #4
 80027be:	672b      	str	r3, [r5, #112]	; 0x70
 80027c0:	e7d0      	b.n	8002764 <HAL_RCC_OscConfig+0x1cc>
 80027c2:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80027c4:	f022 0201 	bic.w	r2, r2, #1
 80027c8:	672a      	str	r2, [r5, #112]	; 0x70
 80027ca:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80027cc:	f022 0204 	bic.w	r2, r2, #4
 80027d0:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80027d2:	2b00      	cmp	r3, #0
 80027d4:	d1ca      	bne.n	800276c <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 80027d6:	f7fe fcaf 	bl	8001138 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80027da:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80027de:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80027e0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80027e2:	0798      	lsls	r0, r3, #30
 80027e4:	d5cb      	bpl.n	800277e <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80027e6:	f7fe fca7 	bl	8001138 <HAL_GetTick>
 80027ea:	1bc0      	subs	r0, r0, r7
 80027ec:	4540      	cmp	r0, r8
 80027ee:	d9f7      	bls.n	80027e0 <HAL_RCC_OscConfig+0x248>
 80027f0:	e719      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80027f2:	f7fe fca1 	bl	8001138 <HAL_GetTick>
 80027f6:	1bc0      	subs	r0, r0, r7
 80027f8:	4540      	cmp	r0, r8
 80027fa:	d9bd      	bls.n	8002778 <HAL_RCC_OscConfig+0x1e0>
 80027fc:	e713      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80027fe:	4d1b      	ldr	r5, [pc, #108]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
 8002800:	68ab      	ldr	r3, [r5, #8]
 8002802:	f003 030c 	and.w	r3, r3, #12
 8002806:	2b08      	cmp	r3, #8
 8002808:	f43f aeca 	beq.w	80025a0 <HAL_RCC_OscConfig+0x8>
 800280c:	4e1b      	ldr	r6, [pc, #108]	; (800287c <HAL_RCC_OscConfig+0x2e4>)
 800280e:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002810:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 8002812:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002814:	d134      	bne.n	8002880 <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 8002816:	f7fe fc8f 	bl	8001138 <HAL_GetTick>
 800281a:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800281c:	682b      	ldr	r3, [r5, #0]
 800281e:	0199      	lsls	r1, r3, #6
 8002820:	d41e      	bmi.n	8002860 <HAL_RCC_OscConfig+0x2c8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8002822:	6a22      	ldr	r2, [r4, #32]
 8002824:	69e3      	ldr	r3, [r4, #28]
 8002826:	4313      	orrs	r3, r2
 8002828:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800282a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800282e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002830:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8002834:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002836:	4c0d      	ldr	r4, [pc, #52]	; (800286c <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8002838:	0852      	lsrs	r2, r2, #1
 800283a:	3a01      	subs	r2, #1
 800283c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002840:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8002842:	2301      	movs	r3, #1
 8002844:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8002846:	f7fe fc77 	bl	8001138 <HAL_GetTick>
 800284a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800284c:	6823      	ldr	r3, [r4, #0]
 800284e:	019a      	lsls	r2, r3, #6
 8002850:	f53f aebc 	bmi.w	80025cc <HAL_RCC_OscConfig+0x34>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002854:	f7fe fc70 	bl	8001138 <HAL_GetTick>
 8002858:	1b40      	subs	r0, r0, r5
 800285a:	2802      	cmp	r0, #2
 800285c:	d9f6      	bls.n	800284c <HAL_RCC_OscConfig+0x2b4>
 800285e:	e6e2      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002860:	f7fe fc6a 	bl	8001138 <HAL_GetTick>
 8002864:	1bc0      	subs	r0, r0, r7
 8002866:	2802      	cmp	r0, #2
 8002868:	d9d8      	bls.n	800281c <HAL_RCC_OscConfig+0x284>
 800286a:	e6dc      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
 800286c:	40023800 	.word	0x40023800
 8002870:	42470000 	.word	0x42470000
 8002874:	42470e80 	.word	0x42470e80
 8002878:	40007000 	.word	0x40007000
 800287c:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 8002880:	f7fe fc5a 	bl	8001138 <HAL_GetTick>
 8002884:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002886:	682b      	ldr	r3, [r5, #0]
 8002888:	019b      	lsls	r3, r3, #6
 800288a:	f57f ae9f 	bpl.w	80025cc <HAL_RCC_OscConfig+0x34>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800288e:	f7fe fc53 	bl	8001138 <HAL_GetTick>
 8002892:	1b00      	subs	r0, r0, r4
 8002894:	2802      	cmp	r0, #2
 8002896:	d9f6      	bls.n	8002886 <HAL_RCC_OscConfig+0x2ee>
 8002898:	e6c5      	b.n	8002626 <HAL_RCC_OscConfig+0x8e>
 800289a:	bf00      	nop

0800289c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800289c:	4913      	ldr	r1, [pc, #76]	; (80028ec <HAL_RCC_GetSysClockFreq+0x50>)
{
 800289e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80028a0:	688b      	ldr	r3, [r1, #8]
 80028a2:	f003 030c 	and.w	r3, r3, #12
 80028a6:	2b04      	cmp	r3, #4
 80028a8:	d003      	beq.n	80028b2 <HAL_RCC_GetSysClockFreq+0x16>
 80028aa:	2b08      	cmp	r3, #8
 80028ac:	d003      	beq.n	80028b6 <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80028ae:	4810      	ldr	r0, [pc, #64]	; (80028f0 <HAL_RCC_GetSysClockFreq+0x54>)
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80028b0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSE_VALUE;
 80028b2:	4810      	ldr	r0, [pc, #64]	; (80028f4 <HAL_RCC_GetSysClockFreq+0x58>)
 80028b4:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80028b6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80028b8:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80028ba:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80028bc:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80028c0:	bf14      	ite	ne
 80028c2:	480c      	ldrne	r0, [pc, #48]	; (80028f4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80028c4:	480a      	ldreq	r0, [pc, #40]	; (80028f0 <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80028c6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80028ca:	bf18      	it	ne
 80028cc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80028ce:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80028d2:	fba1 0100 	umull	r0, r1, r1, r0
 80028d6:	f7fd fc91 	bl	80001fc <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80028da:	4b04      	ldr	r3, [pc, #16]	; (80028ec <HAL_RCC_GetSysClockFreq+0x50>)
 80028dc:	685b      	ldr	r3, [r3, #4]
 80028de:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80028e2:	3301      	adds	r3, #1
 80028e4:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 80028e6:	fbb0 f0f3 	udiv	r0, r0, r3
 80028ea:	bd08      	pop	{r3, pc}
 80028ec:	40023800 	.word	0x40023800
 80028f0:	00f42400 	.word	0x00f42400
 80028f4:	007a1200 	.word	0x007a1200

080028f8 <HAL_RCC_ClockConfig>:
{
 80028f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80028fc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80028fe:	4604      	mov	r4, r0
 8002900:	b910      	cbnz	r0, 8002908 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8002902:	2001      	movs	r0, #1
 8002904:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002908:	4b44      	ldr	r3, [pc, #272]	; (8002a1c <HAL_RCC_ClockConfig+0x124>)
 800290a:	681a      	ldr	r2, [r3, #0]
 800290c:	f002 020f 	and.w	r2, r2, #15
 8002910:	428a      	cmp	r2, r1
 8002912:	d328      	bcc.n	8002966 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002914:	6821      	ldr	r1, [r4, #0]
 8002916:	078f      	lsls	r7, r1, #30
 8002918:	d42d      	bmi.n	8002976 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800291a:	07c8      	lsls	r0, r1, #31
 800291c:	d440      	bmi.n	80029a0 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800291e:	4b3f      	ldr	r3, [pc, #252]	; (8002a1c <HAL_RCC_ClockConfig+0x124>)
 8002920:	681a      	ldr	r2, [r3, #0]
 8002922:	f002 020f 	and.w	r2, r2, #15
 8002926:	4295      	cmp	r5, r2
 8002928:	d366      	bcc.n	80029f8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800292a:	6822      	ldr	r2, [r4, #0]
 800292c:	0751      	lsls	r1, r2, #29
 800292e:	d46c      	bmi.n	8002a0a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002930:	0713      	lsls	r3, r2, #28
 8002932:	d507      	bpl.n	8002944 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8002934:	4a3a      	ldr	r2, [pc, #232]	; (8002a20 <HAL_RCC_ClockConfig+0x128>)
 8002936:	6921      	ldr	r1, [r4, #16]
 8002938:	6893      	ldr	r3, [r2, #8]
 800293a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800293e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002942:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002944:	f7ff ffaa 	bl	800289c <HAL_RCC_GetSysClockFreq>
 8002948:	4b35      	ldr	r3, [pc, #212]	; (8002a20 <HAL_RCC_ClockConfig+0x128>)
 800294a:	4a36      	ldr	r2, [pc, #216]	; (8002a24 <HAL_RCC_ClockConfig+0x12c>)
 800294c:	689b      	ldr	r3, [r3, #8]
 800294e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8002952:	5cd3      	ldrb	r3, [r2, r3]
 8002954:	40d8      	lsrs	r0, r3
 8002956:	4b34      	ldr	r3, [pc, #208]	; (8002a28 <HAL_RCC_ClockConfig+0x130>)
 8002958:	6018      	str	r0, [r3, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 800295a:	2000      	movs	r0, #0
 800295c:	f7fe fba2 	bl	80010a4 <HAL_InitTick>
  return HAL_OK;
 8002960:	2000      	movs	r0, #0
 8002962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002966:	b2ca      	uxtb	r2, r1
 8002968:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800296a:	681b      	ldr	r3, [r3, #0]
 800296c:	f003 030f 	and.w	r3, r3, #15
 8002970:	4299      	cmp	r1, r3
 8002972:	d1c6      	bne.n	8002902 <HAL_RCC_ClockConfig+0xa>
 8002974:	e7ce      	b.n	8002914 <HAL_RCC_ClockConfig+0x1c>
 8002976:	4b2a      	ldr	r3, [pc, #168]	; (8002a20 <HAL_RCC_ClockConfig+0x128>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002978:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800297c:	bf1e      	ittt	ne
 800297e:	689a      	ldrne	r2, [r3, #8]
 8002980:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8002984:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002986:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8002988:	bf42      	ittt	mi
 800298a:	689a      	ldrmi	r2, [r3, #8]
 800298c:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 8002990:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002992:	689a      	ldr	r2, [r3, #8]
 8002994:	68a0      	ldr	r0, [r4, #8]
 8002996:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800299a:	4302      	orrs	r2, r0
 800299c:	609a      	str	r2, [r3, #8]
 800299e:	e7bc      	b.n	800291a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80029a0:	6862      	ldr	r2, [r4, #4]
 80029a2:	4b1f      	ldr	r3, [pc, #124]	; (8002a20 <HAL_RCC_ClockConfig+0x128>)
 80029a4:	2a01      	cmp	r2, #1
 80029a6:	d11d      	bne.n	80029e4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80029ae:	d0a8      	beq.n	8002902 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80029b0:	4e1b      	ldr	r6, [pc, #108]	; (8002a20 <HAL_RCC_ClockConfig+0x128>)
 80029b2:	68b3      	ldr	r3, [r6, #8]
 80029b4:	f023 0303 	bic.w	r3, r3, #3
 80029b8:	4313      	orrs	r3, r2
 80029ba:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80029bc:	f7fe fbbc 	bl	8001138 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80029c0:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80029c4:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80029c6:	68b3      	ldr	r3, [r6, #8]
 80029c8:	6862      	ldr	r2, [r4, #4]
 80029ca:	f003 030c 	and.w	r3, r3, #12
 80029ce:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80029d2:	d0a4      	beq.n	800291e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80029d4:	f7fe fbb0 	bl	8001138 <HAL_GetTick>
 80029d8:	1bc0      	subs	r0, r0, r7
 80029da:	4540      	cmp	r0, r8
 80029dc:	d9f3      	bls.n	80029c6 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 80029de:	2003      	movs	r0, #3
}
 80029e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80029e4:	1e91      	subs	r1, r2, #2
 80029e6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80029e8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80029ea:	d802      	bhi.n	80029f2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80029ec:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80029f0:	e7dd      	b.n	80029ae <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80029f2:	f013 0f02 	tst.w	r3, #2
 80029f6:	e7da      	b.n	80029ae <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80029f8:	b2ea      	uxtb	r2, r5
 80029fa:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	f003 030f 	and.w	r3, r3, #15
 8002a02:	429d      	cmp	r5, r3
 8002a04:	f47f af7d 	bne.w	8002902 <HAL_RCC_ClockConfig+0xa>
 8002a08:	e78f      	b.n	800292a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002a0a:	4905      	ldr	r1, [pc, #20]	; (8002a20 <HAL_RCC_ClockConfig+0x128>)
 8002a0c:	68e0      	ldr	r0, [r4, #12]
 8002a0e:	688b      	ldr	r3, [r1, #8]
 8002a10:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8002a14:	4303      	orrs	r3, r0
 8002a16:	608b      	str	r3, [r1, #8]
 8002a18:	e78a      	b.n	8002930 <HAL_RCC_ClockConfig+0x38>
 8002a1a:	bf00      	nop
 8002a1c:	40023c00 	.word	0x40023c00
 8002a20:	40023800 	.word	0x40023800
 8002a24:	0801d034 	.word	0x0801d034
 8002a28:	20000304 	.word	0x20000304

08002a2c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8002a2c:	4b04      	ldr	r3, [pc, #16]	; (8002a40 <HAL_RCC_GetPCLK1Freq+0x14>)
 8002a2e:	4a05      	ldr	r2, [pc, #20]	; (8002a44 <HAL_RCC_GetPCLK1Freq+0x18>)
 8002a30:	689b      	ldr	r3, [r3, #8]
 8002a32:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8002a36:	5cd3      	ldrb	r3, [r2, r3]
 8002a38:	4a03      	ldr	r2, [pc, #12]	; (8002a48 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8002a3a:	6810      	ldr	r0, [r2, #0]
}
 8002a3c:	40d8      	lsrs	r0, r3
 8002a3e:	4770      	bx	lr
 8002a40:	40023800 	.word	0x40023800
 8002a44:	0801d044 	.word	0x0801d044
 8002a48:	20000304 	.word	0x20000304

08002a4c <HAL_RCCEx_PeriphCLKConfig>:

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8002a4c:	6803      	ldr	r3, [r0, #0]
{
 8002a4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8002a50:	079a      	lsls	r2, r3, #30
{
 8002a52:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8002a54:	f040 8088 	bne.w	8002b68 <HAL_RCCEx_PeriphCLKConfig+0x11c>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8002a58:	6823      	ldr	r3, [r4, #0]
 8002a5a:	f013 0f0c 	tst.w	r3, #12
 8002a5e:	d044      	beq.n	8002aea <HAL_RCCEx_PeriphCLKConfig+0x9e>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8002a60:	4d80      	ldr	r5, [pc, #512]	; (8002c64 <HAL_RCCEx_PeriphCLKConfig+0x218>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002a62:	4e81      	ldr	r6, [pc, #516]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8002a64:	2300      	movs	r3, #0
 8002a66:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8002a68:	f7fe fb66 	bl	8001138 <HAL_GetTick>
 8002a6c:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002a6e:	6833      	ldr	r3, [r6, #0]
 8002a70:	009b      	lsls	r3, r3, #2
 8002a72:	f100 80bd 	bmi.w	8002bf0 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8002a76:	6821      	ldr	r1, [r4, #0]
 8002a78:	074f      	lsls	r7, r1, #29
 8002a7a:	d515      	bpl.n	8002aa8 <HAL_RCCEx_PeriphCLKConfig+0x5c>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8002a7c:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8002a7e:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8002a82:	6920      	ldr	r0, [r4, #16]
 8002a84:	061b      	lsls	r3, r3, #24
 8002a86:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8002a8a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8002a8e:	4313      	orrs	r3, r2
 8002a90:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8002a94:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8002a98:	6a22      	ldr	r2, [r4, #32]
 8002a9a:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8002a9e:	3a01      	subs	r2, #1
 8002aa0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8002aa4:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8002aa8:	070e      	lsls	r6, r1, #28
 8002aaa:	d514      	bpl.n	8002ad6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002aac:	4a6e      	ldr	r2, [pc, #440]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8002aae:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002ab0:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8002ab4:	6920      	ldr	r0, [r4, #16]
 8002ab6:	071b      	lsls	r3, r3, #28
 8002ab8:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8002abc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8002ac0:	430b      	orrs	r3, r1
 8002ac2:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8002ac6:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8002aca:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8002acc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8002ad0:	430b      	orrs	r3, r1
 8002ad2:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8002ad6:	2301      	movs	r3, #1
 8002ad8:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8002ada:	f7fe fb2d 	bl	8001138 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002ade:	4d62      	ldr	r5, [pc, #392]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
    tickstart = HAL_GetTick();
 8002ae0:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002ae2:	682b      	ldr	r3, [r5, #0]
 8002ae4:	0098      	lsls	r0, r3, #2
 8002ae6:	f140 808a 	bpl.w	8002bfe <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8002aea:	6823      	ldr	r3, [r4, #0]
 8002aec:	069a      	lsls	r2, r3, #26
 8002aee:	d531      	bpl.n	8002b54 <HAL_RCCEx_PeriphCLKConfig+0x108>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8002af0:	2300      	movs	r3, #0
 8002af2:	9301      	str	r3, [sp, #4]
 8002af4:	4b5c      	ldr	r3, [pc, #368]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8002af6:	4d5d      	ldr	r5, [pc, #372]	; (8002c6c <HAL_RCCEx_PeriphCLKConfig+0x220>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8002af8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002afa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002afe:	641a      	str	r2, [r3, #64]	; 0x40
 8002b00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b02:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002b06:	9301      	str	r3, [sp, #4]
 8002b08:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8002b0a:	682b      	ldr	r3, [r5, #0]
 8002b0c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002b10:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8002b12:	f7fe fb11 	bl	8001138 <HAL_GetTick>
 8002b16:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8002b18:	682b      	ldr	r3, [r5, #0]
 8002b1a:	05d9      	lsls	r1, r3, #23
 8002b1c:	d576      	bpl.n	8002c0c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8002b1e:	4d52      	ldr	r5, [pc, #328]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
 8002b20:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8002b22:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8002b26:	d177      	bne.n	8002c18 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002b28:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002b2a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8002b2e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8002b32:	4a4d      	ldr	r2, [pc, #308]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
 8002b34:	f040 8091 	bne.w	8002c5a <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8002b38:	6891      	ldr	r1, [r2, #8]
 8002b3a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8002b3e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8002b42:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8002b46:	4301      	orrs	r1, r0
 8002b48:	6091      	str	r1, [r2, #8]
 8002b4a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8002b4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002b50:	430b      	orrs	r3, r1
 8002b52:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8002b54:	6820      	ldr	r0, [r4, #0]
 8002b56:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8002b5a:	bf1f      	itttt	ne
 8002b5c:	4b44      	ldrne	r3, [pc, #272]	; (8002c70 <HAL_RCCEx_PeriphCLKConfig+0x224>)
 8002b5e:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8002b62:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 8002b64:	2000      	movne	r0, #0
 8002b66:	e041      	b.n	8002bec <HAL_RCCEx_PeriphCLKConfig+0x1a0>
    __HAL_RCC_PLLI2S_DISABLE();
 8002b68:	4d42      	ldr	r5, [pc, #264]	; (8002c74 <HAL_RCCEx_PeriphCLKConfig+0x228>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002b6a:	4e3f      	ldr	r6, [pc, #252]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8002b6c:	2300      	movs	r3, #0
 8002b6e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8002b70:	f7fe fae2 	bl	8001138 <HAL_GetTick>
 8002b74:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8002b76:	6833      	ldr	r3, [r6, #0]
 8002b78:	011b      	lsls	r3, r3, #4
 8002b7a:	d431      	bmi.n	8002be0 <HAL_RCCEx_PeriphCLKConfig+0x194>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8002b7c:	6822      	ldr	r2, [r4, #0]
 8002b7e:	07d7      	lsls	r7, r2, #31
 8002b80:	d506      	bpl.n	8002b90 <HAL_RCCEx_PeriphCLKConfig+0x144>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8002b82:	68a3      	ldr	r3, [r4, #8]
 8002b84:	6861      	ldr	r1, [r4, #4]
 8002b86:	071b      	lsls	r3, r3, #28
 8002b88:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8002b8c:	f8c6 3084 	str.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8002b90:	0790      	lsls	r0, r2, #30
 8002b92:	d515      	bpl.n	8002bc0 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002b94:	4a34      	ldr	r2, [pc, #208]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8002b96:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002b98:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8002b9c:	6860      	ldr	r0, [r4, #4]
 8002b9e:	061b      	lsls	r3, r3, #24
 8002ba0:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8002ba4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8002ba8:	430b      	orrs	r3, r1
 8002baa:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8002bae:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 8002bb2:	69e3      	ldr	r3, [r4, #28]
 8002bb4:	f021 011f 	bic.w	r1, r1, #31
 8002bb8:	3b01      	subs	r3, #1
 8002bba:	430b      	orrs	r3, r1
 8002bbc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLI2S_ENABLE();
 8002bc0:	2301      	movs	r3, #1
 8002bc2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8002bc4:	f7fe fab8 	bl	8001138 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002bc8:	4d27      	ldr	r5, [pc, #156]	; (8002c68 <HAL_RCCEx_PeriphCLKConfig+0x21c>)
    tickstart = HAL_GetTick();
 8002bca:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002bcc:	682b      	ldr	r3, [r5, #0]
 8002bce:	0119      	lsls	r1, r3, #4
 8002bd0:	f53f af42 	bmi.w	8002a58 <HAL_RCCEx_PeriphCLKConfig+0xc>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8002bd4:	f7fe fab0 	bl	8001138 <HAL_GetTick>
 8002bd8:	1b80      	subs	r0, r0, r6
 8002bda:	2802      	cmp	r0, #2
 8002bdc:	d9f6      	bls.n	8002bcc <HAL_RCCEx_PeriphCLKConfig+0x180>
 8002bde:	e004      	b.n	8002bea <HAL_RCCEx_PeriphCLKConfig+0x19e>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8002be0:	f7fe faaa 	bl	8001138 <HAL_GetTick>
 8002be4:	1bc0      	subs	r0, r0, r7
 8002be6:	2802      	cmp	r0, #2
 8002be8:	d9c5      	bls.n	8002b76 <HAL_RCCEx_PeriphCLKConfig+0x12a>
        return HAL_TIMEOUT;
 8002bea:	2003      	movs	r0, #3
}
 8002bec:	b003      	add	sp, #12
 8002bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8002bf0:	f7fe faa2 	bl	8001138 <HAL_GetTick>
 8002bf4:	1bc0      	subs	r0, r0, r7
 8002bf6:	2802      	cmp	r0, #2
 8002bf8:	f67f af39 	bls.w	8002a6e <HAL_RCCEx_PeriphCLKConfig+0x22>
 8002bfc:	e7f5      	b.n	8002bea <HAL_RCCEx_PeriphCLKConfig+0x19e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8002bfe:	f7fe fa9b 	bl	8001138 <HAL_GetTick>
 8002c02:	1b80      	subs	r0, r0, r6
 8002c04:	2802      	cmp	r0, #2
 8002c06:	f67f af6c 	bls.w	8002ae2 <HAL_RCCEx_PeriphCLKConfig+0x96>
 8002c0a:	e7ee      	b.n	8002bea <HAL_RCCEx_PeriphCLKConfig+0x19e>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8002c0c:	f7fe fa94 	bl	8001138 <HAL_GetTick>
 8002c10:	1b80      	subs	r0, r0, r6
 8002c12:	2802      	cmp	r0, #2
 8002c14:	d980      	bls.n	8002b18 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8002c16:	e7e8      	b.n	8002bea <HAL_RCCEx_PeriphCLKConfig+0x19e>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8002c18:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002c1a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8002c1e:	4293      	cmp	r3, r2
 8002c20:	d082      	beq.n	8002b28 <HAL_RCCEx_PeriphCLKConfig+0xdc>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8002c22:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8002c24:	4a14      	ldr	r2, [pc, #80]	; (8002c78 <HAL_RCCEx_PeriphCLKConfig+0x22c>)
 8002c26:	2101      	movs	r1, #1
 8002c28:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8002c2a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8002c2e:	2100      	movs	r1, #0
 8002c30:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 8002c32:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8002c34:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8002c36:	07da      	lsls	r2, r3, #31
 8002c38:	f57f af76 	bpl.w	8002b28 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        tickstart = HAL_GetTick();
 8002c3c:	f7fe fa7c 	bl	8001138 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002c40:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8002c44:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002c46:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8002c48:	079b      	lsls	r3, r3, #30
 8002c4a:	f53f af6d 	bmi.w	8002b28 <HAL_RCCEx_PeriphCLKConfig+0xdc>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002c4e:	f7fe fa73 	bl	8001138 <HAL_GetTick>
 8002c52:	1b80      	subs	r0, r0, r6
 8002c54:	42b8      	cmp	r0, r7
 8002c56:	d9f6      	bls.n	8002c46 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8002c58:	e7c7      	b.n	8002bea <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002c5a:	6891      	ldr	r1, [r2, #8]
 8002c5c:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8002c60:	e772      	b.n	8002b48 <HAL_RCCEx_PeriphCLKConfig+0xfc>
 8002c62:	bf00      	nop
 8002c64:	42470070 	.word	0x42470070
 8002c68:	40023800 	.word	0x40023800
 8002c6c:	40007000 	.word	0x40007000
 8002c70:	424711e0 	.word	0x424711e0
 8002c74:	42470068 	.word	0x42470068
 8002c78:	42470e40 	.word	0x42470e40

08002c7c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8002c7c:	b538      	push	{r3, r4, r5, lr}
 8002c7e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8002c80:	4604      	mov	r4, r0
 8002c82:	b1c8      	cbz	r0, 8002cb8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8002c84:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002c88:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002c8c:	b91b      	cbnz	r3, 8002c96 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8002c8e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8002c92:	f000 fc6b 	bl	800356c <HAL_SDRAM_MspInit>
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8002c96:	2302      	movs	r3, #2
 8002c98:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8002c9c:	1d21      	adds	r1, r4, #4
 8002c9e:	6820      	ldr	r0, [r4, #0]
 8002ca0:	f000 f972 	bl	8002f88 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8002ca4:	6862      	ldr	r2, [r4, #4]
 8002ca6:	6820      	ldr	r0, [r4, #0]
 8002ca8:	4629      	mov	r1, r5
 8002caa:	f000 f9ac 	bl	8003006 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8002cae:	2301      	movs	r3, #1
 8002cb0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8002cb4:	2000      	movs	r0, #0
 8002cb6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8002cb8:	2001      	movs	r0, #1
}
 8002cba:	bd38      	pop	{r3, r4, r5, pc}

08002cbc <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8002cbc:	b538      	push	{r3, r4, r5, lr}
 8002cbe:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8002cc0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8002cc4:	b2c0      	uxtb	r0, r0
 8002cc6:	2802      	cmp	r0, #2
{
 8002cc8:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8002cca:	d00d      	beq.n	8002ce8 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8002ccc:	2302      	movs	r3, #2
 8002cce:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8002cd2:	6820      	ldr	r0, [r4, #0]
 8002cd4:	f000 f9df 	bl	8003096 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8002cd8:	682b      	ldr	r3, [r5, #0]
 8002cda:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8002cdc:	bf0c      	ite	eq
 8002cde:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8002ce0:	2301      	movne	r3, #1
 8002ce2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8002ce6:	2000      	movs	r0, #0
}
 8002ce8:	bd38      	pop	{r3, r4, r5, pc}

08002cea <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8002cea:	b510      	push	{r4, lr}
 8002cec:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8002cee:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8002cf2:	b2c0      	uxtb	r0, r0
 8002cf4:	2802      	cmp	r0, #2
 8002cf6:	d009      	beq.n	8002d0c <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8002cf8:	2302      	movs	r3, #2
 8002cfa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8002cfe:	6820      	ldr	r0, [r4, #0]
 8002d00:	f000 f9ee 	bl	80030e0 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8002d04:	2301      	movs	r3, #1
 8002d06:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8002d0a:	2000      	movs	r0, #0
}
 8002d0c:	bd10      	pop	{r4, pc}

08002d0e <SPI_WaitFlagStateUntilTimeout>:
  * @param Timeout Timeout duration
  * @param Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, uint32_t State, uint32_t Timeout, uint32_t Tickstart)
{
 8002d0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d12:	9e06      	ldr	r6, [sp, #24]
 8002d14:	4604      	mov	r4, r0
 8002d16:	4688      	mov	r8, r1
 8002d18:	4617      	mov	r7, r2
 8002d1a:	461d      	mov	r5, r3
  while((((hspi->Instance->SR & Flag) == (Flag)) ? SET : RESET) != State)
 8002d1c:	6822      	ldr	r2, [r4, #0]
 8002d1e:	6893      	ldr	r3, [r2, #8]
 8002d20:	ea38 0303 	bics.w	r3, r8, r3
 8002d24:	bf0c      	ite	eq
 8002d26:	2301      	moveq	r3, #1
 8002d28:	2300      	movne	r3, #0
 8002d2a:	429f      	cmp	r7, r3
 8002d2c:	d102      	bne.n	8002d34 <SPI_WaitFlagStateUntilTimeout+0x26>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8002d2e:	2000      	movs	r0, #0
}
 8002d30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if(Timeout != HAL_MAX_DELAY)
 8002d34:	1c6b      	adds	r3, r5, #1
 8002d36:	d0f2      	beq.n	8002d1e <SPI_WaitFlagStateUntilTimeout+0x10>
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) >= Timeout))
 8002d38:	bb55      	cbnz	r5, 8002d90 <SPI_WaitFlagStateUntilTimeout+0x82>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8002d3a:	6823      	ldr	r3, [r4, #0]
 8002d3c:	685a      	ldr	r2, [r3, #4]
 8002d3e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8002d42:	605a      	str	r2, [r3, #4]
        if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8002d44:	6862      	ldr	r2, [r4, #4]
 8002d46:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8002d4a:	d10a      	bne.n	8002d62 <SPI_WaitFlagStateUntilTimeout+0x54>
 8002d4c:	68a2      	ldr	r2, [r4, #8]
 8002d4e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8002d52:	d002      	beq.n	8002d5a <SPI_WaitFlagStateUntilTimeout+0x4c>
 8002d54:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8002d58:	d103      	bne.n	8002d62 <SPI_WaitFlagStateUntilTimeout+0x54>
          __HAL_SPI_DISABLE(hspi);
 8002d5a:	681a      	ldr	r2, [r3, #0]
 8002d5c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002d60:	601a      	str	r2, [r3, #0]
        if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8002d62:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8002d64:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8002d68:	d109      	bne.n	8002d7e <SPI_WaitFlagStateUntilTimeout+0x70>
          SPI_RESET_CRC(hspi);
 8002d6a:	681a      	ldr	r2, [r3, #0]
 8002d6c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002d70:	0412      	lsls	r2, r2, #16
 8002d72:	0c12      	lsrs	r2, r2, #16
 8002d74:	601a      	str	r2, [r3, #0]
 8002d76:	681a      	ldr	r2, [r3, #0]
 8002d78:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002d7c:	601a      	str	r2, [r3, #0]
        hspi->State= HAL_SPI_STATE_READY;
 8002d7e:	2301      	movs	r3, #1
 8002d80:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8002d84:	2300      	movs	r3, #0
 8002d86:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8002d8a:	2003      	movs	r0, #3
 8002d8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) >= Timeout))
 8002d90:	f7fe f9d2 	bl	8001138 <HAL_GetTick>
 8002d94:	1b80      	subs	r0, r0, r6
 8002d96:	4285      	cmp	r5, r0
 8002d98:	d8c0      	bhi.n	8002d1c <SPI_WaitFlagStateUntilTimeout+0xe>
 8002d9a:	e7ce      	b.n	8002d3a <SPI_WaitFlagStateUntilTimeout+0x2c>

08002d9c <SPI_CheckFlag_BSY>:
  * @param Timeout Timeout duration
  * @param Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_CheckFlag_BSY(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8002d9c:	b513      	push	{r0, r1, r4, lr}
  /* Control the BSY flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8002d9e:	460b      	mov	r3, r1
 8002da0:	9200      	str	r2, [sp, #0]
 8002da2:	2180      	movs	r1, #128	; 0x80
 8002da4:	2200      	movs	r2, #0
{
 8002da6:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8002da8:	f7ff ffb1 	bl	8002d0e <SPI_WaitFlagStateUntilTimeout>
 8002dac:	b120      	cbz	r0, 8002db8 <SPI_CheckFlag_BSY+0x1c>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8002dae:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8002db0:	f043 0320 	orr.w	r3, r3, #32
 8002db4:	6563      	str	r3, [r4, #84]	; 0x54
    return HAL_TIMEOUT;
 8002db6:	2003      	movs	r0, #3
  }
  return HAL_OK;
}
 8002db8:	b002      	add	sp, #8
 8002dba:	bd10      	pop	{r4, pc}

08002dbc <HAL_SPI_Init>:
{
 8002dbc:	b510      	push	{r4, lr}
  if(hspi == NULL)
 8002dbe:	4604      	mov	r4, r0
 8002dc0:	2800      	cmp	r0, #0
 8002dc2:	d036      	beq.n	8002e32 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002dc4:	2300      	movs	r3, #0
 8002dc6:	6283      	str	r3, [r0, #40]	; 0x28
  if(hspi->State == HAL_SPI_STATE_RESET)
 8002dc8:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8002dcc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002dd0:	b91b      	cbnz	r3, 8002dda <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8002dd2:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8002dd6:	f7fd fd9d 	bl	8000914 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8002dda:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8002ddc:	68a0      	ldr	r0, [r4, #8]
 8002dde:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8002de0:	2302      	movs	r3, #2
 8002de2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8002de6:	680b      	ldr	r3, [r1, #0]
 8002de8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002dec:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8002dee:	6863      	ldr	r3, [r4, #4]
 8002df0:	4303      	orrs	r3, r0
 8002df2:	68e0      	ldr	r0, [r4, #12]
 8002df4:	4303      	orrs	r3, r0
 8002df6:	6920      	ldr	r0, [r4, #16]
 8002df8:	4303      	orrs	r3, r0
 8002dfa:	6960      	ldr	r0, [r4, #20]
 8002dfc:	4303      	orrs	r3, r0
 8002dfe:	69e0      	ldr	r0, [r4, #28]
 8002e00:	4303      	orrs	r3, r0
 8002e02:	6a20      	ldr	r0, [r4, #32]
 8002e04:	4303      	orrs	r3, r0
 8002e06:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8002e08:	4303      	orrs	r3, r0
 8002e0a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8002e0e:	4303      	orrs	r3, r0
 8002e10:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8002e12:	0c12      	lsrs	r2, r2, #16
 8002e14:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002e16:	f002 0204 	and.w	r2, r2, #4
 8002e1a:	431a      	orrs	r2, r3
 8002e1c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8002e1e:	69cb      	ldr	r3, [r1, #28]
 8002e20:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002e24:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8002e26:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8002e28:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8002e2a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8002e2c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  return HAL_OK;
 8002e30:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8002e32:	2001      	movs	r0, #1
}
 8002e34:	bd10      	pop	{r4, pc}

08002e36 <HAL_SPI_Transmit>:
{
 8002e36:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002e3a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8002e3c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8002e40:	2b01      	cmp	r3, #1
{
 8002e42:	4604      	mov	r4, r0
 8002e44:	460d      	mov	r5, r1
 8002e46:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8002e48:	f000 809c 	beq.w	8002f84 <HAL_SPI_Transmit+0x14e>
 8002e4c:	2301      	movs	r3, #1
 8002e4e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8002e52:	f7fe f971 	bl	8001138 <HAL_GetTick>
 8002e56:	4607      	mov	r7, r0
  if(hspi->State != HAL_SPI_STATE_READY)
 8002e58:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8002e5c:	b2c0      	uxtb	r0, r0
 8002e5e:	2801      	cmp	r0, #1
 8002e60:	f040 808e 	bne.w	8002f80 <HAL_SPI_Transmit+0x14a>
  if((pData == NULL ) || (Size == 0))
 8002e64:	2d00      	cmp	r5, #0
 8002e66:	d04e      	beq.n	8002f06 <HAL_SPI_Transmit+0xd0>
 8002e68:	f1b8 0f00 	cmp.w	r8, #0
 8002e6c:	d04b      	beq.n	8002f06 <HAL_SPI_Transmit+0xd0>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8002e6e:	2303      	movs	r3, #3
 8002e70:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8002e74:	2300      	movs	r3, #0
 8002e76:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8002e78:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8002e7a:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8002e7e:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8002e80:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8002e82:	6463      	str	r3, [r4, #68]	; 0x44
  hspi->RxISR       = NULL;
 8002e84:	6423      	str	r3, [r4, #64]	; 0x40
  if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8002e86:	68a3      	ldr	r3, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8002e88:	6325      	str	r5, [r4, #48]	; 0x30
  if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8002e8a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002e8e:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8002e90:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8002e94:	bf02      	ittt	eq
 8002e96:	681a      	ldreq	r2, [r3, #0]
 8002e98:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8002e9c:	601a      	streq	r2, [r3, #0]
  if((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8002e9e:	681a      	ldr	r2, [r3, #0]
 8002ea0:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8002ea2:	bf5e      	ittt	pl
 8002ea4:	681a      	ldrpl	r2, [r3, #0]
 8002ea6:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8002eaa:	601a      	strpl	r2, [r3, #0]
  if(hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8002eac:	68e2      	ldr	r2, [r4, #12]
 8002eae:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8002eb2:	6862      	ldr	r2, [r4, #4]
 8002eb4:	d138      	bne.n	8002f28 <HAL_SPI_Transmit+0xf2>
    if((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01))
 8002eb6:	b11a      	cbz	r2, 8002ec0 <HAL_SPI_Transmit+0x8a>
 8002eb8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002eba:	b292      	uxth	r2, r2
 8002ebc:	2a01      	cmp	r2, #1
 8002ebe:	d106      	bne.n	8002ece <HAL_SPI_Transmit+0x98>
          hspi->Instance->DR = *((uint16_t *)pData);
 8002ec0:	f835 2b02 	ldrh.w	r2, [r5], #2
 8002ec4:	60da      	str	r2, [r3, #12]
          hspi->TxXferCount--;
 8002ec6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8002ec8:	3b01      	subs	r3, #1
 8002eca:	b29b      	uxth	r3, r3
 8002ecc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8002ece:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8002ed0:	b29b      	uxth	r3, r3
 8002ed2:	b993      	cbnz	r3, 8002efa <HAL_SPI_Transmit+0xc4>
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, tickstart) != HAL_OK)
 8002ed4:	9700      	str	r7, [sp, #0]
 8002ed6:	4633      	mov	r3, r6
 8002ed8:	2201      	movs	r2, #1
 8002eda:	2102      	movs	r1, #2
 8002edc:	4620      	mov	r0, r4
 8002ede:	f7ff ff16 	bl	8002d0e <SPI_WaitFlagStateUntilTimeout>
 8002ee2:	b978      	cbnz	r0, 8002f04 <HAL_SPI_Transmit+0xce>
  if(SPI_CheckFlag_BSY(hspi, Timeout, tickstart) != HAL_OK)
 8002ee4:	463a      	mov	r2, r7
 8002ee6:	4631      	mov	r1, r6
 8002ee8:	4620      	mov	r0, r4
 8002eea:	f7ff ff57 	bl	8002d9c <SPI_CheckFlag_BSY>
 8002eee:	2800      	cmp	r0, #0
 8002ef0:	d038      	beq.n	8002f64 <HAL_SPI_Transmit+0x12e>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8002ef2:	2320      	movs	r3, #32
 8002ef4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8002ef6:	2001      	movs	r0, #1
    goto error;
 8002ef8:	e005      	b.n	8002f06 <HAL_SPI_Transmit+0xd0>
      if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8002efa:	6823      	ldr	r3, [r4, #0]
 8002efc:	689a      	ldr	r2, [r3, #8]
 8002efe:	0790      	lsls	r0, r2, #30
 8002f00:	d4de      	bmi.n	8002ec0 <HAL_SPI_Transmit+0x8a>
        if((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout)))
 8002f02:	b94e      	cbnz	r6, 8002f18 <HAL_SPI_Transmit+0xe2>
          errorcode = HAL_TIMEOUT;
 8002f04:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8002f06:	2301      	movs	r3, #1
 8002f08:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8002f0c:	2300      	movs	r3, #0
 8002f0e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8002f12:	b004      	add	sp, #16
 8002f14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout)))
 8002f18:	1c71      	adds	r1, r6, #1
 8002f1a:	d0d8      	beq.n	8002ece <HAL_SPI_Transmit+0x98>
 8002f1c:	f7fe f90c 	bl	8001138 <HAL_GetTick>
 8002f20:	1bc0      	subs	r0, r0, r7
 8002f22:	4286      	cmp	r6, r0
 8002f24:	d8d3      	bhi.n	8002ece <HAL_SPI_Transmit+0x98>
 8002f26:	e7ed      	b.n	8002f04 <HAL_SPI_Transmit+0xce>
    if((hspi->Init.Mode == SPI_MODE_SLAVE)|| (hspi->TxXferCount == 0x01))
 8002f28:	b11a      	cbz	r2, 8002f32 <HAL_SPI_Transmit+0xfc>
 8002f2a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002f2c:	b292      	uxth	r2, r2
 8002f2e:	2a01      	cmp	r2, #1
 8002f30:	d106      	bne.n	8002f40 <HAL_SPI_Transmit+0x10a>
        *((__IO uint8_t*)&hspi->Instance->DR) = (*pData);
 8002f32:	f815 2b01 	ldrb.w	r2, [r5], #1
 8002f36:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 8002f38:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8002f3a:	3b01      	subs	r3, #1
 8002f3c:	b29b      	uxth	r3, r3
 8002f3e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8002f40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8002f42:	b29b      	uxth	r3, r3
 8002f44:	2b00      	cmp	r3, #0
 8002f46:	d0c5      	beq.n	8002ed4 <HAL_SPI_Transmit+0x9e>
      if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8002f48:	6823      	ldr	r3, [r4, #0]
 8002f4a:	689a      	ldr	r2, [r3, #8]
 8002f4c:	0792      	lsls	r2, r2, #30
 8002f4e:	d4f0      	bmi.n	8002f32 <HAL_SPI_Transmit+0xfc>
        if((Timeout == 0U) || ((Timeout != HAL_MAX_DELAY) && ((HAL_GetTick()-tickstart) >=  Timeout)))
 8002f50:	2e00      	cmp	r6, #0
 8002f52:	d0d7      	beq.n	8002f04 <HAL_SPI_Transmit+0xce>
 8002f54:	1c73      	adds	r3, r6, #1
 8002f56:	d0f3      	beq.n	8002f40 <HAL_SPI_Transmit+0x10a>
 8002f58:	f7fe f8ee 	bl	8001138 <HAL_GetTick>
 8002f5c:	1bc0      	subs	r0, r0, r7
 8002f5e:	4286      	cmp	r6, r0
 8002f60:	d8ee      	bhi.n	8002f40 <HAL_SPI_Transmit+0x10a>
 8002f62:	e7cf      	b.n	8002f04 <HAL_SPI_Transmit+0xce>
  if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8002f64:	68a3      	ldr	r3, [r4, #8]
 8002f66:	b933      	cbnz	r3, 8002f76 <HAL_SPI_Transmit+0x140>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8002f68:	9303      	str	r3, [sp, #12]
 8002f6a:	6823      	ldr	r3, [r4, #0]
 8002f6c:	68da      	ldr	r2, [r3, #12]
 8002f6e:	9203      	str	r2, [sp, #12]
 8002f70:	689b      	ldr	r3, [r3, #8]
 8002f72:	9303      	str	r3, [sp, #12]
 8002f74:	9b03      	ldr	r3, [sp, #12]
  if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8002f76:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8002f78:	3000      	adds	r0, #0
 8002f7a:	bf18      	it	ne
 8002f7c:	2001      	movne	r0, #1
 8002f7e:	e7c2      	b.n	8002f06 <HAL_SPI_Transmit+0xd0>
 8002f80:	2002      	movs	r0, #2
 8002f82:	e7c0      	b.n	8002f06 <HAL_SPI_Transmit+0xd0>
  __HAL_LOCK(hspi);
 8002f84:	2002      	movs	r0, #2
 8002f86:	e7c4      	b.n	8002f12 <HAL_SPI_Transmit+0xdc>

08002f88 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8002f88:	680b      	ldr	r3, [r1, #0]
 8002f8a:	684a      	ldr	r2, [r1, #4]
 8002f8c:	f8d1 c010 	ldr.w	ip, [r1, #16]
 8002f90:	2b01      	cmp	r3, #1
{
 8002f92:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8002f96:	6803      	ldr	r3, [r0, #0]
 8002f98:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8002f9c:	f8d1 800c 	ldr.w	r8, [r1, #12]
 8002fa0:	694d      	ldr	r5, [r1, #20]
 8002fa2:	698c      	ldr	r4, [r1, #24]
 8002fa4:	f8d1 e01c 	ldr.w	lr, [r1, #28]
 8002fa8:	6a0f      	ldr	r7, [r1, #32]
 8002faa:	6a4e      	ldr	r6, [r1, #36]	; 0x24
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8002fac:	d014      	beq.n	8002fd8 <FMC_SDRAM_Init+0x50>
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8002fae:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8002fb2:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8002fb6:	431a      	orrs	r2, r3
 8002fb8:	ea42 0209 	orr.w	r2, r2, r9
 8002fbc:	ea42 0208 	orr.w	r2, r2, r8
 8002fc0:	ea42 030c 	orr.w	r3, r2, ip
 8002fc4:	432b      	orrs	r3, r5
 8002fc6:	4323      	orrs	r3, r4
 8002fc8:	ea43 030e 	orr.w	r3, r3, lr
 8002fcc:	433b      	orrs	r3, r7
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8002fce:	4333      	orrs	r3, r6
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8002fd0:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8002fd2:	2000      	movs	r0, #0
 8002fd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8002fd8:	6841      	ldr	r1, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8002fda:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8002fde:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8002fe2:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8002fe6:	430a      	orrs	r2, r1
 8002fe8:	ea43 030e 	orr.w	r3, r3, lr
 8002fec:	ea42 0209 	orr.w	r2, r2, r9
 8002ff0:	433b      	orrs	r3, r7
 8002ff2:	ea42 0208 	orr.w	r2, r2, r8
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8002ff6:	431e      	orrs	r6, r3
 8002ff8:	ea42 030c 	orr.w	r3, r2, ip
 8002ffc:	432b      	orrs	r3, r5
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8002ffe:	4323      	orrs	r3, r4
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8003000:	6006      	str	r6, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8003002:	6043      	str	r3, [r0, #4]
 8003004:	e7e5      	b.n	8002fd2 <FMC_SDRAM_Init+0x4a>

08003006 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8003006:	2a01      	cmp	r2, #1
{
 8003008:	b5f0      	push	{r4, r5, r6, r7, lr}
 800300a:	f8d1 c00c 	ldr.w	ip, [r1, #12]
 800300e:	688f      	ldr	r7, [r1, #8]
 8003010:	690d      	ldr	r5, [r1, #16]
 8003012:	694e      	ldr	r6, [r1, #20]
 8003014:	e891 4008 	ldmia.w	r1, {r3, lr}
 8003018:	6989      	ldr	r1, [r1, #24]
  if (Bank != FMC_SDRAM_BANK2) 
 800301a:	d01b      	beq.n	8003054 <FMC_SDRAM_Timing_Init+0x4e>
  { 
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800301c:	6882      	ldr	r2, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800301e:	f10e 3eff 	add.w	lr, lr, #4294967295
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8003022:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8003026:	3b01      	subs	r3, #1
 8003028:	ea42 120e 	orr.w	r2, r2, lr, lsl #4
 800302c:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800302e:	1e7b      	subs	r3, r7, #1
 8003030:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8003034:	f10c 3cff 	add.w	ip, ip, #4294967295
 8003038:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800303c:	3d01      	subs	r5, #1
 800303e:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8003042:	3e01      	subs	r6, #1
 8003044:	ea43 5306 	orr.w	r3, r3, r6, lsl #20
                       (((Timing->RCDDelay)-1U) << 24U));
 8003048:	3901      	subs	r1, #1
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800304a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800304e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8003050:	2000      	movs	r0, #0
 8003052:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8003054:	6884      	ldr	r4, [r0, #8]
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8003056:	68c2      	ldr	r2, [r0, #12]
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8003058:	f10e 3eff 	add.w	lr, lr, #4294967295
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800305c:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8003060:	3b01      	subs	r3, #1
 8003062:	ea42 120e 	orr.w	r2, r2, lr, lsl #4
 8003066:	431a      	orrs	r2, r3
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8003068:	f424 0470 	bic.w	r4, r4, #15728640	; 0xf00000
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 800306c:	1e7b      	subs	r3, r7, #1
 800306e:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8003072:	f10c 3cff 	add.w	ip, ip, #4294967295
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8003076:	f424 4470 	bic.w	r4, r4, #61440	; 0xf000
                       (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 800307a:	1e6b      	subs	r3, r5, #1
 800307c:	ea44 340c 	orr.w	r4, r4, ip, lsl #12
                        (((Timing->RPDelay)-1U) << 20U)); 
 8003080:	3e01      	subs	r6, #1
 8003082:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U)));   
 8003086:	3901      	subs	r1, #1
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8003088:	ea44 5606 	orr.w	r6, r4, r6, lsl #20
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800308c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8003090:	6086      	str	r6, [r0, #8]
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8003092:	60c3      	str	r3, [r0, #12]
 8003094:	e7dc      	b.n	8003050 <FMC_SDRAM_Timing_Init+0x4a>

08003096 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8003096:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8003098:	2300      	movs	r3, #0
 800309a:	9301      	str	r3, [sp, #4]
{
 800309c:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800309e:	e891 000c 	ldmia.w	r1, {r2, r3}
 80030a2:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 80030a4:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80030a6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 80030aa:	688a      	ldr	r2, [r1, #8]
 80030ac:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80030ae:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80030b2:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80030b4:	9b01      	ldr	r3, [sp, #4]
 80030b6:	6103      	str	r3, [r0, #16]
{
 80030b8:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80030ba:	f7fe f83d 	bl	8001138 <HAL_GetTick>
 80030be:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80030c0:	69a0      	ldr	r0, [r4, #24]
 80030c2:	f010 0020 	ands.w	r0, r0, #32
 80030c6:	d003      	beq.n	80030d0 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 80030c8:	1c6b      	adds	r3, r5, #1
 80030ca:	d0f9      	beq.n	80030c0 <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80030cc:	b915      	cbnz	r5, 80030d4 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 80030ce:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 80030d0:	b002      	add	sp, #8
 80030d2:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80030d4:	f7fe f830 	bl	8001138 <HAL_GetTick>
 80030d8:	1b80      	subs	r0, r0, r6
 80030da:	4285      	cmp	r5, r0
 80030dc:	d2f0      	bcs.n	80030c0 <FMC_SDRAM_SendCommand+0x2a>
 80030de:	e7f6      	b.n	80030ce <FMC_SDRAM_SendCommand+0x38>

080030e0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80030e0:	6943      	ldr	r3, [r0, #20]
 80030e2:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80030e6:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80030e8:	2000      	movs	r0, #0
 80030ea:	4770      	bx	lr

080030ec <GUI_X_GetTime>:
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
  return OS_TimeMS; 
 80030ec:	4b01      	ldr	r3, [pc, #4]	; (80030f4 <GUI_X_GetTime+0x8>)
 80030ee:	6818      	ldr	r0, [r3, #0]
}
 80030f0:	4770      	bx	lr
 80030f2:	bf00      	nop
 80030f4:	2001bf6c 	.word	0x2001bf6c

080030f8 <GUI_X_Delay>:

void GUI_X_Delay(int ms) { 
  int tEnd = OS_TimeMS + ms;
 80030f8:	4b03      	ldr	r3, [pc, #12]	; (8003108 <GUI_X_Delay+0x10>)
 80030fa:	681a      	ldr	r2, [r3, #0]
 80030fc:	4410      	add	r0, r2
  while ((tEnd - OS_TimeMS) > 0);
 80030fe:	681a      	ldr	r2, [r3, #0]
 8003100:	1a82      	subs	r2, r0, r2
 8003102:	2a00      	cmp	r2, #0
 8003104:	dcfb      	bgt.n	80030fe <GUI_X_Delay+0x6>
}
 8003106:	4770      	bx	lr
 8003108:	2001bf6c 	.word	0x2001bf6c

0800310c <GUI_X_Init>:
 800310c:	4770      	bx	lr

0800310e <touch_screen_update>:
#include "stm32f429i_discovery_ts.h"

extern  WM_HWIN CreateWindow(void);  

void touch_screen_update(void)
{
 800310e:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	TS_StateTypeDef ts_state;
	BSP_TS_GetState(&ts_state);
 8003110:	a801      	add	r0, sp, #4
 8003112:	f7fd ff67 	bl	8000fe4 <BSP_TS_GetState>

	GUI_PID_STATE gui_pid_state;

	if (ts_state.TouchDetected)
 8003116:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800311a:	b173      	cbz	r3, 800313a <touch_screen_update+0x2c>
	{
		gui_pid_state.Pressed = 1;
 800311c:	2301      	movs	r3, #1
 800311e:	f88d 3014 	strb.w	r3, [sp, #20]
		gui_pid_state.x = ts_state.X;
 8003122:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8003126:	9303      	str	r3, [sp, #12]
		gui_pid_state.y = ts_state.Y;
 8003128:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800312c:	9304      	str	r3, [sp, #16]
	else
	{
		gui_pid_state.Pressed = 0;
	}

	GUI_PID_StoreState(&gui_pid_state);
 800312e:	a803      	add	r0, sp, #12
 8003130:	f003 f83c 	bl	80061ac <GUI_PID_StoreState>
}
 8003134:	b007      	add	sp, #28
 8003136:	f85d fb04 	ldr.w	pc, [sp], #4
		gui_pid_state.Pressed = 0;
 800313a:	f88d 3014 	strb.w	r3, [sp, #20]
 800313e:	e7f6      	b.n	800312e <touch_screen_update+0x20>

08003140 <GRAPHICS_MainTask>:

void GRAPHICS_MainTask(void) {
 8003140:	b508      	push	{r3, lr}

	/* 2- Create a Window using GUIBuilder */
	CreateWindow();
 8003142:	f000 f83f 	bl	80031c4 <CreateWindow>

	/* USER CODE BEGIN GRAPHICS_MainTask */
	/* User can implement his graphic application here */
	/* Hello Word example */
	GUI_Clear();
 8003146:	f002 fb1f 	bl	8005788 <GUI_Clear>
	GUI_SetColor(GUI_WHITE);
 800314a:	f04f 30ff 	mov.w	r0, #4294967295
 800314e:	f002 fa29 	bl	80055a4 <GUI_SetColor>
	GUI_SetFont(&GUI_Font32_1);
 8003152:	480c      	ldr	r0, [pc, #48]	; (8003184 <GRAPHICS_MainTask+0x44>)
 8003154:	f002 fa4c 	bl	80055f0 <GUI_SetFont>
	GUI_DispStringAt("Hello world!", (LCD_GetXSize()-150)/2, (LCD_GetYSize()-20)/2);
 8003158:	f004 fd20 	bl	8007b9c <LCD_GetXSize>
 800315c:	4604      	mov	r4, r0
 800315e:	f004 fd33 	bl	8007bc8 <LCD_GetYSize>
 8003162:	3c96      	subs	r4, #150	; 0x96
 8003164:	f1a0 0214 	sub.w	r2, r0, #20
 8003168:	2102      	movs	r1, #2
 800316a:	4807      	ldr	r0, [pc, #28]	; (8003188 <GRAPHICS_MainTask+0x48>)
 800316c:	fb92 f2f1 	sdiv	r2, r2, r1
 8003170:	fb94 f1f1 	sdiv	r1, r4, r1
 8003174:	f002 feac 	bl	8005ed0 <GUI_DispStringAt>

	/* USER CODE END GRAPHICS_MainTask */
	while(1)
	{
		touch_screen_update();
 8003178:	f7ff ffc9 	bl	800310e <touch_screen_update>
		GUI_Delay(100);
 800317c:	2064      	movs	r0, #100	; 0x64
 800317e:	f003 f8cd 	bl	800631c <GUI_Delay>
 8003182:	e7f9      	b.n	8003178 <GRAPHICS_MainTask+0x38>
 8003184:	080178c4 	.word	0x080178c4
 8003188:	0801d04c 	.word	0x0801d04c

0800318c <_cbDialog>:
  int     NCode;
  int     Id;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 800318c:	6802      	ldr	r2, [r0, #0]
 800318e:	2a1d      	cmp	r2, #29
static void _cbDialog(WM_MESSAGE * pMsg) {
 8003190:	b508      	push	{r3, lr}
  switch (pMsg->MsgId) {
 8003192:	d005      	beq.n	80031a0 <_cbDialog+0x14>
 8003194:	2a26      	cmp	r2, #38	; 0x26
 8003196:	d00d      	beq.n	80031b4 <_cbDialog+0x28>
  // USER END
  default:
    WM_DefaultProc(pMsg);
    break;
  }
}
 8003198:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    WM_DefaultProc(pMsg);
 800319c:	f009 bda6 	b.w	800ccec <WM_DefaultProc>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
 80031a0:	f640 0104 	movw	r1, #2052	; 0x804
 80031a4:	6840      	ldr	r0, [r0, #4]
 80031a6:	f00a f953 	bl	800d450 <WM_GetDialogItem>
    CHECKBOX_SetText(hItem, "Check");
 80031aa:	4905      	ldr	r1, [pc, #20]	; (80031c0 <_cbDialog+0x34>)
}
 80031ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    CHECKBOX_SetText(hItem, "Check");
 80031b0:	f00b bfae 	b.w	800f110 <CHECKBOX_SetText>
    Id    = WM_GetId(pMsg->hWinSrc);
 80031b4:	6880      	ldr	r0, [r0, #8]
}
 80031b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Id    = WM_GetId(pMsg->hWinSrc);
 80031ba:	f00a b961 	b.w	800d480 <WM_GetId>
 80031be:	bf00      	nop
 80031c0:	0801d120 	.word	0x0801d120

080031c4 <CreateWindow>:
/*********************************************************************
*
*       CreateWindow
*/
WM_HWIN CreateWindow(void);
WM_HWIN CreateWindow(void) {
 80031c4:	b507      	push	{r0, r1, r2, lr}
  WM_HWIN hWin;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 80031c6:	f00a f8d7 	bl	800d378 <WM_GetDesktopWindow>
 80031ca:	2300      	movs	r3, #0
 80031cc:	9301      	str	r3, [sp, #4]
 80031ce:	9300      	str	r3, [sp, #0]
 80031d0:	4a04      	ldr	r2, [pc, #16]	; (80031e4 <CreateWindow+0x20>)
 80031d2:	4603      	mov	r3, r0
 80031d4:	2107      	movs	r1, #7
 80031d6:	4804      	ldr	r0, [pc, #16]	; (80031e8 <CreateWindow+0x24>)
 80031d8:	f00c fb5c 	bl	800f894 <GUI_CreateDialogBox>
  return hWin;
}
 80031dc:	b003      	add	sp, #12
 80031de:	f85d fb04 	ldr.w	pc, [sp], #4
 80031e2:	bf00      	nop
 80031e4:	0800318d 	.word	0x0800318d
 80031e8:	0801d05c 	.word	0x0801d05c

080031ec <GUI_X_Config>:
*   available memory for the GUI.
*/
void GUI_X_Config(void)
{

  GUI_ALLOC_AssignMemory(extMem, GUI_NUMBYTES);
 80031ec:	f44f 31dc 	mov.w	r1, #112640	; 0x1b800
 80031f0:	4801      	ldr	r0, [pc, #4]	; (80031f8 <GUI_X_Config+0xc>)
 80031f2:	f001 bfb5 	b.w	8005160 <GUI_ALLOC_AssignMemory>
 80031f6:	bf00      	nop
 80031f8:	20000680 	.word	0x20000680

080031fc <MX_LCD_Init>:
  * @param  LayerIndex : layer Index.
  * @retval None
  */

void MX_LCD_Init(void) 
{ 
 80031fc:	b530      	push	{r4, r5, lr}
 LTDC_LayerCfgTypeDef pLayerCfg;
 ili9341_Init();

/* De-Initialize LTDC */
  HAL_LTDC_DeInit(&hltdc);
 80031fe:	4c29      	ldr	r4, [pc, #164]	; (80032a4 <MX_LCD_Init+0xa8>)
{ 
 8003200:	b08f      	sub	sp, #60	; 0x3c
 ili9341_Init();
 8003202:	f7fd fc3f 	bl	8000a84 <ili9341_Init>
  HAL_LTDC_DeInit(&hltdc);
 8003206:	4620      	mov	r0, r4
 8003208:	f7fe ffe6 	bl	80021d8 <HAL_LTDC_DeInit>
/* Configure LTDC */

  hltdc.Instance = LTDC;
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800320c:	4b26      	ldr	r3, [pc, #152]	; (80032a8 <MX_LCD_Init+0xac>)
 800320e:	2500      	movs	r5, #0
 8003210:	e884 0028 	stmia.w	r4, {r3, r5}
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
  hltdc.Init.HorizontalSync = 9;
 8003214:	2309      	movs	r3, #9
 8003216:	6163      	str	r3, [r4, #20]
  hltdc.Init.VerticalSync = 1;
 8003218:	2301      	movs	r3, #1
 800321a:	61a3      	str	r3, [r4, #24]
  hltdc.Init.AccumulatedHBP = 29;
 800321c:	231d      	movs	r3, #29
 800321e:	61e3      	str	r3, [r4, #28]
  hltdc.Init.AccumulatedVBP = 3;
 8003220:	2303      	movs	r3, #3
 8003222:	6223      	str	r3, [r4, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 8003224:	f240 130d 	movw	r3, #269	; 0x10d
 8003228:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 800322a:	f240 1343 	movw	r3, #323	; 0x143
 800322e:	62a3      	str	r3, [r4, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 8003230:	f240 1317 	movw	r3, #279	; 0x117
 8003234:	62e3      	str	r3, [r4, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
  hltdc.Init.Backcolor.Blue = 0;
  hltdc.Init.Backcolor.Green = 0;
  hltdc.Init.Backcolor.Red = 0;
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8003236:	4620      	mov	r0, r4
  hltdc.Init.TotalHeigh = 327;
 8003238:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 800323c:	60a5      	str	r5, [r4, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800323e:	60e5      	str	r5, [r4, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8003240:	6125      	str	r5, [r4, #16]
  hltdc.Init.TotalHeigh = 327;
 8003242:	6323      	str	r3, [r4, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8003244:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8003248:	f884 5035 	strb.w	r5, [r4, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 800324c:	f884 5036 	strb.w	r5, [r4, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8003250:	f7fe ff56 	bl	8002100 <HAL_LTDC_Init>
 8003254:	b108      	cbz	r0, 800325a <MX_LCD_Init+0x5e>
  {
    Error_Handler( );
 8003256:	f7fd facf 	bl	80007f8 <Error_Handler>

  pLayerCfg.WindowX0 = 0;
  pLayerCfg.WindowX1 = 240;
  pLayerCfg.WindowY0 = 0;
  pLayerCfg.WindowY1 = 320;
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800325a:	2102      	movs	r1, #2
 800325c:	9105      	str	r1, [sp, #20]
  pLayerCfg.Alpha = 255;
 800325e:	21ff      	movs	r1, #255	; 0xff
 8003260:	9106      	str	r1, [sp, #24]
  pLayerCfg.Alpha0 = 0;
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 8003262:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8003266:	9108      	str	r1, [sp, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8003268:	2107      	movs	r1, #7
  pLayerCfg.WindowX1 = 240;
 800326a:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 800326c:	9109      	str	r1, [sp, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xd0200000;
 800326e:	490f      	ldr	r1, [pc, #60]	; (80032ac <MX_LCD_Init+0xb0>)
  pLayerCfg.WindowX1 = 240;
 8003270:	9202      	str	r2, [sp, #8]
  pLayerCfg.WindowY1 = 320;
 8003272:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.FBStartAdress = 0xd0200000;
 8003276:	910a      	str	r1, [sp, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 8003278:	920b      	str	r2, [sp, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
  pLayerCfg.Backcolor.Blue = 0;
  pLayerCfg.Backcolor.Green = 0;
  pLayerCfg.Backcolor.Red = 0;
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800327a:	a901      	add	r1, sp, #4
 800327c:	2200      	movs	r2, #0
 800327e:	4809      	ldr	r0, [pc, #36]	; (80032a4 <MX_LCD_Init+0xa8>)
  pLayerCfg.WindowX0 = 0;
 8003280:	9501      	str	r5, [sp, #4]
  pLayerCfg.WindowY0 = 0;
 8003282:	9503      	str	r5, [sp, #12]
  pLayerCfg.WindowY1 = 320;
 8003284:	9304      	str	r3, [sp, #16]
  pLayerCfg.Alpha0 = 0;
 8003286:	9507      	str	r5, [sp, #28]
  pLayerCfg.ImageHeight = 320;
 8003288:	930c      	str	r3, [sp, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 800328a:	f88d 5034 	strb.w	r5, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 800328e:	f88d 5035 	strb.w	r5, [sp, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8003292:	f88d 5036 	strb.w	r5, [sp, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8003296:	f7ff f80a 	bl	80022ae <HAL_LTDC_ConfigLayer>
 800329a:	b108      	cbz	r0, 80032a0 <MX_LCD_Init+0xa4>
  {
    Error_Handler( );
 800329c:	f7fd faac 	bl	80007f8 <Error_Handler>
  }

}
 80032a0:	b00f      	add	sp, #60	; 0x3c
 80032a2:	bd30      	pop	{r4, r5, pc}
 80032a4:	2001bf70 	.word	0x2001bf70
 80032a8:	40016800 	.word	0x40016800
 80032ac:	d0200000 	.word	0xd0200000

080032b0 <MX_FMC_Init>:

/**
  * @brief  Initializes LCD IO.
  */ 
void MX_FMC_Init(void) 
{  
 80032b0:	b500      	push	{lr}
/* FMC initialization function */
  FMC_SDRAM_TimingTypeDef SdramTiming;

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80032b2:	4815      	ldr	r0, [pc, #84]	; (8003308 <MX_FMC_Init+0x58>)
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80032b4:	4915      	ldr	r1, [pc, #84]	; (800330c <MX_FMC_Init+0x5c>)
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80032b6:	2210      	movs	r2, #16
 80032b8:	6102      	str	r2, [r0, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80032ba:	2240      	movs	r2, #64	; 0x40
 80032bc:	6142      	str	r2, [r0, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80032be:	f44f 72c0 	mov.w	r2, #384	; 0x180
{  
 80032c2:	b089      	sub	sp, #36	; 0x24
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80032c4:	2301      	movs	r3, #1
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80032c6:	6182      	str	r2, [r0, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80032c8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80032cc:	e880 000a 	stmia.w	r0, {r1, r3}
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80032d0:	6202      	str	r2, [r0, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80032d2:	2300      	movs	r3, #0
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80032d4:	2104      	movs	r1, #4
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
  SdramTiming.ExitSelfRefreshDelay = 7;
 80032d6:	2207      	movs	r2, #7
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80032d8:	6083      	str	r3, [r0, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80032da:	60c1      	str	r1, [r0, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80032dc:	61c3      	str	r3, [r0, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80032de:	6243      	str	r3, [r0, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 80032e0:	6283      	str	r3, [r0, #40]	; 0x28
  SdramTiming.ExitSelfRefreshDelay = 7;
 80032e2:	9202      	str	r2, [sp, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80032e4:	2302      	movs	r3, #2
  SdramTiming.SelfRefreshTime = 4;
 80032e6:	9103      	str	r1, [sp, #12]
  SdramTiming.RowCycleDelay = 7;
 80032e8:	9204      	str	r2, [sp, #16]
  SdramTiming.WriteRecoveryTime = 3;
  SdramTiming.RPDelay = 2;
  SdramTiming.RCDDelay = 2;

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80032ea:	4469      	add	r1, sp
  SdramTiming.WriteRecoveryTime = 3;
 80032ec:	2203      	movs	r2, #3
  SdramTiming.LoadToActiveDelay = 2;
 80032ee:	9301      	str	r3, [sp, #4]
  SdramTiming.WriteRecoveryTime = 3;
 80032f0:	9205      	str	r2, [sp, #20]
  SdramTiming.RPDelay = 2;
 80032f2:	9306      	str	r3, [sp, #24]
  SdramTiming.RCDDelay = 2;
 80032f4:	9307      	str	r3, [sp, #28]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80032f6:	f7ff fcc1 	bl	8002c7c <HAL_SDRAM_Init>
 80032fa:	b108      	cbz	r0, 8003300 <MX_FMC_Init+0x50>
  {
    Error_Handler( );
 80032fc:	f7fd fa7c 	bl	80007f8 <Error_Handler>
  }

}
 8003300:	b009      	add	sp, #36	; 0x24
 8003302:	f85d fb04 	ldr.w	pc, [sp], #4
 8003306:	bf00      	nop
 8003308:	2001c058 	.word	0x2001c058
 800330c:	a0000140 	.word	0xa0000140

08003310 <MX_SDRAM_InitEx>:
/**
  * @brief  Programs the SDRAM device.
  * @retval None
  */
void MX_SDRAM_InitEx(void)
{
 8003310:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;
  
  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8003314:	4c23      	ldr	r4, [pc, #140]	; (80033a4 <MX_SDRAM_InitEx+0x94>)
  Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK2;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8003316:	4d24      	ldr	r5, [pc, #144]	; (80033a8 <MX_SDRAM_InitEx+0x98>)
  Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK2;
 8003318:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800331a:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK2;
 800331e:	2708      	movs	r7, #8
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8003320:	4621      	mov	r1, r4
 8003322:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003326:	4628      	mov	r0, r5
  __IO uint32_t tmpmrd = 0;
 8003328:	f8cd 8004 	str.w	r8, [sp, #4]
  Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK2;
 800332c:	e884 00c0 	stmia.w	r4, {r6, r7}
  Command.AutoRefreshNumber      = 1;
 8003330:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
 8003332:	f8c4 800c 	str.w	r8, [r4, #12]
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8003336:	f7ff fcc1 	bl	8002cbc <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */ 
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800333a:	4630      	mov	r0, r6
 800333c:	f7fd ff02 	bl	8001144 <HAL_Delay>
    
  /* Step 3: Configure a PALL (precharge all) command */ 
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8003340:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);  
 8003342:	4621      	mov	r1, r4
 8003344:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003348:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 800334a:	e884 0088 	stmia.w	r4, {r3, r7}
  
  /* Step 4: Configure an Auto Refresh command */ 
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
  Command.AutoRefreshNumber      = 4;
 800334e:	f04f 0904 	mov.w	r9, #4
  Command.AutoRefreshNumber      = 1;
 8003352:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
 8003354:	f8c4 800c 	str.w	r8, [r4, #12]
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);  
 8003358:	f7ff fcb0 	bl	8002cbc <HAL_SDRAM_SendCommand>
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800335c:	2303      	movs	r3, #3
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800335e:	4621      	mov	r1, r4
 8003360:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003364:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 8003366:	e884 0088 	stmia.w	r4, {r3, r7}
  Command.AutoRefreshNumber      = 4;
 800336a:	f8c4 9008 	str.w	r9, [r4, #8]
  Command.ModeRegisterDefinition = 0;
 800336e:	f8c4 800c 	str.w	r8, [r4, #12]
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8003372:	f7ff fca3 	bl	8002cbc <HAL_SDRAM_SendCommand>
  
  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8003376:	f44f 730c 	mov.w	r3, #560	; 0x230
 800337a:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;
 800337c:	9b01      	ldr	r3, [sp, #4]
 800337e:	60e3      	str	r3, [r4, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8003380:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003384:	4621      	mov	r1, r4
 8003386:	4628      	mov	r0, r5
  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003388:	f8c4 9000 	str.w	r9, [r4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 800338c:	6067      	str	r7, [r4, #4]
  Command.AutoRefreshNumber      = 1;
 800338e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8003390:	f7ff fc94 	bl	8002cbc <HAL_SDRAM_SendCommand>
  
  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT); 
 8003394:	f240 516a 	movw	r1, #1386	; 0x56a
 8003398:	4628      	mov	r0, r5
 800339a:	f7ff fca6 	bl	8002cea <HAL_SDRAM_ProgramRefreshRate>
}
 800339e:	b003      	add	sp, #12
 80033a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80033a4:	2001be80 	.word	0x2001be80
 80033a8:	2001c058 	.word	0x2001c058

080033ac <MX_DMA2D_Init>:
/* DMA2D init function */
void MX_DMA2D_Init(void) 
{
/* Configure the DMA2D default mode */ 

  hdma2d.Instance = DMA2D;
 80033ac:	480d      	ldr	r0, [pc, #52]	; (80033e4 <MX_DMA2D_Init+0x38>)
{
 80033ae:	b508      	push	{r3, lr}
  hdma2d.Instance = DMA2D;
 80033b0:	4b0d      	ldr	r3, [pc, #52]	; (80033e8 <MX_DMA2D_Init+0x3c>)
 80033b2:	6003      	str	r3, [r0, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 80033b4:	2202      	movs	r2, #2
  hdma2d.Init.Mode = DMA2D_M2M;
 80033b6:	2300      	movs	r3, #0
  hdma2d.Init.OutputOffset = 0;
  hdma2d.LayerCfg[1].InputOffset = 0;
 80033b8:	6283      	str	r3, [r0, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80033ba:	62c2      	str	r2, [r0, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80033bc:	6303      	str	r3, [r0, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80033be:	6343      	str	r3, [r0, #52]	; 0x34
  hdma2d.Init.Mode = DMA2D_M2M;
 80033c0:	6043      	str	r3, [r0, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 80033c2:	6082      	str	r2, [r0, #8]
  hdma2d.Init.OutputOffset = 0;
 80033c4:	60c3      	str	r3, [r0, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80033c6:	f7fd ff59 	bl	800127c <HAL_DMA2D_Init>
 80033ca:	b108      	cbz	r0, 80033d0 <MX_DMA2D_Init+0x24>
  {
    Error_Handler( );
 80033cc:	f7fd fa14 	bl	80007f8 <Error_Handler>
  }

  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80033d0:	2101      	movs	r1, #1
 80033d2:	4804      	ldr	r0, [pc, #16]	; (80033e4 <MX_DMA2D_Init+0x38>)
 80033d4:	f7fe f80a 	bl	80013ec <HAL_DMA2D_ConfigLayer>
 80033d8:	b118      	cbz	r0, 80033e2 <MX_DMA2D_Init+0x36>
  {
    Error_Handler( );
  }

}
 80033da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler( );
 80033de:	f7fd ba0b 	b.w	80007f8 <Error_Handler>
 80033e2:	bd08      	pop	{r3, pc}
 80033e4:	2001c018 	.word	0x2001c018
 80033e8:	4002b000 	.word	0x4002b000

080033ec <HAL_LTDC_MspInit>:

/*  MSPInit/deInit Implementation */

void HAL_LTDC_MspInit(LTDC_HandleTypeDef* ltdcHandle)
{
 80033ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct;
  if(ltdcHandle->Instance==LTDC)
 80033ee:	6802      	ldr	r2, [r0, #0]
 80033f0:	4b39      	ldr	r3, [pc, #228]	; (80034d8 <HAL_LTDC_MspInit+0xec>)
 80033f2:	429a      	cmp	r2, r3
{
 80033f4:	b087      	sub	sp, #28
  if(ltdcHandle->Instance==LTDC)
 80033f6:	d16c      	bne.n	80034d2 <HAL_LTDC_MspInit+0xe6>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Enable Peripheral clock */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80033f8:	2400      	movs	r4, #0
 80033fa:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 80033fe:	9400      	str	r4, [sp, #0]
 8003400:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003402:	4836      	ldr	r0, [pc, #216]	; (80034dc <HAL_LTDC_MspInit+0xf0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8003404:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8003408:	645a      	str	r2, [r3, #68]	; 0x44
 800340a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800340c:	9403      	str	r4, [sp, #12]
    __HAL_RCC_LTDC_CLK_ENABLE();
 800340e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003412:	9300      	str	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003414:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003416:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8003418:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800341a:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800341c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003420:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8003422:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003424:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003426:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003428:	f7fe f834 	bl	8001494 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 800342c:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003430:	a901      	add	r1, sp, #4
 8003432:	482b      	ldr	r0, [pc, #172]	; (80034e0 <HAL_LTDC_MspInit+0xf4>)
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8003434:	9301      	str	r3, [sp, #4]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8003436:	2709      	movs	r7, #9
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003438:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800343a:	9403      	str	r4, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800343c:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800343e:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003440:	f7fe f828 	bl	8001494 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8003444:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003446:	a901      	add	r1, sp, #4
 8003448:	4826      	ldr	r0, [pc, #152]	; (80034e4 <HAL_LTDC_MspInit+0xf8>)
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800344a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800344c:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800344e:	9403      	str	r4, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003450:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8003452:	9705      	str	r7, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003454:	f7fe f81e 	bl	8001494 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8003458:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800345c:	a901      	add	r1, sp, #4
 800345e:	4821      	ldr	r0, [pc, #132]	; (80034e4 <HAL_LTDC_MspInit+0xf8>)
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8003460:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003462:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003464:	9403      	str	r4, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003466:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003468:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800346a:	f7fe f813 	bl	8001494 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800346e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003472:	a901      	add	r1, sp, #4
 8003474:	481c      	ldr	r0, [pc, #112]	; (80034e8 <HAL_LTDC_MspInit+0xfc>)
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8003476:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003478:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800347a:	9403      	str	r4, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800347c:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800347e:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003480:	f7fe f808 	bl	8001494 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8003484:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003486:	a901      	add	r1, sp, #4
 8003488:	4818      	ldr	r0, [pc, #96]	; (80034ec <HAL_LTDC_MspInit+0x100>)
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800348a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800348c:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800348e:	9403      	str	r4, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003490:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003492:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003494:	f7fd fffe 	bl	8001494 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8003498:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800349a:	a901      	add	r1, sp, #4
 800349c:	4814      	ldr	r0, [pc, #80]	; (80034f0 <HAL_LTDC_MspInit+0x104>)
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800349e:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034a0:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034a2:	9403      	str	r4, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80034a4:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80034a6:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034a8:	f7fd fff4 	bl	8001494 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80034ac:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80034b0:	a901      	add	r1, sp, #4
 80034b2:	480d      	ldr	r0, [pc, #52]	; (80034e8 <HAL_LTDC_MspInit+0xfc>)
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80034b4:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034b6:	9502      	str	r5, [sp, #8]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034b8:	9403      	str	r4, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80034ba:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80034bc:	9705      	str	r7, [sp, #20]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80034be:	f7fd ffe9 	bl	8001494 <HAL_GPIO_Init>

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 15, 0);
 80034c2:	2058      	movs	r0, #88	; 0x58
 80034c4:	4622      	mov	r2, r4
 80034c6:	210f      	movs	r1, #15
 80034c8:	f7fd fe62 	bl	8001190 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80034cc:	2058      	movs	r0, #88	; 0x58
 80034ce:	f7fd fe93 	bl	80011f8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }
}
 80034d2:	b007      	add	sp, #28
 80034d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80034d6:	bf00      	nop
 80034d8:	40016800 	.word	0x40016800
 80034dc:	40021400 	.word	0x40021400
 80034e0:	40020000 	.word	0x40020000
 80034e4:	40020400 	.word	0x40020400
 80034e8:	40021800 	.word	0x40021800
 80034ec:	40020800 	.word	0x40020800
 80034f0:	40020c00 	.word	0x40020c00

080034f4 <HAL_LTDC_MspDeInit>:

void HAL_LTDC_MspDeInit(LTDC_HandleTypeDef* ltdcHandle)
{
 80034f4:	b508      	push	{r3, lr}
  if(ltdcHandle->Instance==LTDC)
 80034f6:	6802      	ldr	r2, [r0, #0]
 80034f8:	4b14      	ldr	r3, [pc, #80]	; (800354c <HAL_LTDC_MspDeInit+0x58>)
 80034fa:	429a      	cmp	r2, r3
 80034fc:	d125      	bne.n	800354a <HAL_LTDC_MspDeInit+0x56>
  {
  /* USER CODE BEGIN LTDC_MspDeInit 0 */

  /* USER CODE END LTDC_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_LTDC_CLK_DISABLE();
 80034fe:	4a14      	ldr	r2, [pc, #80]	; (8003550 <HAL_LTDC_MspDeInit+0x5c>)
    PG11     ------> LTDC_B3
    PG12     ------> LTDC_B4
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7 
    */
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_10);
 8003500:	4814      	ldr	r0, [pc, #80]	; (8003554 <HAL_LTDC_MspDeInit+0x60>)
    __HAL_RCC_LTDC_CLK_DISABLE();
 8003502:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8003504:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8003508:	6453      	str	r3, [r2, #68]	; 0x44
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_10);
 800350a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800350e:	f7fe f8ad 	bl	800166c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8003512:	f641 0158 	movw	r1, #6232	; 0x1858
 8003516:	4810      	ldr	r0, [pc, #64]	; (8003558 <HAL_LTDC_MspDeInit+0x64>)
 8003518:	f7fe f8a8 	bl	800166c <HAL_GPIO_DeInit>
                          |GPIO_PIN_12);

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_10|GPIO_PIN_11 
 800351c:	f640 7103 	movw	r1, #3843	; 0xf03
 8003520:	480e      	ldr	r0, [pc, #56]	; (800355c <HAL_LTDC_MspDeInit+0x68>)
 8003522:	f7fe f8a3 	bl	800166c <HAL_GPIO_DeInit>
                          |GPIO_PIN_8|GPIO_PIN_9);

    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_10|GPIO_PIN_11 
 8003526:	f44f 51e6 	mov.w	r1, #7360	; 0x1cc0
 800352a:	480d      	ldr	r0, [pc, #52]	; (8003560 <HAL_LTDC_MspDeInit+0x6c>)
 800352c:	f7fe f89e 	bl	800166c <HAL_GPIO_DeInit>
                          |GPIO_PIN_12);

    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_6|GPIO_PIN_7);
 8003530:	21c0      	movs	r1, #192	; 0xc0
 8003532:	480c      	ldr	r0, [pc, #48]	; (8003564 <HAL_LTDC_MspDeInit+0x70>)
 8003534:	f7fe f89a 	bl	800166c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_3);
 8003538:	480b      	ldr	r0, [pc, #44]	; (8003568 <HAL_LTDC_MspDeInit+0x74>)
 800353a:	2108      	movs	r1, #8
 800353c:	f7fe f896 	bl	800166c <HAL_GPIO_DeInit>

    /* Peripheral interrupt Deinit*/
    HAL_NVIC_DisableIRQ(LTDC_IRQn);
 8003540:	2058      	movs	r0, #88	; 0x58

  /* USER CODE BEGIN LTDC_MspDeInit 1 */

  /* USER CODE END LTDC_MspDeInit 1 */
  }
}
 8003542:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_NVIC_DisableIRQ(LTDC_IRQn);
 8003546:	f7fd be63 	b.w	8001210 <HAL_NVIC_DisableIRQ>
 800354a:	bd08      	pop	{r3, pc}
 800354c:	40016800 	.word	0x40016800
 8003550:	40023800 	.word	0x40023800
 8003554:	40021400 	.word	0x40021400
 8003558:	40020000 	.word	0x40020000
 800355c:	40020400 	.word	0x40020400
 8003560:	40021800 	.word	0x40021800
 8003564:	40020800 	.word	0x40020800
 8003568:	40020c00 	.word	0x40020c00

0800356c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800356c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (FMC_Initialized) {
 8003570:	4b2c      	ldr	r3, [pc, #176]	; (8003624 <HAL_SDRAM_MspInit+0xb8>)
 8003572:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8003574:	b086      	sub	sp, #24
  if (FMC_Initialized) {
 8003576:	2c00      	cmp	r4, #0
 8003578:	d151      	bne.n	800361e <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 800357a:	f04f 0801 	mov.w	r8, #1
 800357e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8003582:	4b29      	ldr	r3, [pc, #164]	; (8003628 <HAL_SDRAM_MspInit+0xbc>)
 8003584:	9400      	str	r4, [sp, #0]
 8003586:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003588:	4828      	ldr	r0, [pc, #160]	; (800362c <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800358a:	ea42 0208 	orr.w	r2, r2, r8
 800358e:	639a      	str	r2, [r3, #56]	; 0x38
 8003590:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003592:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8003594:	ea03 0308 	and.w	r3, r3, r8
 8003598:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800359a:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800359c:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800359e:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80035a0:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035a2:	9702      	str	r7, [sp, #8]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
 80035a4:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80035a8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
 80035aa:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80035ac:	9604      	str	r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80035ae:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80035b0:	f7fd ff70 	bl	8001494 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80035b4:	a901      	add	r1, sp, #4
 80035b6:	481e      	ldr	r0, [pc, #120]	; (8003630 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80035b8:	f8cd 8004 	str.w	r8, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035bc:	9702      	str	r7, [sp, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80035be:	9403      	str	r4, [sp, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80035c0:	9604      	str	r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80035c2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80035c4:	f7fd ff66 	bl	8001494 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 80035c8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80035cc:	a901      	add	r1, sp, #4
 80035ce:	4819      	ldr	r0, [pc, #100]	; (8003634 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 80035d0:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035d2:	9702      	str	r7, [sp, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80035d4:	9403      	str	r4, [sp, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80035d6:	9604      	str	r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80035d8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80035da:	f7fd ff5b 	bl	8001494 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 80035de:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80035e2:	a901      	add	r1, sp, #4
 80035e4:	4814      	ldr	r0, [pc, #80]	; (8003638 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 80035e6:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035e8:	9702      	str	r7, [sp, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80035ea:	9403      	str	r4, [sp, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80035ec:	9604      	str	r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80035ee:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80035f0:	f7fd ff50 	bl	8001494 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 80035f4:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80035f8:	a901      	add	r1, sp, #4
 80035fa:	4810      	ldr	r0, [pc, #64]	; (800363c <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 80035fc:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80035fe:	9702      	str	r7, [sp, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003600:	9403      	str	r4, [sp, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003602:	9604      	str	r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8003604:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003606:	f7fd ff45 	bl	8001494 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800360a:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800360c:	a901      	add	r1, sp, #4
 800360e:	480c      	ldr	r0, [pc, #48]	; (8003640 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8003610:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003612:	9702      	str	r7, [sp, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003614:	9403      	str	r4, [sp, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003616:	9604      	str	r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8003618:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800361a:	f7fd ff3b 	bl	8001494 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800361e:	b006      	add	sp, #24
 8003620:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003624:	2001be90 	.word	0x2001be90
 8003628:	40023800 	.word	0x40023800
 800362c:	40021400 	.word	0x40021400
 8003630:	40020800 	.word	0x40020800
 8003634:	40021800 	.word	0x40021800
 8003638:	40021000 	.word	0x40021000
 800363c:	40020c00 	.word	0x40020c00
 8003640:	40020400 	.word	0x40020400

08003644 <HAL_DMA2D_MspInit>:

  /* USER CODE END SDRAM_MspDeInit 1 */
}

void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* dma2dHandle)
{
 8003644:	b507      	push	{r0, r1, r2, lr}
  if(dma2dHandle->Instance==DMA2D)
 8003646:	4b0d      	ldr	r3, [pc, #52]	; (800367c <HAL_DMA2D_MspInit+0x38>)
 8003648:	6802      	ldr	r2, [r0, #0]
 800364a:	429a      	cmp	r2, r3
 800364c:	d113      	bne.n	8003676 <HAL_DMA2D_MspInit+0x32>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Enable Peripheral clock */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800364e:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8003652:	2200      	movs	r2, #0
 8003654:	9201      	str	r2, [sp, #4]
 8003656:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003658:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800365c:	6319      	str	r1, [r3, #48]	; 0x30
 800365e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003660:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003664:	9301      	str	r3, [sp, #4]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 15, 0);
 8003666:	205a      	movs	r0, #90	; 0x5a
 8003668:	210f      	movs	r1, #15
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800366a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 15, 0);
 800366c:	f7fd fd90 	bl	8001190 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8003670:	205a      	movs	r0, #90	; 0x5a
 8003672:	f7fd fdc1 	bl	80011f8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }
}
 8003676:	b003      	add	sp, #12
 8003678:	f85d fb04 	ldr.w	pc, [sp], #4
 800367c:	4002b000 	.word	0x4002b000

08003680 <TransferComplete>:
 *         you can add your own implementation.
 * @retval None
 */
static void TransferComplete(DMA2D_HandleTypeDef *hdma2d)
{
	TransferInProgress = 0;
 8003680:	4b01      	ldr	r3, [pc, #4]	; (8003688 <TransferComplete+0x8>)
 8003682:	2200      	movs	r2, #0
 8003684:	701a      	strb	r2, [r3, #0]
 8003686:	4770      	bx	lr
 8003688:	2001be94 	.word	0x2001be94

0800368c <GetBufferSize>:
 * @param  LayerIndex : Layer Index
 * @retval None.
 */
static U32 GetBufferSize(U32 LayerIndex) 
{
	return (layer_prop[LayerIndex].xSize * layer_prop[LayerIndex].ySize * layer_prop[LayerIndex].BytesPerPixel);
 800368c:	4a04      	ldr	r2, [pc, #16]	; (80036a0 <GetBufferSize+0x14>)
 800368e:	231c      	movs	r3, #28
 8003690:	fb03 2300 	mla	r3, r3, r0, r2
 8003694:	68da      	ldr	r2, [r3, #12]
 8003696:	6918      	ldr	r0, [r3, #16]
 8003698:	695b      	ldr	r3, [r3, #20]
 800369a:	4350      	muls	r0, r2
}
 800369c:	4358      	muls	r0, r3
 800369e:	4770      	bx	lr
 80036a0:	2001be98 	.word	0x2001be98

080036a4 <_DMA_ExecOperation>:
	if ( TransferInProgress == 0 )
 80036a4:	4b02      	ldr	r3, [pc, #8]	; (80036b0 <_DMA_ExecOperation+0xc>)
 80036a6:	781a      	ldrb	r2, [r3, #0]
 80036a8:	2a00      	cmp	r2, #0
 80036aa:	d1fc      	bne.n	80036a6 <_DMA_ExecOperation+0x2>
 80036ac:	4770      	bx	lr
 80036ae:	bf00      	nop
 80036b0:	2001be94 	.word	0x2001be94

080036b4 <_DMA_ConvertColor>:
static void _DMA_ConvertColor(void * pSrc, void * pDst,  U32 PixelFormatSrc, U32 PixelFormatDst, U32 NumItems) {
 80036b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80036b6:	9d06      	ldr	r5, [sp, #24]
	DMA2D->CR      = 0x00010000UL | (1 << 9);         /* Control Register (Memory to memory with pixel format conversion and TCIE) */
 80036b8:	4c0e      	ldr	r4, [pc, #56]	; (80036f4 <_DMA_ConvertColor+0x40>)
static void _DMA_ConvertColor(void * pSrc, void * pDst,  U32 PixelFormatSrc, U32 PixelFormatDst, U32 NumItems) {
 80036ba:	4617      	mov	r7, r2
 80036bc:	461e      	mov	r6, r3
	_DMA_ExecOperation();
 80036be:	f7ff fff1 	bl	80036a4 <_DMA_ExecOperation>
	TransferInProgress = 1;
 80036c2:	4b0d      	ldr	r3, [pc, #52]	; (80036f8 <_DMA_ConvertColor+0x44>)
 80036c4:	2201      	movs	r2, #1
 80036c6:	701a      	strb	r2, [r3, #0]
	DMA2D->NLR     = (U32)(NumItems << 16) | 1;       /* Number of Line Register (Size configuration of area to be transfered) */
 80036c8:	042d      	lsls	r5, r5, #16
	DMA2D->CR      = 0x00010000UL | (1 << 9);         /* Control Register (Memory to memory with pixel format conversion and TCIE) */
 80036ca:	f44f 3381 	mov.w	r3, #66048	; 0x10200
 80036ce:	6023      	str	r3, [r4, #0]
	DMA2D->NLR     = (U32)(NumItems << 16) | 1;       /* Number of Line Register (Size configuration of area to be transfered) */
 80036d0:	4315      	orrs	r5, r2
	DMA2D->FGMAR   = (U32)pSrc;                       /* Foreground Memory Address Register (Source address)  */
 80036d2:	60e0      	str	r0, [r4, #12]
	DMA2D->OMAR    = (U32)pDst;                       /* Output Memory Address Register (Destination address) */
 80036d4:	63e1      	str	r1, [r4, #60]	; 0x3c
	DMA2D->FGOR    = 0;                               /* Foreground Offset Register (Source line offset)  */
 80036d6:	2100      	movs	r1, #0
 80036d8:	6121      	str	r1, [r4, #16]
	DMA2D->OOR     = 0;                               /* Output Offset Register (Destination line offset) */
 80036da:	6421      	str	r1, [r4, #64]	; 0x40
	DMA2D->FGPFCCR = PixelFormatSrc;                  /* Foreground PFC Control Register (Defines the input pixel format) */
 80036dc:	61e7      	str	r7, [r4, #28]
	DMA2D->OPFCCR  = PixelFormatDst;                  /* Output PFC Control Register (Defines the output pixel format)    */
 80036de:	6366      	str	r6, [r4, #52]	; 0x34
	DMA2D->NLR     = (U32)(NumItems << 16) | 1;       /* Number of Line Register (Size configuration of area to be transfered) */
 80036e0:	6465      	str	r5, [r4, #68]	; 0x44
	DMA2D->CR     |= (1|DMA2D_IT_TC);
 80036e2:	6823      	ldr	r3, [r4, #0]
 80036e4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80036e8:	4313      	orrs	r3, r2
 80036ea:	6023      	str	r3, [r4, #0]
}
 80036ec:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	_DMA_ExecOperation();
 80036f0:	f7ff bfd8 	b.w	80036a4 <_DMA_ExecOperation>
 80036f4:	4002b000 	.word	0x4002b000
 80036f8:	2001be94 	.word	0x2001be94

080036fc <_DMA_DrawAlphaBitmap>:
/*********************************************************************
 *
 *       _DMA_DrawAlphaBitmap
 */
/**/
static void _DMA_DrawAlphaBitmap(void * pDst, const void * pSrc, int xSize, int ySize, int OffLineSrc, int OffLineDst, int PixelFormat) {
 80036fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003700:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8003702:	9e0a      	ldr	r6, [sp, #40]	; 0x28
	
	_DMA_ExecOperation();

	TransferInProgress = 1;

	DMA2D->CR      = 0x00020000UL | (1 << 9);         /* Control Register (Memory to memory with blending of FG and BG and TCIE) */
 8003704:	4c11      	ldr	r4, [pc, #68]	; (800374c <_DMA_DrawAlphaBitmap+0x50>)
static void _DMA_DrawAlphaBitmap(void * pDst, const void * pSrc, int xSize, int ySize, int OffLineSrc, int OffLineDst, int PixelFormat) {
 8003706:	4690      	mov	r8, r2
 8003708:	4689      	mov	r9, r1
 800370a:	461d      	mov	r5, r3
 800370c:	9908      	ldr	r1, [sp, #32]
	_DMA_ExecOperation();
 800370e:	f7ff ffc9 	bl	80036a4 <_DMA_ExecOperation>
	TransferInProgress = 1;
 8003712:	4b0f      	ldr	r3, [pc, #60]	; (8003750 <_DMA_DrawAlphaBitmap+0x54>)
 8003714:	2201      	movs	r2, #1
 8003716:	701a      	strb	r2, [r3, #0]
	DMA2D->BGOR    = OffLineDst;                      /* Background Offset Register (Destination line offset)                    */
	DMA2D->OOR     = OffLineDst;                      /* Output Offset Register (Destination line offset)                        */
	DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;      /* Foreground PFC Control Register (Defines the input pixel format)        */
	DMA2D->BGPFCCR = PixelFormat;                     /* Background PFC Control Register (Defines the destination pixel format)  */
	DMA2D->OPFCCR  = PixelFormat;                     /* Output     PFC Control Register (Defines the output pixel format)       */
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize; /* Number of Line Register (Size configuration of area to be transfered)   */
 8003718:	b2ad      	uxth	r5, r5
	DMA2D->CR      = 0x00020000UL | (1 << 9);         /* Control Register (Memory to memory with blending of FG and BG and TCIE) */
 800371a:	4b0e      	ldr	r3, [pc, #56]	; (8003754 <_DMA_DrawAlphaBitmap+0x58>)
 800371c:	6023      	str	r3, [r4, #0]
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize; /* Number of Line Register (Size configuration of area to be transfered)   */
 800371e:	ea45 4508 	orr.w	r5, r5, r8, lsl #16
	DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;      /* Foreground PFC Control Register (Defines the input pixel format)        */
 8003722:	2300      	movs	r3, #0
	DMA2D->FGMAR   = (U32)pSrc;                       /* Foreground Memory Address Register (Source address)                     */
 8003724:	f8c4 900c 	str.w	r9, [r4, #12]
	DMA2D->BGMAR   = (U32)pDst;                       /* Background Memory Address Register (Destination address)                */
 8003728:	6160      	str	r0, [r4, #20]
	DMA2D->OMAR    = (U32)pDst;                       /* Output Memory Address Register (Destination address)                    */
 800372a:	63e0      	str	r0, [r4, #60]	; 0x3c
	DMA2D->FGOR    = OffLineSrc;                      /* Foreground Offset Register (Source line offset)                         */
 800372c:	6121      	str	r1, [r4, #16]
	DMA2D->BGOR    = OffLineDst;                      /* Background Offset Register (Destination line offset)                    */
 800372e:	61a7      	str	r7, [r4, #24]
	DMA2D->OOR     = OffLineDst;                      /* Output Offset Register (Destination line offset)                        */
 8003730:	6427      	str	r7, [r4, #64]	; 0x40
	DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;      /* Foreground PFC Control Register (Defines the input pixel format)        */
 8003732:	61e3      	str	r3, [r4, #28]
	DMA2D->BGPFCCR = PixelFormat;                     /* Background PFC Control Register (Defines the destination pixel format)  */
 8003734:	6266      	str	r6, [r4, #36]	; 0x24
	DMA2D->OPFCCR  = PixelFormat;                     /* Output     PFC Control Register (Defines the output pixel format)       */
 8003736:	6366      	str	r6, [r4, #52]	; 0x34
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize; /* Number of Line Register (Size configuration of area to be transfered)   */
 8003738:	6465      	str	r5, [r4, #68]	; 0x44

	DMA2D->CR     |= (1|DMA2D_IT_TC);
 800373a:	6823      	ldr	r3, [r4, #0]
 800373c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003740:	4313      	orrs	r3, r2
 8003742:	6023      	str	r3, [r4, #0]

	_DMA_ExecOperation();
}
 8003744:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	_DMA_ExecOperation();
 8003748:	f7ff bfac 	b.w	80036a4 <_DMA_ExecOperation>
 800374c:	4002b000 	.word	0x4002b000
 8003750:	2001be94 	.word	0x2001be94
 8003754:	00020200 	.word	0x00020200

08003758 <_LCD_DrawMemdevAlpha>:

/*********************************************************************
 *
 *       _LCD_DrawMemdevAlpha
 */
static void _LCD_DrawMemdevAlpha(void * pDst, const void * pSrc, int xSize, int ySize, int BytesPerLineDst, int BytesPerLineSrc) {
 8003758:	b5f0      	push	{r4, r5, r6, r7, lr}
 800375a:	b085      	sub	sp, #20
	int OffLineSrc, OffLineDst;

	OffLineSrc = (BytesPerLineSrc / 4) - xSize;
	OffLineDst = (BytesPerLineDst / 4) - xSize;
	_DMA_DrawAlphaBitmap(pDst, pSrc, xSize, ySize, OffLineSrc, OffLineDst, LTDC_PIXEL_FORMAT_ARGB8888);
 800375c:	2400      	movs	r4, #0
 800375e:	9402      	str	r4, [sp, #8]
	OffLineDst = (BytesPerLineDst / 4) - xSize;
 8003760:	2704      	movs	r7, #4
 8003762:	9d0a      	ldr	r5, [sp, #40]	; 0x28
	OffLineSrc = (BytesPerLineSrc / 4) - xSize;
 8003764:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
	OffLineDst = (BytesPerLineDst / 4) - xSize;
 8003766:	fb95 f5f7 	sdiv	r5, r5, r7
	OffLineSrc = (BytesPerLineSrc / 4) - xSize;
 800376a:	fb94 f4f7 	sdiv	r4, r4, r7
	OffLineDst = (BytesPerLineDst / 4) - xSize;
 800376e:	1aad      	subs	r5, r5, r2
	OffLineSrc = (BytesPerLineSrc / 4) - xSize;
 8003770:	1aa4      	subs	r4, r4, r2
	_DMA_DrawAlphaBitmap(pDst, pSrc, xSize, ySize, OffLineSrc, OffLineDst, LTDC_PIXEL_FORMAT_ARGB8888);
 8003772:	9501      	str	r5, [sp, #4]
 8003774:	9400      	str	r4, [sp, #0]
 8003776:	f7ff ffc1 	bl	80036fc <_DMA_DrawAlphaBitmap>
}
 800377a:	b005      	add	sp, #20
 800377c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08003780 <GetPixelformat>:
static U32 GetPixelformat(U32 LayerIndex) {
 8003780:	b510      	push	{r4, lr}
	if (LayerIndex >= GUI_COUNTOF(apColorConvAPI)) {
 8003782:	bb58      	cbnz	r0, 80037dc <GetPixelformat+0x5c>
	if ((apColorConvAPI[LayerIndex] == GUICC_M8888I)| (apColorConvAPI[LayerIndex] == GUICC_M8888)|(apColorConvAPI[LayerIndex] == GUICC_8888))
 8003784:	4b17      	ldr	r3, [pc, #92]	; (80037e4 <GetPixelformat+0x64>)
 8003786:	4918      	ldr	r1, [pc, #96]	; (80037e8 <GetPixelformat+0x68>)
 8003788:	4c18      	ldr	r4, [pc, #96]	; (80037ec <GetPixelformat+0x6c>)
 800378a:	428b      	cmp	r3, r1
 800378c:	f04f 0201 	mov.w	r2, #1
 8003790:	bf18      	it	ne
 8003792:	4602      	movne	r2, r0
 8003794:	42a3      	cmp	r3, r4
 8003796:	f04f 0101 	mov.w	r1, #1
 800379a:	bf18      	it	ne
 800379c:	2100      	movne	r1, #0
 800379e:	430a      	orrs	r2, r1
 80037a0:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 80037a4:	d11d      	bne.n	80037e2 <GetPixelformat+0x62>
 80037a6:	4c12      	ldr	r4, [pc, #72]	; (80037f0 <GetPixelformat+0x70>)
 80037a8:	42a3      	cmp	r3, r4
 80037aa:	f04f 0101 	mov.w	r1, #1
 80037ae:	bf18      	it	ne
 80037b0:	4611      	movne	r1, r2
 80037b2:	b2c9      	uxtb	r1, r1
 80037b4:	b9a9      	cbnz	r1, 80037e2 <GetPixelformat+0x62>
	} else if ( (apColorConvAPI[LayerIndex] == GUICC_M888) | (apColorConvAPI[LayerIndex] == GUICC_888)   ) {
 80037b6:	480f      	ldr	r0, [pc, #60]	; (80037f4 <GetPixelformat+0x74>)
 80037b8:	4283      	cmp	r3, r0
 80037ba:	f04f 0201 	mov.w	r2, #1
 80037be:	bf18      	it	ne
 80037c0:	460a      	movne	r2, r1
 80037c2:	b2d2      	uxtb	r2, r2
 80037c4:	b962      	cbnz	r2, 80037e0 <GetPixelformat+0x60>
 80037c6:	480c      	ldr	r0, [pc, #48]	; (80037f8 <GetPixelformat+0x78>)
 80037c8:	4283      	cmp	r3, r0
 80037ca:	f04f 0101 	mov.w	r1, #1
 80037ce:	bf18      	it	ne
 80037d0:	4611      	movne	r1, r2
 80037d2:	f011 0fff 	tst.w	r1, #255	; 0xff
 80037d6:	d103      	bne.n	80037e0 <GetPixelformat+0x60>
		return LTDC_PIXEL_FORMAT_RGB565;
 80037d8:	2002      	movs	r0, #2
 80037da:	bd10      	pop	{r4, pc}
		return 0;
 80037dc:	2000      	movs	r0, #0
 80037de:	bd10      	pop	{r4, pc}
		return LTDC_PIXEL_FORMAT_RGB888;
 80037e0:	2001      	movs	r0, #1
} 
 80037e2:	bd10      	pop	{r4, pc}
 80037e4:	08017474 	.word	0x08017474
 80037e8:	0801745c 	.word	0x0801745c
 80037ec:	080174d4 	.word	0x080174d4
 80037f0:	080174a4 	.word	0x080174a4
 80037f4:	080174bc 	.word	0x080174bc
 80037f8:	0801748c 	.word	0x0801748c

080037fc <DMA2D_CopyBuffer>:
{
 80037fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003800:	9d08      	ldr	r5, [sp, #32]
 8003802:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 8003806:	9f0a      	ldr	r7, [sp, #40]	; 0x28
	DMA2D->CR      = 0x00000000UL | (1 << 9);
 8003808:	4c10      	ldr	r4, [pc, #64]	; (800384c <DMA2D_CopyBuffer+0x50>)
{
 800380a:	468a      	mov	sl, r1
 800380c:	4691      	mov	r9, r2
 800380e:	461e      	mov	r6, r3
	_DMA_ExecOperation();
 8003810:	f7ff ff48 	bl	80036a4 <_DMA_ExecOperation>
	TransferInProgress = 1;
 8003814:	4b0e      	ldr	r3, [pc, #56]	; (8003850 <DMA2D_CopyBuffer+0x54>)
 8003816:	2201      	movs	r2, #1
 8003818:	701a      	strb	r2, [r3, #0]
	PixelFormat = GetPixelformat(LayerIndex);
 800381a:	f7ff ffb1 	bl	8003780 <GetPixelformat>
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 800381e:	b2ad      	uxth	r5, r5
	DMA2D->CR      = 0x00000000UL | (1 << 9);
 8003820:	f44f 7300 	mov.w	r3, #512	; 0x200
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 8003824:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
	DMA2D->CR      = 0x00000000UL | (1 << 9);
 8003828:	6023      	str	r3, [r4, #0]
	DMA2D->FGMAR   = (U32)pSrc;
 800382a:	f8c4 a00c 	str.w	sl, [r4, #12]
	DMA2D->OMAR    = (U32)pDst;
 800382e:	f8c4 903c 	str.w	r9, [r4, #60]	; 0x3c
	DMA2D->FGOR    = OffLineSrc;
 8003832:	f8c4 8010 	str.w	r8, [r4, #16]
	DMA2D->OOR     = OffLineDst;
 8003836:	6427      	str	r7, [r4, #64]	; 0x40
	DMA2D->FGPFCCR = PixelFormat;
 8003838:	61e0      	str	r0, [r4, #28]
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 800383a:	6465      	str	r5, [r4, #68]	; 0x44
	DMA2D->CR     |= DMA2D_CR_START;
 800383c:	6823      	ldr	r3, [r4, #0]
 800383e:	f043 0301 	orr.w	r3, r3, #1
 8003842:	6023      	str	r3, [r4, #0]
}
 8003844:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	_DMA_ExecOperation();
 8003848:	f7ff bf2c 	b.w	80036a4 <_DMA_ExecOperation>
 800384c:	4002b000 	.word	0x4002b000
 8003850:	2001be94 	.word	0x2001be94

08003854 <LCD_LL_CopyBuffer>:
{
 8003854:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003856:	b085      	sub	sp, #20
 8003858:	4615      	mov	r5, r2
 800385a:	4606      	mov	r6, r0
	BufferSize = GetBufferSize(LayerIndex);
 800385c:	f7ff ff16 	bl	800368c <GetBufferSize>
	AddrSrc    = layer_prop[LayerIndex].address + BufferSize * IndexSrc;
 8003860:	231c      	movs	r3, #28
 8003862:	4373      	muls	r3, r6
 8003864:	4a09      	ldr	r2, [pc, #36]	; (800388c <LCD_LL_CopyBuffer+0x38>)
 8003866:	58d7      	ldr	r7, [r2, r3]
 8003868:	18d4      	adds	r4, r2, r3
	DMA2D_CopyBuffer(LayerIndex, (void *)AddrSrc, (void *)AddrDst, layer_prop[LayerIndex].xSize, layer_prop[LayerIndex].ySize, 0, 0);
 800386a:	2300      	movs	r3, #0
 800386c:	9302      	str	r3, [sp, #8]
 800386e:	9301      	str	r3, [sp, #4]
 8003870:	6923      	ldr	r3, [r4, #16]
 8003872:	9300      	str	r3, [sp, #0]
 8003874:	fb00 7205 	mla	r2, r0, r5, r7
 8003878:	fb00 7101 	mla	r1, r0, r1, r7
 800387c:	68e3      	ldr	r3, [r4, #12]
 800387e:	4630      	mov	r0, r6
 8003880:	f7ff ffbc 	bl	80037fc <DMA2D_CopyBuffer>
	layer_prop[LayerIndex].buffer_index = IndexDst;
 8003884:	60a5      	str	r5, [r4, #8]
}
 8003886:	b005      	add	sp, #20
 8003888:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800388a:	bf00      	nop
 800388c:	2001be98 	.word	0x2001be98

08003890 <LCD_LL_CopyRect>:
{
 8003890:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003894:	4607      	mov	r7, r0
 8003896:	469a      	mov	sl, r3
 8003898:	4614      	mov	r4, r2
	AddrSrc = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].pending_buffer + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 800389a:	261c      	movs	r6, #28
	BufferSize = GetBufferSize(LayerIndex);
 800389c:	f7ff fef6 	bl	800368c <GetBufferSize>
	AddrSrc = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].pending_buffer + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 80038a0:	4b11      	ldr	r3, [pc, #68]	; (80038e8 <LCD_LL_CopyRect+0x58>)
 80038a2:	437e      	muls	r6, r7
{
 80038a4:	ad08      	add	r5, sp, #32
 80038a6:	e895 0320 	ldmia.w	r5, {r5, r8, r9}
	AddrSrc = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].pending_buffer + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 80038aa:	199a      	adds	r2, r3, r6
 80038ac:	599b      	ldr	r3, [r3, r6]
 80038ae:	f8d2 e014 	ldr.w	lr, [r2, #20]
 80038b2:	68d6      	ldr	r6, [r2, #12]
 80038b4:	6852      	ldr	r2, [r2, #4]
	DMA2D_CopyBuffer(LayerIndex, (void *)AddrSrc, (void *)AddrDst, xSize, ySize, layer_prop[LayerIndex].xSize - xSize, 0);
 80038b6:	f8cd 9020 	str.w	r9, [sp, #32]
	AddrSrc = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].pending_buffer + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 80038ba:	4350      	muls	r0, r2
 80038bc:	fb04 1406 	mla	r4, r4, r6, r1
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].pending_buffer + (y1 * layer_prop[LayerIndex].xSize + x1) * layer_prop[LayerIndex].BytesPerPixel;
 80038c0:	fb05 a206 	mla	r2, r5, r6, sl
 80038c4:	fb0e 3202 	mla	r2, lr, r2, r3
	AddrSrc = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].pending_buffer + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 80038c8:	fb0e 3404 	mla	r4, lr, r4, r3
	DMA2D_CopyBuffer(LayerIndex, (void *)AddrSrc, (void *)AddrDst, xSize, ySize, layer_prop[LayerIndex].xSize - xSize, 0);
 80038cc:	eba6 0608 	sub.w	r6, r6, r8
 80038d0:	2300      	movs	r3, #0
 80038d2:	930a      	str	r3, [sp, #40]	; 0x28
 80038d4:	1821      	adds	r1, r4, r0
 80038d6:	9609      	str	r6, [sp, #36]	; 0x24
 80038d8:	4643      	mov	r3, r8
 80038da:	4402      	add	r2, r0
 80038dc:	4638      	mov	r0, r7
}
 80038de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	DMA2D_CopyBuffer(LayerIndex, (void *)AddrSrc, (void *)AddrDst, xSize, ySize, layer_prop[LayerIndex].xSize - xSize, 0);
 80038e2:	f7ff bf8b 	b.w	80037fc <DMA2D_CopyBuffer>
 80038e6:	bf00      	nop
 80038e8:	2001be98 	.word	0x2001be98

080038ec <LCD_LL_DrawBitmap16bpp>:
 * @param  ySize:      Y size
 * @param  BytesPerLine
 * @retval None
 */
void LCD_LL_DrawBitmap16bpp(int LayerIndex, int x, int y, U16 const * p, int xSize, int ySize, int BytesPerLine)
{
 80038ec:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038f0:	4607      	mov	r7, r0
 80038f2:	4698      	mov	r8, r3
 80038f4:	4614      	mov	r4, r2
	U32 BufferSize, AddrDst;
	int OffLineSrc, OffLineDst;

	BufferSize = GetBufferSize(LayerIndex);
 80038f6:	f7ff fec9 	bl	800368c <GetBufferSize>
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 80038fa:	4a15      	ldr	r2, [pc, #84]	; (8003950 <LCD_LL_DrawBitmap16bpp+0x64>)
{
 80038fc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8003900:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8003904:	9d0c      	ldr	r5, [sp, #48]	; 0x30
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003906:	231c      	movs	r3, #28
 8003908:	437b      	muls	r3, r7
 800390a:	eb02 0e03 	add.w	lr, r2, r3
 800390e:	f8de 600c 	ldr.w	r6, [lr, #12]
 8003912:	fb04 1406 	mla	r4, r4, r6, r1
 8003916:	58d1      	ldr	r1, [r2, r3]
 8003918:	f8de 3014 	ldr.w	r3, [lr, #20]
 800391c:	f8de 2008 	ldr.w	r2, [lr, #8]
	OffLineSrc = (BytesPerLine / 2) - xSize;
	OffLineDst = layer_prop[LayerIndex].xSize - xSize;
	DMA2D_CopyBuffer(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
 8003920:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003924:	fb03 1404 	mla	r4, r3, r4, r1
	OffLineDst = layer_prop[LayerIndex].xSize - xSize;
 8003928:	eba6 0609 	sub.w	r6, r6, r9
	OffLineSrc = (BytesPerLine / 2) - xSize;
 800392c:	2302      	movs	r3, #2
	DMA2D_CopyBuffer(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
 800392e:	fb02 4200 	mla	r2, r2, r0, r4
	OffLineSrc = (BytesPerLine / 2) - xSize;
 8003932:	fb95 f5f3 	sdiv	r5, r5, r3
	DMA2D_CopyBuffer(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
 8003936:	4641      	mov	r1, r8
	OffLineSrc = (BytesPerLine / 2) - xSize;
 8003938:	eba5 0509 	sub.w	r5, r5, r9
	DMA2D_CopyBuffer(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
 800393c:	464b      	mov	r3, r9
 800393e:	4638      	mov	r0, r7
 8003940:	960c      	str	r6, [sp, #48]	; 0x30
 8003942:	950b      	str	r5, [sp, #44]	; 0x2c
}
 8003944:	b001      	add	sp, #4
 8003946:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	DMA2D_CopyBuffer(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
 800394a:	f7ff bf57 	b.w	80037fc <DMA2D_CopyBuffer>
 800394e:	bf00      	nop
 8003950:	2001be98 	.word	0x2001be98

08003954 <LCD_LL_DrawBitmap32bpp>:

static void LCD_LL_DrawBitmap32bpp(int LayerIndex, int x, int y, U8 const * p, int xSize, int ySize, int BytesPerLine)
{
 8003954:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003958:	4681      	mov	r9, r0
 800395a:	469a      	mov	sl, r3
 800395c:	4617      	mov	r7, r2
	U32 BufferSize, AddrDst;
	int OffLineSrc, OffLineDst;

	BufferSize = GetBufferSize(LayerIndex);
 800395e:	f7ff fe95 	bl	800368c <GetBufferSize>
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003962:	4b20      	ldr	r3, [pc, #128]	; (80039e4 <LCD_LL_DrawBitmap32bpp+0x90>)
{
 8003964:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003968:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800396a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 800396c:	221c      	movs	r2, #28
 800396e:	fb02 f209 	mul.w	r2, r2, r9
 8003972:	eb03 0e02 	add.w	lr, r3, r2
 8003976:	589a      	ldr	r2, [r3, r2]
 8003978:	f8de 500c 	ldr.w	r5, [lr, #12]
 800397c:	fb07 1705 	mla	r7, r7, r5, r1
 8003980:	f8de 1014 	ldr.w	r1, [lr, #20]
 8003984:	fb01 2707 	mla	r7, r1, r7, r2
 8003988:	f8de 2008 	ldr.w	r2, [lr, #8]
	OffLineSrc = (BytesPerLine / 4) - xSize;
 800398c:	2304      	movs	r3, #4
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 800398e:	fb02 7700 	mla	r7, r2, r0, r7
	OffLineSrc = (BytesPerLine / 4) - xSize;
 8003992:	fb96 f6f3 	sdiv	r6, r6, r3
	_DMA_ExecOperation();
 8003996:	f7ff fe85 	bl	80036a4 <_DMA_ExecOperation>
	TransferInProgress = 1;
 800399a:	4b13      	ldr	r3, [pc, #76]	; (80039e8 <LCD_LL_DrawBitmap32bpp+0x94>)
 800399c:	2201      	movs	r2, #1
	PixelFormat = GetPixelformat(LayerIndex);
 800399e:	4648      	mov	r0, r9
	TransferInProgress = 1;
 80039a0:	701a      	strb	r2, [r3, #0]
	PixelFormat = GetPixelformat(LayerIndex);
 80039a2:	f7ff feed 	bl	8003780 <GetPixelformat>
	DMA2D->CR      = 0x00000000UL | (1 << 9) | (0x2 << 16);
 80039a6:	4a11      	ldr	r2, [pc, #68]	; (80039ec <LCD_LL_DrawBitmap32bpp+0x98>)
 80039a8:	4b11      	ldr	r3, [pc, #68]	; (80039f0 <LCD_LL_DrawBitmap32bpp+0x9c>)
 80039aa:	6013      	str	r3, [r2, #0]
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 80039ac:	b2a4      	uxth	r4, r4
	OffLineDst = layer_prop[LayerIndex].xSize - xSize;
 80039ae:	eba5 0508 	sub.w	r5, r5, r8
	OffLineSrc = (BytesPerLine / 4) - xSize;
 80039b2:	eba6 0608 	sub.w	r6, r6, r8
	DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;
 80039b6:	2300      	movs	r3, #0
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 80039b8:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
	DMA2D->FGMAR   = (U32)pSrc;
 80039bc:	f8c2 a00c 	str.w	sl, [r2, #12]
	DMA2D->OMAR    = (U32)pDst;
 80039c0:	63d7      	str	r7, [r2, #60]	; 0x3c
	DMA2D->BGMAR   = (U32)pDst;
 80039c2:	6157      	str	r7, [r2, #20]
	DMA2D->FGOR    = OffLineSrc;
 80039c4:	6116      	str	r6, [r2, #16]
	DMA2D->OOR     = OffLineDst;
 80039c6:	6415      	str	r5, [r2, #64]	; 0x40
	DMA2D->BGOR     = OffLineDst;
 80039c8:	6195      	str	r5, [r2, #24]
	DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;
 80039ca:	61d3      	str	r3, [r2, #28]
	DMA2D->BGPFCCR = PixelFormat;
 80039cc:	6250      	str	r0, [r2, #36]	; 0x24
	DMA2D->OPFCCR = PixelFormat;
 80039ce:	6350      	str	r0, [r2, #52]	; 0x34
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 80039d0:	6454      	str	r4, [r2, #68]	; 0x44
	DMA2D->CR     |= DMA2D_CR_START;
 80039d2:	6813      	ldr	r3, [r2, #0]
 80039d4:	f043 0301 	orr.w	r3, r3, #1
 80039d8:	6013      	str	r3, [r2, #0]
	DMA2D_CopyBufferWithAlpha(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
}
 80039da:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	_DMA_ExecOperation();
 80039de:	f7ff be61 	b.w	80036a4 <_DMA_ExecOperation>
 80039e2:	bf00      	nop
 80039e4:	2001be98 	.word	0x2001be98
 80039e8:	2001be94 	.word	0x2001be94
 80039ec:	4002b000 	.word	0x4002b000
 80039f0:	00020200 	.word	0x00020200

080039f4 <_LCD_DrawBitmapAlpha>:
static void _LCD_DrawBitmapAlpha(int LayerIndex, int x, int y, const void * p, int xSize, int ySize, int BytesPerLine) {
 80039f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039f8:	4698      	mov	r8, r3
 80039fa:	4606      	mov	r6, r0
 80039fc:	9101      	str	r1, [sp, #4]
 80039fe:	4614      	mov	r4, r2
	PixelFormat = GetPixelformat(LayerIndex);
 8003a00:	f7ff febe 	bl	8003780 <GetPixelformat>
 8003a04:	4683      	mov	fp, r0
	BufferSize = GetBufferSize(LayerIndex);
 8003a06:	4630      	mov	r0, r6
 8003a08:	f7ff fe40 	bl	800368c <GetBufferSize>
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003a0c:	271c      	movs	r7, #28
 8003a0e:	4a15      	ldr	r2, [pc, #84]	; (8003a64 <_LCD_DrawBitmapAlpha+0x70>)
 8003a10:	9901      	ldr	r1, [sp, #4]
static void _LCD_DrawBitmapAlpha(int LayerIndex, int x, int y, const void * p, int xSize, int ySize, int BytesPerLine) {
 8003a12:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8003a16:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8003a1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003a1c:	4377      	muls	r7, r6
 8003a1e:	eb02 0e07 	add.w	lr, r2, r7
 8003a22:	59d2      	ldr	r2, [r2, r7]
 8003a24:	f8de 600c 	ldr.w	r6, [lr, #12]
 8003a28:	f8de 3014 	ldr.w	r3, [lr, #20]
 8003a2c:	f8de 7008 	ldr.w	r7, [lr, #8]
	_DMA_DrawAlphaBitmap((void *)AddrDst, p, xSize, ySize, OffLineSrc, OffLineDst, PixelFormat);
 8003a30:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003a34:	fb04 1406 	mla	r4, r4, r6, r1
 8003a38:	fb03 2404 	mla	r4, r3, r4, r2
	OffLineDst = layer_prop[LayerIndex].xSize - xSize;
 8003a3c:	eba6 0609 	sub.w	r6, r6, r9
	OffLineSrc = (BytesPerLine / 4) - xSize;
 8003a40:	2304      	movs	r3, #4
	_DMA_DrawAlphaBitmap((void *)AddrDst, p, xSize, ySize, OffLineSrc, OffLineDst, PixelFormat);
 8003a42:	464a      	mov	r2, r9
	OffLineSrc = (BytesPerLine / 4) - xSize;
 8003a44:	fb95 f5f3 	sdiv	r5, r5, r3
	_DMA_DrawAlphaBitmap((void *)AddrDst, p, xSize, ySize, OffLineSrc, OffLineDst, PixelFormat);
 8003a48:	4641      	mov	r1, r8
	OffLineSrc = (BytesPerLine / 4) - xSize;
 8003a4a:	eba5 0509 	sub.w	r5, r5, r9
	_DMA_DrawAlphaBitmap((void *)AddrDst, p, xSize, ySize, OffLineSrc, OffLineDst, PixelFormat);
 8003a4e:	4653      	mov	r3, sl
 8003a50:	fb07 4000 	mla	r0, r7, r0, r4
 8003a54:	960d      	str	r6, [sp, #52]	; 0x34
 8003a56:	950c      	str	r5, [sp, #48]	; 0x30
}
 8003a58:	b003      	add	sp, #12
 8003a5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	_DMA_DrawAlphaBitmap((void *)AddrDst, p, xSize, ySize, OffLineSrc, OffLineDst, PixelFormat);
 8003a5e:	f7ff be4d 	b.w	80036fc <_DMA_DrawAlphaBitmap>
 8003a62:	bf00      	nop
 8003a64:	2001be98 	.word	0x2001be98

08003a68 <LCD_LL_DrawBitmap8bpp>:
 * @param  ySize:      Y size
 * @param  BytesPerLine
 * @retval None
 */
static void LCD_LL_DrawBitmap8bpp(int LayerIndex, int x, int y, U8 const * p, int xSize, int ySize, int BytesPerLine)
{
 8003a68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a6c:	4681      	mov	r9, r0
 8003a6e:	469a      	mov	sl, r3
 8003a70:	9101      	str	r1, [sp, #4]
 8003a72:	4614      	mov	r4, r2
	U32 BufferSize, AddrDst;
	int OffLineSrc, OffLineDst;
	U32 PixelFormat;

	BufferSize = GetBufferSize(LayerIndex);
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003a74:	261c      	movs	r6, #28
	BufferSize = GetBufferSize(LayerIndex);
 8003a76:	f7ff fe09 	bl	800368c <GetBufferSize>
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003a7a:	4a1c      	ldr	r2, [pc, #112]	; (8003aec <LCD_LL_DrawBitmap8bpp+0x84>)
 8003a7c:	9901      	ldr	r1, [sp, #4]
{
 8003a7e:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8003a82:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8003a84:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003a88:	fb06 f609 	mul.w	r6, r6, r9
 8003a8c:	1993      	adds	r3, r2, r6
	DMA2D->NLR     = (U32)(xSize << 16) | ySize;       /* Number of Line Register (Size configuration of area to be transfered) */
 8003a8e:	ea47 4708 	orr.w	r7, r7, r8, lsl #16
	AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y * layer_prop[LayerIndex].xSize + x) * layer_prop[LayerIndex].BytesPerPixel;
 8003a92:	68dd      	ldr	r5, [r3, #12]
 8003a94:	fb04 1405 	mla	r4, r4, r5, r1
 8003a98:	5991      	ldr	r1, [r2, r6]
 8003a9a:	695a      	ldr	r2, [r3, #20]
 8003a9c:	fb02 1404 	mla	r4, r2, r4, r1
 8003aa0:	689a      	ldr	r2, [r3, #8]
 8003aa2:	fb02 4400 	mla	r4, r2, r0, r4
	OffLineSrc = BytesPerLine - xSize;
	OffLineDst = layer_prop[LayerIndex].xSize - xSize;
	PixelFormat = GetPixelformat(LayerIndex);
 8003aa6:	4648      	mov	r0, r9
 8003aa8:	f7ff fe6a 	bl	8003780 <GetPixelformat>
	_DMA_ExecOperation();
 8003aac:	f7ff fdfa 	bl	80036a4 <_DMA_ExecOperation>
	TransferInProgress = 1;
 8003ab0:	4b0f      	ldr	r3, [pc, #60]	; (8003af0 <LCD_LL_DrawBitmap8bpp+0x88>)
 8003ab2:	2201      	movs	r2, #1
 8003ab4:	701a      	strb	r2, [r3, #0]
	DMA2D->CR      = 0x00010000UL | (1 << 9);         /* Control Register (Memory to memory with pixel format conversion and TCIE) */
 8003ab6:	4a0f      	ldr	r2, [pc, #60]	; (8003af4 <LCD_LL_DrawBitmap8bpp+0x8c>)
 8003ab8:	f44f 3381 	mov.w	r3, #66048	; 0x10200
 8003abc:	6013      	str	r3, [r2, #0]
	OffLineSrc = BytesPerLine - xSize;
 8003abe:	ebab 0608 	sub.w	r6, fp, r8
	OffLineDst = layer_prop[LayerIndex].xSize - xSize;
 8003ac2:	eba5 0508 	sub.w	r5, r5, r8
	DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_L8;             /* Foreground PFC Control Register (Defines the input pixel format) */
 8003ac6:	2305      	movs	r3, #5
	DMA2D->FGMAR   = (U32)pSrc;                       /* Foreground Memory Address Register (Source address) */
 8003ac8:	f8c2 a00c 	str.w	sl, [r2, #12]
	DMA2D->OMAR    = (U32)pDst;                       /* Output Memory Address Register (Destination address) */
 8003acc:	63d4      	str	r4, [r2, #60]	; 0x3c
	DMA2D->FGOR    = OffSrc;                          /* Foreground Offset Register (Source line offset) */
 8003ace:	6116      	str	r6, [r2, #16]
	DMA2D->OOR     = OffDst;                          /* Output Offset Register (Destination line offset) */
 8003ad0:	6415      	str	r5, [r2, #64]	; 0x40
	DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_L8;             /* Foreground PFC Control Register (Defines the input pixel format) */
 8003ad2:	61d3      	str	r3, [r2, #28]
	DMA2D->OPFCCR  = PixelFormatDst;                   /* Output PFC Control Register (Defines the output pixel format) */
 8003ad4:	6350      	str	r0, [r2, #52]	; 0x34
	DMA2D->NLR     = (U32)(xSize << 16) | ySize;       /* Number of Line Register (Size configuration of area to be transfered) */
 8003ad6:	6457      	str	r7, [r2, #68]	; 0x44
	DMA2D->CR     |= DMA2D_CR_START;                   /* Start operation */
 8003ad8:	6813      	ldr	r3, [r2, #0]
 8003ada:	f043 0301 	orr.w	r3, r3, #1
 8003ade:	6013      	str	r3, [r2, #0]
	DMA2D_DrawBitmapL8((void *)p, (void *)AddrDst, OffLineSrc, OffLineDst, PixelFormat, xSize, ySize);
}
 8003ae0:	b003      	add	sp, #12
 8003ae2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	_DMA_ExecOperation();
 8003ae6:	f7ff bddd 	b.w	80036a4 <_DMA_ExecOperation>
 8003aea:	bf00      	nop
 8003aec:	2001be98 	.word	0x2001be98
 8003af0:	2001be94 	.word	0x2001be94
 8003af4:	4002b000 	.word	0x4002b000

08003af8 <_Color2IndexBulk_M4444I_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M4444I, LTDC_PIXEL_FORMAT_ARGB4444)
 8003af8:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pColor, pIndex, LTDC_PIXEL_FORMAT_ARGB8888, PixelFormat, NumItems);
 8003afa:	2304      	movs	r3, #4
 8003afc:	9200      	str	r2, [sp, #0]
 8003afe:	2200      	movs	r2, #0
 8003b00:	f7ff fdd8 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M4444I, LTDC_PIXEL_FORMAT_ARGB4444)
 8003b04:	b003      	add	sp, #12
 8003b06:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08003b0c <LCD_LL_FillRect>:
{
 8003b0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b10:	9c08      	ldr	r4, [sp, #32]
 8003b12:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 8003b16:	4681      	mov	r9, r0
 8003b18:	460e      	mov	r6, r1
 8003b1a:	4617      	mov	r7, r2
 8003b1c:	461d      	mov	r5, r3
	if (GUI_GetDrawMode() == GUI_DM_XOR)
 8003b1e:	f001 fc0d 	bl	800533c <GUI_GetDrawMode>
 8003b22:	2801      	cmp	r0, #1
 8003b24:	d111      	bne.n	8003b4a <LCD_LL_FillRect+0x3e>
		LCD_SetDevFunc(LayerIndex, LCD_DEVFUNC_FILLRECT, NULL);
 8003b26:	2200      	movs	r2, #0
 8003b28:	2119      	movs	r1, #25
 8003b2a:	4648      	mov	r0, r9
 8003b2c:	f004 faaa 	bl	8008084 <LCD_SetDevFunc>
		LCD_FillRect(x0, y0, x1, y1);
 8003b30:	462a      	mov	r2, r5
 8003b32:	4639      	mov	r1, r7
 8003b34:	4630      	mov	r0, r6
 8003b36:	4623      	mov	r3, r4
 8003b38:	f003 fb4e 	bl	80071d8 <LCD_FillRect>
		LCD_SetDevFunc(LayerIndex, LCD_DEVFUNC_FILLRECT, (void(*)(void))LCD_LL_FillRect);
 8003b3c:	4648      	mov	r0, r9
 8003b3e:	4a20      	ldr	r2, [pc, #128]	; (8003bc0 <LCD_LL_FillRect+0xb4>)
 8003b40:	2119      	movs	r1, #25
}
 8003b42:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		LCD_SetDevFunc(LayerIndex, LCD_DEVFUNC_FILLRECT, (void(*)(void))LCD_LL_FillRect);
 8003b46:	f004 ba9d 	b.w	8008084 <LCD_SetDevFunc>
		BufferSize = GetBufferSize(LayerIndex);
 8003b4a:	4648      	mov	r0, r9
 8003b4c:	f7ff fd9e 	bl	800368c <GetBufferSize>
		AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 8003b50:	4a1c      	ldr	r2, [pc, #112]	; (8003bc4 <LCD_LL_FillRect+0xb8>)
 8003b52:	211c      	movs	r1, #28
 8003b54:	fb01 f109 	mul.w	r1, r1, r9
 8003b58:	eb02 0e01 	add.w	lr, r2, r1
 8003b5c:	5851      	ldr	r1, [r2, r1]
 8003b5e:	f8de 300c 	ldr.w	r3, [lr, #12]
 8003b62:	f8de 2014 	ldr.w	r2, [lr, #20]
		xSize = x1 - x0 + 1;
 8003b66:	1bad      	subs	r5, r5, r6
		AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 8003b68:	fb03 6607 	mla	r6, r3, r7, r6
 8003b6c:	fb02 1606 	mla	r6, r2, r6, r1
 8003b70:	f8de 2008 	ldr.w	r2, [lr, #8]
		xSize = x1 - x0 + 1;
 8003b74:	3501      	adds	r5, #1
		AddrDst = layer_prop[LayerIndex].address + BufferSize * layer_prop[LayerIndex].buffer_index + (y0 * layer_prop[LayerIndex].xSize + x0) * layer_prop[LayerIndex].BytesPerPixel;
 8003b76:	fb02 6600 	mla	r6, r2, r0, r6
		DMA2D_FillBuffer(LayerIndex, (void *)AddrDst, xSize, ySize, layer_prop[LayerIndex].xSize - xSize, PixelIndex);
 8003b7a:	eba3 0a05 	sub.w	sl, r3, r5
	_DMA_ExecOperation();
 8003b7e:	f7ff fd91 	bl	80036a4 <_DMA_ExecOperation>
	TransferInProgress = 1;
 8003b82:	4b11      	ldr	r3, [pc, #68]	; (8003bc8 <LCD_LL_FillRect+0xbc>)
 8003b84:	2201      	movs	r2, #1
	PixelFormat = GetPixelformat(LayerIndex);
 8003b86:	4648      	mov	r0, r9
		ySize = y1 - y0 + 1;
 8003b88:	1be4      	subs	r4, r4, r7
	TransferInProgress = 1;
 8003b8a:	701a      	strb	r2, [r3, #0]
		ySize = y1 - y0 + 1;
 8003b8c:	3401      	adds	r4, #1
	PixelFormat = GetPixelformat(LayerIndex);
 8003b8e:	f7ff fdf7 	bl	8003780 <GetPixelformat>
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 8003b92:	b2a4      	uxth	r4, r4
	DMA2D->CR      = 0x00030000UL | (1 << 9);
 8003b94:	4b0d      	ldr	r3, [pc, #52]	; (8003bcc <LCD_LL_FillRect+0xc0>)
 8003b96:	4a0e      	ldr	r2, [pc, #56]	; (8003bd0 <LCD_LL_FillRect+0xc4>)
 8003b98:	601a      	str	r2, [r3, #0]
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 8003b9a:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
	DMA2D->OCOLR   = ColorIndex;
 8003b9e:	f8c3 8038 	str.w	r8, [r3, #56]	; 0x38
	DMA2D->OMAR    = (U32)pDst;
 8003ba2:	63de      	str	r6, [r3, #60]	; 0x3c
	DMA2D->OOR     = OffLine;
 8003ba4:	f8c3 a040 	str.w	sl, [r3, #64]	; 0x40
	DMA2D->OPFCCR  = PixelFormat;
 8003ba8:	6358      	str	r0, [r3, #52]	; 0x34
	DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 8003baa:	645c      	str	r4, [r3, #68]	; 0x44
	DMA2D->CR     |= (DMA2D_CR_START | DMA2D_IT_TC);
 8003bac:	681a      	ldr	r2, [r3, #0]
 8003bae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003bb2:	f042 0201 	orr.w	r2, r2, #1
 8003bb6:	601a      	str	r2, [r3, #0]
}
 8003bb8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	_DMA_ExecOperation();
 8003bbc:	f7ff bd72 	b.w	80036a4 <_DMA_ExecOperation>
 8003bc0:	08003b0d 	.word	0x08003b0d
 8003bc4:	2001be98 	.word	0x2001be98
 8003bc8:	2001be94 	.word	0x2001be94
 8003bcc:	4002b000 	.word	0x4002b000
 8003bd0:	00030200 	.word	0x00030200

08003bd4 <_Index2ColorBulk_M8888I_DMA2D>:
 8003bd4:	b507      	push	{r0, r1, r2, lr}
 8003bd6:	2300      	movs	r3, #0
 8003bd8:	9200      	str	r2, [sp, #0]
 8003bda:	461a      	mov	r2, r3
 8003bdc:	f7ff fd6a 	bl	80036b4 <_DMA_ConvertColor>
 8003be0:	b003      	add	sp, #12
 8003be2:	f85d fb04 	ldr.w	pc, [sp], #4

08003be6 <_Color2IndexBulk_M888_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M888,   LTDC_PIXEL_FORMAT_ARGB8888) // Internal pixel format of emWin is 32 bit, because of that ARGB8888
 8003be6:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pColor, pIndex, LTDC_PIXEL_FORMAT_ARGB8888, PixelFormat, NumItems);
 8003be8:	2300      	movs	r3, #0
 8003bea:	9200      	str	r2, [sp, #0]
 8003bec:	461a      	mov	r2, r3
 8003bee:	f7ff fd61 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M888,   LTDC_PIXEL_FORMAT_ARGB8888) // Internal pixel format of emWin is 32 bit, because of that ARGB8888
 8003bf2:	b003      	add	sp, #12
 8003bf4:	f85d fb04 	ldr.w	pc, [sp], #4

08003bf8 <_Color2IndexBulk_M8888I_DMA2D>:
 8003bf8:	b507      	push	{r0, r1, r2, lr}
 8003bfa:	2300      	movs	r3, #0
 8003bfc:	9200      	str	r2, [sp, #0]
 8003bfe:	461a      	mov	r2, r3
 8003c00:	f7ff fd58 	bl	80036b4 <_DMA_ConvertColor>
 8003c04:	b003      	add	sp, #12
 8003c06:	f85d fb04 	ldr.w	pc, [sp], #4

08003c0a <_Index2ColorBulk_M888_DMA2D>:
 8003c0a:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pIndex, pColor, PixelFormat, LTDC_PIXEL_FORMAT_ARGB8888, NumItems);
 8003c0c:	2300      	movs	r3, #0
 8003c0e:	9200      	str	r2, [sp, #0]
 8003c10:	461a      	mov	r2, r3
 8003c12:	f7ff fd4f 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M888,   LTDC_PIXEL_FORMAT_ARGB8888) // Internal pixel format of emWin is 32 bit, because of that ARGB8888
 8003c16:	b003      	add	sp, #12
 8003c18:	f85d fb04 	ldr.w	pc, [sp], #4

08003c1c <_Color2IndexBulk_M565_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M565,   LTDC_PIXEL_FORMAT_RGB565)
 8003c1c:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pColor, pIndex, LTDC_PIXEL_FORMAT_ARGB8888, PixelFormat, NumItems);
 8003c1e:	2302      	movs	r3, #2
 8003c20:	9200      	str	r2, [sp, #0]
 8003c22:	2200      	movs	r2, #0
 8003c24:	f7ff fd46 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M565,   LTDC_PIXEL_FORMAT_RGB565)
 8003c28:	b003      	add	sp, #12
 8003c2a:	f85d fb04 	ldr.w	pc, [sp], #4

08003c2e <_Index2ColorBulk_M565_DMA2D>:
 8003c2e:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pIndex, pColor, PixelFormat, LTDC_PIXEL_FORMAT_ARGB8888, NumItems);
 8003c30:	2300      	movs	r3, #0
 8003c32:	9200      	str	r2, [sp, #0]
 8003c34:	2202      	movs	r2, #2
 8003c36:	f7ff fd3d 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M565,   LTDC_PIXEL_FORMAT_RGB565)
 8003c3a:	b003      	add	sp, #12
 8003c3c:	f85d fb04 	ldr.w	pc, [sp], #4

08003c40 <_Color2IndexBulk_M1555I_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M1555I, LTDC_PIXEL_FORMAT_ARGB1555)
 8003c40:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pColor, pIndex, LTDC_PIXEL_FORMAT_ARGB8888, PixelFormat, NumItems);
 8003c42:	2303      	movs	r3, #3
 8003c44:	9200      	str	r2, [sp, #0]
 8003c46:	2200      	movs	r2, #0
 8003c48:	f7ff fd34 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M1555I, LTDC_PIXEL_FORMAT_ARGB1555)
 8003c4c:	b003      	add	sp, #12
 8003c4e:	f85d fb04 	ldr.w	pc, [sp], #4

08003c52 <_Index2ColorBulk_M1555I_DMA2D>:
 8003c52:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pIndex, pColor, PixelFormat, LTDC_PIXEL_FORMAT_ARGB8888, NumItems);
 8003c54:	2300      	movs	r3, #0
 8003c56:	9200      	str	r2, [sp, #0]
 8003c58:	2203      	movs	r2, #3
 8003c5a:	f7ff fd2b 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M1555I, LTDC_PIXEL_FORMAT_ARGB1555)
 8003c5e:	b003      	add	sp, #12
 8003c60:	f85d fb04 	ldr.w	pc, [sp], #4

08003c64 <_Index2ColorBulk_M4444I_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M4444I, LTDC_PIXEL_FORMAT_ARGB4444)
 8003c64:	b507      	push	{r0, r1, r2, lr}
	_DMA_ConvertColor(pIndex, pColor, PixelFormat, LTDC_PIXEL_FORMAT_ARGB8888, NumItems);
 8003c66:	2300      	movs	r3, #0
 8003c68:	9200      	str	r2, [sp, #0]
 8003c6a:	2204      	movs	r2, #4
 8003c6c:	f7ff fd22 	bl	80036b4 <_DMA_ConvertColor>
DEFINE_DMA2D_COLORCONVERSION(M4444I, LTDC_PIXEL_FORMAT_ARGB4444)
 8003c70:	b003      	add	sp, #12
 8003c72:	f85d fb04 	ldr.w	pc, [sp], #4

08003c76 <LCD_Delay>:
	HAL_Delay(Delay);
 8003c76:	f7fd ba65 	b.w	8001144 <HAL_Delay>
	...

08003c7c <DMA2D_Init>:
	hdma2d.XferCpltCallback  = TransferComplete;	
 8003c7c:	4809      	ldr	r0, [pc, #36]	; (8003ca4 <DMA2D_Init+0x28>)
{
 8003c7e:	b508      	push	{r3, lr}
	hdma2d.XferCpltCallback  = TransferComplete;	
 8003c80:	4b09      	ldr	r3, [pc, #36]	; (8003ca8 <DMA2D_Init+0x2c>)
 8003c82:	6103      	str	r3, [r0, #16]
	if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8003c84:	f7fd fafa 	bl	800127c <HAL_DMA2D_Init>
 8003c88:	b108      	cbz	r0, 8003c8e <DMA2D_Init+0x12>
		Error_Handler( );
 8003c8a:	f7fc fdb5 	bl	80007f8 <Error_Handler>
	if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8003c8e:	2101      	movs	r1, #1
 8003c90:	4804      	ldr	r0, [pc, #16]	; (8003ca4 <DMA2D_Init+0x28>)
 8003c92:	f7fd fbab 	bl	80013ec <HAL_DMA2D_ConfigLayer>
 8003c96:	b118      	cbz	r0, 8003ca0 <DMA2D_Init+0x24>
}
 8003c98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
		Error_Handler( );
 8003c9c:	f7fc bdac 	b.w	80007f8 <Error_Handler>
 8003ca0:	bd08      	pop	{r3, pc}
 8003ca2:	bf00      	nop
 8003ca4:	2001c018 	.word	0x2001c018
 8003ca8:	08003681 	.word	0x08003681

08003cac <HAL_LTDC_LineEventCallback>:
 * @param  hltdc: pointer to a LTDC_HandleTypeDef structure that contains
 *                the configuration information for the specified LTDC.
 * @retval None
 */
void HAL_LTDC_LineEvenCallback(LTDC_HandleTypeDef *hltdc) 
{
 8003cac:	b538      	push	{r3, r4, r5, lr}
	U32 Addr;
	U32 layer;

	for (layer = 0; layer < GUI_NUM_LAYERS; layer++)
	{
		if (layer_prop[layer].pending_buffer >= 0)
 8003cae:	4c10      	ldr	r4, [pc, #64]	; (8003cf0 <HAL_LTDC_LineEventCallback+0x44>)
 8003cb0:	6861      	ldr	r1, [r4, #4]
 8003cb2:	2900      	cmp	r1, #0
{
 8003cb4:	4605      	mov	r5, r0
		if (layer_prop[layer].pending_buffer >= 0)
 8003cb6:	db14      	blt.n	8003ce2 <HAL_LTDC_LineEventCallback+0x36>
		{
			/* Calculate address of buffer to be used  as visible frame buffer */
			Addr = layer_prop[layer].address + \
					layer_prop[layer].xSize * layer_prop[layer].ySize * layer_prop[layer].pending_buffer * layer_prop[layer].BytesPerPixel;
 8003cb8:	68e2      	ldr	r2, [r4, #12]
 8003cba:	6923      	ldr	r3, [r4, #16]
 8003cbc:	6960      	ldr	r0, [r4, #20]
 8003cbe:	4353      	muls	r3, r2
			Addr = layer_prop[layer].address + \
 8003cc0:	6822      	ldr	r2, [r4, #0]
					layer_prop[layer].xSize * layer_prop[layer].ySize * layer_prop[layer].pending_buffer * layer_prop[layer].BytesPerPixel;
 8003cc2:	434b      	muls	r3, r1
			Addr = layer_prop[layer].address + \
 8003cc4:	fb00 2303 	mla	r3, r0, r3, r2

			__HAL_LTDC_LAYER(hltdc, layer)->CFBAR = Addr;
 8003cc8:	682a      	ldr	r2, [r5, #0]
 8003cca:	f8c2 30ac 	str.w	r3, [r2, #172]	; 0xac

			__HAL_LTDC_RELOAD_CONFIG(hltdc);
 8003cce:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8003cd0:	f043 0301 	orr.w	r3, r3, #1
 8003cd4:	6253      	str	r3, [r2, #36]	; 0x24

			/* Notify STemWin that buffer is used */
			GUI_MULTIBUF_ConfirmEx(layer, layer_prop[layer].pending_buffer);
 8003cd6:	2000      	movs	r0, #0
 8003cd8:	f002 f9fe 	bl	80060d8 <GUI_MULTIBUF_ConfirmEx>

			/* Clear pending buffer flag of layer */
			layer_prop[layer].pending_buffer = -1;
 8003cdc:	f04f 33ff 	mov.w	r3, #4294967295
 8003ce0:	6063      	str	r3, [r4, #4]
		}
	}

	HAL_LTDC_ProgramLineEvent(hltdc, 0);
 8003ce2:	4628      	mov	r0, r5
 8003ce4:	2100      	movs	r1, #0
}
 8003ce6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	HAL_LTDC_ProgramLineEvent(hltdc, 0);
 8003cea:	f7fe bbfb 	b.w	80024e4 <HAL_LTDC_ProgramLineEvent>
 8003cee:	bf00      	nop
 8003cf0:	2001be98 	.word	0x2001be98

08003cf4 <LCD_X_Config>:
		GUI_MULTIBUF_ConfigEx(i, NUM_BUFFERS);
	}
#endif

	/* Set display driver and color conversion for 1st layer */
	GUI_DEVICE_CreateAndLink(DISPLAY_DRIVER_0, COLOR_CONVERSION_0, 0, 0);
 8003cf4:	2300      	movs	r3, #0
{
 8003cf6:	b510      	push	{r4, lr}
	GUI_DEVICE_CreateAndLink(DISPLAY_DRIVER_0, COLOR_CONVERSION_0, 0, 0);
 8003cf8:	461a      	mov	r2, r3
 8003cfa:	4934      	ldr	r1, [pc, #208]	; (8003dcc <LCD_X_Config+0xd8>)
 8003cfc:	4834      	ldr	r0, [pc, #208]	; (8003dd0 <LCD_X_Config+0xdc>)
 8003cfe:	f001 fef9 	bl	8005af4 <GUI_DEVICE_CreateAndLink>

	/* Set size of 1st layer */
	if (LCD_GetSwapXYEx(0)) {
 8003d02:	2000      	movs	r0, #0
 8003d04:	f003 ff3a 	bl	8007b7c <LCD_GetSwapXYEx>
 8003d08:	4604      	mov	r4, r0
 8003d0a:	2800      	cmp	r0, #0
 8003d0c:	d054      	beq.n	8003db8 <LCD_X_Config+0xc4>
		LCD_SetSizeEx (0, YSIZE_PHYS, XSIZE_PHYS);
 8003d0e:	22f0      	movs	r2, #240	; 0xf0
 8003d10:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003d14:	2000      	movs	r0, #0
 8003d16:	f004 fa03 	bl	8008120 <LCD_SetSizeEx>
		LCD_SetVSizeEx(0, YSIZE_PHYS * NUM_VSCREENS, XSIZE_PHYS);
 8003d1a:	22f0      	movs	r2, #240	; 0xf0
 8003d1c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003d20:	2000      	movs	r0, #0
		LCD_SetVSizeEx(1, XSIZE_PHYS, YSIZE_PHYS * NUM_VSCREENS);
	}
#endif

	/*Initialize GUI Layer structure */
	layer_prop[0].address = LCD_LAYER0_FRAME_BUFFER;
 8003d22:	4c2c      	ldr	r4, [pc, #176]	; (8003dd4 <LCD_X_Config+0xe0>)
		LCD_SetVSizeEx(0, XSIZE_PHYS, YSIZE_PHYS * NUM_VSCREENS);
 8003d24:	f004 fa2e 	bl	8008184 <LCD_SetVSizeEx>
	layer_prop[0].address = LCD_LAYER0_FRAME_BUFFER;
 8003d28:	4b2b      	ldr	r3, [pc, #172]	; (8003dd8 <LCD_X_Config+0xe4>)
 8003d2a:	6023      	str	r3, [r4, #0]
#endif

	/* Setting up VRam address and custom functions for CopyBuffer-, CopyRect- and FillRect operations */
	for (i = 0; i < GUI_NUM_LAYERS; i++)
	{
		layer_prop[i].pColorConvAPI = (LCD_API_COLOR_CONV *)apColorConvAPI[i];
 8003d2c:	4b27      	ldr	r3, [pc, #156]	; (8003dcc <LCD_X_Config+0xd8>)
 8003d2e:	61a3      	str	r3, [r4, #24]

		layer_prop[i].pending_buffer = -1;
 8003d30:	f04f 33ff 	mov.w	r3, #4294967295
 8003d34:	6063      	str	r3, [r4, #4]

		/* Remember color depth for further operations */
		layer_prop[i].BytesPerPixel = LCD_GetBitsPerPixelEx(i) >> 3;
 8003d36:	2000      	movs	r0, #0
 8003d38:	f003 fee0 	bl	8007afc <LCD_GetBitsPerPixelEx>
 8003d3c:	10c0      	asrs	r0, r0, #3
 8003d3e:	6160      	str	r0, [r4, #20]
		/* Set custom functions for several operations */
		LCD_SetDevFunc(i, LCD_DEVFUNC_COPYBUFFER, (void(*)(void))LCD_LL_CopyBuffer);
 8003d40:	4a26      	ldr	r2, [pc, #152]	; (8003ddc <LCD_X_Config+0xe8>)
 8003d42:	2121      	movs	r1, #33	; 0x21
 8003d44:	2000      	movs	r0, #0
 8003d46:	f004 f99d 	bl	8008084 <LCD_SetDevFunc>
		LCD_SetDevFunc(i, LCD_DEVFUNC_COPYRECT,   (void(*)(void))LCD_LL_CopyRect);
 8003d4a:	4a25      	ldr	r2, [pc, #148]	; (8003de0 <LCD_X_Config+0xec>)
 8003d4c:	2123      	movs	r1, #35	; 0x23
 8003d4e:	2000      	movs	r0, #0
 8003d50:	f004 f998 	bl	8008084 <LCD_SetDevFunc>

		/* Filling via DMA2D does only work with 16bpp or more */
		LCD_SetDevFunc(i, LCD_DEVFUNC_FILLRECT, (void(*)(void))LCD_LL_FillRect);
 8003d54:	4a23      	ldr	r2, [pc, #140]	; (8003de4 <LCD_X_Config+0xf0>)
 8003d56:	2119      	movs	r1, #25
 8003d58:	2000      	movs	r0, #0
 8003d5a:	f004 f993 	bl	8008084 <LCD_SetDevFunc>
		LCD_SetDevFunc(i, LCD_DEVFUNC_DRAWBMP_8BPP, (void(*)(void))LCD_LL_DrawBitmap8bpp);
 8003d5e:	4a22      	ldr	r2, [pc, #136]	; (8003de8 <LCD_X_Config+0xf4>)
 8003d60:	2125      	movs	r1, #37	; 0x25
 8003d62:	2000      	movs	r0, #0
 8003d64:	f004 f98e 	bl	8008084 <LCD_SetDevFunc>
		LCD_SetDevFunc(i, LCD_DEVFUNC_DRAWBMP_16BPP, (void(*)(void))LCD_LL_DrawBitmap16bpp);
 8003d68:	4a20      	ldr	r2, [pc, #128]	; (8003dec <LCD_X_Config+0xf8>)
 8003d6a:	2124      	movs	r1, #36	; 0x24
 8003d6c:	2000      	movs	r0, #0
 8003d6e:	f004 f989 	bl	8008084 <LCD_SetDevFunc>
		LCD_SetDevFunc(i, LCD_DEVFUNC_DRAWBMP_32BPP, (void(*)(void))LCD_LL_DrawBitmap32bpp);
 8003d72:	4a1f      	ldr	r2, [pc, #124]	; (8003df0 <LCD_X_Config+0xfc>)
 8003d74:	2128      	movs	r1, #40	; 0x28
 8003d76:	2000      	movs	r0, #0
 8003d78:	f004 f984 	bl	8008084 <LCD_SetDevFunc>
		/* Set VRAM address */
		LCD_SetVRAMAddrEx(i, (void *)(layer_prop[i].address));
 8003d7c:	6821      	ldr	r1, [r4, #0]
 8003d7e:	2000      	movs	r0, #0
 8003d80:	f004 f9e8 	bl	8008154 <LCD_SetVRAMAddrEx>
	}
	// Set up custom color conversion using DMA2D, works only for direct color modes because of missing LUT for DMA2D destination

	GUICC_M1555I_SetCustColorConv(_Color2IndexBulk_M1555I_DMA2D, _Index2ColorBulk_M1555I_DMA2D); // Set up custom bulk color conversion using DMA2D for ARGB1555
 8003d84:	491b      	ldr	r1, [pc, #108]	; (8003df4 <LCD_X_Config+0x100>)
 8003d86:	481c      	ldr	r0, [pc, #112]	; (8003df8 <LCD_X_Config+0x104>)
 8003d88:	f000 f91c 	bl	8003fc4 <GUICC_M1555I_SetCustColorConv>
	GUICC_M565_SetCustColorConv  (_Color2IndexBulk_M565_DMA2D,   _Index2ColorBulk_M565_DMA2D);   // Set up custom bulk color conversion using DMA2D for RGB565 (does not speed up conversion, default method is slightly faster!)
 8003d8c:	491b      	ldr	r1, [pc, #108]	; (8003dfc <LCD_X_Config+0x108>)
 8003d8e:	481c      	ldr	r0, [pc, #112]	; (8003e00 <LCD_X_Config+0x10c>)
 8003d90:	f000 fa46 	bl	8004220 <GUICC_M565_SetCustColorConv>
	GUICC_M4444I_SetCustColorConv(_Color2IndexBulk_M4444I_DMA2D, _Index2ColorBulk_M4444I_DMA2D); // Set up custom bulk color conversion using DMA2D for ARGB4444
 8003d94:	491b      	ldr	r1, [pc, #108]	; (8003e04 <LCD_X_Config+0x110>)
 8003d96:	481c      	ldr	r0, [pc, #112]	; (8003e08 <LCD_X_Config+0x114>)
 8003d98:	f000 f91a 	bl	8003fd0 <GUICC_M4444I_SetCustColorConv>
	GUICC_M888_SetCustColorConv  (_Color2IndexBulk_M888_DMA2D,   _Index2ColorBulk_M888_DMA2D);   // Set up custom bulk color conversion using DMA2D for RGB888
 8003d9c:	491b      	ldr	r1, [pc, #108]	; (8003e0c <LCD_X_Config+0x118>)
 8003d9e:	481c      	ldr	r0, [pc, #112]	; (8003e10 <LCD_X_Config+0x11c>)
 8003da0:	f000 fa64 	bl	800426c <GUICC_M888_SetCustColorConv>
	GUICC_M8888I_SetCustColorConv(_Color2IndexBulk_M8888I_DMA2D, _Index2ColorBulk_M8888I_DMA2D); // Set up custom bulk color conversion using DMA2D for ARGB8888
 8003da4:	491b      	ldr	r1, [pc, #108]	; (8003e14 <LCD_X_Config+0x120>)
 8003da6:	481c      	ldr	r0, [pc, #112]	; (8003e18 <LCD_X_Config+0x124>)
 8003da8:	f000 f932 	bl	8004010 <GUICC_M8888I_SetCustColorConv>

	GUI_SetFuncDrawAlpha(_LCD_DrawMemdevAlpha, _LCD_DrawBitmapAlpha);
 8003dac:	491b      	ldr	r1, [pc, #108]	; (8003e1c <LCD_X_Config+0x128>)
 8003dae:	481c      	ldr	r0, [pc, #112]	; (8003e20 <LCD_X_Config+0x12c>)
}
 8003db0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	GUI_SetFuncDrawAlpha(_LCD_DrawMemdevAlpha, _LCD_DrawBitmapAlpha);
 8003db4:	f002 bd36 	b.w	8006824 <GUI_SetFuncDrawAlpha>
		LCD_SetSizeEx (0, XSIZE_PHYS, YSIZE_PHYS);
 8003db8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003dbc:	21f0      	movs	r1, #240	; 0xf0
 8003dbe:	f004 f9af 	bl	8008120 <LCD_SetSizeEx>
		LCD_SetVSizeEx(0, XSIZE_PHYS, YSIZE_PHYS * NUM_VSCREENS);
 8003dc2:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003dc6:	21f0      	movs	r1, #240	; 0xf0
 8003dc8:	4620      	mov	r0, r4
 8003dca:	e7aa      	b.n	8003d22 <LCD_X_Config+0x2e>
 8003dcc:	08017474 	.word	0x08017474
 8003dd0:	08017890 	.word	0x08017890
 8003dd4:	2001be98 	.word	0x2001be98
 8003dd8:	d0200000 	.word	0xd0200000
 8003ddc:	08003855 	.word	0x08003855
 8003de0:	08003891 	.word	0x08003891
 8003de4:	08003b0d 	.word	0x08003b0d
 8003de8:	08003a69 	.word	0x08003a69
 8003dec:	080038ed 	.word	0x080038ed
 8003df0:	08003955 	.word	0x08003955
 8003df4:	08003c53 	.word	0x08003c53
 8003df8:	08003c41 	.word	0x08003c41
 8003dfc:	08003c2f 	.word	0x08003c2f
 8003e00:	08003c1d 	.word	0x08003c1d
 8003e04:	08003c65 	.word	0x08003c65
 8003e08:	08003af9 	.word	0x08003af9
 8003e0c:	08003c0b 	.word	0x08003c0b
 8003e10:	08003be7 	.word	0x08003be7
 8003e14:	08003bd5 	.word	0x08003bd5
 8003e18:	08003bf9 	.word	0x08003bf9
 8003e1c:	080039f5 	.word	0x080039f5
 8003e20:	08003759 	.word	0x08003759

08003e24 <LCD_X_DisplayDriver>:
 * @param  Cmd       :Please refer to the details in the switch statement below
 * @param  pData     :Pointer to a LCD_X_DATA structure
 * @retval Status (-1 : Error,  0 : Ok)
 */
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) 
{
 8003e24:	b537      	push	{r0, r1, r2, r4, r5, lr}
	int r = 0;
	U32 addr;
	int xPos, yPos;
	U32 Color;

	switch (Cmd)
 8003e26:	3903      	subs	r1, #3
{
 8003e28:	4604      	mov	r4, r0
 8003e2a:	4615      	mov	r5, r2
	switch (Cmd)
 8003e2c:	290b      	cmp	r1, #11
 8003e2e:	d87f      	bhi.n	8003f30 <LCD_X_DisplayDriver+0x10c>
 8003e30:	e8df f001 	tbb	[pc, r1]
 8003e34:	2e272006 	.word	0x2e272006
 8003e38:	5f34494f 	.word	0x5f34494f
 8003e3c:	196f657e 	.word	0x196f657e
	{

	case LCD_X_SETORG:
		addr = layer_prop[LayerIndex].address + ((LCD_X_SETORG_INFO *)pData)->yPos * layer_prop[LayerIndex].xSize * layer_prop[LayerIndex].BytesPerPixel;
 8003e40:	4a3d      	ldr	r2, [pc, #244]	; (8003f38 <LCD_X_DisplayDriver+0x114>)
 8003e42:	686d      	ldr	r5, [r5, #4]
 8003e44:	231c      	movs	r3, #28
 8003e46:	4343      	muls	r3, r0
 8003e48:	18d0      	adds	r0, r2, r3
 8003e4a:	58d3      	ldr	r3, [r2, r3]
 8003e4c:	68c1      	ldr	r1, [r0, #12]
 8003e4e:	6940      	ldr	r0, [r0, #20]
 8003e50:	4369      	muls	r1, r5
		HAL_LTDC_SetAddress(&hltdc, addr, LayerIndex);
 8003e52:	fb00 3101 	mla	r1, r0, r1, r3
 8003e56:	4622      	mov	r2, r4
 8003e58:	4838      	ldr	r0, [pc, #224]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003e5a:	f7fe fb22 	bl	80024a2 <HAL_LTDC_SetAddress>
	int r = 0;
 8003e5e:	2500      	movs	r5, #0

	default:
		r = -1;
	}
	return r;
}
 8003e60:	4628      	mov	r0, r5
 8003e62:	b003      	add	sp, #12
 8003e64:	bd30      	pop	{r4, r5, pc}
		layer_prop[LayerIndex].pending_buffer = ((LCD_X_SHOWBUFFER_INFO *)pData)->Index;
 8003e66:	4a34      	ldr	r2, [pc, #208]	; (8003f38 <LCD_X_DisplayDriver+0x114>)
 8003e68:	231c      	movs	r3, #28
 8003e6a:	fb03 2400 	mla	r4, r3, r0, r2
 8003e6e:	682b      	ldr	r3, [r5, #0]
 8003e70:	6063      	str	r3, [r4, #4]
 8003e72:	e7f4      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
		HAL_LTDC_ConfigCLUT(&hltdc, (uint32_t *)&(((LCD_X_SETLUTENTRY_INFO *)pData)->Color), 1, LayerIndex);
 8003e74:	4603      	mov	r3, r0
 8003e76:	2201      	movs	r2, #1
 8003e78:	4629      	mov	r1, r5
 8003e7a:	4830      	ldr	r0, [pc, #192]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003e7c:	f7fe fa5d 	bl	800233a <HAL_LTDC_ConfigCLUT>
 8003e80:	e7ed      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
		__HAL_LTDC_ENABLE(&hltdc);
 8003e82:	4b2e      	ldr	r3, [pc, #184]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003e84:	681a      	ldr	r2, [r3, #0]
 8003e86:	6993      	ldr	r3, [r2, #24]
 8003e88:	f043 0301 	orr.w	r3, r3, #1
		__HAL_LTDC_DISABLE(&hltdc);
 8003e8c:	6193      	str	r3, [r2, #24]
 8003e8e:	e7e6      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
 8003e90:	4b2a      	ldr	r3, [pc, #168]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003e92:	681a      	ldr	r2, [r3, #0]
 8003e94:	6993      	ldr	r3, [r2, #24]
 8003e96:	f023 0301 	bic.w	r3, r3, #1
 8003e9a:	e7f7      	b.n	8003e8c <LCD_X_DisplayDriver+0x68>
		if(((LCD_X_SETVIS_INFO *)pData)->OnOff  == ENABLE )
 8003e9c:	6813      	ldr	r3, [r2, #0]
 8003e9e:	4a27      	ldr	r2, [pc, #156]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003ea0:	2b01      	cmp	r3, #1
			__HAL_LTDC_LAYER_ENABLE(&hltdc, LayerIndex);
 8003ea2:	6813      	ldr	r3, [r2, #0]
		__HAL_LTDC_RELOAD_CONFIG(&hltdc);
 8003ea4:	6812      	ldr	r2, [r2, #0]
			__HAL_LTDC_LAYER_ENABLE(&hltdc, LayerIndex);
 8003ea6:	f103 0384 	add.w	r3, r3, #132	; 0x84
 8003eaa:	ea4f 14c0 	mov.w	r4, r0, lsl #7
 8003eae:	5919      	ldr	r1, [r3, r4]
 8003eb0:	bf0c      	ite	eq
 8003eb2:	f041 0101 	orreq.w	r1, r1, #1
			__HAL_LTDC_LAYER_DISABLE(&hltdc, LayerIndex);
 8003eb6:	f021 0101 	bicne.w	r1, r1, #1
 8003eba:	5119      	str	r1, [r3, r4]
		__HAL_LTDC_RELOAD_CONFIG(&hltdc);
 8003ebc:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8003ebe:	f043 0301 	orr.w	r3, r3, #1
 8003ec2:	6253      	str	r3, [r2, #36]	; 0x24
 8003ec4:	e7cb      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
		HAL_LTDC_SetWindowPosition(&hltdc,
 8003ec6:	ca06      	ldmia	r2, {r1, r2}
 8003ec8:	4603      	mov	r3, r0
		HAL_LTDC_SetWindowPosition(&hltdc, xPos, yPos, LayerIndex);
 8003eca:	481c      	ldr	r0, [pc, #112]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003ecc:	f7fe faa0 	bl	8002410 <HAL_LTDC_SetWindowPosition>
 8003ed0:	e7c5      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
		GUI_GetLayerPosEx(LayerIndex, &xPos, &yPos);
 8003ed2:	aa01      	add	r2, sp, #4
 8003ed4:	4669      	mov	r1, sp
 8003ed6:	f002 f9f9 	bl	80062cc <GUI_GetLayerPosEx>
		layer_prop[LayerIndex].xSize = ((LCD_X_SETSIZE_INFO *)pData)->xSize;
 8003eda:	4a17      	ldr	r2, [pc, #92]	; (8003f38 <LCD_X_DisplayDriver+0x114>)
 8003edc:	231c      	movs	r3, #28
 8003ede:	fb03 2304 	mla	r3, r3, r4, r2
 8003ee2:	682a      	ldr	r2, [r5, #0]
 8003ee4:	60da      	str	r2, [r3, #12]
		layer_prop[LayerIndex].ySize = ((LCD_X_SETSIZE_INFO *)pData)->ySize;
 8003ee6:	686a      	ldr	r2, [r5, #4]
 8003ee8:	611a      	str	r2, [r3, #16]
		HAL_LTDC_SetWindowPosition(&hltdc, xPos, yPos, LayerIndex);
 8003eea:	4623      	mov	r3, r4
 8003eec:	e89d 0006 	ldmia.w	sp, {r1, r2}
 8003ef0:	e7eb      	b.n	8003eca <LCD_X_DisplayDriver+0xa6>
		HAL_LTDC_SetAlpha(&hltdc, ((LCD_X_SETALPHA_INFO *)pData)->Alpha, LayerIndex);
 8003ef2:	4602      	mov	r2, r0
 8003ef4:	6829      	ldr	r1, [r5, #0]
 8003ef6:	4811      	ldr	r0, [pc, #68]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003ef8:	f7fe fab3 	bl	8002462 <HAL_LTDC_SetAlpha>
 8003efc:	e7af      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
		if(((LCD_X_SETCHROMAMODE_INFO *)pData)->ChromaMode != 0)
 8003efe:	6815      	ldr	r5, [r2, #0]
			HAL_LTDC_EnableColorKeying(&hltdc, LayerIndex);
 8003f00:	4601      	mov	r1, r0
 8003f02:	480e      	ldr	r0, [pc, #56]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
		if(((LCD_X_SETCHROMAMODE_INFO *)pData)->ChromaMode != 0)
 8003f04:	b115      	cbz	r5, 8003f0c <LCD_X_DisplayDriver+0xe8>
			HAL_LTDC_EnableColorKeying(&hltdc, LayerIndex);
 8003f06:	f7fe fa53 	bl	80023b0 <HAL_LTDC_EnableColorKeying>
 8003f0a:	e7a8      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
			HAL_LTDC_DisableColorKeying(&hltdc, LayerIndex);
 8003f0c:	f7fe fa68 	bl	80023e0 <HAL_LTDC_DisableColorKeying>
 8003f10:	e7a6      	b.n	8003e60 <LCD_X_DisplayDriver+0x3c>
		Color = ((((LCD_X_SETCHROMA_INFO *)pData)->ChromaMin & 0xFF0000) >> 16) |\
 8003f12:	6813      	ldr	r3, [r2, #0]
		((((LCD_X_SETCHROMA_INFO *)pData)->ChromaMin & 0x0000FF) << 16);
 8003f14:	041a      	lsls	r2, r3, #16
		Color = ((((LCD_X_SETCHROMA_INFO *)pData)->ChromaMin & 0xFF0000) >> 16) |\
 8003f16:	f3c3 4107 	ubfx	r1, r3, #16, #8
		((((LCD_X_SETCHROMA_INFO *)pData)->ChromaMin & 0x0000FF) << 16);
 8003f1a:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
		Color = ((((LCD_X_SETCHROMA_INFO *)pData)->ChromaMin & 0xFF0000) >> 16) |\
 8003f1e:	4311      	orrs	r1, r2
		(((LCD_X_SETCHROMA_INFO *)pData)->ChromaMin & 0x00FF00) |\
 8003f20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
		HAL_LTDC_ConfigColorKeying(&hltdc, Color, LayerIndex);
 8003f24:	4602      	mov	r2, r0
 8003f26:	4319      	orrs	r1, r3
 8003f28:	4804      	ldr	r0, [pc, #16]	; (8003f3c <LCD_X_DisplayDriver+0x118>)
 8003f2a:	f7fe f9e9 	bl	8002300 <HAL_LTDC_ConfigColorKeying>
 8003f2e:	e796      	b.n	8003e5e <LCD_X_DisplayDriver+0x3a>
		r = -1;
 8003f30:	f04f 35ff 	mov.w	r5, #4294967295
	return r;
 8003f34:	e794      	b.n	8003e60 <LCD_X_DisplayDriver+0x3c>
 8003f36:	bf00      	nop
 8003f38:	2001be98 	.word	0x2001be98
 8003f3c:	2001bf70 	.word	0x2001bf70

08003f40 <GRAPHICS_IncTick>:
void GRAPHICS_IncTick(void){

	OS_TimeMS++;
 8003f40:	4a02      	ldr	r2, [pc, #8]	; (8003f4c <GRAPHICS_IncTick+0xc>)
 8003f42:	6813      	ldr	r3, [r2, #0]
 8003f44:	3301      	adds	r3, #1
 8003f46:	6013      	str	r3, [r2, #0]
 8003f48:	4770      	bx	lr
 8003f4a:	bf00      	nop
 8003f4c:	2001bf6c 	.word	0x2001bf6c

08003f50 <GRAPHICS_HW_Init>:
} 

void GRAPHICS_HW_Init(void)
{ 
 8003f50:	b508      	push	{r3, lr}
	MX_FMC_Init();
 8003f52:	f7ff f9ad 	bl	80032b0 <MX_FMC_Init>
	MX_SDRAM_InitEx();
 8003f56:	f7ff f9db 	bl	8003310 <MX_SDRAM_InitEx>
	MX_LCD_Init();      /* LTDC struc, layer struct */
 8003f5a:	f7ff f94f 	bl	80031fc <MX_LCD_Init>
	MX_DMA2D_Init();
 8003f5e:	f7ff fa25 	bl	80033ac <MX_DMA2D_Init>
	DMA2D_Init();

}
 8003f62:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	DMA2D_Init();
 8003f66:	f7ff be89 	b.w	8003c7c <DMA2D_Init>

08003f6a <GRAPHICS_Init>:

void GRAPHICS_Init(void)
{
	/* Initialize the GUI */
	GUI_Init();
 8003f6a:	f001 bc85 	b.w	8005878 <GUI_Init>
	...

08003f70 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8003f70:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003fa8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8003f74:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8003f76:	e003      	b.n	8003f80 <LoopCopyDataInit>

08003f78 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8003f78:	4b0c      	ldr	r3, [pc, #48]	; (8003fac <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8003f7a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8003f7c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8003f7e:	3104      	adds	r1, #4

08003f80 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8003f80:	480b      	ldr	r0, [pc, #44]	; (8003fb0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8003f82:	4b0c      	ldr	r3, [pc, #48]	; (8003fb4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8003f84:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8003f86:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8003f88:	d3f6      	bcc.n	8003f78 <CopyDataInit>
  ldr  r2, =_sbss
 8003f8a:	4a0b      	ldr	r2, [pc, #44]	; (8003fb8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8003f8c:	e002      	b.n	8003f94 <LoopFillZerobss>

08003f8e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8003f8e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8003f90:	f842 3b04 	str.w	r3, [r2], #4

08003f94 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8003f94:	4b09      	ldr	r3, [pc, #36]	; (8003fbc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8003f96:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8003f98:	d3f9      	bcc.n	8003f8e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8003f9a:	f7fc fd0d 	bl	80009b8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8003f9e:	f013 f9f7 	bl	8017390 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8003fa2:	f7fc fb59 	bl	8000658 <main>
  bx  lr    
 8003fa6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8003fa8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8003fac:	0801d164 	.word	0x0801d164
  ldr  r0, =_sdata
 8003fb0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8003fb4:	20000338 	.word	0x20000338
  ldr  r2, =_sbss
 8003fb8:	20000338 	.word	0x20000338
  ldr  r3, = _ebss
 8003fbc:	2001c244 	.word	0x2001c244

08003fc0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003fc0:	e7fe      	b.n	8003fc0 <ADC_IRQHandler>
	...

08003fc4 <GUICC_M1555I_SetCustColorConv>:
 8003fc4:	4b01      	ldr	r3, [pc, #4]	; (8003fcc <GUICC_M1555I_SetCustColorConv+0x8>)
 8003fc6:	e883 0003 	stmia.w	r3, {r0, r1}
 8003fca:	4770      	bx	lr
 8003fcc:	20000354 	.word	0x20000354

08003fd0 <GUICC_M4444I_SetCustColorConv>:
 8003fd0:	4b01      	ldr	r3, [pc, #4]	; (8003fd8 <GUICC_M4444I_SetCustColorConv+0x8>)
 8003fd2:	e883 0003 	stmia.w	r3, {r0, r1}
 8003fd6:	4770      	bx	lr
 8003fd8:	2000035c 	.word	0x2000035c

08003fdc <_Color2Index_M8888I>:
 8003fdc:	4770      	bx	lr
 8003fde:	bf00      	nop

08003fe0 <_GetIndexMask_M8888I>:
 8003fe0:	f04f 30ff 	mov.w	r0, #4294967295
 8003fe4:	4770      	bx	lr
 8003fe6:	bf00      	nop

08003fe8 <_Color2IndexBulk_M8888I>:
 8003fe8:	b410      	push	{r4}
 8003fea:	f850 4b04 	ldr.w	r4, [r0], #4
 8003fee:	600c      	str	r4, [r1, #0]
 8003ff0:	3a01      	subs	r2, #1
 8003ff2:	4419      	add	r1, r3
 8003ff4:	d1f9      	bne.n	8003fea <_Color2IndexBulk_M8888I+0x2>
 8003ff6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003ffa:	4770      	bx	lr

08003ffc <_Index2ColorBulk_M8888I>:
 8003ffc:	b410      	push	{r4}
 8003ffe:	6804      	ldr	r4, [r0, #0]
 8004000:	f841 4b04 	str.w	r4, [r1], #4
 8004004:	3a01      	subs	r2, #1
 8004006:	4418      	add	r0, r3
 8004008:	d1f9      	bne.n	8003ffe <_Index2ColorBulk_M8888I+0x2>
 800400a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800400e:	4770      	bx	lr

08004010 <GUICC_M8888I_SetCustColorConv>:
 8004010:	4770      	bx	lr
 8004012:	bf00      	nop

08004014 <LCD_Index2Color_565>:
 8004014:	b430      	push	{r4, r5}
 8004016:	f3c0 23c4 	ubfx	r3, r0, #11, #5
 800401a:	4908      	ldr	r1, [pc, #32]	; (800403c <LCD_Index2Color_565+0x28>)
 800401c:	4c08      	ldr	r4, [pc, #32]	; (8004040 <LCD_Index2Color_565+0x2c>)
 800401e:	5ccb      	ldrb	r3, [r1, r3]
 8004020:	f000 051f 	and.w	r5, r0, #31
 8004024:	f3c0 1245 	ubfx	r2, r0, #5, #6
 8004028:	5d48      	ldrb	r0, [r1, r5]
 800402a:	5ca2      	ldrb	r2, [r4, r2]
 800402c:	eb03 4000 	add.w	r0, r3, r0, lsl #16
 8004030:	eb00 2002 	add.w	r0, r0, r2, lsl #8
 8004034:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8004038:	bc30      	pop	{r4, r5}
 800403a:	4770      	bx	lr
 800403c:	08017854 	.word	0x08017854
 8004040:	08017814 	.word	0x08017814

08004044 <_Color2Index_565>:
 8004044:	b410      	push	{r4}
 8004046:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800404a:	b2c4      	uxtb	r4, r0
 800404c:	4a06      	ldr	r2, [pc, #24]	; (8004068 <_Color2Index_565+0x24>)
 800404e:	4907      	ldr	r1, [pc, #28]	; (800406c <_Color2Index_565+0x28>)
 8004050:	5cd3      	ldrb	r3, [r2, r3]
 8004052:	5d12      	ldrb	r2, [r2, r4]
 8004054:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004058:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800405c:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 8004060:	5c08      	ldrb	r0, [r1, r0]
 8004062:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 8004066:	4770      	bx	lr
 8004068:	08017614 	.word	0x08017614
 800406c:	08017514 	.word	0x08017514

08004070 <_GetIndexMask_565>:
 8004070:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8004074:	4770      	bx	lr
 8004076:	bf00      	nop

08004078 <_Color2IndexBulk>:
 8004078:	b5f0      	push	{r4, r5, r6, r7, lr}
 800407a:	4f0c      	ldr	r7, [pc, #48]	; (80040ac <_Color2IndexBulk+0x34>)
 800407c:	f8df e030 	ldr.w	lr, [pc, #48]	; 80040b0 <_Color2IndexBulk+0x38>
 8004080:	f850 4b04 	ldr.w	r4, [r0], #4
 8004084:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8004088:	fa5f fc84 	uxtb.w	ip, r4
 800408c:	f3c4 2607 	ubfx	r6, r4, #8, #8
 8004090:	5d7d      	ldrb	r5, [r7, r5]
 8004092:	f817 400c 	ldrb.w	r4, [r7, ip]
 8004096:	f81e 6006 	ldrb.w	r6, [lr, r6]
 800409a:	eb05 24c4 	add.w	r4, r5, r4, lsl #11
 800409e:	eb04 1446 	add.w	r4, r4, r6, lsl #5
 80040a2:	3a01      	subs	r2, #1
 80040a4:	800c      	strh	r4, [r1, #0]
 80040a6:	4419      	add	r1, r3
 80040a8:	d1ea      	bne.n	8004080 <_Color2IndexBulk+0x8>
 80040aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80040ac:	08017614 	.word	0x08017614
 80040b0:	08017514 	.word	0x08017514

080040b4 <_Index2ColorBulk>:
 80040b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040b6:	f102 4480 	add.w	r4, r2, #1073741824	; 0x40000000
 80040ba:	3c01      	subs	r4, #1
 80040bc:	3a01      	subs	r2, #1
 80040be:	fb03 0002 	mla	r0, r3, r2, r0
 80040c2:	4f0f      	ldr	r7, [pc, #60]	; (8004100 <_Index2ColorBulk+0x4c>)
 80040c4:	f8df e03c 	ldr.w	lr, [pc, #60]	; 8004104 <_Index2ColorBulk+0x50>
 80040c8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80040cc:	425b      	negs	r3, r3
 80040ce:	e000      	b.n	80040d2 <_Index2ColorBulk+0x1e>
 80040d0:	3a01      	subs	r2, #1
 80040d2:	8804      	ldrh	r4, [r0, #0]
 80040d4:	0ae5      	lsrs	r5, r4, #11
 80040d6:	f004 0c1f 	and.w	ip, r4, #31
 80040da:	f3c4 1645 	ubfx	r6, r4, #5, #6
 80040de:	5d7d      	ldrb	r5, [r7, r5]
 80040e0:	f817 400c 	ldrb.w	r4, [r7, ip]
 80040e4:	f81e 6006 	ldrb.w	r6, [lr, r6]
 80040e8:	eb05 4404 	add.w	r4, r5, r4, lsl #16
 80040ec:	eb04 2406 	add.w	r4, r4, r6, lsl #8
 80040f0:	f044 447f 	orr.w	r4, r4, #4278190080	; 0xff000000
 80040f4:	4418      	add	r0, r3
 80040f6:	f841 4904 	str.w	r4, [r1], #-4
 80040fa:	2a00      	cmp	r2, #0
 80040fc:	d1e8      	bne.n	80040d0 <_Index2ColorBulk+0x1c>
 80040fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004100:	08017854 	.word	0x08017854
 8004104:	08017814 	.word	0x08017814

08004108 <_Color2Index_888>:
 8004108:	0403      	lsls	r3, r0, #16
 800410a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800410e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8004112:	4313      	orrs	r3, r2
 8004114:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8004118:	4318      	orrs	r0, r3
 800411a:	4770      	bx	lr

0800411c <_GetIndexMask_888>:
 800411c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8004120:	4770      	bx	lr
 8004122:	bf00      	nop

08004124 <_Color2IndexBulk>:
 8004124:	b470      	push	{r4, r5, r6}
 8004126:	f850 4b04 	ldr.w	r4, [r0], #4
 800412a:	0425      	lsls	r5, r4, #16
 800412c:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8004130:	f405 057f 	and.w	r5, r5, #16711680	; 0xff0000
 8004134:	4335      	orrs	r5, r6
 8004136:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 800413a:	432c      	orrs	r4, r5
 800413c:	3a01      	subs	r2, #1
 800413e:	600c      	str	r4, [r1, #0]
 8004140:	4419      	add	r1, r3
 8004142:	d1f0      	bne.n	8004126 <_Color2IndexBulk+0x2>
 8004144:	bc70      	pop	{r4, r5, r6}
 8004146:	4770      	bx	lr

08004148 <_Index2ColorBulk>:
 8004148:	b470      	push	{r4, r5, r6}
 800414a:	6804      	ldr	r4, [r0, #0]
 800414c:	0425      	lsls	r5, r4, #16
 800414e:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8004152:	f405 057f 	and.w	r5, r5, #16711680	; 0xff0000
 8004156:	4335      	orrs	r5, r6
 8004158:	f045 457f 	orr.w	r5, r5, #4278190080	; 0xff000000
 800415c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8004160:	432c      	orrs	r4, r5
 8004162:	3a01      	subs	r2, #1
 8004164:	4418      	add	r0, r3
 8004166:	f841 4b04 	str.w	r4, [r1], #4
 800416a:	d1ee      	bne.n	800414a <_Index2ColorBulk+0x2>
 800416c:	bc70      	pop	{r4, r5, r6}
 800416e:	4770      	bx	lr

08004170 <_Color2Index_8888>:
 8004170:	43c2      	mvns	r2, r0
 8004172:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8004176:	0403      	lsls	r3, r0, #16
 8004178:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800417c:	430a      	orrs	r2, r1
 800417e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8004182:	4313      	orrs	r3, r2
 8004184:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8004188:	4318      	orrs	r0, r3
 800418a:	4770      	bx	lr

0800418c <_GetIndexMask_8888>:
 800418c:	f04f 30ff 	mov.w	r0, #4294967295
 8004190:	4770      	bx	lr
 8004192:	bf00      	nop

08004194 <_Color2IndexBulk>:
 8004194:	b4f0      	push	{r4, r5, r6, r7}
 8004196:	f850 4b04 	ldr.w	r4, [r0], #4
 800419a:	43e6      	mvns	r6, r4
 800419c:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80041a0:	0425      	lsls	r5, r4, #16
 80041a2:	f006 467f 	and.w	r6, r6, #4278190080	; 0xff000000
 80041a6:	433e      	orrs	r6, r7
 80041a8:	f405 057f 	and.w	r5, r5, #16711680	; 0xff0000
 80041ac:	4335      	orrs	r5, r6
 80041ae:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80041b2:	432c      	orrs	r4, r5
 80041b4:	3a01      	subs	r2, #1
 80041b6:	600c      	str	r4, [r1, #0]
 80041b8:	4419      	add	r1, r3
 80041ba:	d1ec      	bne.n	8004196 <_Color2IndexBulk+0x2>
 80041bc:	bcf0      	pop	{r4, r5, r6, r7}
 80041be:	4770      	bx	lr

080041c0 <_Index2ColorBulk>:
 80041c0:	b4f0      	push	{r4, r5, r6, r7}
 80041c2:	6804      	ldr	r4, [r0, #0]
 80041c4:	43e6      	mvns	r6, r4
 80041c6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80041ca:	0425      	lsls	r5, r4, #16
 80041cc:	f006 467f 	and.w	r6, r6, #4278190080	; 0xff000000
 80041d0:	433e      	orrs	r6, r7
 80041d2:	f405 057f 	and.w	r5, r5, #16711680	; 0xff0000
 80041d6:	4335      	orrs	r5, r6
 80041d8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80041dc:	432c      	orrs	r4, r5
 80041de:	3a01      	subs	r2, #1
 80041e0:	4418      	add	r0, r3
 80041e2:	f841 4b04 	str.w	r4, [r1], #4
 80041e6:	d1ec      	bne.n	80041c2 <_Index2ColorBulk+0x2>
 80041e8:	bcf0      	pop	{r4, r5, r6, r7}
 80041ea:	4770      	bx	lr

080041ec <LCD_Index2Color_8888>:
 80041ec:	43c2      	mvns	r2, r0
 80041ee:	f3c0 4107 	ubfx	r1, r0, #16, #8
 80041f2:	0403      	lsls	r3, r0, #16
 80041f4:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 80041f8:	430a      	orrs	r2, r1
 80041fa:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80041fe:	4313      	orrs	r3, r2
 8004200:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8004204:	4318      	orrs	r0, r3
 8004206:	4770      	bx	lr

08004208 <LCD_Index2Color_888>:
 8004208:	0403      	lsls	r3, r0, #16
 800420a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800420e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8004212:	4313      	orrs	r3, r2
 8004214:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8004218:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 800421c:	4318      	orrs	r0, r3
 800421e:	4770      	bx	lr

08004220 <GUICC_M565_SetCustColorConv>:
 8004220:	4b01      	ldr	r3, [pc, #4]	; (8004228 <GUICC_M565_SetCustColorConv+0x8>)
 8004222:	e883 0003 	stmia.w	r3, {r0, r1}
 8004226:	4770      	bx	lr
 8004228:	20000364 	.word	0x20000364

0800422c <_Color2Index_M888>:
 800422c:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8004230:	4770      	bx	lr
 8004232:	bf00      	nop

08004234 <_GetIndexMask_M888>:
 8004234:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8004238:	4770      	bx	lr
 800423a:	bf00      	nop

0800423c <_Color2IndexBulk>:
 800423c:	b410      	push	{r4}
 800423e:	f850 4b04 	ldr.w	r4, [r0], #4
 8004242:	3a01      	subs	r2, #1
 8004244:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
 8004248:	600c      	str	r4, [r1, #0]
 800424a:	4419      	add	r1, r3
 800424c:	d1f7      	bne.n	800423e <_Color2IndexBulk+0x2>
 800424e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004252:	4770      	bx	lr

08004254 <_Index2ColorBulk>:
 8004254:	b410      	push	{r4}
 8004256:	6804      	ldr	r4, [r0, #0]
 8004258:	3a01      	subs	r2, #1
 800425a:	f044 447f 	orr.w	r4, r4, #4278190080	; 0xff000000
 800425e:	f841 4b04 	str.w	r4, [r1], #4
 8004262:	4418      	add	r0, r3
 8004264:	d1f7      	bne.n	8004256 <_Index2ColorBulk+0x2>
 8004266:	f85d 4b04 	ldr.w	r4, [sp], #4
 800426a:	4770      	bx	lr

0800426c <GUICC_M888_SetCustColorConv>:
 800426c:	4770      	bx	lr
 800426e:	bf00      	nop

08004270 <_Color2Index_M8888>:
 8004270:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 8004274:	4770      	bx	lr
 8004276:	bf00      	nop

08004278 <_GetIndexMask_M8888>:
 8004278:	f04f 30ff 	mov.w	r0, #4294967295
 800427c:	4770      	bx	lr
 800427e:	bf00      	nop

08004280 <_Color2IndexBulk>:
 8004280:	b410      	push	{r4}
 8004282:	f850 4b04 	ldr.w	r4, [r0], #4
 8004286:	3a01      	subs	r2, #1
 8004288:	f084 447f 	eor.w	r4, r4, #4278190080	; 0xff000000
 800428c:	600c      	str	r4, [r1, #0]
 800428e:	4419      	add	r1, r3
 8004290:	d1f7      	bne.n	8004282 <_Color2IndexBulk+0x2>
 8004292:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004296:	4770      	bx	lr

08004298 <_Index2ColorBulk>:
 8004298:	b410      	push	{r4}
 800429a:	6804      	ldr	r4, [r0, #0]
 800429c:	3a01      	subs	r2, #1
 800429e:	f084 447f 	eor.w	r4, r4, #4278190080	; 0xff000000
 80042a2:	f841 4b04 	str.w	r4, [r1], #4
 80042a6:	4418      	add	r0, r3
 80042a8:	d1f7      	bne.n	800429a <_Index2ColorBulk+0x2>
 80042aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80042ae:	4770      	bx	lr

080042b0 <_Index2Color_M8888>:
 80042b0:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 80042b4:	4770      	bx	lr
 80042b6:	bf00      	nop

080042b8 <LCD_Index2Color_M8888I>:
 80042b8:	4770      	bx	lr
 80042ba:	bf00      	nop

080042bc <LCD_Index2Color_M888>:
 80042bc:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80042c0:	4770      	bx	lr
 80042c2:	bf00      	nop

080042c4 <_AddFreeMemory>:
 80042c4:	4bc0      	ldr	r3, [pc, #768]	; (80045c8 <_AddFreeMemory+0x304>)
 80042c6:	68da      	ldr	r2, [r3, #12]
 80042c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80042ca:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 80042cc:	3a01      	subs	r2, #1
 80042ce:	4422      	add	r2, r4
 80042d0:	180d      	adds	r5, r1, r0
 80042d2:	42aa      	cmp	r2, r5
 80042d4:	d303      	bcc.n	80042de <_AddFreeMemory+0x1a>
 80042d6:	580a      	ldr	r2, [r1, r0]
 80042d8:	2a00      	cmp	r2, #0
 80042da:	f000 80a1 	beq.w	8004420 <_AddFreeMemory+0x15c>
 80042de:	428c      	cmp	r4, r1
 80042e0:	d205      	bcs.n	80042ee <_AddFreeMemory+0x2a>
 80042e2:	f851 2c04 	ldr.w	r2, [r1, #-4]
 80042e6:	1a8a      	subs	r2, r1, r2
 80042e8:	6814      	ldr	r4, [r2, #0]
 80042ea:	2c00      	cmp	r4, #0
 80042ec:	d04a      	beq.n	8004384 <_AddFreeMemory+0xc0>
 80042ee:	f8d3 40b8 	ldr.w	r4, [r3, #184]	; 0xb8
 80042f2:	4ab5      	ldr	r2, [pc, #724]	; (80045c8 <_AddFreeMemory+0x304>)
 80042f4:	42a0      	cmp	r0, r4
 80042f6:	f080 811e 	bcs.w	8004536 <_AddFreeMemory+0x272>
 80042fa:	f8d2 40b0 	ldr.w	r4, [r2, #176]	; 0xb0
 80042fe:	42a0      	cmp	r0, r4
 8004300:	f080 811b 	bcs.w	800453a <_AddFreeMemory+0x276>
 8004304:	f8d2 40a8 	ldr.w	r4, [r2, #168]	; 0xa8
 8004308:	42a0      	cmp	r0, r4
 800430a:	f080 8118 	bcs.w	800453e <_AddFreeMemory+0x27a>
 800430e:	f8d2 40a0 	ldr.w	r4, [r2, #160]	; 0xa0
 8004312:	42a0      	cmp	r0, r4
 8004314:	f080 8115 	bcs.w	8004542 <_AddFreeMemory+0x27e>
 8004318:	f8d2 4098 	ldr.w	r4, [r2, #152]	; 0x98
 800431c:	42a0      	cmp	r0, r4
 800431e:	f080 8112 	bcs.w	8004546 <_AddFreeMemory+0x282>
 8004322:	f8d2 4090 	ldr.w	r4, [r2, #144]	; 0x90
 8004326:	42a0      	cmp	r0, r4
 8004328:	f080 810f 	bcs.w	800454a <_AddFreeMemory+0x286>
 800432c:	f8d2 4088 	ldr.w	r4, [r2, #136]	; 0x88
 8004330:	42a0      	cmp	r0, r4
 8004332:	f080 810c 	bcs.w	800454e <_AddFreeMemory+0x28a>
 8004336:	f8d2 4080 	ldr.w	r4, [r2, #128]	; 0x80
 800433a:	42a0      	cmp	r0, r4
 800433c:	f080 8109 	bcs.w	8004552 <_AddFreeMemory+0x28e>
 8004340:	6f94      	ldr	r4, [r2, #120]	; 0x78
 8004342:	42a0      	cmp	r0, r4
 8004344:	f080 8107 	bcs.w	8004556 <_AddFreeMemory+0x292>
 8004348:	6f12      	ldr	r2, [r2, #112]	; 0x70
 800434a:	4290      	cmp	r0, r2
 800434c:	f080 8105 	bcs.w	800455a <_AddFreeMemory+0x296>
 8004350:	6e9c      	ldr	r4, [r3, #104]	; 0x68
 8004352:	4a9d      	ldr	r2, [pc, #628]	; (80045c8 <_AddFreeMemory+0x304>)
 8004354:	42a0      	cmp	r0, r4
 8004356:	f080 8102 	bcs.w	800455e <_AddFreeMemory+0x29a>
 800435a:	6e14      	ldr	r4, [r2, #96]	; 0x60
 800435c:	42a0      	cmp	r0, r4
 800435e:	f080 8100 	bcs.w	8004562 <_AddFreeMemory+0x29e>
 8004362:	6d94      	ldr	r4, [r2, #88]	; 0x58
 8004364:	42a0      	cmp	r0, r4
 8004366:	f080 80fe 	bcs.w	8004566 <_AddFreeMemory+0x2a2>
 800436a:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800436c:	42a0      	cmp	r0, r4
 800436e:	f080 80fc 	bcs.w	800456a <_AddFreeMemory+0x2a6>
 8004372:	6c94      	ldr	r4, [r2, #72]	; 0x48
 8004374:	42a0      	cmp	r0, r4
 8004376:	f080 80fa 	bcs.w	800456e <_AddFreeMemory+0x2aa>
 800437a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800437c:	4290      	cmp	r0, r2
 800437e:	f080 80a6 	bcs.w	80044ce <_AddFreeMemory+0x20a>
 8004382:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004384:	6851      	ldr	r1, [r2, #4]
 8004386:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800438a:	4c8f      	ldr	r4, [pc, #572]	; (80045c8 <_AddFreeMemory+0x304>)
 800438c:	42a9      	cmp	r1, r5
 800438e:	4408      	add	r0, r1
 8004390:	f080 80f9 	bcs.w	8004586 <_AddFreeMemory+0x2c2>
 8004394:	f8d4 50b0 	ldr.w	r5, [r4, #176]	; 0xb0
 8004398:	42a9      	cmp	r1, r5
 800439a:	f080 8106 	bcs.w	80045aa <_AddFreeMemory+0x2e6>
 800439e:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 80043a2:	42a9      	cmp	r1, r5
 80043a4:	f080 80ff 	bcs.w	80045a6 <_AddFreeMemory+0x2e2>
 80043a8:	f8d4 50a0 	ldr.w	r5, [r4, #160]	; 0xa0
 80043ac:	42a9      	cmp	r1, r5
 80043ae:	f080 80f8 	bcs.w	80045a2 <_AddFreeMemory+0x2de>
 80043b2:	f8d4 5098 	ldr.w	r5, [r4, #152]	; 0x98
 80043b6:	42a9      	cmp	r1, r5
 80043b8:	f080 80fc 	bcs.w	80045b4 <_AddFreeMemory+0x2f0>
 80043bc:	f8d4 5090 	ldr.w	r5, [r4, #144]	; 0x90
 80043c0:	42a9      	cmp	r1, r5
 80043c2:	f080 80ff 	bcs.w	80045c4 <_AddFreeMemory+0x300>
 80043c6:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 80043ca:	42a9      	cmp	r1, r5
 80043cc:	f080 80f8 	bcs.w	80045c0 <_AddFreeMemory+0x2fc>
 80043d0:	f8d4 4080 	ldr.w	r4, [r4, #128]	; 0x80
 80043d4:	42a1      	cmp	r1, r4
 80043d6:	f080 80f1 	bcs.w	80045bc <_AddFreeMemory+0x2f8>
 80043da:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80043dc:	4c7a      	ldr	r4, [pc, #488]	; (80045c8 <_AddFreeMemory+0x304>)
 80043de:	42a9      	cmp	r1, r5
 80043e0:	f080 80ea 	bcs.w	80045b8 <_AddFreeMemory+0x2f4>
 80043e4:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80043e6:	42a9      	cmp	r1, r5
 80043e8:	f080 8113 	bcs.w	8004612 <_AddFreeMemory+0x34e>
 80043ec:	6ea5      	ldr	r5, [r4, #104]	; 0x68
 80043ee:	42a9      	cmp	r1, r5
 80043f0:	f080 810d 	bcs.w	800460e <_AddFreeMemory+0x34a>
 80043f4:	6e25      	ldr	r5, [r4, #96]	; 0x60
 80043f6:	42a9      	cmp	r1, r5
 80043f8:	f080 8107 	bcs.w	800460a <_AddFreeMemory+0x346>
 80043fc:	6da5      	ldr	r5, [r4, #88]	; 0x58
 80043fe:	42a9      	cmp	r1, r5
 8004400:	f080 8101 	bcs.w	8004606 <_AddFreeMemory+0x342>
 8004404:	6d25      	ldr	r5, [r4, #80]	; 0x50
 8004406:	42a9      	cmp	r1, r5
 8004408:	f080 80fb 	bcs.w	8004602 <_AddFreeMemory+0x33e>
 800440c:	6ca5      	ldr	r5, [r4, #72]	; 0x48
 800440e:	42a9      	cmp	r1, r5
 8004410:	f080 8104 	bcs.w	800461c <_AddFreeMemory+0x358>
 8004414:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8004416:	42a1      	cmp	r1, r4
 8004418:	f080 8081 	bcs.w	800451e <_AddFreeMemory+0x25a>
 800441c:	4611      	mov	r1, r2
 800441e:	e766      	b.n	80042ee <_AddFreeMemory+0x2a>
 8004420:	686a      	ldr	r2, [r5, #4]
 8004422:	f8d3 60b8 	ldr.w	r6, [r3, #184]	; 0xb8
 8004426:	42b2      	cmp	r2, r6
 8004428:	4410      	add	r0, r2
 800442a:	f080 80ae 	bcs.w	800458a <_AddFreeMemory+0x2c6>
 800442e:	f8d3 60b0 	ldr.w	r6, [r3, #176]	; 0xb0
 8004432:	42b2      	cmp	r2, r6
 8004434:	f080 80b2 	bcs.w	800459c <_AddFreeMemory+0x2d8>
 8004438:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 800443c:	42b2      	cmp	r2, r6
 800443e:	f080 80aa 	bcs.w	8004596 <_AddFreeMemory+0x2d2>
 8004442:	f8d3 60a0 	ldr.w	r6, [r3, #160]	; 0xa0
 8004446:	42b2      	cmp	r2, r6
 8004448:	f080 80a2 	bcs.w	8004590 <_AddFreeMemory+0x2cc>
 800444c:	f8d3 6098 	ldr.w	r6, [r3, #152]	; 0x98
 8004450:	42b2      	cmp	r2, r6
 8004452:	f080 80ac 	bcs.w	80045ae <_AddFreeMemory+0x2ea>
 8004456:	f8d3 6090 	ldr.w	r6, [r3, #144]	; 0x90
 800445a:	42b2      	cmp	r2, r6
 800445c:	f080 80bf 	bcs.w	80045de <_AddFreeMemory+0x31a>
 8004460:	f8d3 6088 	ldr.w	r6, [r3, #136]	; 0x88
 8004464:	42b2      	cmp	r2, r6
 8004466:	f080 80b7 	bcs.w	80045d8 <_AddFreeMemory+0x314>
 800446a:	f8d3 6080 	ldr.w	r6, [r3, #128]	; 0x80
 800446e:	42b2      	cmp	r2, r6
 8004470:	f080 80af 	bcs.w	80045d2 <_AddFreeMemory+0x30e>
 8004474:	6f9f      	ldr	r7, [r3, #120]	; 0x78
 8004476:	42ba      	cmp	r2, r7
 8004478:	f080 80a8 	bcs.w	80045cc <_AddFreeMemory+0x308>
 800447c:	6f1f      	ldr	r7, [r3, #112]	; 0x70
 800447e:	42ba      	cmp	r2, r7
 8004480:	f080 80b9 	bcs.w	80045f6 <_AddFreeMemory+0x332>
 8004484:	6e9f      	ldr	r7, [r3, #104]	; 0x68
 8004486:	42ba      	cmp	r2, r7
 8004488:	f080 80b2 	bcs.w	80045f0 <_AddFreeMemory+0x32c>
 800448c:	6e1f      	ldr	r7, [r3, #96]	; 0x60
 800448e:	42ba      	cmp	r2, r7
 8004490:	f080 80ab 	bcs.w	80045ea <_AddFreeMemory+0x326>
 8004494:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 8004496:	42ba      	cmp	r2, r7
 8004498:	f080 80a4 	bcs.w	80045e4 <_AddFreeMemory+0x320>
 800449c:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 800449e:	42ba      	cmp	r2, r7
 80044a0:	f080 80ac 	bcs.w	80045fc <_AddFreeMemory+0x338>
 80044a4:	6c9f      	ldr	r7, [r3, #72]	; 0x48
 80044a6:	42ba      	cmp	r2, r7
 80044a8:	f080 80b5 	bcs.w	8004616 <_AddFreeMemory+0x352>
 80044ac:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 80044ae:	42b2      	cmp	r2, r6
 80044b0:	f4ff af15 	bcc.w	80042de <_AddFreeMemory+0x1a>
 80044b4:	f04f 0e00 	mov.w	lr, #0
 80044b8:	681e      	ldr	r6, [r3, #0]
 80044ba:	68af      	ldr	r7, [r5, #8]
 80044bc:	68ed      	ldr	r5, [r5, #12]
 80044be:	1ab2      	subs	r2, r6, r2
 80044c0:	601a      	str	r2, [r3, #0]
 80044c2:	b107      	cbz	r7, 80044c6 <_AddFreeMemory+0x202>
 80044c4:	607d      	str	r5, [r7, #4]
 80044c6:	2d00      	cmp	r5, #0
 80044c8:	d058      	beq.n	800457c <_AddFreeMemory+0x2b8>
 80044ca:	602f      	str	r7, [r5, #0]
 80044cc:	e707      	b.n	80042de <_AddFreeMemory+0x1a>
 80044ce:	2200      	movs	r2, #0
 80044d0:	3208      	adds	r2, #8
 80044d2:	eb03 04c2 	add.w	r4, r3, r2, lsl #3
 80044d6:	180d      	adds	r5, r1, r0
 80044d8:	6864      	ldr	r4, [r4, #4]
 80044da:	608c      	str	r4, [r1, #8]
 80044dc:	2600      	movs	r6, #0
 80044de:	600e      	str	r6, [r1, #0]
 80044e0:	6048      	str	r0, [r1, #4]
 80044e2:	6109      	str	r1, [r1, #16]
 80044e4:	f101 0608 	add.w	r6, r1, #8
 80044e8:	f845 0c04 	str.w	r0, [r5, #-4]
 80044ec:	b104      	cbz	r4, 80044f0 <_AddFreeMemory+0x22c>
 80044ee:	6066      	str	r6, [r4, #4]
 80044f0:	2500      	movs	r5, #0
 80044f2:	608c      	str	r4, [r1, #8]
 80044f4:	60cd      	str	r5, [r1, #12]
 80044f6:	6819      	ldr	r1, [r3, #0]
 80044f8:	f893 5029 	ldrb.w	r5, [r3, #41]	; 0x29
 80044fc:	4c32      	ldr	r4, [pc, #200]	; (80045c8 <_AddFreeMemory+0x304>)
 80044fe:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 8004502:	4401      	add	r1, r0
 8004504:	6056      	str	r6, [r2, #4]
 8004506:	6019      	str	r1, [r3, #0]
 8004508:	2d00      	cmp	r5, #0
 800450a:	f47f af3a 	bne.w	8004382 <_AddFreeMemory+0xbe>
 800450e:	68e3      	ldr	r3, [r4, #12]
 8004510:	68a2      	ldr	r2, [r4, #8]
 8004512:	1a59      	subs	r1, r3, r1
 8004514:	4291      	cmp	r1, r2
 8004516:	f67f af34 	bls.w	8004382 <_AddFreeMemory+0xbe>
 800451a:	60a1      	str	r1, [r4, #8]
 800451c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800451e:	2700      	movs	r7, #0
 8004520:	681c      	ldr	r4, [r3, #0]
 8004522:	6895      	ldr	r5, [r2, #8]
 8004524:	68d6      	ldr	r6, [r2, #12]
 8004526:	1a61      	subs	r1, r4, r1
 8004528:	6019      	str	r1, [r3, #0]
 800452a:	b105      	cbz	r5, 800452e <_AddFreeMemory+0x26a>
 800452c:	606e      	str	r6, [r5, #4]
 800452e:	b306      	cbz	r6, 8004572 <_AddFreeMemory+0x2ae>
 8004530:	6035      	str	r5, [r6, #0]
 8004532:	4611      	mov	r1, r2
 8004534:	e6db      	b.n	80042ee <_AddFreeMemory+0x2a>
 8004536:	220f      	movs	r2, #15
 8004538:	e7ca      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800453a:	220e      	movs	r2, #14
 800453c:	e7c8      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800453e:	220d      	movs	r2, #13
 8004540:	e7c6      	b.n	80044d0 <_AddFreeMemory+0x20c>
 8004542:	220c      	movs	r2, #12
 8004544:	e7c4      	b.n	80044d0 <_AddFreeMemory+0x20c>
 8004546:	220b      	movs	r2, #11
 8004548:	e7c2      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800454a:	220a      	movs	r2, #10
 800454c:	e7c0      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800454e:	2209      	movs	r2, #9
 8004550:	e7be      	b.n	80044d0 <_AddFreeMemory+0x20c>
 8004552:	2208      	movs	r2, #8
 8004554:	e7bc      	b.n	80044d0 <_AddFreeMemory+0x20c>
 8004556:	2207      	movs	r2, #7
 8004558:	e7ba      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800455a:	2206      	movs	r2, #6
 800455c:	e7b8      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800455e:	2205      	movs	r2, #5
 8004560:	e7b6      	b.n	80044d0 <_AddFreeMemory+0x20c>
 8004562:	2204      	movs	r2, #4
 8004564:	e7b4      	b.n	80044d0 <_AddFreeMemory+0x20c>
 8004566:	2203      	movs	r2, #3
 8004568:	e7b2      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800456a:	2202      	movs	r2, #2
 800456c:	e7b0      	b.n	80044d0 <_AddFreeMemory+0x20c>
 800456e:	2201      	movs	r2, #1
 8004570:	e7ae      	b.n	80044d0 <_AddFreeMemory+0x20c>
 8004572:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8004576:	4611      	mov	r1, r2
 8004578:	647d      	str	r5, [r7, #68]	; 0x44
 800457a:	e6b8      	b.n	80042ee <_AddFreeMemory+0x2a>
 800457c:	eb03 0ece 	add.w	lr, r3, lr, lsl #3
 8004580:	f8ce 7044 	str.w	r7, [lr, #68]	; 0x44
 8004584:	e6ab      	b.n	80042de <_AddFreeMemory+0x1a>
 8004586:	270f      	movs	r7, #15
 8004588:	e7ca      	b.n	8004520 <_AddFreeMemory+0x25c>
 800458a:	f04f 0e0f 	mov.w	lr, #15
 800458e:	e793      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 8004590:	f04f 0e0c 	mov.w	lr, #12
 8004594:	e790      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 8004596:	f04f 0e0d 	mov.w	lr, #13
 800459a:	e78d      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 800459c:	f04f 0e0e 	mov.w	lr, #14
 80045a0:	e78a      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045a2:	270c      	movs	r7, #12
 80045a4:	e7bc      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045a6:	270d      	movs	r7, #13
 80045a8:	e7ba      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045aa:	270e      	movs	r7, #14
 80045ac:	e7b8      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045ae:	f04f 0e0b 	mov.w	lr, #11
 80045b2:	e781      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045b4:	270b      	movs	r7, #11
 80045b6:	e7b3      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045b8:	2707      	movs	r7, #7
 80045ba:	e7b1      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045bc:	2708      	movs	r7, #8
 80045be:	e7af      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045c0:	2709      	movs	r7, #9
 80045c2:	e7ad      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045c4:	270a      	movs	r7, #10
 80045c6:	e7ab      	b.n	8004520 <_AddFreeMemory+0x25c>
 80045c8:	2001c08c 	.word	0x2001c08c
 80045cc:	f04f 0e07 	mov.w	lr, #7
 80045d0:	e772      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045d2:	f04f 0e08 	mov.w	lr, #8
 80045d6:	e76f      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045d8:	f04f 0e09 	mov.w	lr, #9
 80045dc:	e76c      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045de:	f04f 0e0a 	mov.w	lr, #10
 80045e2:	e769      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045e4:	f04f 0e03 	mov.w	lr, #3
 80045e8:	e766      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045ea:	f04f 0e04 	mov.w	lr, #4
 80045ee:	e763      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045f0:	f04f 0e05 	mov.w	lr, #5
 80045f4:	e760      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045f6:	f04f 0e06 	mov.w	lr, #6
 80045fa:	e75d      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 80045fc:	f04f 0e02 	mov.w	lr, #2
 8004600:	e75a      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 8004602:	2702      	movs	r7, #2
 8004604:	e78c      	b.n	8004520 <_AddFreeMemory+0x25c>
 8004606:	2703      	movs	r7, #3
 8004608:	e78a      	b.n	8004520 <_AddFreeMemory+0x25c>
 800460a:	2704      	movs	r7, #4
 800460c:	e788      	b.n	8004520 <_AddFreeMemory+0x25c>
 800460e:	2705      	movs	r7, #5
 8004610:	e786      	b.n	8004520 <_AddFreeMemory+0x25c>
 8004612:	2706      	movs	r7, #6
 8004614:	e784      	b.n	8004520 <_AddFreeMemory+0x25c>
 8004616:	f04f 0e01 	mov.w	lr, #1
 800461a:	e74d      	b.n	80044b8 <_AddFreeMemory+0x1f4>
 800461c:	2701      	movs	r7, #1
 800461e:	e77f      	b.n	8004520 <_AddFreeMemory+0x25c>

08004620 <_RemoveHoles>:
 8004620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004624:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80047cc <_RemoveHoles+0x1ac>
 8004628:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
 800462c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8004630:	e893 0060 	ldmia.w	r3, {r5, r6}
 8004634:	3f01      	subs	r7, #1
 8004636:	b083      	sub	sp, #12
 8004638:	4683      	mov	fp, r0
 800463a:	441f      	add	r7, r3
 800463c:	46c1      	mov	r9, r8
 800463e:	b135      	cbz	r5, 800464e <_RemoveHoles+0x2e>
 8004640:	4433      	add	r3, r6
 8004642:	429f      	cmp	r7, r3
 8004644:	d906      	bls.n	8004654 <_RemoveHoles+0x34>
 8004646:	e893 0060 	ldmia.w	r3, {r5, r6}
 800464a:	2d00      	cmp	r5, #0
 800464c:	d1f8      	bne.n	8004640 <_RemoveHoles+0x20>
 800464e:	1999      	adds	r1, r3, r6
 8004650:	428f      	cmp	r7, r1
 8004652:	d803      	bhi.n	800465c <_RemoveHoles+0x3c>
 8004654:	2001      	movs	r0, #1
 8004656:	b003      	add	sp, #12
 8004658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800465c:	599d      	ldr	r5, [r3, r6]
 800465e:	684c      	ldr	r4, [r1, #4]
 8004660:	b155      	cbz	r5, 8004678 <_RemoveHoles+0x58>
 8004662:	f8d8 2034 	ldr.w	r2, [r8, #52]	; 0x34
 8004666:	f812 0035 	ldrb.w	r0, [r2, r5, lsl #3]
 800466a:	2801      	cmp	r0, #1
 800466c:	eb02 02c5 	add.w	r2, r2, r5, lsl #3
 8004670:	d005      	beq.n	800467e <_RemoveHoles+0x5e>
 8004672:	4626      	mov	r6, r4
 8004674:	460b      	mov	r3, r1
 8004676:	e7e2      	b.n	800463e <_RemoveHoles+0x1e>
 8004678:	4626      	mov	r6, r4
 800467a:	460b      	mov	r3, r1
 800467c:	e7e7      	b.n	800464e <_RemoveHoles+0x2e>
 800467e:	f8d9 00b8 	ldr.w	r0, [r9, #184]	; 0xb8
 8004682:	f8d9 a02c 	ldr.w	sl, [r9, #44]	; 0x2c
 8004686:	42b0      	cmp	r0, r6
 8004688:	d976      	bls.n	8004778 <_RemoveHoles+0x158>
 800468a:	f8d9 00b0 	ldr.w	r0, [r9, #176]	; 0xb0
 800468e:	42b0      	cmp	r0, r6
 8004690:	d975      	bls.n	800477e <_RemoveHoles+0x15e>
 8004692:	f8d9 00a8 	ldr.w	r0, [r9, #168]	; 0xa8
 8004696:	42b0      	cmp	r0, r6
 8004698:	d974      	bls.n	8004784 <_RemoveHoles+0x164>
 800469a:	f8d9 00a0 	ldr.w	r0, [r9, #160]	; 0xa0
 800469e:	42b0      	cmp	r0, r6
 80046a0:	d973      	bls.n	800478a <_RemoveHoles+0x16a>
 80046a2:	f8d9 0098 	ldr.w	r0, [r9, #152]	; 0x98
 80046a6:	4286      	cmp	r6, r0
 80046a8:	d278      	bcs.n	800479c <_RemoveHoles+0x17c>
 80046aa:	f8d9 0090 	ldr.w	r0, [r9, #144]	; 0x90
 80046ae:	4286      	cmp	r6, r0
 80046b0:	d277      	bcs.n	80047a2 <_RemoveHoles+0x182>
 80046b2:	f8d8 0088 	ldr.w	r0, [r8, #136]	; 0x88
 80046b6:	4286      	cmp	r6, r0
 80046b8:	d26a      	bcs.n	8004790 <_RemoveHoles+0x170>
 80046ba:	f8d9 0080 	ldr.w	r0, [r9, #128]	; 0x80
 80046be:	4286      	cmp	r6, r0
 80046c0:	d269      	bcs.n	8004796 <_RemoveHoles+0x176>
 80046c2:	f8d9 0078 	ldr.w	r0, [r9, #120]	; 0x78
 80046c6:	4286      	cmp	r6, r0
 80046c8:	d274      	bcs.n	80047b4 <_RemoveHoles+0x194>
 80046ca:	f8d9 0070 	ldr.w	r0, [r9, #112]	; 0x70
 80046ce:	4286      	cmp	r6, r0
 80046d0:	d273      	bcs.n	80047ba <_RemoveHoles+0x19a>
 80046d2:	f8d9 0068 	ldr.w	r0, [r9, #104]	; 0x68
 80046d6:	4286      	cmp	r6, r0
 80046d8:	d272      	bcs.n	80047c0 <_RemoveHoles+0x1a0>
 80046da:	f8d9 0060 	ldr.w	r0, [r9, #96]	; 0x60
 80046de:	4286      	cmp	r6, r0
 80046e0:	d262      	bcs.n	80047a8 <_RemoveHoles+0x188>
 80046e2:	f8d9 0058 	ldr.w	r0, [r9, #88]	; 0x58
 80046e6:	4286      	cmp	r6, r0
 80046e8:	d261      	bcs.n	80047ae <_RemoveHoles+0x18e>
 80046ea:	f8d9 0050 	ldr.w	r0, [r9, #80]	; 0x50
 80046ee:	4286      	cmp	r6, r0
 80046f0:	d269      	bcs.n	80047c6 <_RemoveHoles+0x1a6>
 80046f2:	f8d9 0048 	ldr.w	r0, [r9, #72]	; 0x48
 80046f6:	4286      	cmp	r6, r0
 80046f8:	d21f      	bcs.n	800473a <_RemoveHoles+0x11a>
 80046fa:	f8d9 0040 	ldr.w	r0, [r9, #64]	; 0x40
 80046fe:	4286      	cmp	r6, r0
 8004700:	d231      	bcs.n	8004766 <_RemoveHoles+0x146>
 8004702:	6053      	str	r3, [r2, #4]
 8004704:	4618      	mov	r0, r3
 8004706:	4622      	mov	r2, r4
 8004708:	f012 fe71 	bl	80173ee <memmove>
 800470c:	4555      	cmp	r5, sl
 800470e:	4603      	mov	r3, r0
 8004710:	d00b      	beq.n	800472a <_RemoveHoles+0x10a>
 8004712:	441c      	add	r4, r3
 8004714:	4630      	mov	r0, r6
 8004716:	4621      	mov	r1, r4
 8004718:	f7ff fdd4 	bl	80042c4 <_AddFreeMemory>
 800471c:	f1bb 0f00 	cmp.w	fp, #0
 8004720:	d001      	beq.n	8004726 <_RemoveHoles+0x106>
 8004722:	4558      	cmp	r0, fp
 8004724:	d207      	bcs.n	8004736 <_RemoveHoles+0x116>
 8004726:	4623      	mov	r3, r4
 8004728:	e78b      	b.n	8004642 <_RemoveHoles+0x22>
 800472a:	f8d8 2034 	ldr.w	r2, [r8, #52]	; 0x34
 800472e:	1b92      	subs	r2, r2, r6
 8004730:	f8c8 2034 	str.w	r2, [r8, #52]	; 0x34
 8004734:	e7ed      	b.n	8004712 <_RemoveHoles+0xf2>
 8004736:	2000      	movs	r0, #0
 8004738:	e78d      	b.n	8004656 <_RemoveHoles+0x36>
 800473a:	2001      	movs	r0, #1
 800473c:	9001      	str	r0, [sp, #4]
 800473e:	f8d8 0000 	ldr.w	r0, [r8]
 8004742:	f8d3 e008 	ldr.w	lr, [r3, #8]
 8004746:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800474a:	1b80      	subs	r0, r0, r6
 800474c:	f8c8 0000 	str.w	r0, [r8]
 8004750:	f1be 0f00 	cmp.w	lr, #0
 8004754:	d001      	beq.n	800475a <_RemoveHoles+0x13a>
 8004756:	f8ce c004 	str.w	ip, [lr, #4]
 800475a:	f1bc 0f00 	cmp.w	ip, #0
 800475e:	d005      	beq.n	800476c <_RemoveHoles+0x14c>
 8004760:	f8cc e000 	str.w	lr, [ip]
 8004764:	e7cd      	b.n	8004702 <_RemoveHoles+0xe2>
 8004766:	2000      	movs	r0, #0
 8004768:	9001      	str	r0, [sp, #4]
 800476a:	e7e8      	b.n	800473e <_RemoveHoles+0x11e>
 800476c:	9801      	ldr	r0, [sp, #4]
 800476e:	eb08 00c0 	add.w	r0, r8, r0, lsl #3
 8004772:	f8c0 e044 	str.w	lr, [r0, #68]	; 0x44
 8004776:	e7c4      	b.n	8004702 <_RemoveHoles+0xe2>
 8004778:	200f      	movs	r0, #15
 800477a:	9001      	str	r0, [sp, #4]
 800477c:	e7df      	b.n	800473e <_RemoveHoles+0x11e>
 800477e:	200e      	movs	r0, #14
 8004780:	9001      	str	r0, [sp, #4]
 8004782:	e7dc      	b.n	800473e <_RemoveHoles+0x11e>
 8004784:	200d      	movs	r0, #13
 8004786:	9001      	str	r0, [sp, #4]
 8004788:	e7d9      	b.n	800473e <_RemoveHoles+0x11e>
 800478a:	200c      	movs	r0, #12
 800478c:	9001      	str	r0, [sp, #4]
 800478e:	e7d6      	b.n	800473e <_RemoveHoles+0x11e>
 8004790:	2009      	movs	r0, #9
 8004792:	9001      	str	r0, [sp, #4]
 8004794:	e7d3      	b.n	800473e <_RemoveHoles+0x11e>
 8004796:	2008      	movs	r0, #8
 8004798:	9001      	str	r0, [sp, #4]
 800479a:	e7d0      	b.n	800473e <_RemoveHoles+0x11e>
 800479c:	200b      	movs	r0, #11
 800479e:	9001      	str	r0, [sp, #4]
 80047a0:	e7cd      	b.n	800473e <_RemoveHoles+0x11e>
 80047a2:	200a      	movs	r0, #10
 80047a4:	9001      	str	r0, [sp, #4]
 80047a6:	e7ca      	b.n	800473e <_RemoveHoles+0x11e>
 80047a8:	2004      	movs	r0, #4
 80047aa:	9001      	str	r0, [sp, #4]
 80047ac:	e7c7      	b.n	800473e <_RemoveHoles+0x11e>
 80047ae:	2003      	movs	r0, #3
 80047b0:	9001      	str	r0, [sp, #4]
 80047b2:	e7c4      	b.n	800473e <_RemoveHoles+0x11e>
 80047b4:	2007      	movs	r0, #7
 80047b6:	9001      	str	r0, [sp, #4]
 80047b8:	e7c1      	b.n	800473e <_RemoveHoles+0x11e>
 80047ba:	2006      	movs	r0, #6
 80047bc:	9001      	str	r0, [sp, #4]
 80047be:	e7be      	b.n	800473e <_RemoveHoles+0x11e>
 80047c0:	2005      	movs	r0, #5
 80047c2:	9001      	str	r0, [sp, #4]
 80047c4:	e7bb      	b.n	800473e <_RemoveHoles+0x11e>
 80047c6:	2002      	movs	r0, #2
 80047c8:	9001      	str	r0, [sp, #4]
 80047ca:	e7b8      	b.n	800473e <_RemoveHoles+0x11e>
 80047cc:	2001c08c 	.word	0x2001c08c

080047d0 <_Alloc>:
 80047d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047d4:	4cc0      	ldr	r4, [pc, #768]	; (8004ad8 <_Alloc+0x308>)
 80047d6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80047da:	4605      	mov	r5, r0
 80047dc:	2b00      	cmp	r3, #0
 80047de:	f000 80f8 	beq.w	80049d2 <_Alloc+0x202>
 80047e2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80047e4:	6823      	ldr	r3, [r4, #0]
 80047e6:	4285      	cmp	r5, r0
 80047e8:	bf24      	itt	cs
 80047ea:	1ce8      	addcs	r0, r5, #3
 80047ec:	f020 0003 	biccs.w	r0, r0, #3
 80047f0:	f100 060c 	add.w	r6, r0, #12
 80047f4:	42b3      	cmp	r3, r6
 80047f6:	4db8      	ldr	r5, [pc, #736]	; (8004ad8 <_Alloc+0x308>)
 80047f8:	d202      	bcs.n	8004800 <_Alloc+0x30>
 80047fa:	2000      	movs	r0, #0
 80047fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004800:	686b      	ldr	r3, [r5, #4]
 8004802:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8004804:	4293      	cmp	r3, r2
 8004806:	f240 8154 	bls.w	8004ab2 <_Alloc+0x2e2>
 800480a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800480c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800480e:	ea4f 08c5 	mov.w	r8, r5, lsl #3
 8004812:	3b01      	subs	r3, #1
 8004814:	eb02 0108 	add.w	r1, r2, r8
 8004818:	6063      	str	r3, [r4, #4]
 800481a:	684b      	ldr	r3, [r1, #4]
 800481c:	6263      	str	r3, [r4, #36]	; 0x24
 800481e:	2301      	movs	r3, #1
 8004820:	f802 3035 	strb.w	r3, [r2, r5, lsl #3]
 8004824:	2d00      	cmp	r5, #0
 8004826:	d0e8      	beq.n	80047fa <_Alloc+0x2a>
 8004828:	4fab      	ldr	r7, [pc, #684]	; (8004ad8 <_Alloc+0x308>)
 800482a:	f8d4 e0b8 	ldr.w	lr, [r4, #184]	; 0xb8
 800482e:	4576      	cmp	r6, lr
 8004830:	f080 8121 	bcs.w	8004a76 <_Alloc+0x2a6>
 8004834:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8004838:	429e      	cmp	r6, r3
 800483a:	f080 811e 	bcs.w	8004a7a <_Alloc+0x2aa>
 800483e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8004842:	429e      	cmp	r6, r3
 8004844:	f080 811b 	bcs.w	8004a7e <_Alloc+0x2ae>
 8004848:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800484c:	429e      	cmp	r6, r3
 800484e:	f080 811a 	bcs.w	8004a86 <_Alloc+0x2b6>
 8004852:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004856:	429e      	cmp	r6, r3
 8004858:	f080 8113 	bcs.w	8004a82 <_Alloc+0x2b2>
 800485c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8004860:	429e      	cmp	r6, r3
 8004862:	f080 8114 	bcs.w	8004a8e <_Alloc+0x2be>
 8004866:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800486a:	429e      	cmp	r6, r3
 800486c:	f080 810d 	bcs.w	8004a8a <_Alloc+0x2ba>
 8004870:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8004874:	429e      	cmp	r6, r3
 8004876:	f080 810e 	bcs.w	8004a96 <_Alloc+0x2c6>
 800487a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800487c:	429e      	cmp	r6, r3
 800487e:	f080 8108 	bcs.w	8004a92 <_Alloc+0x2c2>
 8004882:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004884:	429e      	cmp	r6, r3
 8004886:	f080 810a 	bcs.w	8004a9e <_Alloc+0x2ce>
 800488a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 800488c:	429e      	cmp	r6, r3
 800488e:	f080 8104 	bcs.w	8004a9a <_Alloc+0x2ca>
 8004892:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8004894:	429e      	cmp	r6, r3
 8004896:	f080 8104 	bcs.w	8004aa2 <_Alloc+0x2d2>
 800489a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800489c:	429e      	cmp	r6, r3
 800489e:	f080 8102 	bcs.w	8004aa6 <_Alloc+0x2d6>
 80048a2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80048a4:	429e      	cmp	r6, r3
 80048a6:	f080 8102 	bcs.w	8004aae <_Alloc+0x2de>
 80048aa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80048ac:	429e      	cmp	r6, r3
 80048ae:	f080 80fc 	bcs.w	8004aaa <_Alloc+0x2da>
 80048b2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80048b4:	429e      	cmp	r6, r3
 80048b6:	f04f 33ff 	mov.w	r3, #4294967295
 80048ba:	bf28      	it	cs
 80048bc:	2300      	movcs	r3, #0
 80048be:	2b0f      	cmp	r3, #15
 80048c0:	d812      	bhi.n	80048e8 <_Alloc+0x118>
 80048c2:	2100      	movs	r1, #0
 80048c4:	eb04 00c1 	add.w	r0, r4, r1, lsl #3
 80048c8:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80048ca:	b92b      	cbnz	r3, 80048d8 <_Alloc+0x108>
 80048cc:	e007      	b.n	80048de <_Alloc+0x10e>
 80048ce:	685a      	ldr	r2, [r3, #4]
 80048d0:	4296      	cmp	r6, r2
 80048d2:	d91d      	bls.n	8004910 <_Alloc+0x140>
 80048d4:	689b      	ldr	r3, [r3, #8]
 80048d6:	b113      	cbz	r3, 80048de <_Alloc+0x10e>
 80048d8:	689b      	ldr	r3, [r3, #8]
 80048da:	2b00      	cmp	r3, #0
 80048dc:	d1f7      	bne.n	80048ce <_Alloc+0xfe>
 80048de:	3101      	adds	r1, #1
 80048e0:	2910      	cmp	r1, #16
 80048e2:	f100 0008 	add.w	r0, r0, #8
 80048e6:	d1ef      	bne.n	80048c8 <_Alloc+0xf8>
 80048e8:	4630      	mov	r0, r6
 80048ea:	f7ff fe99 	bl	8004620 <_RemoveHoles>
 80048ee:	2800      	cmp	r0, #0
 80048f0:	d09b      	beq.n	800482a <_Alloc+0x5a>
 80048f2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80048f4:	6863      	ldr	r3, [r4, #4]
 80048f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80048f8:	4490      	add	r8, r2
 80048fa:	2600      	movs	r6, #0
 80048fc:	3301      	adds	r3, #1
 80048fe:	6063      	str	r3, [r4, #4]
 8004900:	f8c8 1004 	str.w	r1, [r8, #4]
 8004904:	f802 6035 	strb.w	r6, [r2, r5, lsl #3]
 8004908:	4630      	mov	r0, r6
 800490a:	6265      	str	r5, [r4, #36]	; 0x24
 800490c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004910:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8004912:	1b97      	subs	r7, r2, r6
 8004914:	f101 000c 	add.w	r0, r1, #12
 8004918:	4287      	cmp	r7, r0
 800491a:	bf2c      	ite	cs
 800491c:	4630      	movcs	r0, r6
 800491e:	4610      	movcc	r0, r2
 8004920:	4596      	cmp	lr, r2
 8004922:	f240 80f5 	bls.w	8004b10 <_Alloc+0x340>
 8004926:	f8d4 70b0 	ldr.w	r7, [r4, #176]	; 0xb0
 800492a:	4e6b      	ldr	r6, [pc, #428]	; (8004ad8 <_Alloc+0x308>)
 800492c:	42ba      	cmp	r2, r7
 800492e:	f080 80f1 	bcs.w	8004b14 <_Alloc+0x344>
 8004932:	f8d6 70a8 	ldr.w	r7, [r6, #168]	; 0xa8
 8004936:	42ba      	cmp	r2, r7
 8004938:	f080 80e8 	bcs.w	8004b0c <_Alloc+0x33c>
 800493c:	f8d6 70a0 	ldr.w	r7, [r6, #160]	; 0xa0
 8004940:	42ba      	cmp	r2, r7
 8004942:	f080 80cd 	bcs.w	8004ae0 <_Alloc+0x310>
 8004946:	f8d6 7098 	ldr.w	r7, [r6, #152]	; 0x98
 800494a:	42ba      	cmp	r2, r7
 800494c:	f080 80d8 	bcs.w	8004b00 <_Alloc+0x330>
 8004950:	f8d6 7090 	ldr.w	r7, [r6, #144]	; 0x90
 8004954:	4297      	cmp	r7, r2
 8004956:	f240 80df 	bls.w	8004b18 <_Alloc+0x348>
 800495a:	f8d6 7088 	ldr.w	r7, [r6, #136]	; 0x88
 800495e:	4297      	cmp	r7, r2
 8004960:	f240 80de 	bls.w	8004b20 <_Alloc+0x350>
 8004964:	f8d6 7080 	ldr.w	r7, [r6, #128]	; 0x80
 8004968:	4297      	cmp	r7, r2
 800496a:	f240 80d7 	bls.w	8004b1c <_Alloc+0x34c>
 800496e:	6fb7      	ldr	r7, [r6, #120]	; 0x78
 8004970:	4297      	cmp	r7, r2
 8004972:	f240 80e5 	bls.w	8004b40 <_Alloc+0x370>
 8004976:	6f36      	ldr	r6, [r6, #112]	; 0x70
 8004978:	4296      	cmp	r6, r2
 800497a:	f240 80df 	bls.w	8004b3c <_Alloc+0x36c>
 800497e:	6ea6      	ldr	r6, [r4, #104]	; 0x68
 8004980:	4f55      	ldr	r7, [pc, #340]	; (8004ad8 <_Alloc+0x308>)
 8004982:	4296      	cmp	r6, r2
 8004984:	f240 80d8 	bls.w	8004b38 <_Alloc+0x368>
 8004988:	6e3e      	ldr	r6, [r7, #96]	; 0x60
 800498a:	4296      	cmp	r6, r2
 800498c:	f240 80d2 	bls.w	8004b34 <_Alloc+0x364>
 8004990:	6dbe      	ldr	r6, [r7, #88]	; 0x58
 8004992:	42b2      	cmp	r2, r6
 8004994:	f080 80cc 	bcs.w	8004b30 <_Alloc+0x360>
 8004998:	6d3e      	ldr	r6, [r7, #80]	; 0x50
 800499a:	4296      	cmp	r6, r2
 800499c:	f240 80c6 	bls.w	8004b2c <_Alloc+0x35c>
 80049a0:	6cbe      	ldr	r6, [r7, #72]	; 0x48
 80049a2:	42b2      	cmp	r2, r6
 80049a4:	f080 80c0 	bcs.w	8004b28 <_Alloc+0x358>
 80049a8:	4291      	cmp	r1, r2
 80049aa:	f240 80bb 	bls.w	8004b24 <_Alloc+0x354>
 80049ae:	6b64      	ldr	r4, [r4, #52]	; 0x34
 80049b0:	1819      	adds	r1, r3, r0
 80049b2:	44a0      	add	r8, r4
 80049b4:	4290      	cmp	r0, r2
 80049b6:	f04f 0400 	mov.w	r4, #0
 80049ba:	f8c8 3004 	str.w	r3, [r8, #4]
 80049be:	601d      	str	r5, [r3, #0]
 80049c0:	6058      	str	r0, [r3, #4]
 80049c2:	611b      	str	r3, [r3, #16]
 80049c4:	609c      	str	r4, [r3, #8]
 80049c6:	f841 0c04 	str.w	r0, [r1, #-4]
 80049ca:	db7e      	blt.n	8004aca <_Alloc+0x2fa>
 80049cc:	4628      	mov	r0, r5
 80049ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80049d2:	4b42      	ldr	r3, [pc, #264]	; (8004adc <_Alloc+0x30c>)
 80049d4:	689a      	ldr	r2, [r3, #8]
 80049d6:	6858      	ldr	r0, [r3, #4]
 80049d8:	2101      	movs	r1, #1
 80049da:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
 80049de:	b90a      	cbnz	r2, 80049e4 <_Alloc+0x214>
 80049e0:	0882      	lsrs	r2, r0, #2
 80049e2:	609a      	str	r2, [r3, #8]
 80049e4:	265a      	movs	r6, #90	; 0x5a
 80049e6:	6226      	str	r6, [r4, #32]
 80049e8:	2710      	movs	r7, #16
 80049ea:	2220      	movs	r2, #32
 80049ec:	2640      	movs	r6, #64	; 0x40
 80049ee:	6819      	ldr	r1, [r3, #0]
 80049f0:	6427      	str	r7, [r4, #64]	; 0x40
 80049f2:	64a2      	str	r2, [r4, #72]	; 0x48
 80049f4:	6526      	str	r6, [r4, #80]	; 0x50
 80049f6:	2780      	movs	r7, #128	; 0x80
 80049f8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80049fc:	f44f 7600 	mov.w	r6, #512	; 0x200
 8004a00:	65a7      	str	r7, [r4, #88]	; 0x58
 8004a02:	6622      	str	r2, [r4, #96]	; 0x60
 8004a04:	66a6      	str	r6, [r4, #104]	; 0x68
 8004a06:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8004a0a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004a0e:	f44f 5680 	mov.w	r6, #4096	; 0x1000
 8004a12:	f1a1 0314 	sub.w	r3, r1, #20
 8004a16:	6727      	str	r7, [r4, #112]	; 0x70
 8004a18:	67a2      	str	r2, [r4, #120]	; 0x78
 8004a1a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 8004a1e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8004a22:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8004a26:	f44f 4600 	mov.w	r6, #32768	; 0x8000
 8004a2a:	4403      	add	r3, r0
 8004a2c:	f8c4 7088 	str.w	r7, [r4, #136]	; 0x88
 8004a30:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 8004a34:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
 8004a38:	f44f 3780 	mov.w	r7, #65536	; 0x10000
 8004a3c:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8004a40:	f44f 2680 	mov.w	r6, #262144	; 0x40000
 8004a44:	f8c4 70a0 	str.w	r7, [r4, #160]	; 0xa0
 8004a48:	f8c4 20a8 	str.w	r2, [r4, #168]	; 0xa8
 8004a4c:	f8c4 60b0 	str.w	r6, [r4, #176]	; 0xb0
 8004a50:	2202      	movs	r2, #2
 8004a52:	2601      	movs	r6, #1
 8004a54:	f44f 2700 	mov.w	r7, #524288	; 0x80000
 8004a58:	63a1      	str	r1, [r4, #56]	; 0x38
 8004a5a:	6363      	str	r3, [r4, #52]	; 0x34
 8004a5c:	6122      	str	r2, [r4, #16]
 8004a5e:	60e0      	str	r0, [r4, #12]
 8004a60:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8004a64:	605e      	str	r6, [r3, #4]
 8004a66:	6266      	str	r6, [r4, #36]	; 0x24
 8004a68:	6066      	str	r6, [r4, #4]
 8004a6a:	f7ff fc2b 	bl	80042c4 <_AddFreeMemory>
 8004a6e:	f000 f869 	bl	8004b44 <_EnlargeBlocks>
 8004a72:	6326      	str	r6, [r4, #48]	; 0x30
 8004a74:	e6b5      	b.n	80047e2 <_Alloc+0x12>
 8004a76:	210f      	movs	r1, #15
 8004a78:	e724      	b.n	80048c4 <_Alloc+0xf4>
 8004a7a:	210e      	movs	r1, #14
 8004a7c:	e722      	b.n	80048c4 <_Alloc+0xf4>
 8004a7e:	210d      	movs	r1, #13
 8004a80:	e720      	b.n	80048c4 <_Alloc+0xf4>
 8004a82:	210b      	movs	r1, #11
 8004a84:	e71e      	b.n	80048c4 <_Alloc+0xf4>
 8004a86:	210c      	movs	r1, #12
 8004a88:	e71c      	b.n	80048c4 <_Alloc+0xf4>
 8004a8a:	2109      	movs	r1, #9
 8004a8c:	e71a      	b.n	80048c4 <_Alloc+0xf4>
 8004a8e:	210a      	movs	r1, #10
 8004a90:	e718      	b.n	80048c4 <_Alloc+0xf4>
 8004a92:	2107      	movs	r1, #7
 8004a94:	e716      	b.n	80048c4 <_Alloc+0xf4>
 8004a96:	2108      	movs	r1, #8
 8004a98:	e714      	b.n	80048c4 <_Alloc+0xf4>
 8004a9a:	2105      	movs	r1, #5
 8004a9c:	e712      	b.n	80048c4 <_Alloc+0xf4>
 8004a9e:	2106      	movs	r1, #6
 8004aa0:	e710      	b.n	80048c4 <_Alloc+0xf4>
 8004aa2:	2104      	movs	r1, #4
 8004aa4:	e70e      	b.n	80048c4 <_Alloc+0xf4>
 8004aa6:	2103      	movs	r1, #3
 8004aa8:	e70c      	b.n	80048c4 <_Alloc+0xf4>
 8004aaa:	2101      	movs	r1, #1
 8004aac:	e70a      	b.n	80048c4 <_Alloc+0xf4>
 8004aae:	2102      	movs	r1, #2
 8004ab0:	e708      	b.n	80048c4 <_Alloc+0xf4>
 8004ab2:	3a01      	subs	r2, #1
 8004ab4:	632a      	str	r2, [r5, #48]	; 0x30
 8004ab6:	f000 f845 	bl	8004b44 <_EnlargeBlocks>
 8004aba:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8004abc:	3301      	adds	r3, #1
 8004abe:	632b      	str	r3, [r5, #48]	; 0x30
 8004ac0:	2800      	cmp	r0, #0
 8004ac2:	f47f ae9a 	bne.w	80047fa <_Alloc+0x2a>
 8004ac6:	686b      	ldr	r3, [r5, #4]
 8004ac8:	e69f      	b.n	800480a <_Alloc+0x3a>
 8004aca:	1a10      	subs	r0, r2, r0
 8004acc:	f7ff fbfa 	bl	80042c4 <_AddFreeMemory>
 8004ad0:	4628      	mov	r0, r5
 8004ad2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ad6:	bf00      	nop
 8004ad8:	2001c08c 	.word	0x2001c08c
 8004adc:	2000036c 	.word	0x2000036c
 8004ae0:	210c      	movs	r1, #12
 8004ae2:	6826      	ldr	r6, [r4, #0]
 8004ae4:	689f      	ldr	r7, [r3, #8]
 8004ae6:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 8004aea:	1ab6      	subs	r6, r6, r2
 8004aec:	6026      	str	r6, [r4, #0]
 8004aee:	b10f      	cbz	r7, 8004af4 <_Alloc+0x324>
 8004af0:	f8c7 e004 	str.w	lr, [r7, #4]
 8004af4:	f1be 0f00 	cmp.w	lr, #0
 8004af8:	d004      	beq.n	8004b04 <_Alloc+0x334>
 8004afa:	f8ce 7000 	str.w	r7, [lr]
 8004afe:	e756      	b.n	80049ae <_Alloc+0x1de>
 8004b00:	210b      	movs	r1, #11
 8004b02:	e7ee      	b.n	8004ae2 <_Alloc+0x312>
 8004b04:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8004b08:	644f      	str	r7, [r1, #68]	; 0x44
 8004b0a:	e750      	b.n	80049ae <_Alloc+0x1de>
 8004b0c:	210d      	movs	r1, #13
 8004b0e:	e7e8      	b.n	8004ae2 <_Alloc+0x312>
 8004b10:	210f      	movs	r1, #15
 8004b12:	e7e6      	b.n	8004ae2 <_Alloc+0x312>
 8004b14:	210e      	movs	r1, #14
 8004b16:	e7e4      	b.n	8004ae2 <_Alloc+0x312>
 8004b18:	210a      	movs	r1, #10
 8004b1a:	e7e2      	b.n	8004ae2 <_Alloc+0x312>
 8004b1c:	2108      	movs	r1, #8
 8004b1e:	e7e0      	b.n	8004ae2 <_Alloc+0x312>
 8004b20:	2109      	movs	r1, #9
 8004b22:	e7de      	b.n	8004ae2 <_Alloc+0x312>
 8004b24:	2100      	movs	r1, #0
 8004b26:	e7dc      	b.n	8004ae2 <_Alloc+0x312>
 8004b28:	2101      	movs	r1, #1
 8004b2a:	e7da      	b.n	8004ae2 <_Alloc+0x312>
 8004b2c:	2102      	movs	r1, #2
 8004b2e:	e7d8      	b.n	8004ae2 <_Alloc+0x312>
 8004b30:	2103      	movs	r1, #3
 8004b32:	e7d6      	b.n	8004ae2 <_Alloc+0x312>
 8004b34:	2104      	movs	r1, #4
 8004b36:	e7d4      	b.n	8004ae2 <_Alloc+0x312>
 8004b38:	2105      	movs	r1, #5
 8004b3a:	e7d2      	b.n	8004ae2 <_Alloc+0x312>
 8004b3c:	2106      	movs	r1, #6
 8004b3e:	e7d0      	b.n	8004ae2 <_Alloc+0x312>
 8004b40:	2107      	movs	r1, #7
 8004b42:	e7ce      	b.n	8004ae2 <_Alloc+0x312>

08004b44 <_EnlargeBlocks>:
 8004b44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b48:	4c2f      	ldr	r4, [pc, #188]	; (8004c08 <_EnlargeBlocks+0xc4>)
 8004b4a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8004b4c:	b973      	cbnz	r3, 8004b6c <_EnlargeBlocks+0x28>
 8004b4e:	4b2f      	ldr	r3, [pc, #188]	; (8004c0c <_EnlargeBlocks+0xc8>)
 8004b50:	689d      	ldr	r5, [r3, #8]
 8004b52:	685b      	ldr	r3, [r3, #4]
 8004b54:	3508      	adds	r5, #8
 8004b56:	fbb3 f5f5 	udiv	r5, r3, r5
 8004b5a:	3502      	adds	r5, #2
 8004b5c:	00e8      	lsls	r0, r5, #3
 8004b5e:	f7ff fe37 	bl	80047d0 <_Alloc>
 8004b62:	4607      	mov	r7, r0
 8004b64:	b960      	cbnz	r0, 8004b80 <_EnlargeBlocks+0x3c>
 8004b66:	2001      	movs	r0, #1
 8004b68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b6c:	6923      	ldr	r3, [r4, #16]
 8004b6e:	1d1d      	adds	r5, r3, #4
 8004b70:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 8004b74:	00e8      	lsls	r0, r5, #3
 8004b76:	f7ff fe2b 	bl	80047d0 <_Alloc>
 8004b7a:	4607      	mov	r7, r0
 8004b7c:	2800      	cmp	r0, #0
 8004b7e:	d0f2      	beq.n	8004b66 <_EnlargeBlocks+0x22>
 8004b80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004b82:	6922      	ldr	r2, [r4, #16]
 8004b84:	4b22      	ldr	r3, [pc, #136]	; (8004c10 <_EnlargeBlocks+0xcc>)
 8004b86:	f8d4 802c 	ldr.w	r8, [r4, #44]	; 0x2c
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 8004b90:	00d2      	lsls	r2, r2, #3
 8004b92:	6846      	ldr	r6, [r0, #4]
 8004b94:	3608      	adds	r6, #8
 8004b96:	4630      	mov	r0, r6
 8004b98:	4798      	blx	r3
 8004b9a:	6920      	ldr	r0, [r4, #16]
 8004b9c:	6366      	str	r6, [r4, #52]	; 0x34
 8004b9e:	1e69      	subs	r1, r5, #1
 8004ba0:	4288      	cmp	r0, r1
 8004ba2:	62e7      	str	r7, [r4, #44]	; 0x2c
 8004ba4:	d22e      	bcs.n	8004c04 <_EnlargeBlocks+0xc0>
 8004ba6:	eb06 02c0 	add.w	r2, r6, r0, lsl #3
 8004baa:	4603      	mov	r3, r0
 8004bac:	3301      	adds	r3, #1
 8004bae:	428b      	cmp	r3, r1
 8004bb0:	6053      	str	r3, [r2, #4]
 8004bb2:	f102 0208 	add.w	r2, r2, #8
 8004bb6:	d1f9      	bne.n	8004bac <_EnlargeBlocks+0x68>
 8004bb8:	eb06 01c1 	add.w	r1, r6, r1, lsl #3
 8004bbc:	2700      	movs	r7, #0
 8004bbe:	604f      	str	r7, [r1, #4]
 8004bc0:	6863      	ldr	r3, [r4, #4]
 8004bc2:	6260      	str	r0, [r4, #36]	; 0x24
 8004bc4:	1a1b      	subs	r3, r3, r0
 8004bc6:	442b      	add	r3, r5
 8004bc8:	6125      	str	r5, [r4, #16]
 8004bca:	6063      	str	r3, [r4, #4]
 8004bcc:	4c0e      	ldr	r4, [pc, #56]	; (8004c08 <_EnlargeBlocks+0xc4>)
 8004bce:	f1b8 0f00 	cmp.w	r8, #0
 8004bd2:	d014      	beq.n	8004bfe <_EnlargeBlocks+0xba>
 8004bd4:	ea4f 05c8 	mov.w	r5, r8, lsl #3
 8004bd8:	442e      	add	r6, r5
 8004bda:	6871      	ldr	r1, [r6, #4]
 8004bdc:	6848      	ldr	r0, [r1, #4]
 8004bde:	f7ff fb71 	bl	80042c4 <_AddFreeMemory>
 8004be2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004be4:	6863      	ldr	r3, [r4, #4]
 8004be6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004be8:	440d      	add	r5, r1
 8004bea:	3301      	adds	r3, #1
 8004bec:	6063      	str	r3, [r4, #4]
 8004bee:	606a      	str	r2, [r5, #4]
 8004bf0:	f801 7038 	strb.w	r7, [r1, r8, lsl #3]
 8004bf4:	4638      	mov	r0, r7
 8004bf6:	f8c4 8024 	str.w	r8, [r4, #36]	; 0x24
 8004bfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004bfe:	4640      	mov	r0, r8
 8004c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c04:	4601      	mov	r1, r0
 8004c06:	e7d7      	b.n	8004bb8 <_EnlargeBlocks+0x74>
 8004c08:	2001c08c 	.word	0x2001c08c
 8004c0c:	2000036c 	.word	0x2000036c
 8004c10:	20000038 	.word	0x20000038

08004c14 <GUI_ALLOC_FreeFixedBlock>:
 8004c14:	b128      	cbz	r0, 8004c22 <GUI_ALLOC_FreeFixedBlock+0xe>
 8004c16:	4a03      	ldr	r2, [pc, #12]	; (8004c24 <GUI_ALLOC_FreeFixedBlock+0x10>)
 8004c18:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8004c1a:	6003      	str	r3, [r0, #0]
 8004c1c:	b103      	cbz	r3, 8004c20 <GUI_ALLOC_FreeFixedBlock+0xc>
 8004c1e:	6058      	str	r0, [r3, #4]
 8004c20:	63d0      	str	r0, [r2, #60]	; 0x3c
 8004c22:	4770      	bx	lr
 8004c24:	2001c08c 	.word	0x2001c08c

08004c28 <GUI_ALLOC_GetFixedBlock>:
 8004c28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c2a:	4e89      	ldr	r6, [pc, #548]	; (8004e50 <GUI_ALLOC_GetFixedBlock+0x228>)
 8004c2c:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 8004c30:	4604      	mov	r4, r0
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d02f      	beq.n	8004c96 <GUI_ALLOC_GetFixedBlock+0x6e>
 8004c36:	3403      	adds	r4, #3
 8004c38:	6c35      	ldr	r5, [r6, #64]	; 0x40
 8004c3a:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8004c3c:	f024 0403 	bic.w	r4, r4, #3
 8004c40:	3404      	adds	r4, #4
 8004c42:	42a5      	cmp	r5, r4
 8004c44:	bf38      	it	cc
 8004c46:	4625      	movcc	r5, r4
 8004c48:	b162      	cbz	r2, 8004c64 <GUI_ALLOC_GetFixedBlock+0x3c>
 8004c4a:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8004c4e:	429d      	cmp	r5, r3
 8004c50:	4614      	mov	r4, r2
 8004c52:	d104      	bne.n	8004c5e <GUI_ALLOC_GetFixedBlock+0x36>
 8004c54:	e014      	b.n	8004c80 <GUI_ALLOC_GetFixedBlock+0x58>
 8004c56:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8004c5a:	429d      	cmp	r5, r3
 8004c5c:	d010      	beq.n	8004c80 <GUI_ALLOC_GetFixedBlock+0x58>
 8004c5e:	6824      	ldr	r4, [r4, #0]
 8004c60:	2c00      	cmp	r4, #0
 8004c62:	d1f8      	bne.n	8004c56 <GUI_ALLOC_GetFixedBlock+0x2e>
 8004c64:	68f3      	ldr	r3, [r6, #12]
 8004c66:	6bb4      	ldr	r4, [r6, #56]	; 0x38
 8004c68:	441c      	add	r4, r3
 8004c6a:	f854 1c04 	ldr.w	r1, [r4, #-4]
 8004c6e:	1a61      	subs	r1, r4, r1
 8004c70:	680b      	ldr	r3, [r1, #0]
 8004c72:	2b00      	cmp	r3, #0
 8004c74:	d165      	bne.n	8004d42 <GUI_ALLOC_GetFixedBlock+0x11a>
 8004c76:	684b      	ldr	r3, [r1, #4]
 8004c78:	429d      	cmp	r5, r3
 8004c7a:	dd6c      	ble.n	8004d56 <GUI_ALLOC_GetFixedBlock+0x12e>
 8004c7c:	2400      	movs	r4, #0
 8004c7e:	e008      	b.n	8004c92 <GUI_ALLOC_GetFixedBlock+0x6a>
 8004c80:	6823      	ldr	r3, [r4, #0]
 8004c82:	b10b      	cbz	r3, 8004c88 <GUI_ALLOC_GetFixedBlock+0x60>
 8004c84:	6861      	ldr	r1, [r4, #4]
 8004c86:	6059      	str	r1, [r3, #4]
 8004c88:	6861      	ldr	r1, [r4, #4]
 8004c8a:	b101      	cbz	r1, 8004c8e <GUI_ALLOC_GetFixedBlock+0x66>
 8004c8c:	600b      	str	r3, [r1, #0]
 8004c8e:	42a2      	cmp	r2, r4
 8004c90:	d053      	beq.n	8004d3a <GUI_ALLOC_GetFixedBlock+0x112>
 8004c92:	4620      	mov	r0, r4
 8004c94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004c96:	4b6f      	ldr	r3, [pc, #444]	; (8004e54 <GUI_ALLOC_GetFixedBlock+0x22c>)
 8004c98:	689a      	ldr	r2, [r3, #8]
 8004c9a:	6858      	ldr	r0, [r3, #4]
 8004c9c:	2101      	movs	r1, #1
 8004c9e:	f886 1028 	strb.w	r1, [r6, #40]	; 0x28
 8004ca2:	b90a      	cbnz	r2, 8004ca8 <GUI_ALLOC_GetFixedBlock+0x80>
 8004ca4:	0882      	lsrs	r2, r0, #2
 8004ca6:	609a      	str	r2, [r3, #8]
 8004ca8:	255a      	movs	r5, #90	; 0x5a
 8004caa:	6235      	str	r5, [r6, #32]
 8004cac:	2710      	movs	r7, #16
 8004cae:	2220      	movs	r2, #32
 8004cb0:	2540      	movs	r5, #64	; 0x40
 8004cb2:	6819      	ldr	r1, [r3, #0]
 8004cb4:	6437      	str	r7, [r6, #64]	; 0x40
 8004cb6:	64b2      	str	r2, [r6, #72]	; 0x48
 8004cb8:	6535      	str	r5, [r6, #80]	; 0x50
 8004cba:	2780      	movs	r7, #128	; 0x80
 8004cbc:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004cc0:	f44f 7500 	mov.w	r5, #512	; 0x200
 8004cc4:	65b7      	str	r7, [r6, #88]	; 0x58
 8004cc6:	6632      	str	r2, [r6, #96]	; 0x60
 8004cc8:	66b5      	str	r5, [r6, #104]	; 0x68
 8004cca:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8004cce:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004cd2:	f44f 5580 	mov.w	r5, #4096	; 0x1000
 8004cd6:	f1a1 0314 	sub.w	r3, r1, #20
 8004cda:	6737      	str	r7, [r6, #112]	; 0x70
 8004cdc:	67b2      	str	r2, [r6, #120]	; 0x78
 8004cde:	f8c6 5080 	str.w	r5, [r6, #128]	; 0x80
 8004ce2:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8004ce6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8004cea:	f44f 4500 	mov.w	r5, #32768	; 0x8000
 8004cee:	4403      	add	r3, r0
 8004cf0:	f8c6 7088 	str.w	r7, [r6, #136]	; 0x88
 8004cf4:	f8c6 2090 	str.w	r2, [r6, #144]	; 0x90
 8004cf8:	f8c6 5098 	str.w	r5, [r6, #152]	; 0x98
 8004cfc:	f44f 3780 	mov.w	r7, #65536	; 0x10000
 8004d00:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8004d04:	f44f 2580 	mov.w	r5, #262144	; 0x40000
 8004d08:	f8c6 70a0 	str.w	r7, [r6, #160]	; 0xa0
 8004d0c:	f8c6 20a8 	str.w	r2, [r6, #168]	; 0xa8
 8004d10:	f8c6 50b0 	str.w	r5, [r6, #176]	; 0xb0
 8004d14:	2202      	movs	r2, #2
 8004d16:	2501      	movs	r5, #1
 8004d18:	f44f 2700 	mov.w	r7, #524288	; 0x80000
 8004d1c:	63b1      	str	r1, [r6, #56]	; 0x38
 8004d1e:	6373      	str	r3, [r6, #52]	; 0x34
 8004d20:	6132      	str	r2, [r6, #16]
 8004d22:	60f0      	str	r0, [r6, #12]
 8004d24:	f8c6 70b8 	str.w	r7, [r6, #184]	; 0xb8
 8004d28:	605d      	str	r5, [r3, #4]
 8004d2a:	6275      	str	r5, [r6, #36]	; 0x24
 8004d2c:	6075      	str	r5, [r6, #4]
 8004d2e:	f7ff fac9 	bl	80042c4 <_AddFreeMemory>
 8004d32:	f7ff ff07 	bl	8004b44 <_EnlargeBlocks>
 8004d36:	6335      	str	r5, [r6, #48]	; 0x30
 8004d38:	e77d      	b.n	8004c36 <GUI_ALLOC_GetFixedBlock+0xe>
 8004d3a:	6823      	ldr	r3, [r4, #0]
 8004d3c:	63f3      	str	r3, [r6, #60]	; 0x3c
 8004d3e:	4620      	mov	r0, r4
 8004d40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d42:	2000      	movs	r0, #0
 8004d44:	f7ff fc6c 	bl	8004620 <_RemoveHoles>
 8004d48:	f854 1c04 	ldr.w	r1, [r4, #-4]
 8004d4c:	1a61      	subs	r1, r4, r1
 8004d4e:	680b      	ldr	r3, [r1, #0]
 8004d50:	2b00      	cmp	r3, #0
 8004d52:	d193      	bne.n	8004c7c <GUI_ALLOC_GetFixedBlock+0x54>
 8004d54:	e78f      	b.n	8004c76 <GUI_ALLOC_GetFixedBlock+0x4e>
 8004d56:	f8d6 70b8 	ldr.w	r7, [r6, #184]	; 0xb8
 8004d5a:	4a3d      	ldr	r2, [pc, #244]	; (8004e50 <GUI_ALLOC_GetFixedBlock+0x228>)
 8004d5c:	1b58      	subs	r0, r3, r5
 8004d5e:	1d04      	adds	r4, r0, #4
 8004d60:	42bb      	cmp	r3, r7
 8004d62:	440c      	add	r4, r1
 8004d64:	d272      	bcs.n	8004e4c <GUI_ALLOC_GetFixedBlock+0x224>
 8004d66:	f8d2 70b0 	ldr.w	r7, [r2, #176]	; 0xb0
 8004d6a:	42bb      	cmp	r3, r7
 8004d6c:	d26c      	bcs.n	8004e48 <GUI_ALLOC_GetFixedBlock+0x220>
 8004d6e:	f8d2 70a8 	ldr.w	r7, [r2, #168]	; 0xa8
 8004d72:	42bb      	cmp	r3, r7
 8004d74:	d266      	bcs.n	8004e44 <GUI_ALLOC_GetFixedBlock+0x21c>
 8004d76:	f8d2 70a0 	ldr.w	r7, [r2, #160]	; 0xa0
 8004d7a:	42bb      	cmp	r3, r7
 8004d7c:	d260      	bcs.n	8004e40 <GUI_ALLOC_GetFixedBlock+0x218>
 8004d7e:	f8d2 7098 	ldr.w	r7, [r2, #152]	; 0x98
 8004d82:	429f      	cmp	r7, r3
 8004d84:	d95a      	bls.n	8004e3c <GUI_ALLOC_GetFixedBlock+0x214>
 8004d86:	f8d2 7090 	ldr.w	r7, [r2, #144]	; 0x90
 8004d8a:	42bb      	cmp	r3, r7
 8004d8c:	d254      	bcs.n	8004e38 <GUI_ALLOC_GetFixedBlock+0x210>
 8004d8e:	f8d2 7088 	ldr.w	r7, [r2, #136]	; 0x88
 8004d92:	42bb      	cmp	r3, r7
 8004d94:	d24e      	bcs.n	8004e34 <GUI_ALLOC_GetFixedBlock+0x20c>
 8004d96:	f8d2 7080 	ldr.w	r7, [r2, #128]	; 0x80
 8004d9a:	42bb      	cmp	r3, r7
 8004d9c:	d248      	bcs.n	8004e30 <GUI_ALLOC_GetFixedBlock+0x208>
 8004d9e:	6f92      	ldr	r2, [r2, #120]	; 0x78
 8004da0:	4293      	cmp	r3, r2
 8004da2:	d243      	bcs.n	8004e2c <GUI_ALLOC_GetFixedBlock+0x204>
 8004da4:	6f37      	ldr	r7, [r6, #112]	; 0x70
 8004da6:	4a2a      	ldr	r2, [pc, #168]	; (8004e50 <GUI_ALLOC_GetFixedBlock+0x228>)
 8004da8:	42bb      	cmp	r3, r7
 8004daa:	d23d      	bcs.n	8004e28 <GUI_ALLOC_GetFixedBlock+0x200>
 8004dac:	6e97      	ldr	r7, [r2, #104]	; 0x68
 8004dae:	42bb      	cmp	r3, r7
 8004db0:	d238      	bcs.n	8004e24 <GUI_ALLOC_GetFixedBlock+0x1fc>
 8004db2:	6e17      	ldr	r7, [r2, #96]	; 0x60
 8004db4:	42bb      	cmp	r3, r7
 8004db6:	d233      	bcs.n	8004e20 <GUI_ALLOC_GetFixedBlock+0x1f8>
 8004db8:	6d97      	ldr	r7, [r2, #88]	; 0x58
 8004dba:	42bb      	cmp	r3, r7
 8004dbc:	d22e      	bcs.n	8004e1c <GUI_ALLOC_GetFixedBlock+0x1f4>
 8004dbe:	6d17      	ldr	r7, [r2, #80]	; 0x50
 8004dc0:	42bb      	cmp	r3, r7
 8004dc2:	d229      	bcs.n	8004e18 <GUI_ALLOC_GetFixedBlock+0x1f0>
 8004dc4:	6c97      	ldr	r7, [r2, #72]	; 0x48
 8004dc6:	42bb      	cmp	r3, r7
 8004dc8:	d224      	bcs.n	8004e14 <GUI_ALLOC_GetFixedBlock+0x1ec>
 8004dca:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8004dcc:	4293      	cmp	r3, r2
 8004dce:	d20c      	bcs.n	8004dea <GUI_ALLOC_GetFixedBlock+0x1c2>
 8004dd0:	68f2      	ldr	r2, [r6, #12]
 8004dd2:	6973      	ldr	r3, [r6, #20]
 8004dd4:	1b52      	subs	r2, r2, r5
 8004dd6:	442b      	add	r3, r5
 8004dd8:	60f2      	str	r2, [r6, #12]
 8004dda:	6173      	str	r3, [r6, #20]
 8004ddc:	b910      	cbnz	r0, 8004de4 <GUI_ALLOC_GetFixedBlock+0x1bc>
 8004dde:	f844 5c04 	str.w	r5, [r4, #-4]
 8004de2:	e756      	b.n	8004c92 <GUI_ALLOC_GetFixedBlock+0x6a>
 8004de4:	f7ff fa6e 	bl	80042c4 <_AddFreeMemory>
 8004de8:	e7f9      	b.n	8004dde <GUI_ALLOC_GetFixedBlock+0x1b6>
 8004dea:	2200      	movs	r2, #0
 8004dec:	6837      	ldr	r7, [r6, #0]
 8004dee:	f8d1 e008 	ldr.w	lr, [r1, #8]
 8004df2:	1afb      	subs	r3, r7, r3
 8004df4:	6033      	str	r3, [r6, #0]
 8004df6:	68cb      	ldr	r3, [r1, #12]
 8004df8:	f1be 0f00 	cmp.w	lr, #0
 8004dfc:	d001      	beq.n	8004e02 <GUI_ALLOC_GetFixedBlock+0x1da>
 8004dfe:	f8ce 3004 	str.w	r3, [lr, #4]
 8004e02:	b113      	cbz	r3, 8004e0a <GUI_ALLOC_GetFixedBlock+0x1e2>
 8004e04:	f8c3 e000 	str.w	lr, [r3]
 8004e08:	e7e2      	b.n	8004dd0 <GUI_ALLOC_GetFixedBlock+0x1a8>
 8004e0a:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 8004e0e:	f8c2 e044 	str.w	lr, [r2, #68]	; 0x44
 8004e12:	e7dd      	b.n	8004dd0 <GUI_ALLOC_GetFixedBlock+0x1a8>
 8004e14:	2201      	movs	r2, #1
 8004e16:	e7e9      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e18:	2202      	movs	r2, #2
 8004e1a:	e7e7      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e1c:	2203      	movs	r2, #3
 8004e1e:	e7e5      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e20:	2204      	movs	r2, #4
 8004e22:	e7e3      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e24:	2205      	movs	r2, #5
 8004e26:	e7e1      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e28:	2206      	movs	r2, #6
 8004e2a:	e7df      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e2c:	2207      	movs	r2, #7
 8004e2e:	e7dd      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e30:	2208      	movs	r2, #8
 8004e32:	e7db      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e34:	2209      	movs	r2, #9
 8004e36:	e7d9      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e38:	220a      	movs	r2, #10
 8004e3a:	e7d7      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e3c:	220b      	movs	r2, #11
 8004e3e:	e7d5      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e40:	220c      	movs	r2, #12
 8004e42:	e7d3      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e44:	220d      	movs	r2, #13
 8004e46:	e7d1      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e48:	220e      	movs	r2, #14
 8004e4a:	e7cf      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e4c:	220f      	movs	r2, #15
 8004e4e:	e7cd      	b.n	8004dec <GUI_ALLOC_GetFixedBlock+0x1c4>
 8004e50:	2001c08c 	.word	0x2001c08c
 8004e54:	2000036c 	.word	0x2000036c

08004e58 <GUI_ALLOC_AllocNoInit>:
 8004e58:	b900      	cbnz	r0, 8004e5c <GUI_ALLOC_AllocNoInit+0x4>
 8004e5a:	4770      	bx	lr
 8004e5c:	f7ff bcb8 	b.w	80047d0 <_Alloc>

08004e60 <GUI_ALLOC_h2p>:
 8004e60:	4b03      	ldr	r3, [pc, #12]	; (8004e70 <GUI_ALLOC_h2p+0x10>)
 8004e62:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004e64:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8004e68:	6840      	ldr	r0, [r0, #4]
 8004e6a:	3008      	adds	r0, #8
 8004e6c:	4770      	bx	lr
 8004e6e:	bf00      	nop
 8004e70:	2001c08c 	.word	0x2001c08c

08004e74 <GUI_ALLOC_LockH>:
 8004e74:	4a07      	ldr	r2, [pc, #28]	; (8004e94 <GUI_ALLOC_LockH+0x20>)
 8004e76:	69d1      	ldr	r1, [r2, #28]
 8004e78:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004e7a:	3101      	adds	r1, #1
 8004e7c:	61d1      	str	r1, [r2, #28]
 8004e7e:	f813 2030 	ldrb.w	r2, [r3, r0, lsl #3]
 8004e82:	3201      	adds	r2, #1
 8004e84:	f803 2030 	strb.w	r2, [r3, r0, lsl #3]
 8004e88:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 8004e8c:	6858      	ldr	r0, [r3, #4]
 8004e8e:	3008      	adds	r0, #8
 8004e90:	4770      	bx	lr
 8004e92:	bf00      	nop
 8004e94:	2001c08c 	.word	0x2001c08c

08004e98 <GUI_ALLOC_UnlockH>:
 8004e98:	b430      	push	{r4, r5}
 8004e9a:	6803      	ldr	r3, [r0, #0]
 8004e9c:	4a0a      	ldr	r2, [pc, #40]	; (8004ec8 <GUI_ALLOC_UnlockH+0x30>)
 8004e9e:	f853 5c08 	ldr.w	r5, [r3, #-8]
 8004ea2:	4604      	mov	r4, r0
 8004ea4:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8004ea6:	f810 3035 	ldrb.w	r3, [r0, r5, lsl #3]
 8004eaa:	2b01      	cmp	r3, #1
 8004eac:	d903      	bls.n	8004eb6 <GUI_ALLOC_UnlockH+0x1e>
 8004eae:	69d1      	ldr	r1, [r2, #28]
 8004eb0:	b109      	cbz	r1, 8004eb6 <GUI_ALLOC_UnlockH+0x1e>
 8004eb2:	3901      	subs	r1, #1
 8004eb4:	61d1      	str	r1, [r2, #28]
 8004eb6:	3b01      	subs	r3, #1
 8004eb8:	f800 3035 	strb.w	r3, [r0, r5, lsl #3]
 8004ebc:	2200      	movs	r2, #0
 8004ebe:	4610      	mov	r0, r2
 8004ec0:	6022      	str	r2, [r4, #0]
 8004ec2:	bc30      	pop	{r4, r5}
 8004ec4:	4770      	bx	lr
 8004ec6:	bf00      	nop
 8004ec8:	2001c08c 	.word	0x2001c08c

08004ecc <GUI_ALLOC_GetMaxSize>:
 8004ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ece:	4c4a      	ldr	r4, [pc, #296]	; (8004ff8 <GUI_ALLOC_GetMaxSize+0x12c>)
 8004ed0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8004ed4:	2b00      	cmp	r3, #0
 8004ed6:	d03d      	beq.n	8004f54 <GUI_ALLOC_GetMaxSize+0x88>
 8004ed8:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8004edc:	4a46      	ldr	r2, [pc, #280]	; (8004ff8 <GUI_ALLOC_GetMaxSize+0x12c>)
 8004ede:	bb3b      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004ee0:	f8d2 30b4 	ldr.w	r3, [r2, #180]	; 0xb4
 8004ee4:	bb23      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004ee6:	f8d2 30ac 	ldr.w	r3, [r2, #172]	; 0xac
 8004eea:	bb0b      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004eec:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8004ef0:	b9f3      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004ef2:	f8d2 309c 	ldr.w	r3, [r2, #156]	; 0x9c
 8004ef6:	b9db      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004ef8:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 8004efc:	b9c3      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004efe:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8004f02:	b9ab      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f04:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 8004f08:	b993      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f0a:	6fd3      	ldr	r3, [r2, #124]	; 0x7c
 8004f0c:	b983      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f0e:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8004f10:	b973      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f12:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8004f14:	b963      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f16:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8004f18:	b953      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f1a:	6dd3      	ldr	r3, [r2, #92]	; 0x5c
 8004f1c:	b943      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f1e:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8004f20:	b933      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f22:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8004f24:	b923      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f26:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8004f28:	b913      	cbnz	r3, 8004f30 <GUI_ALLOC_GetMaxSize+0x64>
 8004f2a:	f06f 000b 	mvn.w	r0, #11
 8004f2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f30:	689b      	ldr	r3, [r3, #8]
 8004f32:	2b00      	cmp	r3, #0
 8004f34:	d0f9      	beq.n	8004f2a <GUI_ALLOC_GetMaxSize+0x5e>
 8004f36:	2200      	movs	r2, #0
 8004f38:	e001      	b.n	8004f3e <GUI_ALLOC_GetMaxSize+0x72>
 8004f3a:	689b      	ldr	r3, [r3, #8]
 8004f3c:	b143      	cbz	r3, 8004f50 <GUI_ALLOC_GetMaxSize+0x84>
 8004f3e:	6859      	ldr	r1, [r3, #4]
 8004f40:	689b      	ldr	r3, [r3, #8]
 8004f42:	4291      	cmp	r1, r2
 8004f44:	4610      	mov	r0, r2
 8004f46:	bf84      	itt	hi
 8004f48:	460a      	movhi	r2, r1
 8004f4a:	4610      	movhi	r0, r2
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	d1f4      	bne.n	8004f3a <GUI_ALLOC_GetMaxSize+0x6e>
 8004f50:	380c      	subs	r0, #12
 8004f52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f54:	4b29      	ldr	r3, [pc, #164]	; (8004ffc <GUI_ALLOC_GetMaxSize+0x130>)
 8004f56:	689a      	ldr	r2, [r3, #8]
 8004f58:	6858      	ldr	r0, [r3, #4]
 8004f5a:	2101      	movs	r1, #1
 8004f5c:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
 8004f60:	b90a      	cbnz	r2, 8004f66 <GUI_ALLOC_GetMaxSize+0x9a>
 8004f62:	0882      	lsrs	r2, r0, #2
 8004f64:	609a      	str	r2, [r3, #8]
 8004f66:	6819      	ldr	r1, [r3, #0]
 8004f68:	63a1      	str	r1, [r4, #56]	; 0x38
 8004f6a:	265a      	movs	r6, #90	; 0x5a
 8004f6c:	2210      	movs	r2, #16
 8004f6e:	2520      	movs	r5, #32
 8004f70:	6226      	str	r6, [r4, #32]
 8004f72:	6422      	str	r2, [r4, #64]	; 0x40
 8004f74:	64a5      	str	r5, [r4, #72]	; 0x48
 8004f76:	2740      	movs	r7, #64	; 0x40
 8004f78:	2680      	movs	r6, #128	; 0x80
 8004f7a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004f7e:	f44f 7500 	mov.w	r5, #512	; 0x200
 8004f82:	f1a1 0314 	sub.w	r3, r1, #20
 8004f86:	6527      	str	r7, [r4, #80]	; 0x50
 8004f88:	65a6      	str	r6, [r4, #88]	; 0x58
 8004f8a:	6622      	str	r2, [r4, #96]	; 0x60
 8004f8c:	66a5      	str	r5, [r4, #104]	; 0x68
 8004f8e:	f44f 6780 	mov.w	r7, #1024	; 0x400
 8004f92:	f44f 6600 	mov.w	r6, #2048	; 0x800
 8004f96:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004f9a:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 8004f9e:	4403      	add	r3, r0
 8004fa0:	6727      	str	r7, [r4, #112]	; 0x70
 8004fa2:	67a6      	str	r6, [r4, #120]	; 0x78
 8004fa4:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
 8004fa8:	f8c4 5088 	str.w	r5, [r4, #136]	; 0x88
 8004fac:	f44f 4780 	mov.w	r7, #16384	; 0x4000
 8004fb0:	f44f 4600 	mov.w	r6, #32768	; 0x8000
 8004fb4:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8004fb8:	f44f 3500 	mov.w	r5, #131072	; 0x20000
 8004fbc:	f8c4 7090 	str.w	r7, [r4, #144]	; 0x90
 8004fc0:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
 8004fc4:	f8c4 20a0 	str.w	r2, [r4, #160]	; 0xa0
 8004fc8:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
 8004fcc:	2202      	movs	r2, #2
 8004fce:	2501      	movs	r5, #1
 8004fd0:	f44f 2780 	mov.w	r7, #262144	; 0x40000
 8004fd4:	f44f 2600 	mov.w	r6, #524288	; 0x80000
 8004fd8:	6363      	str	r3, [r4, #52]	; 0x34
 8004fda:	6122      	str	r2, [r4, #16]
 8004fdc:	60e0      	str	r0, [r4, #12]
 8004fde:	f8c4 70b0 	str.w	r7, [r4, #176]	; 0xb0
 8004fe2:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8004fe6:	605d      	str	r5, [r3, #4]
 8004fe8:	6265      	str	r5, [r4, #36]	; 0x24
 8004fea:	6065      	str	r5, [r4, #4]
 8004fec:	f7ff f96a 	bl	80042c4 <_AddFreeMemory>
 8004ff0:	f7ff fda8 	bl	8004b44 <_EnlargeBlocks>
 8004ff4:	6325      	str	r5, [r4, #48]	; 0x30
 8004ff6:	e76f      	b.n	8004ed8 <GUI_ALLOC_GetMaxSize+0xc>
 8004ff8:	2001c08c 	.word	0x2001c08c
 8004ffc:	2000036c 	.word	0x2000036c

08005000 <GUI_ALLOC_RequestSize>:
 8005000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005002:	4c54      	ldr	r4, [pc, #336]	; (8005154 <GUI_ALLOC_RequestSize+0x154>)
 8005004:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8005008:	2b00      	cmp	r3, #0
 800500a:	d051      	beq.n	80050b0 <GUI_ALLOC_RequestSize+0xb0>
 800500c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8005010:	4a50      	ldr	r2, [pc, #320]	; (8005154 <GUI_ALLOC_RequestSize+0x154>)
 8005012:	bb83      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005014:	f8d2 30b4 	ldr.w	r3, [r2, #180]	; 0xb4
 8005018:	bb6b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 800501a:	f8d2 30ac 	ldr.w	r3, [r2, #172]	; 0xac
 800501e:	bb53      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005020:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8005024:	bb3b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005026:	f8d2 309c 	ldr.w	r3, [r2, #156]	; 0x9c
 800502a:	bb23      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 800502c:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 8005030:	bb0b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005032:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8005036:	b9f3      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005038:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800503c:	b9db      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 800503e:	6fd3      	ldr	r3, [r2, #124]	; 0x7c
 8005040:	b9cb      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005042:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8005044:	b9bb      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005046:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8005048:	b9ab      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 800504a:	6e53      	ldr	r3, [r2, #100]	; 0x64
 800504c:	b99b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 800504e:	6dd3      	ldr	r3, [r2, #92]	; 0x5c
 8005050:	b98b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005052:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8005054:	b97b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 8005056:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8005058:	b96b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 800505a:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800505c:	b95b      	cbnz	r3, 8005076 <GUI_ALLOC_RequestSize+0x76>
 800505e:	f06f 030b 	mvn.w	r3, #11
 8005062:	493d      	ldr	r1, [pc, #244]	; (8005158 <GUI_ALLOC_RequestSize+0x158>)
 8005064:	17da      	asrs	r2, r3, #31
 8005066:	fb81 1303 	smull	r1, r3, r1, r3
 800506a:	ebc2 1363 	rsb	r3, r2, r3, asr #5
 800506e:	6a20      	ldr	r0, [r4, #32]
 8005070:	fb00 f003 	mul.w	r0, r0, r3
 8005074:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005076:	689b      	ldr	r3, [r3, #8]
 8005078:	2b00      	cmp	r3, #0
 800507a:	d0f8      	beq.n	800506e <GUI_ALLOC_RequestSize+0x6e>
 800507c:	2200      	movs	r2, #0
 800507e:	e001      	b.n	8005084 <GUI_ALLOC_RequestSize+0x84>
 8005080:	689b      	ldr	r3, [r3, #8]
 8005082:	b143      	cbz	r3, 8005096 <GUI_ALLOC_RequestSize+0x96>
 8005084:	6859      	ldr	r1, [r3, #4]
 8005086:	689b      	ldr	r3, [r3, #8]
 8005088:	4291      	cmp	r1, r2
 800508a:	4610      	mov	r0, r2
 800508c:	bf84      	itt	hi
 800508e:	460a      	movhi	r2, r1
 8005090:	4610      	movhi	r0, r2
 8005092:	2b00      	cmp	r3, #0
 8005094:	d1f4      	bne.n	8005080 <GUI_ALLOC_RequestSize+0x80>
 8005096:	380c      	subs	r0, #12
 8005098:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800509c:	4603      	mov	r3, r0
 800509e:	d8e0      	bhi.n	8005062 <GUI_ALLOC_RequestSize+0x62>
 80050a0:	6a22      	ldr	r2, [r4, #32]
 80050a2:	4b2d      	ldr	r3, [pc, #180]	; (8005158 <GUI_ALLOC_RequestSize+0x158>)
 80050a4:	fb02 f000 	mul.w	r0, r2, r0
 80050a8:	fba3 2300 	umull	r2, r3, r3, r0
 80050ac:	0958      	lsrs	r0, r3, #5
 80050ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80050b0:	4b2a      	ldr	r3, [pc, #168]	; (800515c <GUI_ALLOC_RequestSize+0x15c>)
 80050b2:	689a      	ldr	r2, [r3, #8]
 80050b4:	6858      	ldr	r0, [r3, #4]
 80050b6:	2101      	movs	r1, #1
 80050b8:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
 80050bc:	b90a      	cbnz	r2, 80050c2 <GUI_ALLOC_RequestSize+0xc2>
 80050be:	0882      	lsrs	r2, r0, #2
 80050c0:	609a      	str	r2, [r3, #8]
 80050c2:	6819      	ldr	r1, [r3, #0]
 80050c4:	63a1      	str	r1, [r4, #56]	; 0x38
 80050c6:	265a      	movs	r6, #90	; 0x5a
 80050c8:	2210      	movs	r2, #16
 80050ca:	2520      	movs	r5, #32
 80050cc:	6226      	str	r6, [r4, #32]
 80050ce:	6422      	str	r2, [r4, #64]	; 0x40
 80050d0:	64a5      	str	r5, [r4, #72]	; 0x48
 80050d2:	2740      	movs	r7, #64	; 0x40
 80050d4:	2680      	movs	r6, #128	; 0x80
 80050d6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80050da:	f44f 7500 	mov.w	r5, #512	; 0x200
 80050de:	f1a1 0314 	sub.w	r3, r1, #20
 80050e2:	6527      	str	r7, [r4, #80]	; 0x50
 80050e4:	65a6      	str	r6, [r4, #88]	; 0x58
 80050e6:	6622      	str	r2, [r4, #96]	; 0x60
 80050e8:	66a5      	str	r5, [r4, #104]	; 0x68
 80050ea:	f44f 6780 	mov.w	r7, #1024	; 0x400
 80050ee:	f44f 6600 	mov.w	r6, #2048	; 0x800
 80050f2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80050f6:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 80050fa:	4403      	add	r3, r0
 80050fc:	6727      	str	r7, [r4, #112]	; 0x70
 80050fe:	67a6      	str	r6, [r4, #120]	; 0x78
 8005100:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
 8005104:	f8c4 5088 	str.w	r5, [r4, #136]	; 0x88
 8005108:	f44f 4780 	mov.w	r7, #16384	; 0x4000
 800510c:	f44f 4600 	mov.w	r6, #32768	; 0x8000
 8005110:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8005114:	f44f 3500 	mov.w	r5, #131072	; 0x20000
 8005118:	f8c4 7090 	str.w	r7, [r4, #144]	; 0x90
 800511c:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
 8005120:	f8c4 20a0 	str.w	r2, [r4, #160]	; 0xa0
 8005124:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
 8005128:	2202      	movs	r2, #2
 800512a:	2501      	movs	r5, #1
 800512c:	f44f 2780 	mov.w	r7, #262144	; 0x40000
 8005130:	f44f 2600 	mov.w	r6, #524288	; 0x80000
 8005134:	6363      	str	r3, [r4, #52]	; 0x34
 8005136:	6122      	str	r2, [r4, #16]
 8005138:	60e0      	str	r0, [r4, #12]
 800513a:	f8c4 70b0 	str.w	r7, [r4, #176]	; 0xb0
 800513e:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8005142:	605d      	str	r5, [r3, #4]
 8005144:	6265      	str	r5, [r4, #36]	; 0x24
 8005146:	6065      	str	r5, [r4, #4]
 8005148:	f7ff f8bc 	bl	80042c4 <_AddFreeMemory>
 800514c:	f7ff fcfa 	bl	8004b44 <_EnlargeBlocks>
 8005150:	6325      	str	r5, [r4, #48]	; 0x30
 8005152:	e75b      	b.n	800500c <GUI_ALLOC_RequestSize+0xc>
 8005154:	2001c08c 	.word	0x2001c08c
 8005158:	51eb851f 	.word	0x51eb851f
 800515c:	2000036c 	.word	0x2000036c

08005160 <GUI_ALLOC_AssignMemory>:
 8005160:	4b02      	ldr	r3, [pc, #8]	; (800516c <GUI_ALLOC_AssignMemory+0xc>)
 8005162:	f021 0103 	bic.w	r1, r1, #3
 8005166:	e883 0003 	stmia.w	r3, {r0, r1}
 800516a:	4770      	bx	lr
 800516c:	2000036c 	.word	0x2000036c

08005170 <GUI_ALLOC_GetSize>:
 8005170:	b130      	cbz	r0, 8005180 <GUI_ALLOC_GetSize+0x10>
 8005172:	4b04      	ldr	r3, [pc, #16]	; (8005184 <GUI_ALLOC_GetSize+0x14>)
 8005174:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005176:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800517a:	6843      	ldr	r3, [r0, #4]
 800517c:	6858      	ldr	r0, [r3, #4]
 800517e:	380c      	subs	r0, #12
 8005180:	4770      	bx	lr
 8005182:	bf00      	nop
 8005184:	2001c08c 	.word	0x2001c08c

08005188 <GUI_ALLOC_Free>:
 8005188:	b900      	cbnz	r0, 800518c <GUI_ALLOC_Free+0x4>
 800518a:	4770      	bx	lr
 800518c:	b570      	push	{r4, r5, r6, lr}
 800518e:	4c0a      	ldr	r4, [pc, #40]	; (80051b8 <GUI_ALLOC_Free+0x30>)
 8005190:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005192:	00c6      	lsls	r6, r0, #3
 8005194:	4433      	add	r3, r6
 8005196:	4605      	mov	r5, r0
 8005198:	6859      	ldr	r1, [r3, #4]
 800519a:	6848      	ldr	r0, [r1, #4]
 800519c:	f7ff f892 	bl	80042c4 <_AddFreeMemory>
 80051a0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80051a2:	6863      	ldr	r3, [r4, #4]
 80051a4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80051a6:	4416      	add	r6, r2
 80051a8:	3301      	adds	r3, #1
 80051aa:	2000      	movs	r0, #0
 80051ac:	6063      	str	r3, [r4, #4]
 80051ae:	6071      	str	r1, [r6, #4]
 80051b0:	f802 0035 	strb.w	r0, [r2, r5, lsl #3]
 80051b4:	6265      	str	r5, [r4, #36]	; 0x24
 80051b6:	bd70      	pop	{r4, r5, r6, pc}
 80051b8:	2001c08c 	.word	0x2001c08c

080051bc <GUI_ALLOC_FreePtr>:
 80051bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80051be:	6804      	ldr	r4, [r0, #0]
 80051c0:	4605      	mov	r5, r0
 80051c2:	b194      	cbz	r4, 80051ea <GUI_ALLOC_FreePtr+0x2e>
 80051c4:	4e0a      	ldr	r6, [pc, #40]	; (80051f0 <GUI_ALLOC_FreePtr+0x34>)
 80051c6:	6b73      	ldr	r3, [r6, #52]	; 0x34
 80051c8:	00e7      	lsls	r7, r4, #3
 80051ca:	443b      	add	r3, r7
 80051cc:	6859      	ldr	r1, [r3, #4]
 80051ce:	6848      	ldr	r0, [r1, #4]
 80051d0:	f7ff f878 	bl	80042c4 <_AddFreeMemory>
 80051d4:	6b71      	ldr	r1, [r6, #52]	; 0x34
 80051d6:	6873      	ldr	r3, [r6, #4]
 80051d8:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80051da:	440f      	add	r7, r1
 80051dc:	3301      	adds	r3, #1
 80051de:	2000      	movs	r0, #0
 80051e0:	6073      	str	r3, [r6, #4]
 80051e2:	607a      	str	r2, [r7, #4]
 80051e4:	f801 0034 	strb.w	r0, [r1, r4, lsl #3]
 80051e8:	6274      	str	r4, [r6, #36]	; 0x24
 80051ea:	2300      	movs	r3, #0
 80051ec:	602b      	str	r3, [r5, #0]
 80051ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80051f0:	2001c08c 	.word	0x2001c08c

080051f4 <GUI_ALLOC_FreePtrArray>:
 80051f4:	2900      	cmp	r1, #0
 80051f6:	dd29      	ble.n	800524c <GUI_ALLOC_FreePtrArray+0x58>
 80051f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051fc:	2500      	movs	r5, #0
 80051fe:	468a      	mov	sl, r1
 8005200:	4f13      	ldr	r7, [pc, #76]	; (8005250 <GUI_ALLOC_FreePtrArray+0x5c>)
 8005202:	1f04      	subs	r4, r0, #4
 8005204:	46a9      	mov	r9, r5
 8005206:	e003      	b.n	8005210 <GUI_ALLOC_FreePtrArray+0x1c>
 8005208:	45aa      	cmp	sl, r5
 800520a:	f8c4 9000 	str.w	r9, [r4]
 800520e:	d01b      	beq.n	8005248 <GUI_ALLOC_FreePtrArray+0x54>
 8005210:	f854 6f04 	ldr.w	r6, [r4, #4]!
 8005214:	3501      	adds	r5, #1
 8005216:	2e00      	cmp	r6, #0
 8005218:	d0f6      	beq.n	8005208 <GUI_ALLOC_FreePtrArray+0x14>
 800521a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800521c:	ea4f 08c6 	mov.w	r8, r6, lsl #3
 8005220:	4443      	add	r3, r8
 8005222:	6859      	ldr	r1, [r3, #4]
 8005224:	6848      	ldr	r0, [r1, #4]
 8005226:	f7ff f84d 	bl	80042c4 <_AddFreeMemory>
 800522a:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005230:	4488      	add	r8, r1
 8005232:	3301      	adds	r3, #1
 8005234:	45aa      	cmp	sl, r5
 8005236:	607b      	str	r3, [r7, #4]
 8005238:	f8c8 2004 	str.w	r2, [r8, #4]
 800523c:	f801 9036 	strb.w	r9, [r1, r6, lsl #3]
 8005240:	627e      	str	r6, [r7, #36]	; 0x24
 8005242:	f8c4 9000 	str.w	r9, [r4]
 8005246:	d1e3      	bne.n	8005210 <GUI_ALLOC_FreePtrArray+0x1c>
 8005248:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800524c:	4770      	bx	lr
 800524e:	bf00      	nop
 8005250:	2001c08c 	.word	0x2001c08c

08005254 <GUI_ALLOC_AllocZero>:
 8005254:	b908      	cbnz	r0, 800525a <GUI_ALLOC_AllocZero+0x6>
 8005256:	2000      	movs	r0, #0
 8005258:	4770      	bx	lr
 800525a:	b570      	push	{r4, r5, r6, lr}
 800525c:	4606      	mov	r6, r0
 800525e:	f7ff fab7 	bl	80047d0 <_Alloc>
 8005262:	4604      	mov	r4, r0
 8005264:	b338      	cbz	r0, 80052b6 <GUI_ALLOC_AllocZero+0x62>
 8005266:	4d15      	ldr	r5, [pc, #84]	; (80052bc <GUI_ALLOC_AllocZero+0x68>)
 8005268:	4915      	ldr	r1, [pc, #84]	; (80052c0 <GUI_ALLOC_AllocZero+0x6c>)
 800526a:	69ea      	ldr	r2, [r5, #28]
 800526c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800526e:	3201      	adds	r2, #1
 8005270:	61ea      	str	r2, [r5, #28]
 8005272:	f813 2030 	ldrb.w	r2, [r3, r0, lsl #3]
 8005276:	3201      	adds	r2, #1
 8005278:	f803 2030 	strb.w	r2, [r3, r0, lsl #3]
 800527c:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 8005280:	4632      	mov	r2, r6
 8005282:	685e      	ldr	r6, [r3, #4]
 8005284:	680b      	ldr	r3, [r1, #0]
 8005286:	f106 0008 	add.w	r0, r6, #8
 800528a:	2100      	movs	r1, #0
 800528c:	4798      	blx	r3
 800528e:	6831      	ldr	r1, [r6, #0]
 8005290:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8005292:	f812 3031 	ldrb.w	r3, [r2, r1, lsl #3]
 8005296:	2b01      	cmp	r3, #1
 8005298:	d901      	bls.n	800529e <GUI_ALLOC_AllocZero+0x4a>
 800529a:	69e8      	ldr	r0, [r5, #28]
 800529c:	b920      	cbnz	r0, 80052a8 <GUI_ALLOC_AllocZero+0x54>
 800529e:	3b01      	subs	r3, #1
 80052a0:	f802 3031 	strb.w	r3, [r2, r1, lsl #3]
 80052a4:	4620      	mov	r0, r4
 80052a6:	bd70      	pop	{r4, r5, r6, pc}
 80052a8:	3801      	subs	r0, #1
 80052aa:	3b01      	subs	r3, #1
 80052ac:	61e8      	str	r0, [r5, #28]
 80052ae:	f802 3031 	strb.w	r3, [r2, r1, lsl #3]
 80052b2:	4620      	mov	r0, r4
 80052b4:	bd70      	pop	{r4, r5, r6, pc}
 80052b6:	2000      	movs	r0, #0
 80052b8:	bd70      	pop	{r4, r5, r6, pc}
 80052ba:	bf00      	nop
 80052bc:	2001c08c 	.word	0x2001c08c
 80052c0:	2000003c 	.word	0x2000003c

080052c4 <GUI_CalcColorDist>:
 80052c4:	b2c3      	uxtb	r3, r0
 80052c6:	b2ca      	uxtb	r2, r1
 80052c8:	1a9a      	subs	r2, r3, r2
 80052ca:	b292      	uxth	r2, r2
 80052cc:	b430      	push	{r4, r5}
 80052ce:	b215      	sxth	r5, r2
 80052d0:	2d00      	cmp	r5, #0
 80052d2:	bfbc      	itt	lt
 80052d4:	4252      	neglt	r2, r2
 80052d6:	b215      	sxthlt	r5, r2
 80052d8:	f3c0 2307 	ubfx	r3, r0, #8, #8
 80052dc:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80052e0:	1a9b      	subs	r3, r3, r2
 80052e2:	b29b      	uxth	r3, r3
 80052e4:	0c09      	lsrs	r1, r1, #16
 80052e6:	b21a      	sxth	r2, r3
 80052e8:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 80052ec:	2a00      	cmp	r2, #0
 80052ee:	b289      	uxth	r1, r1
 80052f0:	b20c      	sxth	r4, r1
 80052f2:	bfbc      	itt	lt
 80052f4:	425b      	neglt	r3, r3
 80052f6:	b21a      	sxthlt	r2, r3
 80052f8:	2c00      	cmp	r4, #0
 80052fa:	bfbc      	itt	lt
 80052fc:	4249      	neglt	r1, r1
 80052fe:	b20c      	sxthlt	r4, r1
 8005300:	fb02 f202 	mul.w	r2, r2, r2
 8005304:	fb05 2005 	mla	r0, r5, r5, r2
 8005308:	b2a1      	uxth	r1, r4
 800530a:	fb01 0001 	mla	r0, r1, r1, r0
 800530e:	bc30      	pop	{r4, r5}
 8005310:	4770      	bx	lr
 8005312:	bf00      	nop

08005314 <GUI_GetClientRect>:
 8005314:	b108      	cbz	r0, 800531a <GUI_GetClientRect+0x6>
 8005316:	f008 b813 	b.w	800d340 <WM_GetClientRect>
 800531a:	4770      	bx	lr

0800531c <GUI_GetBkColor>:
 800531c:	b508      	push	{r3, lr}
 800531e:	f002 fb9d 	bl	8007a5c <LCD_GetBkColorIndex>
 8005322:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005326:	f002 babf 	b.w	80078a8 <LCD_Index2Color>
 800532a:	bf00      	nop

0800532c <GUI_GetColor>:
 800532c:	b508      	push	{r3, lr}
 800532e:	f002 fb9d 	bl	8007a6c <LCD_GetColorIndex>
 8005332:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005336:	f002 bab7 	b.w	80078a8 <LCD_Index2Color>
 800533a:	bf00      	nop

0800533c <GUI_GetDrawMode>:
 800533c:	4b01      	ldr	r3, [pc, #4]	; (8005344 <GUI_GetDrawMode+0x8>)
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	7c18      	ldrb	r0, [r3, #16]
 8005342:	4770      	bx	lr
 8005344:	20000018 	.word	0x20000018

08005348 <GUI_GetLineStyle>:
 8005348:	4b01      	ldr	r3, [pc, #4]	; (8005350 <GUI_GetLineStyle+0x8>)
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	7e98      	ldrb	r0, [r3, #26]
 800534e:	4770      	bx	lr
 8005350:	20000018 	.word	0x20000018

08005354 <GUI_GetOrg>:
 8005354:	4a04      	ldr	r2, [pc, #16]	; (8005368 <GUI_GetOrg+0x14>)
 8005356:	4b05      	ldr	r3, [pc, #20]	; (800536c <GUI_GetOrg+0x18>)
 8005358:	f9b2 2000 	ldrsh.w	r2, [r2]
 800535c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005360:	6002      	str	r2, [r0, #0]
 8005362:	600b      	str	r3, [r1, #0]
 8005364:	4770      	bx	lr
 8005366:	bf00      	nop
 8005368:	2001c174 	.word	0x2001c174
 800536c:	2001c164 	.word	0x2001c164

08005370 <GUI_GetVersionString>:
 8005370:	4804      	ldr	r0, [pc, #16]	; (8005384 <GUI_GetVersionString+0x14>)
 8005372:	2334      	movs	r3, #52	; 0x34
 8005374:	2135      	movs	r1, #53	; 0x35
 8005376:	2261      	movs	r2, #97	; 0x61
 8005378:	7001      	strb	r1, [r0, #0]
 800537a:	7102      	strb	r2, [r0, #4]
 800537c:	7083      	strb	r3, [r0, #2]
 800537e:	70c3      	strb	r3, [r0, #3]
 8005380:	4770      	bx	lr
 8005382:	bf00      	nop
 8005384:	20000000 	.word	0x20000000

08005388 <GUI_GetYSizeOfFont>:
 8005388:	7e02      	ldrb	r2, [r0, #24]
 800538a:	7ec0      	ldrb	r0, [r0, #27]
 800538c:	fb02 f000 	mul.w	r0, r2, r0
 8005390:	4770      	bx	lr
 8005392:	bf00      	nop

08005394 <GUI_MergeRect>:
 8005394:	b320      	cbz	r0, 80053e0 <GUI_MergeRect+0x4c>
 8005396:	b321      	cbz	r1, 80053e2 <GUI_MergeRect+0x4e>
 8005398:	b322      	cbz	r2, 80053e4 <GUI_MergeRect+0x50>
 800539a:	f9b2 c000 	ldrsh.w	ip, [r2]
 800539e:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80053a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80053a4:	f9b1 5000 	ldrsh.w	r5, [r1]
 80053a8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 80053ac:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80053b0:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80053b4:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80053b8:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
 80053bc:	4565      	cmp	r5, ip
 80053be:	bfa8      	it	ge
 80053c0:	4665      	movge	r5, ip
 80053c2:	45a6      	cmp	lr, r4
 80053c4:	4671      	mov	r1, lr
 80053c6:	bfa8      	it	ge
 80053c8:	4621      	movge	r1, r4
 80053ca:	42ba      	cmp	r2, r7
 80053cc:	bfb8      	it	lt
 80053ce:	463a      	movlt	r2, r7
 80053d0:	42b3      	cmp	r3, r6
 80053d2:	bfb8      	it	lt
 80053d4:	4633      	movlt	r3, r6
 80053d6:	8005      	strh	r5, [r0, #0]
 80053d8:	8041      	strh	r1, [r0, #2]
 80053da:	8082      	strh	r2, [r0, #4]
 80053dc:	80c3      	strh	r3, [r0, #6]
 80053de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80053e0:	4770      	bx	lr
 80053e2:	4611      	mov	r1, r2
 80053e4:	680b      	ldr	r3, [r1, #0]
 80053e6:	684a      	ldr	r2, [r1, #4]
 80053e8:	6042      	str	r2, [r0, #4]
 80053ea:	6003      	str	r3, [r0, #0]
 80053ec:	4770      	bx	lr
 80053ee:	bf00      	nop

080053f0 <GUI_MoveRect>:
 80053f0:	b178      	cbz	r0, 8005412 <GUI_MoveRect+0x22>
 80053f2:	b470      	push	{r4, r5, r6}
 80053f4:	8806      	ldrh	r6, [r0, #0]
 80053f6:	8844      	ldrh	r4, [r0, #2]
 80053f8:	8885      	ldrh	r5, [r0, #4]
 80053fa:	88c3      	ldrh	r3, [r0, #6]
 80053fc:	b289      	uxth	r1, r1
 80053fe:	b292      	uxth	r2, r2
 8005400:	440e      	add	r6, r1
 8005402:	4414      	add	r4, r2
 8005404:	4429      	add	r1, r5
 8005406:	8006      	strh	r6, [r0, #0]
 8005408:	8044      	strh	r4, [r0, #2]
 800540a:	bc70      	pop	{r4, r5, r6}
 800540c:	441a      	add	r2, r3
 800540e:	8081      	strh	r1, [r0, #4]
 8005410:	80c2      	strh	r2, [r0, #6]
 8005412:	4770      	bx	lr

08005414 <GUI_Exec>:
 8005414:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005418:	4f12      	ldr	r7, [pc, #72]	; (8005464 <GUI_Exec+0x50>)
 800541a:	4e13      	ldr	r6, [pc, #76]	; (8005468 <GUI_Exec+0x54>)
 800541c:	f8df 804c 	ldr.w	r8, [pc, #76]	; 800546c <GUI_Exec+0x58>
 8005420:	2500      	movs	r5, #0
 8005422:	683c      	ldr	r4, [r7, #0]
 8005424:	b11c      	cbz	r4, 800542e <GUI_Exec+0x1a>
 8005426:	47a0      	blx	r4
 8005428:	1c04      	adds	r4, r0, #0
 800542a:	bf18      	it	ne
 800542c:	2401      	movne	r4, #1
 800542e:	f007 fb09 	bl	800ca44 <WM_Exec>
 8005432:	6833      	ldr	r3, [r6, #0]
 8005434:	2800      	cmp	r0, #0
 8005436:	bf18      	it	ne
 8005438:	2401      	movne	r4, #1
 800543a:	b14b      	cbz	r3, 8005450 <GUI_Exec+0x3c>
 800543c:	4798      	blx	r3
 800543e:	b138      	cbz	r0, 8005450 <GUI_Exec+0x3c>
 8005440:	f8d8 3000 	ldr.w	r3, [r8]
 8005444:	b113      	cbz	r3, 800544c <GUI_Exec+0x38>
 8005446:	2401      	movs	r4, #1
 8005448:	4798      	blx	r3
 800544a:	b13c      	cbz	r4, 800545c <GUI_Exec+0x48>
 800544c:	2501      	movs	r5, #1
 800544e:	e7e8      	b.n	8005422 <GUI_Exec+0xe>
 8005450:	f8d8 3000 	ldr.w	r3, [r8]
 8005454:	2b00      	cmp	r3, #0
 8005456:	d1f7      	bne.n	8005448 <GUI_Exec+0x34>
 8005458:	2c00      	cmp	r4, #0
 800545a:	d1f7      	bne.n	800544c <GUI_Exec+0x38>
 800545c:	4628      	mov	r0, r5
 800545e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005462:	bf00      	nop
 8005464:	2001c170 	.word	0x2001c170
 8005468:	2001c198 	.word	0x2001c198
 800546c:	2001c190 	.word	0x2001c190

08005470 <GUI_GetBitmapPixelIndex>:
 8005470:	2800      	cmp	r0, #0
 8005472:	d050      	beq.n	8005516 <GUI_GetBitmapPixelIndex+0xa6>
 8005474:	88c3      	ldrh	r3, [r0, #6]
 8005476:	3b01      	subs	r3, #1
 8005478:	b510      	push	{r4, lr}
 800547a:	8884      	ldrh	r4, [r0, #4]
 800547c:	6880      	ldr	r0, [r0, #8]
 800547e:	2b1f      	cmp	r3, #31
 8005480:	d847      	bhi.n	8005512 <GUI_GetBitmapPixelIndex+0xa2>
 8005482:	e8df f003 	tbb	[pc, r3]
 8005486:	2316      	.short	0x2316
 8005488:	46463146 	.word	0x46463146
 800548c:	46463c46 	.word	0x46463c46
 8005490:	46464646 	.word	0x46464646
 8005494:	46464046 	.word	0x46464046
 8005498:	46464646 	.word	0x46464646
 800549c:	46464646 	.word	0x46464646
 80054a0:	46464646 	.word	0x46464646
 80054a4:	1046      	.short	0x1046
 80054a6:	10a3      	asrs	r3, r4, #2
 80054a8:	fb02 1103 	mla	r1, r2, r3, r1
 80054ac:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 80054b0:	bd10      	pop	{r4, pc}
 80054b2:	fb02 f204 	mul.w	r2, r2, r4
 80054b6:	eb00 04d1 	add.w	r4, r0, r1, lsr #3
 80054ba:	43c8      	mvns	r0, r1
 80054bc:	5ca3      	ldrb	r3, [r4, r2]
 80054be:	f000 0007 	and.w	r0, r0, #7
 80054c2:	fa23 f000 	lsr.w	r0, r3, r0
 80054c6:	f000 0001 	and.w	r0, r0, #1
 80054ca:	bd10      	pop	{r4, pc}
 80054cc:	fb02 f204 	mul.w	r2, r2, r4
 80054d0:	eb00 0491 	add.w	r4, r0, r1, lsr #2
 80054d4:	ea6f 0041 	mvn.w	r0, r1, lsl #1
 80054d8:	5ca3      	ldrb	r3, [r4, r2]
 80054da:	f000 0006 	and.w	r0, r0, #6
 80054de:	fa23 f000 	lsr.w	r0, r3, r0
 80054e2:	f000 0003 	and.w	r0, r0, #3
 80054e6:	bd10      	pop	{r4, pc}
 80054e8:	fb02 f204 	mul.w	r2, r2, r4
 80054ec:	eb00 0451 	add.w	r4, r0, r1, lsr #1
 80054f0:	07cb      	lsls	r3, r1, #31
 80054f2:	5ca0      	ldrb	r0, [r4, r2]
 80054f4:	bf4c      	ite	mi
 80054f6:	f000 000f 	andmi.w	r0, r0, #15
 80054fa:	0900      	lsrpl	r0, r0, #4
 80054fc:	bd10      	pop	{r4, pc}
 80054fe:	fb02 0404 	mla	r4, r2, r4, r0
 8005502:	5c60      	ldrb	r0, [r4, r1]
 8005504:	bd10      	pop	{r4, pc}
 8005506:	1063      	asrs	r3, r4, #1
 8005508:	fb02 1103 	mla	r1, r2, r3, r1
 800550c:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 8005510:	bd10      	pop	{r4, pc}
 8005512:	2000      	movs	r0, #0
 8005514:	bd10      	pop	{r4, pc}
 8005516:	4770      	bx	lr

08005518 <GUI_GotoXY>:
 8005518:	4b02      	ldr	r3, [pc, #8]	; (8005524 <GUI_GotoXY+0xc>)
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	8458      	strh	r0, [r3, #34]	; 0x22
 800551e:	8499      	strh	r1, [r3, #36]	; 0x24
 8005520:	2000      	movs	r0, #0
 8005522:	4770      	bx	lr
 8005524:	20000018 	.word	0x20000018

08005528 <GUI_RectsIntersect>:
 8005528:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800552c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8005530:	429a      	cmp	r2, r3
 8005532:	dc14      	bgt.n	800555e <GUI_RectsIntersect+0x36>
 8005534:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8005538:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800553c:	429a      	cmp	r2, r3
 800553e:	dc0e      	bgt.n	800555e <GUI_RectsIntersect+0x36>
 8005540:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005544:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8005548:	429a      	cmp	r2, r3
 800554a:	dc08      	bgt.n	800555e <GUI_RectsIntersect+0x36>
 800554c:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8005550:	f9b1 3000 	ldrsh.w	r3, [r1]
 8005554:	4283      	cmp	r3, r0
 8005556:	bfcc      	ite	gt
 8005558:	2000      	movgt	r0, #0
 800555a:	2001      	movle	r0, #1
 800555c:	4770      	bx	lr
 800555e:	2000      	movs	r0, #0
 8005560:	4770      	bx	lr
 8005562:	bf00      	nop

08005564 <GUI_SaveContext_W>:
 8005564:	b508      	push	{r3, lr}
 8005566:	4b03      	ldr	r3, [pc, #12]	; (8005574 <GUI_SaveContext_W+0x10>)
 8005568:	2274      	movs	r2, #116	; 0x74
 800556a:	6819      	ldr	r1, [r3, #0]
 800556c:	f011 ff34 	bl	80173d8 <memcpy>
 8005570:	bd08      	pop	{r3, pc}
 8005572:	bf00      	nop
 8005574:	20000018 	.word	0x20000018

08005578 <GUI_RestoreContext>:
 8005578:	b508      	push	{r3, lr}
 800557a:	4b03      	ldr	r3, [pc, #12]	; (8005588 <GUI_RestoreContext+0x10>)
 800557c:	4601      	mov	r1, r0
 800557e:	2274      	movs	r2, #116	; 0x74
 8005580:	6818      	ldr	r0, [r3, #0]
 8005582:	f011 ff29 	bl	80173d8 <memcpy>
 8005586:	bd08      	pop	{r3, pc}
 8005588:	20000018 	.word	0x20000018

0800558c <GUI_SelectLCD>:
 800558c:	b508      	push	{r3, lr}
 800558e:	f002 fd3d 	bl	800800c <LCD_SelectLCD>
 8005592:	f002 fe11 	bl	80081b8 <LCD_UpdateColorIndices>
 8005596:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800559a:	f007 bb95 	b.w	800ccc8 <WM_Activate>
 800559e:	bf00      	nop

080055a0 <GUI_SetBkColor>:
 80055a0:	f002 b9a8 	b.w	80078f4 <LCD_SetBkColor>

080055a4 <GUI_SetColor>:
 80055a4:	f002 b9ac 	b.w	8007900 <LCD_SetColor>

080055a8 <GL_SetDefault>:
 80055a8:	4b0c      	ldr	r3, [pc, #48]	; (80055dc <GL_SetDefault+0x34>)
 80055aa:	b510      	push	{r4, lr}
 80055ac:	6818      	ldr	r0, [r3, #0]
 80055ae:	4c0c      	ldr	r4, [pc, #48]	; (80055e0 <GL_SetDefault+0x38>)
 80055b0:	f002 f9a0 	bl	80078f4 <LCD_SetBkColor>
 80055b4:	4b0b      	ldr	r3, [pc, #44]	; (80055e4 <GL_SetDefault+0x3c>)
 80055b6:	6818      	ldr	r0, [r3, #0]
 80055b8:	f002 f9a2 	bl	8007900 <LCD_SetColor>
 80055bc:	6823      	ldr	r3, [r4, #0]
 80055be:	2201      	movs	r2, #1
 80055c0:	2000      	movs	r0, #0
 80055c2:	761a      	strb	r2, [r3, #24]
 80055c4:	8598      	strh	r0, [r3, #44]	; 0x2c
 80055c6:	8558      	strh	r0, [r3, #42]	; 0x2a
 80055c8:	f001 fd76 	bl	80070b8 <LCD_SetDrawMode>
 80055cc:	4a06      	ldr	r2, [pc, #24]	; (80055e8 <GL_SetDefault+0x40>)
 80055ce:	6823      	ldr	r3, [r4, #0]
 80055d0:	6812      	ldr	r2, [r2, #0]
 80055d2:	b102      	cbz	r2, 80055d6 <GL_SetDefault+0x2e>
 80055d4:	61da      	str	r2, [r3, #28]
 80055d6:	2200      	movs	r2, #0
 80055d8:	769a      	strb	r2, [r3, #26]
 80055da:	bd10      	pop	{r4, pc}
 80055dc:	20000014 	.word	0x20000014
 80055e0:	20000018 	.word	0x20000018
 80055e4:	20000010 	.word	0x20000010
 80055e8:	2000000c 	.word	0x2000000c

080055ec <GUI_SetDrawMode>:
 80055ec:	f001 bd64 	b.w	80070b8 <LCD_SetDrawMode>

080055f0 <GUI_SetFont>:
 80055f0:	4b03      	ldr	r3, [pc, #12]	; (8005600 <GUI_SetFont+0x10>)
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	4602      	mov	r2, r0
 80055f6:	69d8      	ldr	r0, [r3, #28]
 80055f8:	b102      	cbz	r2, 80055fc <GUI_SetFont+0xc>
 80055fa:	61da      	str	r2, [r3, #28]
 80055fc:	4770      	bx	lr
 80055fe:	bf00      	nop
 8005600:	20000018 	.word	0x20000018

08005604 <GUI_SetLineStyle>:
 8005604:	4b02      	ldr	r3, [pc, #8]	; (8005610 <GUI_SetLineStyle+0xc>)
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	7e9a      	ldrb	r2, [r3, #26]
 800560a:	7698      	strb	r0, [r3, #26]
 800560c:	4610      	mov	r0, r2
 800560e:	4770      	bx	lr
 8005610:	20000018 	.word	0x20000018

08005614 <GUI_SetOrg>:
 8005614:	b470      	push	{r4, r5, r6}
 8005616:	4a09      	ldr	r2, [pc, #36]	; (800563c <GUI_SetOrg+0x28>)
 8005618:	4b09      	ldr	r3, [pc, #36]	; (8005640 <GUI_SetOrg+0x2c>)
 800561a:	6812      	ldr	r2, [r2, #0]
 800561c:	4e09      	ldr	r6, [pc, #36]	; (8005644 <GUI_SetOrg+0x30>)
 800561e:	7c52      	ldrb	r2, [r2, #17]
 8005620:	4d09      	ldr	r5, [pc, #36]	; (8005648 <GUI_SetOrg+0x34>)
 8005622:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005626:	8030      	strh	r0, [r6, #0]
 8005628:	68dc      	ldr	r4, [r3, #12]
 800562a:	6a24      	ldr	r4, [r4, #32]
 800562c:	460a      	mov	r2, r1
 800562e:	802a      	strh	r2, [r5, #0]
 8005630:	4601      	mov	r1, r0
 8005632:	4618      	mov	r0, r3
 8005634:	4623      	mov	r3, r4
 8005636:	bc70      	pop	{r4, r5, r6}
 8005638:	4718      	bx	r3
 800563a:	bf00      	nop
 800563c:	20000018 	.word	0x20000018
 8005640:	2001c19c 	.word	0x2001c19c
 8005644:	2001c174 	.word	0x2001c174
 8005648:	2001c164 	.word	0x2001c164

0800564c <GUI_SetTextMode>:
 800564c:	4b03      	ldr	r3, [pc, #12]	; (800565c <GUI_SetTextMode+0x10>)
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 8005654:	8558      	strh	r0, [r3, #42]	; 0x2a
 8005656:	4610      	mov	r0, r2
 8005658:	4770      	bx	lr
 800565a:	bf00      	nop
 800565c:	20000018 	.word	0x20000018

08005660 <_InitContext>:
 8005660:	b570      	push	{r4, r5, r6, lr}
 8005662:	4d19      	ldr	r5, [pc, #100]	; (80056c8 <_InitContext+0x68>)
 8005664:	4e19      	ldr	r6, [pc, #100]	; (80056cc <_InitContext+0x6c>)
 8005666:	692b      	ldr	r3, [r5, #16]
 8005668:	4a19      	ldr	r2, [pc, #100]	; (80056d0 <_InitContext+0x70>)
 800566a:	4604      	mov	r4, r0
 800566c:	f103 0108 	add.w	r1, r3, #8
 8005670:	1d18      	adds	r0, r3, #4
 8005672:	6726      	str	r6, [r4, #112]	; 0x70
 8005674:	63d8      	str	r0, [r3, #60]	; 0x3c
 8005676:	639b      	str	r3, [r3, #56]	; 0x38
 8005678:	641b      	str	r3, [r3, #64]	; 0x40
 800567a:	6161      	str	r1, [r4, #20]
 800567c:	7c5b      	ldrb	r3, [r3, #17]
 800567e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8005682:	68c3      	ldr	r3, [r0, #12]
 8005684:	f104 0108 	add.w	r1, r4, #8
 8005688:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800568a:	4798      	blx	r3
 800568c:	692b      	ldr	r3, [r5, #16]
 800568e:	4a11      	ldr	r2, [pc, #68]	; (80056d4 <_InitContext+0x74>)
 8005690:	6869      	ldr	r1, [r5, #4]
 8005692:	6662      	str	r2, [r4, #100]	; 0x64
 8005694:	3308      	adds	r3, #8
 8005696:	2201      	movs	r2, #1
 8005698:	61e1      	str	r1, [r4, #28]
 800569a:	6163      	str	r3, [r4, #20]
 800569c:	7622      	strb	r2, [r4, #24]
 800569e:	76e2      	strb	r2, [r4, #27]
 80056a0:	f007 fe6a 	bl	800d378 <WM_GetDesktopWindow>
 80056a4:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80056a8:	2203      	movs	r2, #3
 80056aa:	f884 2068 	strb.w	r2, [r4, #104]	; 0x68
 80056ae:	6323      	str	r3, [r4, #48]	; 0x30
 80056b0:	6363      	str	r3, [r4, #52]	; 0x34
 80056b2:	64a0      	str	r0, [r4, #72]	; 0x48
 80056b4:	68e8      	ldr	r0, [r5, #12]
 80056b6:	f002 f91d 	bl	80078f4 <LCD_SetBkColor>
 80056ba:	68a8      	ldr	r0, [r5, #8]
 80056bc:	f002 f920 	bl	8007900 <LCD_SetColor>
 80056c0:	4b05      	ldr	r3, [pc, #20]	; (80056d8 <_InitContext+0x78>)
 80056c2:	4a06      	ldr	r2, [pc, #24]	; (80056dc <_InitContext+0x7c>)
 80056c4:	601a      	str	r2, [r3, #0]
 80056c6:	bd70      	pop	{r4, r5, r6, pc}
 80056c8:	20000008 	.word	0x20000008
 80056cc:	20000400 	.word	0x20000400
 80056d0:	2001c19c 	.word	0x2001c19c
 80056d4:	080174ec 	.word	0x080174ec
 80056d8:	2001c194 	.word	0x2001c194
 80056dc:	08017504 	.word	0x08017504

080056e0 <_OnExit>:
 80056e0:	b570      	push	{r4, r5, r6, lr}
 80056e2:	4d0a      	ldr	r5, [pc, #40]	; (800570c <_OnExit+0x2c>)
 80056e4:	4e0a      	ldr	r6, [pc, #40]	; (8005710 <_OnExit+0x30>)
 80056e6:	2400      	movs	r4, #0
 80056e8:	4621      	mov	r1, r4
 80056ea:	6833      	ldr	r3, [r6, #0]
 80056ec:	67ec      	str	r4, [r5, #124]	; 0x7c
 80056ee:	2274      	movs	r2, #116	; 0x74
 80056f0:	4628      	mov	r0, r5
 80056f2:	4798      	blx	r3
 80056f4:	6833      	ldr	r3, [r6, #0]
 80056f6:	4807      	ldr	r0, [pc, #28]	; (8005714 <_OnExit+0x34>)
 80056f8:	4621      	mov	r1, r4
 80056fa:	2208      	movs	r2, #8
 80056fc:	4798      	blx	r3
 80056fe:	4a06      	ldr	r2, [pc, #24]	; (8005718 <_OnExit+0x38>)
 8005700:	4906      	ldr	r1, [pc, #24]	; (800571c <_OnExit+0x3c>)
 8005702:	4b07      	ldr	r3, [pc, #28]	; (8005720 <_OnExit+0x40>)
 8005704:	7014      	strb	r4, [r2, #0]
 8005706:	610d      	str	r5, [r1, #16]
 8005708:	601c      	str	r4, [r3, #0]
 800570a:	bd70      	pop	{r4, r5, r6, pc}
 800570c:	20000380 	.word	0x20000380
 8005710:	2000003c 	.word	0x2000003c
 8005714:	2001c19c 	.word	0x2001c19c
 8005718:	2001c184 	.word	0x2001c184
 800571c:	20000008 	.word	0x20000008
 8005720:	2001c160 	.word	0x2001c160

08005724 <GUI_ClearRect>:
 8005724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005728:	4607      	mov	r7, r0
 800572a:	b082      	sub	sp, #8
 800572c:	2004      	movs	r0, #4
 800572e:	4616      	mov	r6, r2
 8005730:	461c      	mov	r4, r3
 8005732:	460d      	mov	r5, r1
 8005734:	f001 fcc0 	bl	80070b8 <LCD_SetDrawMode>
 8005738:	4b12      	ldr	r3, [pc, #72]	; (8005784 <GUI_ClearRect+0x60>)
 800573a:	691b      	ldr	r3, [r3, #16]
 800573c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800573e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005740:	4680      	mov	r8, r0
 8005742:	4417      	add	r7, r2
 8005744:	4416      	add	r6, r2
 8005746:	441d      	add	r5, r3
 8005748:	441c      	add	r4, r3
 800574a:	4668      	mov	r0, sp
 800574c:	f8ad 7000 	strh.w	r7, [sp]
 8005750:	f8ad 6004 	strh.w	r6, [sp, #4]
 8005754:	f8ad 5002 	strh.w	r5, [sp, #2]
 8005758:	f8ad 4006 	strh.w	r4, [sp, #6]
 800575c:	f007 f83c 	bl	800c7d8 <WM__InitIVRSearch>
 8005760:	b148      	cbz	r0, 8005776 <GUI_ClearRect+0x52>
 8005762:	4623      	mov	r3, r4
 8005764:	4632      	mov	r2, r6
 8005766:	4629      	mov	r1, r5
 8005768:	4638      	mov	r0, r7
 800576a:	f001 fd35 	bl	80071d8 <LCD_FillRect>
 800576e:	f006 ff0d 	bl	800c58c <WM__GetNextIVR>
 8005772:	2800      	cmp	r0, #0
 8005774:	d1f5      	bne.n	8005762 <GUI_ClearRect+0x3e>
 8005776:	4640      	mov	r0, r8
 8005778:	f001 fc9e 	bl	80070b8 <LCD_SetDrawMode>
 800577c:	b002      	add	sp, #8
 800577e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005782:	bf00      	nop
 8005784:	20000008 	.word	0x20000008

08005788 <GUI_Clear>:
 8005788:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800578c:	2100      	movs	r1, #0
 800578e:	b082      	sub	sp, #8
 8005790:	4608      	mov	r0, r1
 8005792:	f7ff fec1 	bl	8005518 <GUI_GotoXY>
 8005796:	2004      	movs	r0, #4
 8005798:	f001 fc8e 	bl	80070b8 <LCD_SetDrawMode>
 800579c:	4b16      	ldr	r3, [pc, #88]	; (80057f8 <GUI_Clear+0x70>)
 800579e:	691b      	ldr	r3, [r3, #16]
 80057a0:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80057a2:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 80057a4:	f5a5 577f 	sub.w	r7, r5, #16320	; 0x3fc0
 80057a8:	f5a4 567f 	sub.w	r6, r4, #16320	; 0x3fc0
 80057ac:	f505 557f 	add.w	r5, r5, #16320	; 0x3fc0
 80057b0:	f504 547f 	add.w	r4, r4, #16320	; 0x3fc0
 80057b4:	4680      	mov	r8, r0
 80057b6:	3f3f      	subs	r7, #63	; 0x3f
 80057b8:	353f      	adds	r5, #63	; 0x3f
 80057ba:	3e3f      	subs	r6, #63	; 0x3f
 80057bc:	343f      	adds	r4, #63	; 0x3f
 80057be:	4668      	mov	r0, sp
 80057c0:	f8ad 7000 	strh.w	r7, [sp]
 80057c4:	f8ad 5004 	strh.w	r5, [sp, #4]
 80057c8:	f8ad 6002 	strh.w	r6, [sp, #2]
 80057cc:	f8ad 4006 	strh.w	r4, [sp, #6]
 80057d0:	f007 f802 	bl	800c7d8 <WM__InitIVRSearch>
 80057d4:	b148      	cbz	r0, 80057ea <GUI_Clear+0x62>
 80057d6:	4623      	mov	r3, r4
 80057d8:	462a      	mov	r2, r5
 80057da:	4631      	mov	r1, r6
 80057dc:	4638      	mov	r0, r7
 80057de:	f001 fcfb 	bl	80071d8 <LCD_FillRect>
 80057e2:	f006 fed3 	bl	800c58c <WM__GetNextIVR>
 80057e6:	2800      	cmp	r0, #0
 80057e8:	d1f5      	bne.n	80057d6 <GUI_Clear+0x4e>
 80057ea:	4640      	mov	r0, r8
 80057ec:	f001 fc64 	bl	80070b8 <LCD_SetDrawMode>
 80057f0:	b002      	add	sp, #8
 80057f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80057f6:	bf00      	nop
 80057f8:	20000008 	.word	0x20000008

080057fc <GUI__Config>:
 80057fc:	b530      	push	{r4, r5, lr}
 80057fe:	4d1a      	ldr	r5, [pc, #104]	; (8005868 <GUI__Config+0x6c>)
 8005800:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 8005802:	b085      	sub	sp, #20
 8005804:	b10b      	cbz	r3, 800580a <GUI__Config+0xe>
 8005806:	b005      	add	sp, #20
 8005808:	bd30      	pop	{r4, r5, pc}
 800580a:	4b18      	ldr	r3, [pc, #96]	; (800586c <GUI__Config+0x70>)
 800580c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800580e:	466c      	mov	r4, sp
 8005810:	c407      	stmia	r4!, {r0, r1, r2}
 8005812:	a904      	add	r1, sp, #16
 8005814:	f824 3b02 	strh.w	r3, [r4], #2
 8005818:	0c1b      	lsrs	r3, r3, #16
 800581a:	7023      	strb	r3, [r4, #0]
 800581c:	f811 2d10 	ldrb.w	r2, [r1, #-16]!
 8005820:	2301      	movs	r3, #1
 8005822:	67eb      	str	r3, [r5, #124]	; 0x7c
 8005824:	f105 0480 	add.w	r4, r5, #128	; 0x80
 8005828:	f804 2b01 	strb.w	r2, [r4], #1
 800582c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8005830:	2a00      	cmp	r2, #0
 8005832:	d1f9      	bne.n	8005828 <GUI__Config+0x2c>
 8005834:	f7ff fd9c 	bl	8005370 <GUI_GetVersionString>
 8005838:	4623      	mov	r3, r4
 800583a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800583e:	4619      	mov	r1, r3
 8005840:	f803 2b01 	strb.w	r2, [r3], #1
 8005844:	7802      	ldrb	r2, [r0, #0]
 8005846:	2a00      	cmp	r2, #0
 8005848:	d1f7      	bne.n	800583a <GUI__Config+0x3e>
 800584a:	704a      	strb	r2, [r1, #1]
 800584c:	f7fd fcce 	bl	80031ec <GUI_X_Config>
 8005850:	f7fe fa50 	bl	8003cf4 <LCD_X_Config>
 8005854:	4b06      	ldr	r3, [pc, #24]	; (8005870 <GUI__Config+0x74>)
 8005856:	4807      	ldr	r0, [pc, #28]	; (8005874 <GUI__Config+0x78>)
 8005858:	f8c5 3094 	str.w	r3, [r5, #148]	; 0x94
 800585c:	b005      	add	sp, #20
 800585e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005862:	f000 b885 	b.w	8005970 <GUI__RegisterExit>
 8005866:	bf00      	nop
 8005868:	20000380 	.word	0x20000380
 800586c:	080174f4 	.word	0x080174f4
 8005870:	080056e1 	.word	0x080056e1
 8005874:	20000414 	.word	0x20000414

08005878 <GUI_Init>:
 8005878:	b590      	push	{r4, r7, lr}
 800587a:	b083      	sub	sp, #12
 800587c:	af00      	add	r7, sp, #0
 800587e:	4a33      	ldr	r2, [pc, #204]	; (800594c <GUI_Init+0xd4>)
 8005880:	4b32      	ldr	r3, [pc, #200]	; (800594c <GUI_Init+0xd4>)
 8005882:	681b      	ldr	r3, [r3, #0]
 8005884:	f023 0301 	bic.w	r3, r3, #1
 8005888:	6013      	str	r3, [r2, #0]
 800588a:	4b31      	ldr	r3, [pc, #196]	; (8005950 <GUI_Init+0xd8>)
 800588c:	2201      	movs	r2, #1
 800588e:	601a      	str	r2, [r3, #0]
 8005890:	bf00      	nop
 8005892:	4b2f      	ldr	r3, [pc, #188]	; (8005950 <GUI_Init+0xd8>)
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	2b00      	cmp	r3, #0
 8005898:	d1fb      	bne.n	8005892 <GUI_Init+0x1a>
 800589a:	4b2e      	ldr	r3, [pc, #184]	; (8005954 <GUI_Init+0xdc>)
 800589c:	4a2e      	ldr	r2, [pc, #184]	; (8005958 <GUI_Init+0xe0>)
 800589e:	601a      	str	r2, [r3, #0]
 80058a0:	4b2c      	ldr	r3, [pc, #176]	; (8005954 <GUI_Init+0xdc>)
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	4a2d      	ldr	r2, [pc, #180]	; (800595c <GUI_Init+0xe4>)
 80058a6:	4293      	cmp	r3, r2
 80058a8:	d000      	beq.n	80058ac <GUI_Init+0x34>
 80058aa:	e7fe      	b.n	80058aa <GUI_Init+0x32>
 80058ac:	f7ff ffa6 	bl	80057fc <GUI__Config>
 80058b0:	4b2b      	ldr	r3, [pc, #172]	; (8005960 <GUI_Init+0xe8>)
 80058b2:	222e      	movs	r2, #46	; 0x2e
 80058b4:	701a      	strb	r2, [r3, #0]
 80058b6:	f7fd fc29 	bl	800310c <GUI_X_Init>
 80058ba:	482a      	ldr	r0, [pc, #168]	; (8005964 <GUI_Init+0xec>)
 80058bc:	f7ff fed0 	bl	8005660 <_InitContext>
 80058c0:	f001 ff5c 	bl	800777c <emWin_LCD_Init>
 80058c4:	6078      	str	r0, [r7, #4]
 80058c6:	f002 fa29 	bl	8007d1c <LCD_GetXSizeDisplay>
 80058ca:	4603      	mov	r3, r0
 80058cc:	2b00      	cmp	r3, #0
 80058ce:	bf0c      	ite	eq
 80058d0:	2301      	moveq	r3, #1
 80058d2:	2300      	movne	r3, #0
 80058d4:	b2dc      	uxtb	r4, r3
 80058d6:	f002 fa27 	bl	8007d28 <LCD_GetYSizeDisplay>
 80058da:	4603      	mov	r3, r0
 80058dc:	2b00      	cmp	r3, #0
 80058de:	bf0c      	ite	eq
 80058e0:	2301      	moveq	r3, #1
 80058e2:	2300      	movne	r3, #0
 80058e4:	b2db      	uxtb	r3, r3
 80058e6:	4323      	orrs	r3, r4
 80058e8:	b2db      	uxtb	r3, r3
 80058ea:	2b00      	cmp	r3, #0
 80058ec:	d009      	beq.n	8005902 <GUI_Init+0x8a>
 80058ee:	f002 f9c1 	bl	8007c74 <LCD_GetXSizeMax>
 80058f2:	4604      	mov	r4, r0
 80058f4:	f002 f9d8 	bl	8007ca8 <LCD_GetYSizeMax>
 80058f8:	4603      	mov	r3, r0
 80058fa:	4619      	mov	r1, r3
 80058fc:	4620      	mov	r0, r4
 80058fe:	f002 fa07 	bl	8007d10 <LCD_SetDisplaySize>
 8005902:	2100      	movs	r1, #0
 8005904:	2000      	movs	r0, #0
 8005906:	f7ff fe85 	bl	8005614 <GUI_SetOrg>
 800590a:	f007 fa1f 	bl	800cd4c <WM_Init>
 800590e:	4b16      	ldr	r3, [pc, #88]	; (8005968 <GUI_Init+0xf0>)
 8005910:	681b      	ldr	r3, [r3, #0]
 8005912:	2b00      	cmp	r3, #0
 8005914:	d012      	beq.n	800593c <GUI_Init+0xc4>
 8005916:	e00d      	b.n	8005934 <GUI_Init+0xbc>
 8005918:	4b13      	ldr	r3, [pc, #76]	; (8005968 <GUI_Init+0xf0>)
 800591a:	681b      	ldr	r3, [r3, #0]
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	2b00      	cmp	r3, #0
 8005920:	d003      	beq.n	800592a <GUI_Init+0xb2>
 8005922:	4b11      	ldr	r3, [pc, #68]	; (8005968 <GUI_Init+0xf0>)
 8005924:	681b      	ldr	r3, [r3, #0]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	4798      	blx	r3
 800592a:	4b0f      	ldr	r3, [pc, #60]	; (8005968 <GUI_Init+0xf0>)
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	685b      	ldr	r3, [r3, #4]
 8005930:	4a0d      	ldr	r2, [pc, #52]	; (8005968 <GUI_Init+0xf0>)
 8005932:	6013      	str	r3, [r2, #0]
 8005934:	4b0c      	ldr	r3, [pc, #48]	; (8005968 <GUI_Init+0xf0>)
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	2b00      	cmp	r3, #0
 800593a:	d1ed      	bne.n	8005918 <GUI_Init+0xa0>
 800593c:	4b0b      	ldr	r3, [pc, #44]	; (800596c <GUI_Init+0xf4>)
 800593e:	2201      	movs	r2, #1
 8005940:	701a      	strb	r2, [r3, #0]
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	4618      	mov	r0, r3
 8005946:	370c      	adds	r7, #12
 8005948:	46bd      	mov	sp, r7
 800594a:	bd90      	pop	{r4, r7, pc}
 800594c:	e0002000 	.word	0xe0002000
 8005950:	40023008 	.word	0x40023008
 8005954:	40023000 	.word	0x40023000
 8005958:	f407a5c2 	.word	0xf407a5c2
 800595c:	b5e8b5cd 	.word	0xb5e8b5cd
 8005960:	2001c154 	.word	0x2001c154
 8005964:	20000380 	.word	0x20000380
 8005968:	200003f8 	.word	0x200003f8
 800596c:	2001c17c 	.word	0x2001c17c

08005970 <GUI__RegisterExit>:
 8005970:	b480      	push	{r7}
 8005972:	b083      	sub	sp, #12
 8005974:	af00      	add	r7, sp, #0
 8005976:	6078      	str	r0, [r7, #4]
 8005978:	4b06      	ldr	r3, [pc, #24]	; (8005994 <GUI__RegisterExit+0x24>)
 800597a:	681a      	ldr	r2, [r3, #0]
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	605a      	str	r2, [r3, #4]
 8005980:	4a04      	ldr	r2, [pc, #16]	; (8005994 <GUI__RegisterExit+0x24>)
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	6013      	str	r3, [r2, #0]
 8005986:	bf00      	nop
 8005988:	370c      	adds	r7, #12
 800598a:	46bd      	mov	sp, r7
 800598c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005990:	4770      	bx	lr
 8005992:	bf00      	nop
 8005994:	200003f4 	.word	0x200003f4

08005998 <GUI_DEVICE__GetpDriver>:
 8005998:	2801      	cmp	r0, #1
 800599a:	dc0e      	bgt.n	80059ba <GUI_DEVICE__GetpDriver+0x22>
 800599c:	4b08      	ldr	r3, [pc, #32]	; (80059c0 <GUI_DEVICE__GetpDriver+0x28>)
 800599e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80059a2:	b158      	cbz	r0, 80059bc <GUI_DEVICE__GetpDriver+0x24>
 80059a4:	68c3      	ldr	r3, [r0, #12]
 80059a6:	681b      	ldr	r3, [r3, #0]
 80059a8:	b91b      	cbnz	r3, 80059b2 <GUI_DEVICE__GetpDriver+0x1a>
 80059aa:	e008      	b.n	80059be <GUI_DEVICE__GetpDriver+0x26>
 80059ac:	68c3      	ldr	r3, [r0, #12]
 80059ae:	681b      	ldr	r3, [r3, #0]
 80059b0:	b123      	cbz	r3, 80059bc <GUI_DEVICE__GetpDriver+0x24>
 80059b2:	6800      	ldr	r0, [r0, #0]
 80059b4:	2800      	cmp	r0, #0
 80059b6:	d1f9      	bne.n	80059ac <GUI_DEVICE__GetpDriver+0x14>
 80059b8:	4770      	bx	lr
 80059ba:	2000      	movs	r0, #0
 80059bc:	4770      	bx	lr
 80059be:	4770      	bx	lr
 80059c0:	2001c19c 	.word	0x2001c19c

080059c4 <GUI_DEVICE_Delete>:
 80059c4:	f7ff b926 	b.w	8004c14 <GUI_ALLOC_FreeFixedBlock>

080059c8 <GUI_DEVICE_Create>:
 80059c8:	2b01      	cmp	r3, #1
 80059ca:	dc12      	bgt.n	80059f2 <GUI_DEVICE_Create+0x2a>
 80059cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80059ce:	4606      	mov	r6, r0
 80059d0:	201c      	movs	r0, #28
 80059d2:	4617      	mov	r7, r2
 80059d4:	460c      	mov	r4, r1
 80059d6:	461d      	mov	r5, r3
 80059d8:	f7ff f926 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 80059dc:	b1b8      	cbz	r0, 8005a0e <GUI_DEVICE_Create+0x46>
 80059de:	b154      	cbz	r4, 80059f6 <GUI_DEVICE_Create+0x2e>
 80059e0:	6104      	str	r4, [r0, #16]
 80059e2:	2300      	movs	r3, #0
 80059e4:	6083      	str	r3, [r0, #8]
 80059e6:	6185      	str	r5, [r0, #24]
 80059e8:	8287      	strh	r7, [r0, #20]
 80059ea:	60c6      	str	r6, [r0, #12]
 80059ec:	6003      	str	r3, [r0, #0]
 80059ee:	6043      	str	r3, [r0, #4]
 80059f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80059f2:	2000      	movs	r0, #0
 80059f4:	4770      	bx	lr
 80059f6:	4b07      	ldr	r3, [pc, #28]	; (8005a14 <GUI_DEVICE_Create+0x4c>)
 80059f8:	f853 2025 	ldr.w	r2, [r3, r5, lsl #2]
 80059fc:	b90a      	cbnz	r2, 8005a02 <GUI_DEVICE_Create+0x3a>
 80059fe:	e7f0      	b.n	80059e2 <GUI_DEVICE_Create+0x1a>
 8005a00:	461a      	mov	r2, r3
 8005a02:	6813      	ldr	r3, [r2, #0]
 8005a04:	2b00      	cmp	r3, #0
 8005a06:	d1fb      	bne.n	8005a00 <GUI_DEVICE_Create+0x38>
 8005a08:	6913      	ldr	r3, [r2, #16]
 8005a0a:	6103      	str	r3, [r0, #16]
 8005a0c:	e7e9      	b.n	80059e2 <GUI_DEVICE_Create+0x1a>
 8005a0e:	2000      	movs	r0, #0
 8005a10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005a12:	bf00      	nop
 8005a14:	2001c19c 	.word	0x2001c19c

08005a18 <GUI_DEVICE_Unlink>:
 8005a18:	4a0f      	ldr	r2, [pc, #60]	; (8005a58 <GUI_DEVICE_Unlink+0x40>)
 8005a1a:	6981      	ldr	r1, [r0, #24]
 8005a1c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005a20:	4298      	cmp	r0, r3
 8005a22:	d00a      	beq.n	8005a3a <GUI_DEVICE_Unlink+0x22>
 8005a24:	6842      	ldr	r2, [r0, #4]
 8005a26:	b10a      	cbz	r2, 8005a2c <GUI_DEVICE_Unlink+0x14>
 8005a28:	6803      	ldr	r3, [r0, #0]
 8005a2a:	6013      	str	r3, [r2, #0]
 8005a2c:	6803      	ldr	r3, [r0, #0]
 8005a2e:	b103      	cbz	r3, 8005a32 <GUI_DEVICE_Unlink+0x1a>
 8005a30:	605a      	str	r2, [r3, #4]
 8005a32:	2300      	movs	r3, #0
 8005a34:	6003      	str	r3, [r0, #0]
 8005a36:	6043      	str	r3, [r0, #4]
 8005a38:	4770      	bx	lr
 8005a3a:	6803      	ldr	r3, [r0, #0]
 8005a3c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8005a40:	b12b      	cbz	r3, 8005a4e <GUI_DEVICE_Unlink+0x36>
 8005a42:	2200      	movs	r2, #0
 8005a44:	605a      	str	r2, [r3, #4]
 8005a46:	6842      	ldr	r2, [r0, #4]
 8005a48:	2a00      	cmp	r2, #0
 8005a4a:	d1ee      	bne.n	8005a2a <GUI_DEVICE_Unlink+0x12>
 8005a4c:	e7f0      	b.n	8005a30 <GUI_DEVICE_Unlink+0x18>
 8005a4e:	6842      	ldr	r2, [r0, #4]
 8005a50:	2a00      	cmp	r2, #0
 8005a52:	d1ea      	bne.n	8005a2a <GUI_DEVICE_Unlink+0x12>
 8005a54:	e7ed      	b.n	8005a32 <GUI_DEVICE_Unlink+0x1a>
 8005a56:	bf00      	nop
 8005a58:	2001c19c 	.word	0x2001c19c

08005a5c <GUI_DEVICE_Link>:
 8005a5c:	2800      	cmp	r0, #0
 8005a5e:	d03c      	beq.n	8005ada <GUI_DEVICE_Link+0x7e>
 8005a60:	b470      	push	{r4, r5, r6}
 8005a62:	6984      	ldr	r4, [r0, #24]
 8005a64:	2c01      	cmp	r4, #1
 8005a66:	dd03      	ble.n	8005a70 <GUI_DEVICE_Link+0x14>
 8005a68:	2301      	movs	r3, #1
 8005a6a:	4618      	mov	r0, r3
 8005a6c:	bc70      	pop	{r4, r5, r6}
 8005a6e:	4770      	bx	lr
 8005a70:	4b1e      	ldr	r3, [pc, #120]	; (8005aec <GUI_DEVICE_Link+0x90>)
 8005a72:	4d1f      	ldr	r5, [pc, #124]	; (8005af0 <GUI_DEVICE_Link+0x94>)
 8005a74:	781a      	ldrb	r2, [r3, #0]
 8005a76:	4294      	cmp	r4, r2
 8005a78:	bfa4      	itt	ge
 8005a7a:	1c62      	addge	r2, r4, #1
 8005a7c:	701a      	strbge	r2, [r3, #0]
 8005a7e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8005a82:	b90b      	cbnz	r3, 8005a88 <GUI_DEVICE_Link+0x2c>
 8005a84:	e02f      	b.n	8005ae6 <GUI_DEVICE_Link+0x8a>
 8005a86:	4613      	mov	r3, r2
 8005a88:	685a      	ldr	r2, [r3, #4]
 8005a8a:	2a00      	cmp	r2, #0
 8005a8c:	d1fb      	bne.n	8005a86 <GUI_DEVICE_Link+0x2a>
 8005a8e:	68c2      	ldr	r2, [r0, #12]
 8005a90:	6811      	ldr	r1, [r2, #0]
 8005a92:	e002      	b.n	8005a9a <GUI_DEVICE_Link+0x3e>
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	2b00      	cmp	r3, #0
 8005a98:	d0e6      	beq.n	8005a68 <GUI_DEVICE_Link+0xc>
 8005a9a:	68da      	ldr	r2, [r3, #12]
 8005a9c:	6812      	ldr	r2, [r2, #0]
 8005a9e:	4291      	cmp	r1, r2
 8005aa0:	dbf8      	blt.n	8005a94 <GUI_DEVICE_Link+0x38>
 8005aa2:	d00d      	beq.n	8005ac0 <GUI_DEVICE_Link+0x64>
 8005aa4:	685a      	ldr	r2, [r3, #4]
 8005aa6:	b1da      	cbz	r2, 8005ae0 <GUI_DEVICE_Link+0x84>
 8005aa8:	6010      	str	r0, [r2, #0]
 8005aaa:	6042      	str	r2, [r0, #4]
 8005aac:	4298      	cmp	r0, r3
 8005aae:	bf14      	ite	ne
 8005ab0:	461a      	movne	r2, r3
 8005ab2:	2200      	moveq	r2, #0
 8005ab4:	6058      	str	r0, [r3, #4]
 8005ab6:	2300      	movs	r3, #0
 8005ab8:	6002      	str	r2, [r0, #0]
 8005aba:	bc70      	pop	{r4, r5, r6}
 8005abc:	4618      	mov	r0, r3
 8005abe:	4770      	bx	lr
 8005ac0:	8a82      	ldrh	r2, [r0, #20]
 8005ac2:	2a01      	cmp	r2, #1
 8005ac4:	d1ee      	bne.n	8005aa4 <GUI_DEVICE_Link+0x48>
 8005ac6:	e004      	b.n	8005ad2 <GUI_DEVICE_Link+0x76>
 8005ac8:	68d3      	ldr	r3, [r2, #12]
 8005aca:	681e      	ldr	r6, [r3, #0]
 8005acc:	42b1      	cmp	r1, r6
 8005ace:	4613      	mov	r3, r2
 8005ad0:	dce8      	bgt.n	8005aa4 <GUI_DEVICE_Link+0x48>
 8005ad2:	681a      	ldr	r2, [r3, #0]
 8005ad4:	2a00      	cmp	r2, #0
 8005ad6:	d1f7      	bne.n	8005ac8 <GUI_DEVICE_Link+0x6c>
 8005ad8:	e7e4      	b.n	8005aa4 <GUI_DEVICE_Link+0x48>
 8005ada:	2301      	movs	r3, #1
 8005adc:	4618      	mov	r0, r3
 8005ade:	4770      	bx	lr
 8005ae0:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
 8005ae4:	e7e2      	b.n	8005aac <GUI_DEVICE_Link+0x50>
 8005ae6:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
 8005aea:	e7be      	b.n	8005a6a <GUI_DEVICE_Link+0xe>
 8005aec:	2001c14e 	.word	0x2001c14e
 8005af0:	2001c19c 	.word	0x2001c19c

08005af4 <GUI_DEVICE_CreateAndLink>:
 8005af4:	2b01      	cmp	r3, #1
 8005af6:	dc3b      	bgt.n	8005b70 <GUI_DEVICE_CreateAndLink+0x7c>
 8005af8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005afc:	4681      	mov	r9, r0
 8005afe:	201c      	movs	r0, #28
 8005b00:	4690      	mov	r8, r2
 8005b02:	460f      	mov	r7, r1
 8005b04:	461e      	mov	r6, r3
 8005b06:	f7ff f88f 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8005b0a:	4605      	mov	r5, r0
 8005b0c:	2800      	cmp	r0, #0
 8005b0e:	d07f      	beq.n	8005c10 <GUI_DEVICE_CreateAndLink+0x11c>
 8005b10:	4a41      	ldr	r2, [pc, #260]	; (8005c18 <GUI_DEVICE_CreateAndLink+0x124>)
 8005b12:	2f00      	cmp	r7, #0
 8005b14:	d031      	beq.n	8005b7a <GUI_DEVICE_CreateAndLink+0x86>
 8005b16:	2300      	movs	r3, #0
 8005b18:	f8df e104 	ldr.w	lr, [pc, #260]	; 8005c20 <GUI_DEVICE_CreateAndLink+0x12c>
 8005b1c:	f852 4026 	ldr.w	r4, [r2, r6, lsl #2]
 8005b20:	6003      	str	r3, [r0, #0]
 8005b22:	f89e 1000 	ldrb.w	r1, [lr]
 8005b26:	6107      	str	r7, [r0, #16]
 8005b28:	428e      	cmp	r6, r1
 8005b2a:	6186      	str	r6, [r0, #24]
 8005b2c:	f8a0 8014 	strh.w	r8, [r0, #20]
 8005b30:	f8c0 900c 	str.w	r9, [r0, #12]
 8005b34:	6043      	str	r3, [r0, #4]
 8005b36:	6083      	str	r3, [r0, #8]
 8005b38:	db02      	blt.n	8005b40 <GUI_DEVICE_CreateAndLink+0x4c>
 8005b3a:	1c73      	adds	r3, r6, #1
 8005b3c:	f88e 3000 	strb.w	r3, [lr]
 8005b40:	2c00      	cmp	r4, #0
 8005b42:	d05d      	beq.n	8005c00 <GUI_DEVICE_CreateAndLink+0x10c>
 8005b44:	4621      	mov	r1, r4
 8005b46:	684c      	ldr	r4, [r1, #4]
 8005b48:	2c00      	cmp	r4, #0
 8005b4a:	d1fb      	bne.n	8005b44 <GUI_DEVICE_CreateAndLink+0x50>
 8005b4c:	f8d9 0000 	ldr.w	r0, [r9]
 8005b50:	68cb      	ldr	r3, [r1, #12]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	4283      	cmp	r3, r0
 8005b56:	dd2c      	ble.n	8005bb2 <GUI_DEVICE_CreateAndLink+0xbe>
 8005b58:	6809      	ldr	r1, [r1, #0]
 8005b5a:	2900      	cmp	r1, #0
 8005b5c:	d1f8      	bne.n	8005b50 <GUI_DEVICE_CreateAndLink+0x5c>
 8005b5e:	b948      	cbnz	r0, 8005b74 <GUI_DEVICE_CreateAndLink+0x80>
 8005b60:	4b2e      	ldr	r3, [pc, #184]	; (8005c1c <GUI_DEVICE_CreateAndLink+0x128>)
 8005b62:	3616      	adds	r6, #22
 8005b64:	681a      	ldr	r2, [r3, #0]
 8005b66:	4628      	mov	r0, r5
 8005b68:	f842 5026 	str.w	r5, [r2, r6, lsl #2]
 8005b6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005b70:	2000      	movs	r0, #0
 8005b72:	4770      	bx	lr
 8005b74:	4628      	mov	r0, r5
 8005b76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005b7a:	f852 1026 	ldr.w	r1, [r2, r6, lsl #2]
 8005b7e:	2900      	cmp	r1, #0
 8005b80:	d030      	beq.n	8005be4 <GUI_DEVICE_CreateAndLink+0xf0>
 8005b82:	4608      	mov	r0, r1
 8005b84:	e000      	b.n	8005b88 <GUI_DEVICE_CreateAndLink+0x94>
 8005b86:	4618      	mov	r0, r3
 8005b88:	6803      	ldr	r3, [r0, #0]
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	d1fb      	bne.n	8005b86 <GUI_DEVICE_CreateAndLink+0x92>
 8005b8e:	f8df e090 	ldr.w	lr, [pc, #144]	; 8005c20 <GUI_DEVICE_CreateAndLink+0x12c>
 8005b92:	6900      	ldr	r0, [r0, #16]
 8005b94:	602b      	str	r3, [r5, #0]
 8005b96:	6128      	str	r0, [r5, #16]
 8005b98:	f89e 0000 	ldrb.w	r0, [lr]
 8005b9c:	61ae      	str	r6, [r5, #24]
 8005b9e:	4286      	cmp	r6, r0
 8005ba0:	f8a5 8014 	strh.w	r8, [r5, #20]
 8005ba4:	f8c5 900c 	str.w	r9, [r5, #12]
 8005ba8:	606b      	str	r3, [r5, #4]
 8005baa:	60ab      	str	r3, [r5, #8]
 8005bac:	dbcb      	blt.n	8005b46 <GUI_DEVICE_CreateAndLink+0x52>
 8005bae:	460c      	mov	r4, r1
 8005bb0:	e7c3      	b.n	8005b3a <GUI_DEVICE_CreateAndLink+0x46>
 8005bb2:	d00a      	beq.n	8005bca <GUI_DEVICE_CreateAndLink+0xd6>
 8005bb4:	684b      	ldr	r3, [r1, #4]
 8005bb6:	b343      	cbz	r3, 8005c0a <GUI_DEVICE_CreateAndLink+0x116>
 8005bb8:	601d      	str	r5, [r3, #0]
 8005bba:	606b      	str	r3, [r5, #4]
 8005bbc:	428d      	cmp	r5, r1
 8005bbe:	bf14      	ite	ne
 8005bc0:	460b      	movne	r3, r1
 8005bc2:	2300      	moveq	r3, #0
 8005bc4:	604d      	str	r5, [r1, #4]
 8005bc6:	602b      	str	r3, [r5, #0]
 8005bc8:	e7c9      	b.n	8005b5e <GUI_DEVICE_CreateAndLink+0x6a>
 8005bca:	f1b8 0f01 	cmp.w	r8, #1
 8005bce:	d1f1      	bne.n	8005bb4 <GUI_DEVICE_CreateAndLink+0xc0>
 8005bd0:	e004      	b.n	8005bdc <GUI_DEVICE_CreateAndLink+0xe8>
 8005bd2:	68d9      	ldr	r1, [r3, #12]
 8005bd4:	680c      	ldr	r4, [r1, #0]
 8005bd6:	4284      	cmp	r4, r0
 8005bd8:	4619      	mov	r1, r3
 8005bda:	dbeb      	blt.n	8005bb4 <GUI_DEVICE_CreateAndLink+0xc0>
 8005bdc:	680b      	ldr	r3, [r1, #0]
 8005bde:	2b00      	cmp	r3, #0
 8005be0:	d1f7      	bne.n	8005bd2 <GUI_DEVICE_CreateAndLink+0xde>
 8005be2:	e7e7      	b.n	8005bb4 <GUI_DEVICE_CreateAndLink+0xc0>
 8005be4:	f8df e038 	ldr.w	lr, [pc, #56]	; 8005c20 <GUI_DEVICE_CreateAndLink+0x12c>
 8005be8:	6001      	str	r1, [r0, #0]
 8005bea:	f89e 3000 	ldrb.w	r3, [lr]
 8005bee:	6186      	str	r6, [r0, #24]
 8005bf0:	429e      	cmp	r6, r3
 8005bf2:	f8a0 8014 	strh.w	r8, [r0, #20]
 8005bf6:	f8c0 900c 	str.w	r9, [r0, #12]
 8005bfa:	6041      	str	r1, [r0, #4]
 8005bfc:	6081      	str	r1, [r0, #8]
 8005bfe:	dad6      	bge.n	8005bae <GUI_DEVICE_CreateAndLink+0xba>
 8005c00:	f842 5026 	str.w	r5, [r2, r6, lsl #2]
 8005c04:	f8d9 0000 	ldr.w	r0, [r9]
 8005c08:	e7a9      	b.n	8005b5e <GUI_DEVICE_CreateAndLink+0x6a>
 8005c0a:	f842 5026 	str.w	r5, [r2, r6, lsl #2]
 8005c0e:	e7d5      	b.n	8005bbc <GUI_DEVICE_CreateAndLink+0xc8>
 8005c10:	2000      	movs	r0, #0
 8005c12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005c16:	bf00      	nop
 8005c18:	2001c19c 	.word	0x2001c19c
 8005c1c:	20000018 	.word	0x20000018
 8005c20:	2001c14e 	.word	0x2001c14e

08005c24 <GUI_DispString.part.0>:
 8005c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c28:	4e45      	ldr	r6, [pc, #276]	; (8005d40 <GUI_DispString.part.0+0x11c>)
 8005c2a:	b083      	sub	sp, #12
 8005c2c:	4604      	mov	r4, r0
 8005c2e:	f00c fb65 	bl	80122fc <GUI_GetFontDistY>
 8005c32:	6833      	ldr	r3, [r6, #0]
 8005c34:	4607      	mov	r7, r0
 8005c36:	f9b3 9022 	ldrsh.w	r9, [r3, #34]	; 0x22
 8005c3a:	f00c fb47 	bl	80122cc <GUI_GetYAdjust>
 8005c3e:	6832      	ldr	r2, [r6, #0]
 8005c40:	8c93      	ldrh	r3, [r2, #36]	; 0x24
 8005c42:	fa1f fa80 	uxth.w	sl, r0
 8005c46:	ebca 0303 	rsb	r3, sl, r3
 8005c4a:	b21b      	sxth	r3, r3
 8005c4c:	8493      	strh	r3, [r2, #36]	; 0x24
 8005c4e:	7821      	ldrb	r1, [r4, #0]
 8005c50:	2900      	cmp	r1, #0
 8005c52:	d04d      	beq.n	8005cf0 <GUI_DispString.part.0+0xcc>
 8005c54:	b2bf      	uxth	r7, r7
 8005c56:	46b0      	mov	r8, r6
 8005c58:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8005c5c:	4620      	mov	r0, r4
 8005c5e:	f00c fbb5 	bl	80123cc <GUI__GetLineNumChars>
 8005c62:	4601      	mov	r1, r0
 8005c64:	4683      	mov	fp, r0
 8005c66:	4620      	mov	r0, r4
 8005c68:	f00c fbda 	bl	8012420 <GUI__GetLineDistX>
 8005c6c:	6831      	ldr	r1, [r6, #0]
 8005c6e:	8d8b      	ldrh	r3, [r1, #44]	; 0x2c
 8005c70:	f003 0303 	and.w	r3, r3, #3
 8005c74:	2b01      	cmp	r3, #1
 8005c76:	d058      	beq.n	8005d2a <GUI_DispString.part.0+0x106>
 8005c78:	2b02      	cmp	r3, #2
 8005c7a:	d05a      	beq.n	8005d32 <GUI_DispString.part.0+0x10e>
 8005c7c:	b285      	uxth	r5, r0
 8005c7e:	f04f 0e00 	mov.w	lr, #0
 8005c82:	8c4a      	ldrh	r2, [r1, #34]	; 0x22
 8005c84:	f9b1 3024 	ldrsh.w	r3, [r1, #36]	; 0x24
 8005c88:	f8ad 3002 	strh.w	r3, [sp, #2]
 8005c8c:	ebce 0202 	rsb	r2, lr, r2
 8005c90:	b292      	uxth	r2, r2
 8005c92:	b210      	sxth	r0, r2
 8005c94:	3b01      	subs	r3, #1
 8005c96:	f105 3eff 	add.w	lr, r5, #4294967295
 8005c9a:	4496      	add	lr, r2
 8005c9c:	8448      	strh	r0, [r1, #34]	; 0x22
 8005c9e:	443b      	add	r3, r7
 8005ca0:	466a      	mov	r2, sp
 8005ca2:	4659      	mov	r1, fp
 8005ca4:	f8ad 0000 	strh.w	r0, [sp]
 8005ca8:	4620      	mov	r0, r4
 8005caa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8005cae:	f8ad e004 	strh.w	lr, [sp, #4]
 8005cb2:	f00c fbf7 	bl	80124a4 <GUI__DispLine>
 8005cb6:	6833      	ldr	r3, [r6, #0]
 8005cb8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8005cbc:	849a      	strh	r2, [r3, #36]	; 0x24
 8005cbe:	4659      	mov	r1, fp
 8005cc0:	4620      	mov	r0, r4
 8005cc2:	f000 fb57 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8005cc6:	5c22      	ldrb	r2, [r4, r0]
 8005cc8:	2a0a      	cmp	r2, #10
 8005cca:	eb04 0300 	add.w	r3, r4, r0
 8005cce:	d019      	beq.n	8005d04 <GUI_DispString.part.0+0xe0>
 8005cd0:	2a0d      	cmp	r2, #13
 8005cd2:	d017      	beq.n	8005d04 <GUI_DispString.part.0+0xe0>
 8005cd4:	f8bd 0000 	ldrh.w	r0, [sp]
 8005cd8:	f8d8 2000 	ldr.w	r2, [r8]
 8005cdc:	4405      	add	r5, r0
 8005cde:	8455      	strh	r5, [r2, #34]	; 0x22
 8005ce0:	7819      	ldrb	r1, [r3, #0]
 8005ce2:	b119      	cbz	r1, 8005cec <GUI_DispString.part.0+0xc8>
 8005ce4:	7859      	ldrb	r1, [r3, #1]
 8005ce6:	1c5c      	adds	r4, r3, #1
 8005ce8:	2900      	cmp	r1, #0
 8005cea:	d1b5      	bne.n	8005c58 <GUI_DispString.part.0+0x34>
 8005cec:	f9b2 3024 	ldrsh.w	r3, [r2, #36]	; 0x24
 8005cf0:	8d91      	ldrh	r1, [r2, #44]	; 0x2c
 8005cf2:	449a      	add	sl, r3
 8005cf4:	f021 0303 	bic.w	r3, r1, #3
 8005cf8:	f8a2 a024 	strh.w	sl, [r2, #36]	; 0x24
 8005cfc:	8593      	strh	r3, [r2, #44]	; 0x2c
 8005cfe:	b003      	add	sp, #12
 8005d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d04:	6832      	ldr	r2, [r6, #0]
 8005d06:	8d91      	ldrh	r1, [r2, #44]	; 0x2c
 8005d08:	f001 0103 	and.w	r1, r1, #3
 8005d0c:	3901      	subs	r1, #1
 8005d0e:	2901      	cmp	r1, #1
 8005d10:	bf8a      	itet	hi
 8005d12:	8c11      	ldrhhi	r1, [r2, #32]
 8005d14:	f8a2 9022 	strhls.w	r9, [r2, #34]	; 0x22
 8005d18:	8451      	strhhi	r1, [r2, #34]	; 0x22
 8005d1a:	7819      	ldrb	r1, [r3, #0]
 8005d1c:	290a      	cmp	r1, #10
 8005d1e:	d1e0      	bne.n	8005ce2 <GUI_DispString.part.0+0xbe>
 8005d20:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8005d22:	4439      	add	r1, r7
 8005d24:	8491      	strh	r1, [r2, #36]	; 0x24
 8005d26:	7819      	ldrb	r1, [r3, #0]
 8005d28:	e7db      	b.n	8005ce2 <GUI_DispString.part.0+0xbe>
 8005d2a:	fa1f fe80 	uxth.w	lr, r0
 8005d2e:	4675      	mov	r5, lr
 8005d30:	e7a7      	b.n	8005c82 <GUI_DispString.part.0+0x5e>
 8005d32:	eb00 72d0 	add.w	r2, r0, r0, lsr #31
 8005d36:	f3c2 0e4f 	ubfx	lr, r2, #1, #16
 8005d3a:	b285      	uxth	r5, r0
 8005d3c:	e7a1      	b.n	8005c82 <GUI_DispString.part.0+0x5e>
 8005d3e:	bf00      	nop
 8005d40:	20000018 	.word	0x20000018

08005d44 <GUI_DispStringInRectWrap.part.1>:
 8005d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d48:	4689      	mov	r9, r1
 8005d4a:	b08b      	sub	sp, #44	; 0x2c
 8005d4c:	f9b9 4004 	ldrsh.w	r4, [r9, #4]
 8005d50:	f9b1 1000 	ldrsh.w	r1, [r1]
 8005d54:	f9b9 5006 	ldrsh.w	r5, [r9, #6]
 8005d58:	9401      	str	r4, [sp, #4]
 8005d5a:	1a66      	subs	r6, r4, r1
 8005d5c:	4690      	mov	r8, r2
 8005d5e:	9205      	str	r2, [sp, #20]
 8005d60:	9100      	str	r1, [sp, #0]
 8005d62:	f9b9 b002 	ldrsh.w	fp, [r9, #2]
 8005d66:	9503      	str	r5, [sp, #12]
 8005d68:	4604      	mov	r4, r0
 8005d6a:	461f      	mov	r7, r3
 8005d6c:	f00c fac6 	bl	80122fc <GUI_GetFontDistY>
 8005d70:	f018 080c 	ands.w	r8, r8, #12
 8005d74:	f106 0601 	add.w	r6, r6, #1
 8005d78:	9002      	str	r0, [sp, #8]
 8005d7a:	d01a      	beq.n	8005db2 <GUI_DispStringInRectWrap.part.1+0x6e>
 8005d7c:	46a2      	mov	sl, r4
 8005d7e:	463a      	mov	r2, r7
 8005d80:	4631      	mov	r1, r6
 8005d82:	4650      	mov	r0, sl
 8005d84:	2500      	movs	r5, #0
 8005d86:	f001 f8dd 	bl	8006f44 <GUI__WrapGetNumBytesToNextLine>
 8005d8a:	b140      	cbz	r0, 8005d9e <GUI_DispStringInRectWrap.part.1+0x5a>
 8005d8c:	4482      	add	sl, r0
 8005d8e:	463a      	mov	r2, r7
 8005d90:	4631      	mov	r1, r6
 8005d92:	4650      	mov	r0, sl
 8005d94:	3501      	adds	r5, #1
 8005d96:	f001 f8d5 	bl	8006f44 <GUI__WrapGetNumBytesToNextLine>
 8005d9a:	2800      	cmp	r0, #0
 8005d9c:	d1f6      	bne.n	8005d8c <GUI_DispStringInRectWrap.part.1+0x48>
 8005d9e:	f1b8 0f08 	cmp.w	r8, #8
 8005da2:	d07b      	beq.n	8005e9c <GUI_DispStringInRectWrap.part.1+0x158>
 8005da4:	f1b8 0f0c 	cmp.w	r8, #12
 8005da8:	f000 8082 	beq.w	8005eb0 <GUI_DispStringInRectWrap.part.1+0x16c>
 8005dac:	f1b8 0f04 	cmp.w	r8, #4
 8005db0:	d074      	beq.n	8005e9c <GUI_DispStringInRectWrap.part.1+0x158>
 8005db2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8005db6:	4648      	mov	r0, r9
 8005db8:	f007 fdb0 	bl	800d91c <WM_SetUserClipRect>
 8005dbc:	4602      	mov	r2, r0
 8005dbe:	9004      	str	r0, [sp, #16]
 8005dc0:	b1a8      	cbz	r0, 8005dee <GUI_DispStringInRectWrap.part.1+0xaa>
 8005dc2:	9800      	ldr	r0, [sp, #0]
 8005dc4:	2100      	movs	r1, #0
 8005dc6:	460b      	mov	r3, r1
 8005dc8:	f360 010f 	bfi	r1, r0, #0, #16
 8005dcc:	9801      	ldr	r0, [sp, #4]
 8005dce:	f360 030f 	bfi	r3, r0, #0, #16
 8005dd2:	9803      	ldr	r0, [sp, #12]
 8005dd4:	f36b 411f 	bfi	r1, fp, #16, #16
 8005dd8:	f360 431f 	bfi	r3, r0, #16, #16
 8005ddc:	9106      	str	r1, [sp, #24]
 8005dde:	a806      	add	r0, sp, #24
 8005de0:	4649      	mov	r1, r9
 8005de2:	9307      	str	r3, [sp, #28]
 8005de4:	f000 fe40 	bl	8006a68 <GUI__IntersectRects>
 8005de8:	a806      	add	r0, sp, #24
 8005dea:	f007 fd97 	bl	800d91c <WM_SetUserClipRect>
 8005dee:	9b05      	ldr	r3, [sp, #20]
 8005df0:	f003 0803 	and.w	r8, r3, #3
 8005df4:	f10a 33ff 	add.w	r3, sl, #4294967295
 8005df8:	9302      	str	r3, [sp, #8]
 8005dfa:	4643      	mov	r3, r8
 8005dfc:	fa1f f58b 	uxth.w	r5, fp
 8005e00:	46b0      	mov	r8, r6
 8005e02:	461e      	mov	r6, r3
 8005e04:	e015      	b.n	8005e32 <GUI_DispStringInRectWrap.part.1+0xee>
 8005e06:	2e02      	cmp	r6, #2
 8005e08:	d034      	beq.n	8005e74 <GUI_DispStringInRectWrap.part.1+0x130>
 8005e0a:	b91e      	cbnz	r6, 8005e14 <GUI_DispStringInRectWrap.part.1+0xd0>
 8005e0c:	f8b9 3000 	ldrh.w	r3, [r9]
 8005e10:	f8ad 3020 	strh.w	r3, [sp, #32]
 8005e14:	4620      	mov	r0, r4
 8005e16:	4659      	mov	r1, fp
 8005e18:	aa08      	add	r2, sp, #32
 8005e1a:	f00c fb43 	bl	80124a4 <GUI__DispLine>
 8005e1e:	4620      	mov	r0, r4
 8005e20:	463a      	mov	r2, r7
 8005e22:	4641      	mov	r1, r8
 8005e24:	f001 f88e 	bl	8006f44 <GUI__WrapGetNumBytesToNextLine>
 8005e28:	4404      	add	r4, r0
 8005e2a:	4455      	add	r5, sl
 8005e2c:	7823      	ldrb	r3, [r4, #0]
 8005e2e:	b2ad      	uxth	r5, r5
 8005e30:	b373      	cbz	r3, 8005e90 <GUI_DispStringInRectWrap.part.1+0x14c>
 8005e32:	463a      	mov	r2, r7
 8005e34:	4641      	mov	r1, r8
 8005e36:	4620      	mov	r0, r4
 8005e38:	f001 f872 	bl	8006f20 <GUI__WrapGetNumCharsDisp>
 8005e3c:	9b02      	ldr	r3, [sp, #8]
 8005e3e:	f8bd 2000 	ldrh.w	r2, [sp]
 8005e42:	f8ad 2020 	strh.w	r2, [sp, #32]
 8005e46:	4601      	mov	r1, r0
 8005e48:	18eb      	adds	r3, r5, r3
 8005e4a:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8005e4e:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 8005e52:	4683      	mov	fp, r0
 8005e54:	4620      	mov	r0, r4
 8005e56:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005e5a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8005e5e:	f00c fadf 	bl	8012420 <GUI__GetLineDistX>
 8005e62:	2e01      	cmp	r6, #1
 8005e64:	d1cf      	bne.n	8005e06 <GUI_DispStringInRectWrap.part.1+0xc2>
 8005e66:	f8b9 3004 	ldrh.w	r3, [r9, #4]
 8005e6a:	3301      	adds	r3, #1
 8005e6c:	1a18      	subs	r0, r3, r0
 8005e6e:	f8ad 0020 	strh.w	r0, [sp, #32]
 8005e72:	e7cf      	b.n	8005e14 <GUI_DispStringInRectWrap.part.1+0xd0>
 8005e74:	f9b9 1000 	ldrsh.w	r1, [r9]
 8005e78:	f9b9 3004 	ldrsh.w	r3, [r9, #4]
 8005e7c:	1a5b      	subs	r3, r3, r1
 8005e7e:	1a18      	subs	r0, r3, r0
 8005e80:	3001      	adds	r0, #1
 8005e82:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8005e86:	eb01 0060 	add.w	r0, r1, r0, asr #1
 8005e8a:	f8ad 0020 	strh.w	r0, [sp, #32]
 8005e8e:	e7c1      	b.n	8005e14 <GUI_DispStringInRectWrap.part.1+0xd0>
 8005e90:	9804      	ldr	r0, [sp, #16]
 8005e92:	f007 fd43 	bl	800d91c <WM_SetUserClipRect>
 8005e96:	b00b      	add	sp, #44	; 0x2c
 8005e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e9c:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8005ea0:	9b03      	ldr	r3, [sp, #12]
 8005ea2:	fb15 f50a 	smulbb	r5, r5, sl
 8005ea6:	3301      	adds	r3, #1
 8005ea8:	1b5d      	subs	r5, r3, r5
 8005eaa:	fa0f fb85 	sxth.w	fp, r5
 8005eae:	e782      	b.n	8005db6 <GUI_DispStringInRectWrap.part.1+0x72>
 8005eb0:	9b03      	ldr	r3, [sp, #12]
 8005eb2:	9902      	ldr	r1, [sp, #8]
 8005eb4:	ebcb 0303 	rsb	r3, fp, r3
 8005eb8:	3301      	adds	r3, #1
 8005eba:	fb05 3511 	mls	r5, r5, r1, r3
 8005ebe:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005ec2:	eb0b 0565 	add.w	r5, fp, r5, asr #1
 8005ec6:	fa0f fb85 	sxth.w	fp, r5
 8005eca:	fa1f fa81 	uxth.w	sl, r1
 8005ece:	e772      	b.n	8005db6 <GUI_DispStringInRectWrap.part.1+0x72>

08005ed0 <GUI_DispStringAt>:
 8005ed0:	4b03      	ldr	r3, [pc, #12]	; (8005ee0 <GUI_DispStringAt+0x10>)
 8005ed2:	681b      	ldr	r3, [r3, #0]
 8005ed4:	8459      	strh	r1, [r3, #34]	; 0x22
 8005ed6:	849a      	strh	r2, [r3, #36]	; 0x24
 8005ed8:	b108      	cbz	r0, 8005ede <GUI_DispStringAt+0xe>
 8005eda:	f7ff bea3 	b.w	8005c24 <GUI_DispString.part.0>
 8005ede:	4770      	bx	lr
 8005ee0:	20000018 	.word	0x20000018

08005ee4 <GUI__DispStringInRect>:
 8005ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ee8:	b087      	sub	sp, #28
 8005eea:	460c      	mov	r4, r1
 8005eec:	9001      	str	r0, [sp, #4]
 8005eee:	4617      	mov	r7, r2
 8005ef0:	461d      	mov	r5, r3
 8005ef2:	f00c fa03 	bl	80122fc <GUI_GetFontDistY>
 8005ef6:	f8dd b004 	ldr.w	fp, [sp, #4]
 8005efa:	4681      	mov	r9, r0
 8005efc:	2c00      	cmp	r4, #0
 8005efe:	f000 80a5 	beq.w	800604c <GUI__DispStringInRect+0x168>
 8005f02:	6820      	ldr	r0, [r4, #0]
 8005f04:	6861      	ldr	r1, [r4, #4]
 8005f06:	ab04      	add	r3, sp, #16
 8005f08:	c303      	stmia	r3!, {r0, r1}
 8005f0a:	f017 0a0c 	ands.w	sl, r7, #12
 8005f0e:	d160      	bne.n	8005fd2 <GUI__DispStringInRect+0xee>
 8005f10:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8005f14:	f8cd b004 	str.w	fp, [sp, #4]
 8005f18:	2d00      	cmp	r5, #0
 8005f1a:	d057      	beq.n	8005fcc <GUI__DispStringInRect+0xe8>
 8005f1c:	f10d 0804 	add.w	r8, sp, #4
 8005f20:	f109 39ff 	add.w	r9, r9, #4294967295
 8005f24:	f8df a148 	ldr.w	sl, [pc, #328]	; 8006070 <GUI__DispStringInRect+0x18c>
 8005f28:	fa1f f989 	uxth.w	r9, r9
 8005f2c:	f007 0703 	and.w	r7, r7, #3
 8005f30:	4658      	mov	r0, fp
 8005f32:	2400      	movs	r4, #0
 8005f34:	e02d      	b.n	8005f92 <GUI__DispStringInRect+0xae>
 8005f36:	2f02      	cmp	r7, #2
 8005f38:	d03d      	beq.n	8005fb6 <GUI__DispStringInRect+0xd2>
 8005f3a:	b90f      	cbnz	r7, 8005f40 <GUI__DispStringInRect+0x5c>
 8005f3c:	f9bd 4010 	ldrsh.w	r4, [sp, #16]
 8005f40:	f8da 2000 	ldr.w	r2, [sl]
 8005f44:	9801      	ldr	r0, [sp, #4]
 8005f46:	fa0f fe86 	sxth.w	lr, r6
 8005f4a:	b221      	sxth	r1, r4
 8005f4c:	3b01      	subs	r3, #1
 8005f4e:	eb09 0c06 	add.w	ip, r9, r6
 8005f52:	4423      	add	r3, r4
 8005f54:	f8a2 e024 	strh.w	lr, [r2, #36]	; 0x24
 8005f58:	8451      	strh	r1, [r2, #34]	; 0x22
 8005f5a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8005f5e:	aa02      	add	r2, sp, #8
 8005f60:	4659      	mov	r1, fp
 8005f62:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005f66:	f8ad e00a 	strh.w	lr, [sp, #10]
 8005f6a:	f8ad c00e 	strh.w	ip, [sp, #14]
 8005f6e:	f00c fa99 	bl	80124a4 <GUI__DispLine>
 8005f72:	4659      	mov	r1, fp
 8005f74:	9801      	ldr	r0, [sp, #4]
 8005f76:	f000 f9fd 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8005f7a:	9b01      	ldr	r3, [sp, #4]
 8005f7c:	4418      	add	r0, r3
 8005f7e:	9001      	str	r0, [sp, #4]
 8005f80:	f00c f9bc 	bl	80122fc <GUI_GetFontDistY>
 8005f84:	4406      	add	r6, r0
 8005f86:	4640      	mov	r0, r8
 8005f88:	f000 fd38 	bl	80069fc <GUI__HandleEOLine>
 8005f8c:	b9f0      	cbnz	r0, 8005fcc <GUI__DispStringInRect+0xe8>
 8005f8e:	b1ed      	cbz	r5, 8005fcc <GUI__DispStringInRect+0xe8>
 8005f90:	9801      	ldr	r0, [sp, #4]
 8005f92:	4629      	mov	r1, r5
 8005f94:	f00c fa1a 	bl	80123cc <GUI__GetLineNumChars>
 8005f98:	4683      	mov	fp, r0
 8005f9a:	4601      	mov	r1, r0
 8005f9c:	9801      	ldr	r0, [sp, #4]
 8005f9e:	f00c fa3f 	bl	8012420 <GUI__GetLineDistX>
 8005fa2:	2f01      	cmp	r7, #1
 8005fa4:	ebcb 0505 	rsb	r5, fp, r5
 8005fa8:	4603      	mov	r3, r0
 8005faa:	d1c4      	bne.n	8005f36 <GUI__DispStringInRect+0x52>
 8005fac:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8005fb0:	1a24      	subs	r4, r4, r0
 8005fb2:	3401      	adds	r4, #1
 8005fb4:	e7c4      	b.n	8005f40 <GUI__DispStringInRect+0x5c>
 8005fb6:	f9bd 4010 	ldrsh.w	r4, [sp, #16]
 8005fba:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8005fbe:	1b12      	subs	r2, r2, r4
 8005fc0:	1a12      	subs	r2, r2, r0
 8005fc2:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8005fc6:	eb04 0462 	add.w	r4, r4, r2, asr #1
 8005fca:	e7b9      	b.n	8005f40 <GUI__DispStringInRect+0x5c>
 8005fcc:	b007      	add	sp, #28
 8005fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fd2:	2d00      	cmp	r5, #0
 8005fd4:	d03e      	beq.n	8006054 <GUI__DispStringInRect+0x170>
 8005fd6:	462c      	mov	r4, r5
 8005fd8:	2600      	movs	r6, #0
 8005fda:	f10d 0804 	add.w	r8, sp, #4
 8005fde:	e000      	b.n	8005fe2 <GUI__DispStringInRect+0xfe>
 8005fe0:	b194      	cbz	r4, 8006008 <GUI__DispStringInRect+0x124>
 8005fe2:	4621      	mov	r1, r4
 8005fe4:	9801      	ldr	r0, [sp, #4]
 8005fe6:	f00c f9f1 	bl	80123cc <GUI__GetLineNumChars>
 8005fea:	4603      	mov	r3, r0
 8005fec:	4601      	mov	r1, r0
 8005fee:	9801      	ldr	r0, [sp, #4]
 8005ff0:	1ae4      	subs	r4, r4, r3
 8005ff2:	f000 f9bf 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8005ff6:	9b01      	ldr	r3, [sp, #4]
 8005ff8:	4403      	add	r3, r0
 8005ffa:	4640      	mov	r0, r8
 8005ffc:	3601      	adds	r6, #1
 8005ffe:	9301      	str	r3, [sp, #4]
 8006000:	f000 fcfc 	bl	80069fc <GUI__HandleEOLine>
 8006004:	2800      	cmp	r0, #0
 8006006:	d0eb      	beq.n	8005fe0 <GUI__DispStringInRect+0xfc>
 8006008:	f1ba 0f08 	cmp.w	sl, #8
 800600c:	d009      	beq.n	8006022 <GUI__DispStringInRect+0x13e>
 800600e:	f1ba 0f0c 	cmp.w	sl, #12
 8006012:	d00d      	beq.n	8006030 <GUI__DispStringInRect+0x14c>
 8006014:	f1ba 0f04 	cmp.w	sl, #4
 8006018:	d003      	beq.n	8006022 <GUI__DispStringInRect+0x13e>
 800601a:	f8cd b004 	str.w	fp, [sp, #4]
 800601e:	2600      	movs	r6, #0
 8006020:	e77e      	b.n	8005f20 <GUI__DispStringInRect+0x3c>
 8006022:	fb06 f609 	mul.w	r6, r6, r9
 8006026:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800602a:	1b9e      	subs	r6, r3, r6
 800602c:	3601      	adds	r6, #1
 800602e:	e771      	b.n	8005f14 <GUI__DispStringInRect+0x30>
 8006030:	fb06 f609 	mul.w	r6, r6, r9
 8006034:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8006038:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800603c:	1a9b      	subs	r3, r3, r2
 800603e:	3301      	adds	r3, #1
 8006040:	1b9b      	subs	r3, r3, r6
 8006042:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8006046:	eb02 0663 	add.w	r6, r2, r3, asr #1
 800604a:	e763      	b.n	8005f14 <GUI__DispStringInRect+0x30>
 800604c:	a804      	add	r0, sp, #16
 800604e:	f7ff f961 	bl	8005314 <GUI_GetClientRect>
 8006052:	e75a      	b.n	8005f0a <GUI__DispStringInRect+0x26>
 8006054:	f1ba 0f08 	cmp.w	sl, #8
 8006058:	d005      	beq.n	8006066 <GUI__DispStringInRect+0x182>
 800605a:	f1ba 0f0c 	cmp.w	sl, #12
 800605e:	d004      	beq.n	800606a <GUI__DispStringInRect+0x186>
 8006060:	f1ba 0f04 	cmp.w	sl, #4
 8006064:	d1b2      	bne.n	8005fcc <GUI__DispStringInRect+0xe8>
 8006066:	2600      	movs	r6, #0
 8006068:	e7dd      	b.n	8006026 <GUI__DispStringInRect+0x142>
 800606a:	462e      	mov	r6, r5
 800606c:	e7e2      	b.n	8006034 <GUI__DispStringInRect+0x150>
 800606e:	bf00      	nop
 8006070:	20000018 	.word	0x20000018

08006074 <GUI_DispStringInRect>:
 8006074:	b300      	cbz	r0, 80060b8 <GUI_DispStringInRect+0x44>
 8006076:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006078:	4605      	mov	r5, r0
 800607a:	b083      	sub	sp, #12
 800607c:	4616      	mov	r6, r2
 800607e:	460c      	mov	r4, r1
 8006080:	b1c1      	cbz	r1, 80060b4 <GUI_DispStringInRect+0x40>
 8006082:	4608      	mov	r0, r1
 8006084:	f007 fc4a 	bl	800d91c <WM_SetUserClipRect>
 8006088:	4607      	mov	r7, r0
 800608a:	b138      	cbz	r0, 800609c <GUI_DispStringInRect+0x28>
 800608c:	4668      	mov	r0, sp
 800608e:	463a      	mov	r2, r7
 8006090:	4621      	mov	r1, r4
 8006092:	f000 fce9 	bl	8006a68 <GUI__IntersectRects>
 8006096:	4668      	mov	r0, sp
 8006098:	f007 fc40 	bl	800d91c <WM_SetUserClipRect>
 800609c:	4632      	mov	r2, r6
 800609e:	4621      	mov	r1, r4
 80060a0:	4628      	mov	r0, r5
 80060a2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80060a6:	f7ff ff1d 	bl	8005ee4 <GUI__DispStringInRect>
 80060aa:	4638      	mov	r0, r7
 80060ac:	f007 fc36 	bl	800d91c <WM_SetUserClipRect>
 80060b0:	b003      	add	sp, #12
 80060b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80060b4:	460f      	mov	r7, r1
 80060b6:	e7f1      	b.n	800609c <GUI_DispStringInRect+0x28>
 80060b8:	4770      	bx	lr
 80060ba:	bf00      	nop

080060bc <GUI_DispStringInRectWrap>:
 80060bc:	b108      	cbz	r0, 80060c2 <GUI_DispStringInRectWrap+0x6>
 80060be:	f7ff be41 	b.w	8005d44 <GUI_DispStringInRectWrap.part.1>
 80060c2:	4770      	bx	lr

080060c4 <GUI_GetStringDistX>:
 80060c4:	b510      	push	{r4, lr}
 80060c6:	4604      	mov	r4, r0
 80060c8:	f000 f968 	bl	800639c <GUI__GetNumChars>
 80060cc:	4601      	mov	r1, r0
 80060ce:	4620      	mov	r0, r4
 80060d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80060d4:	f00c b9a4 	b.w	8012420 <GUI__GetLineDistX>

080060d8 <GUI_MULTIBUF_ConfirmEx>:
 80060d8:	4b09      	ldr	r3, [pc, #36]	; (8006100 <GUI_MULTIBUF_ConfirmEx+0x28>)
 80060da:	6a1a      	ldr	r2, [r3, #32]
 80060dc:	2a00      	cmp	r2, #0
 80060de:	bf18      	it	ne
 80060e0:	2000      	movne	r0, #0
 80060e2:	eb03 0280 	add.w	r2, r3, r0, lsl #2
 80060e6:	b410      	push	{r4}
 80060e8:	6994      	ldr	r4, [r2, #24]
 80060ea:	2c00      	cmp	r4, #0
 80060ec:	db04      	blt.n	80060f8 <GUI_MULTIBUF_ConfirmEx+0x20>
 80060ee:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 80060f2:	f04f 33ff 	mov.w	r3, #4294967295
 80060f6:	6193      	str	r3, [r2, #24]
 80060f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80060fc:	4770      	bx	lr
 80060fe:	bf00      	nop
 8006100:	2000041c 	.word	0x2000041c

08006104 <GUI_StoreKey>:
 8006104:	4b02      	ldr	r3, [pc, #8]	; (8006110 <GUI_StoreKey+0xc>)
 8006106:	681a      	ldr	r2, [r3, #0]
 8006108:	b902      	cbnz	r2, 800610c <GUI_StoreKey+0x8>
 800610a:	6018      	str	r0, [r3, #0]
 800610c:	f000 b96a 	b.w	80063e4 <GUI_SignalEvent>
 8006110:	20000448 	.word	0x20000448

08006114 <GUI_PollKeyMsg>:
 8006114:	4a09      	ldr	r2, [pc, #36]	; (800613c <GUI_PollKeyMsg+0x28>)
 8006116:	6813      	ldr	r3, [r2, #0]
 8006118:	6851      	ldr	r1, [r2, #4]
 800611a:	428b      	cmp	r3, r1
 800611c:	d00c      	beq.n	8006138 <GUI_PollKeyMsg+0x24>
 800611e:	b510      	push	{r4, lr}
 8006120:	4c07      	ldr	r4, [pc, #28]	; (8006140 <GUI_PollKeyMsg+0x2c>)
 8006122:	42a3      	cmp	r3, r4
 8006124:	e893 0003 	ldmia.w	r3, {r0, r1}
 8006128:	bf14      	ite	ne
 800612a:	3308      	addne	r3, #8
 800612c:	3b50      	subeq	r3, #80	; 0x50
 800612e:	6013      	str	r3, [r2, #0]
 8006130:	f007 fb28 	bl	800d784 <WM_OnKey>
 8006134:	2001      	movs	r0, #1
 8006136:	bd10      	pop	{r4, pc}
 8006138:	2000      	movs	r0, #0
 800613a:	4770      	bx	lr
 800613c:	2000001c 	.word	0x2000001c
 8006140:	2000049c 	.word	0x2000049c

08006144 <_OnExit>:
 8006144:	4b03      	ldr	r3, [pc, #12]	; (8006154 <_OnExit+0x10>)
 8006146:	4904      	ldr	r1, [pc, #16]	; (8006158 <_OnExit+0x14>)
 8006148:	2200      	movs	r2, #0
 800614a:	600b      	str	r3, [r1, #0]
 800614c:	604b      	str	r3, [r1, #4]
 800614e:	649a      	str	r2, [r3, #72]	; 0x48
 8006150:	64da      	str	r2, [r3, #76]	; 0x4c
 8006152:	4770      	bx	lr
 8006154:	200004a8 	.word	0x200004a8
 8006158:	20000024 	.word	0x20000024

0800615c <GUI_PID_GetState>:
 800615c:	b470      	push	{r4, r5, r6}
 800615e:	4d10      	ldr	r5, [pc, #64]	; (80061a0 <GUI_PID_GetState+0x44>)
 8006160:	682b      	ldr	r3, [r5, #0]
 8006162:	686a      	ldr	r2, [r5, #4]
 8006164:	4293      	cmp	r3, r2
 8006166:	4604      	mov	r4, r0
 8006168:	d00f      	beq.n	800618a <GUI_PID_GetState+0x2e>
 800616a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800616e:	4e0d      	ldr	r6, [pc, #52]	; (80061a4 <GUI_PID_GetState+0x48>)
 8006170:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8006174:	42b3      	cmp	r3, r6
 8006176:	bf14      	ite	ne
 8006178:	330c      	addne	r3, #12
 800617a:	3b3c      	subeq	r3, #60	; 0x3c
 800617c:	602b      	str	r3, [r5, #0]
 800617e:	7a20      	ldrb	r0, [r4, #8]
 8006180:	3000      	adds	r0, #0
 8006182:	bf18      	it	ne
 8006184:	2001      	movne	r0, #1
 8006186:	bc70      	pop	{r4, r5, r6}
 8006188:	4770      	bx	lr
 800618a:	4a07      	ldr	r2, [pc, #28]	; (80061a8 <GUI_PID_GetState+0x4c>)
 800618c:	4293      	cmp	r3, r2
 800618e:	bf06      	itte	eq
 8006190:	333c      	addeq	r3, #60	; 0x3c
 8006192:	e893 0007 	ldmiaeq.w	r3, {r0, r1, r2}
 8006196:	e913 0007 	ldmdbne	r3, {r0, r1, r2}
 800619a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800619e:	e7ee      	b.n	800617e <GUI_PID_GetState+0x22>
 80061a0:	20000024 	.word	0x20000024
 80061a4:	200004e4 	.word	0x200004e4
 80061a8:	200004a8 	.word	0x200004a8

080061ac <GUI_PID_StoreState>:
 80061ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80061ae:	4e37      	ldr	r6, [pc, #220]	; (800628c <GUI_PID_StoreState+0xe0>)
 80061b0:	6d33      	ldr	r3, [r6, #80]	; 0x50
 80061b2:	b085      	sub	sp, #20
 80061b4:	4604      	mov	r4, r0
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d055      	beq.n	8006266 <GUI_PID_StoreState+0xba>
 80061ba:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80061be:	4c34      	ldr	r4, [pc, #208]	; (8006290 <GUI_PID_StoreState+0xe4>)
 80061c0:	4d34      	ldr	r5, [pc, #208]	; (8006294 <GUI_PID_StoreState+0xe8>)
 80061c2:	6cf3      	ldr	r3, [r6, #76]	; 0x4c
 80061c4:	6025      	str	r5, [r4, #0]
 80061c6:	ad01      	add	r5, sp, #4
 80061c8:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80061cc:	b10b      	cbz	r3, 80061d2 <GUI_PID_StoreState+0x26>
 80061ce:	4628      	mov	r0, r5
 80061d0:	4798      	blx	r3
 80061d2:	4f31      	ldr	r7, [pc, #196]	; (8006298 <GUI_PID_StoreState+0xec>)
 80061d4:	f8d7 e000 	ldr.w	lr, [r7]
 80061d8:	687b      	ldr	r3, [r7, #4]
 80061da:	459e      	cmp	lr, r3
 80061dc:	d038      	beq.n	8006250 <GUI_PID_StoreState+0xa4>
 80061de:	42b3      	cmp	r3, r6
 80061e0:	4c2a      	ldr	r4, [pc, #168]	; (800628c <GUI_PID_StoreState+0xe0>)
 80061e2:	f89d 200c 	ldrb.w	r2, [sp, #12]
 80061e6:	d035      	beq.n	8006254 <GUI_PID_StoreState+0xa8>
 80061e8:	f813 1c04 	ldrb.w	r1, [r3, #-4]
 80061ec:	4291      	cmp	r1, r2
 80061ee:	d012      	beq.n	8006216 <GUI_PID_StoreState+0x6a>
 80061f0:	343c      	adds	r4, #60	; 0x3c
 80061f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80061f6:	42a3      	cmp	r3, r4
 80061f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061fc:	d01b      	beq.n	8006236 <GUI_PID_StoreState+0x8a>
 80061fe:	330c      	adds	r3, #12
 8006200:	459e      	cmp	lr, r3
 8006202:	607b      	str	r3, [r7, #4]
 8006204:	d01b      	beq.n	800623e <GUI_PID_StoreState+0x92>
 8006206:	6cb3      	ldr	r3, [r6, #72]	; 0x48
 8006208:	b10b      	cbz	r3, 800620e <GUI_PID_StoreState+0x62>
 800620a:	4628      	mov	r0, r5
 800620c:	4798      	blx	r3
 800620e:	f000 f8e9 	bl	80063e4 <GUI_SignalEvent>
 8006212:	b005      	add	sp, #20
 8006214:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006216:	f1a3 010c 	sub.w	r1, r3, #12
 800621a:	458e      	cmp	lr, r1
 800621c:	d0e8      	beq.n	80061f0 <GUI_PID_StoreState+0x44>
 800621e:	42a1      	cmp	r1, r4
 8006220:	d02e      	beq.n	8006280 <GUI_PID_StoreState+0xd4>
 8006222:	343c      	adds	r4, #60	; 0x3c
 8006224:	390c      	subs	r1, #12
 8006226:	7a09      	ldrb	r1, [r1, #8]
 8006228:	4291      	cmp	r1, r2
 800622a:	d1e2      	bne.n	80061f2 <GUI_PID_StoreState+0x46>
 800622c:	42b3      	cmp	r3, r6
 800622e:	bf14      	ite	ne
 8006230:	3b0c      	subne	r3, #12
 8006232:	4623      	moveq	r3, r4
 8006234:	e7dd      	b.n	80061f2 <GUI_PID_StoreState+0x46>
 8006236:	4b15      	ldr	r3, [pc, #84]	; (800628c <GUI_PID_StoreState+0xe0>)
 8006238:	607b      	str	r3, [r7, #4]
 800623a:	459e      	cmp	lr, r3
 800623c:	d1e3      	bne.n	8006206 <GUI_PID_StoreState+0x5a>
 800623e:	4b17      	ldr	r3, [pc, #92]	; (800629c <GUI_PID_StoreState+0xf0>)
 8006240:	459e      	cmp	lr, r3
 8006242:	bf14      	ite	ne
 8006244:	f10e 030c 	addne.w	r3, lr, #12
 8006248:	f1ae 033c 	subeq.w	r3, lr, #60	; 0x3c
 800624c:	603b      	str	r3, [r7, #0]
 800624e:	e7da      	b.n	8006206 <GUI_PID_StoreState+0x5a>
 8006250:	4c12      	ldr	r4, [pc, #72]	; (800629c <GUI_PID_StoreState+0xf0>)
 8006252:	e7ce      	b.n	80061f2 <GUI_PID_StoreState+0x46>
 8006254:	f896 1044 	ldrb.w	r1, [r6, #68]	; 0x44
 8006258:	4291      	cmp	r1, r2
 800625a:	d00b      	beq.n	8006274 <GUI_PID_StoreState+0xc8>
 800625c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006260:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8006264:	e7cb      	b.n	80061fe <GUI_PID_StoreState+0x52>
 8006266:	4630      	mov	r0, r6
 8006268:	4b0d      	ldr	r3, [pc, #52]	; (80062a0 <GUI_PID_StoreState+0xf4>)
 800626a:	f840 3f50 	str.w	r3, [r0, #80]!
 800626e:	f7ff fb7f 	bl	8005970 <GUI__RegisterExit>
 8006272:	e7a2      	b.n	80061ba <GUI_PID_StoreState+0xe>
 8006274:	f106 043c 	add.w	r4, r6, #60	; 0x3c
 8006278:	45a6      	cmp	lr, r4
 800627a:	d0ef      	beq.n	800625c <GUI_PID_StoreState+0xb0>
 800627c:	4621      	mov	r1, r4
 800627e:	e7d1      	b.n	8006224 <GUI_PID_StoreState+0x78>
 8006280:	f101 043c 	add.w	r4, r1, #60	; 0x3c
 8006284:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8006288:	e7cd      	b.n	8006226 <GUI_PID_StoreState+0x7a>
 800628a:	bf00      	nop
 800628c:	200004a8 	.word	0x200004a8
 8006290:	2001c1a8 	.word	0x2001c1a8
 8006294:	0800de6d 	.word	0x0800de6d
 8006298:	20000024 	.word	0x20000024
 800629c:	200004e4 	.word	0x200004e4
 80062a0:	08006145 	.word	0x08006145

080062a4 <GUI_PID_IsEmpty>:
 80062a4:	4b03      	ldr	r3, [pc, #12]	; (80062b4 <GUI_PID_IsEmpty+0x10>)
 80062a6:	cb09      	ldmia	r3, {r0, r3}
 80062a8:	1ac0      	subs	r0, r0, r3
 80062aa:	fab0 f080 	clz	r0, r0
 80062ae:	0940      	lsrs	r0, r0, #5
 80062b0:	4770      	bx	lr
 80062b2:	bf00      	nop
 80062b4:	20000024 	.word	0x20000024

080062b8 <GUI_GetCursorLayer>:
 80062b8:	2801      	cmp	r0, #1
 80062ba:	bf9a      	itte	ls
 80062bc:	4b02      	ldrls	r3, [pc, #8]	; (80062c8 <GUI_GetCursorLayer+0x10>)
 80062be:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 80062c2:	2000      	movhi	r0, #0
 80062c4:	4770      	bx	lr
 80062c6:	bf00      	nop
 80062c8:	20000500 	.word	0x20000500

080062cc <GUI_GetLayerPosEx>:
 80062cc:	b538      	push	{r3, r4, r5, lr}
 80062ce:	460d      	mov	r5, r1
 80062d0:	4614      	mov	r4, r2
 80062d2:	f001 febd 	bl	8008050 <LCD_GetPosEx>
 80062d6:	b110      	cbz	r0, 80062de <GUI_GetLayerPosEx+0x12>
 80062d8:	2300      	movs	r3, #0
 80062da:	602b      	str	r3, [r5, #0]
 80062dc:	6023      	str	r3, [r4, #0]
 80062de:	bd38      	pop	{r3, r4, r5, pc}

080062e0 <GUI_SelectLayer>:
 80062e0:	b570      	push	{r4, r5, r6, lr}
 80062e2:	4d0a      	ldr	r5, [pc, #40]	; (800630c <GUI_SelectLayer+0x2c>)
 80062e4:	682a      	ldr	r2, [r5, #0]
 80062e6:	2801      	cmp	r0, #1
 80062e8:	7c56      	ldrb	r6, [r2, #17]
 80062ea:	d901      	bls.n	80062f0 <GUI_SelectLayer+0x10>
 80062ec:	4630      	mov	r0, r6
 80062ee:	bd70      	pop	{r4, r5, r6, pc}
 80062f0:	4604      	mov	r4, r0
 80062f2:	f7ff fb51 	bl	8005998 <GUI_DEVICE__GetpDriver>
 80062f6:	2800      	cmp	r0, #0
 80062f8:	d0f8      	beq.n	80062ec <GUI_SelectLayer+0xc>
 80062fa:	682b      	ldr	r3, [r5, #0]
 80062fc:	745c      	strb	r4, [r3, #17]
 80062fe:	f7ff f945 	bl	800558c <GUI_SelectLCD>
 8006302:	4b03      	ldr	r3, [pc, #12]	; (8006310 <GUI_SelectLayer+0x30>)
 8006304:	4630      	mov	r0, r6
 8006306:	601c      	str	r4, [r3, #0]
 8006308:	bd70      	pop	{r4, r5, r6, pc}
 800630a:	bf00      	nop
 800630c:	20000018 	.word	0x20000018
 8006310:	2001c1e0 	.word	0x2001c1e0

08006314 <GUI_SetLayerPosEx>:
 8006314:	f001 beea 	b.w	80080ec <LCD_SetPosEx>

08006318 <GUI_GetTime>:
 8006318:	f7fc bee8 	b.w	80030ec <GUI_X_GetTime>

0800631c <GUI_Delay>:
 800631c:	b570      	push	{r4, r5, r6, lr}
 800631e:	4605      	mov	r5, r0
 8006320:	f7fc fee4 	bl	80030ec <GUI_X_GetTime>
 8006324:	4e08      	ldr	r6, [pc, #32]	; (8006348 <GUI_Delay+0x2c>)
 8006326:	4405      	add	r5, r0
 8006328:	e007      	b.n	800633a <GUI_Delay+0x1e>
 800632a:	f7ff f873 	bl	8005414 <GUI_Exec>
 800632e:	6830      	ldr	r0, [r6, #0]
 8006330:	42a0      	cmp	r0, r4
 8006332:	bfa8      	it	ge
 8006334:	4620      	movge	r0, r4
 8006336:	f7fc fedf 	bl	80030f8 <GUI_X_Delay>
 800633a:	f7fc fed7 	bl	80030ec <GUI_X_GetTime>
 800633e:	1a2c      	subs	r4, r5, r0
 8006340:	2c00      	cmp	r4, #0
 8006342:	dcf2      	bgt.n	800632a <GUI_Delay+0xe>
 8006344:	bd70      	pop	{r4, r5, r6, pc}
 8006346:	bf00      	nop
 8006348:	2000002c 	.word	0x2000002c

0800634c <GUI_UC__GetCharCodeInc>:
 800634c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800634e:	4e08      	ldr	r6, [pc, #32]	; (8006370 <GUI_UC__GetCharCodeInc+0x24>)
 8006350:	6804      	ldr	r4, [r0, #0]
 8006352:	6833      	ldr	r3, [r6, #0]
 8006354:	4605      	mov	r5, r0
 8006356:	681b      	ldr	r3, [r3, #0]
 8006358:	4620      	mov	r0, r4
 800635a:	4798      	blx	r3
 800635c:	6833      	ldr	r3, [r6, #0]
 800635e:	4607      	mov	r7, r0
 8006360:	685b      	ldr	r3, [r3, #4]
 8006362:	4620      	mov	r0, r4
 8006364:	4798      	blx	r3
 8006366:	4420      	add	r0, r4
 8006368:	6028      	str	r0, [r5, #0]
 800636a:	4638      	mov	r0, r7
 800636c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800636e:	bf00      	nop
 8006370:	2001c194 	.word	0x2001c194

08006374 <GUI_UC__NumChars2NumBytes>:
 8006374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006376:	b169      	cbz	r1, 8006394 <GUI_UC__NumChars2NumBytes+0x20>
 8006378:	4f07      	ldr	r7, [pc, #28]	; (8006398 <GUI_UC__NumChars2NumBytes+0x24>)
 800637a:	4605      	mov	r5, r0
 800637c:	460c      	mov	r4, r1
 800637e:	2600      	movs	r6, #0
 8006380:	683b      	ldr	r3, [r7, #0]
 8006382:	4628      	mov	r0, r5
 8006384:	685b      	ldr	r3, [r3, #4]
 8006386:	4798      	blx	r3
 8006388:	3c01      	subs	r4, #1
 800638a:	4405      	add	r5, r0
 800638c:	4406      	add	r6, r0
 800638e:	d1f7      	bne.n	8006380 <GUI_UC__NumChars2NumBytes+0xc>
 8006390:	4630      	mov	r0, r6
 8006392:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006394:	460e      	mov	r6, r1
 8006396:	e7fb      	b.n	8006390 <GUI_UC__NumChars2NumBytes+0x1c>
 8006398:	2001c194 	.word	0x2001c194

0800639c <GUI__GetNumChars>:
 800639c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800639e:	4604      	mov	r4, r0
 80063a0:	b188      	cbz	r0, 80063c6 <GUI__GetNumChars+0x2a>
 80063a2:	2600      	movs	r6, #0
 80063a4:	4d09      	ldr	r5, [pc, #36]	; (80063cc <GUI__GetNumChars+0x30>)
 80063a6:	e000      	b.n	80063aa <GUI__GetNumChars+0xe>
 80063a8:	3601      	adds	r6, #1
 80063aa:	682b      	ldr	r3, [r5, #0]
 80063ac:	4620      	mov	r0, r4
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	4798      	blx	r3
 80063b2:	682b      	ldr	r3, [r5, #0]
 80063b4:	4607      	mov	r7, r0
 80063b6:	685b      	ldr	r3, [r3, #4]
 80063b8:	4620      	mov	r0, r4
 80063ba:	4798      	blx	r3
 80063bc:	4404      	add	r4, r0
 80063be:	2f00      	cmp	r7, #0
 80063c0:	d1f2      	bne.n	80063a8 <GUI__GetNumChars+0xc>
 80063c2:	4630      	mov	r0, r6
 80063c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80063c6:	4606      	mov	r6, r0
 80063c8:	4630      	mov	r0, r6
 80063ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80063cc:	2001c194 	.word	0x2001c194

080063d0 <_GetCharCode>:
 80063d0:	7800      	ldrb	r0, [r0, #0]
 80063d2:	4770      	bx	lr

080063d4 <_GetCharSize>:
 80063d4:	2001      	movs	r0, #1
 80063d6:	4770      	bx	lr

080063d8 <_CalcSizeOfChar>:
 80063d8:	2001      	movs	r0, #1
 80063da:	4770      	bx	lr

080063dc <_Encode>:
 80063dc:	7001      	strb	r1, [r0, #0]
 80063de:	2001      	movs	r0, #1
 80063e0:	4770      	bx	lr
 80063e2:	bf00      	nop

080063e4 <GUI_SignalEvent>:
 80063e4:	4b02      	ldr	r3, [pc, #8]	; (80063f0 <GUI_SignalEvent+0xc>)
 80063e6:	681b      	ldr	r3, [r3, #0]
 80063e8:	b103      	cbz	r3, 80063ec <GUI_SignalEvent+0x8>
 80063ea:	4718      	bx	r3
 80063ec:	4770      	bx	lr
 80063ee:	bf00      	nop
 80063f0:	20000508 	.word	0x20000508

080063f4 <GUI__MixColorsBulk>:
 80063f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063f8:	b087      	sub	sp, #28
 80063fa:	4692      	mov	sl, r2
 80063fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80063fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006400:	f89d 9050 	ldrb.w	r9, [sp, #80]	; 0x50
 8006404:	9001      	str	r0, [sp, #4]
 8006406:	9102      	str	r1, [sp, #8]
 8006408:	2a00      	cmp	r2, #0
 800640a:	d035      	beq.n	8006478 <GUI__MixColorsBulk+0x84>
 800640c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800640e:	f8df b070 	ldr.w	fp, [pc, #112]	; 8006480 <GUI__MixColorsBulk+0x8c>
 8006412:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8006484 <GUI__MixColorsBulk+0x90>
 8006416:	0092      	lsls	r2, r2, #2
 8006418:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800641c:	9304      	str	r3, [sp, #16]
 800641e:	2300      	movs	r3, #0
 8006420:	9205      	str	r2, [sp, #20]
 8006422:	9303      	str	r3, [sp, #12]
 8006424:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8006426:	9e02      	ldr	r6, [sp, #8]
 8006428:	9d01      	ldr	r5, [sp, #4]
 800642a:	4657      	mov	r7, sl
 800642c:	f855 0b04 	ldr.w	r0, [r5], #4
 8006430:	f8db 3000 	ldr.w	r3, [fp]
 8006434:	f856 1b04 	ldr.w	r1, [r6], #4
 8006438:	0e02      	lsrs	r2, r0, #24
 800643a:	fb09 f202 	mul.w	r2, r9, r2
 800643e:	fba8 e202 	umull	lr, r2, r8, r2
 8006442:	f3c2 12c7 	ubfx	r2, r2, #7, #8
 8006446:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 800644a:	4798      	blx	r3
 800644c:	3c01      	subs	r4, #1
 800644e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8006452:	f847 0b04 	str.w	r0, [r7], #4
 8006456:	d1e9      	bne.n	800642c <GUI__MixColorsBulk+0x38>
 8006458:	9a01      	ldr	r2, [sp, #4]
 800645a:	9905      	ldr	r1, [sp, #20]
 800645c:	9b03      	ldr	r3, [sp, #12]
 800645e:	4610      	mov	r0, r2
 8006460:	4408      	add	r0, r1
 8006462:	9a02      	ldr	r2, [sp, #8]
 8006464:	9001      	str	r0, [sp, #4]
 8006466:	448a      	add	sl, r1
 8006468:	9904      	ldr	r1, [sp, #16]
 800646a:	440a      	add	r2, r1
 800646c:	9202      	str	r2, [sp, #8]
 800646e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8006470:	3301      	adds	r3, #1
 8006472:	429a      	cmp	r2, r3
 8006474:	9303      	str	r3, [sp, #12]
 8006476:	d1d5      	bne.n	8006424 <GUI__MixColorsBulk+0x30>
 8006478:	b007      	add	sp, #28
 800647a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800647e:	bf00      	nop
 8006480:	20000030 	.word	0x20000030
 8006484:	80808081 	.word	0x80808081

08006488 <GUI__MixColors>:
 8006488:	b4f0      	push	{r4, r5, r6, r7}
 800648a:	0e0b      	lsrs	r3, r1, #24
 800648c:	ea4f 6410 	mov.w	r4, r0, lsr #24
 8006490:	4b12      	ldr	r3, [pc, #72]	; (80064dc <GUI__MixColors+0x54>)
 8006492:	fb02 f204 	mul.w	r2, r2, r4
 8006496:	bf08      	it	eq
 8006498:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 800649c:	fba3 3202 	umull	r3, r2, r3, r2
 80064a0:	09d2      	lsrs	r2, r2, #7
 80064a2:	f000 16ff 	and.w	r6, r0, #16711935	; 0xff00ff
 80064a6:	0a0d      	lsrs	r5, r1, #8
 80064a8:	f1c2 07ff 	rsb	r7, r2, #255	; 0xff
 80064ac:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80064b0:	f001 13ff 	and.w	r3, r1, #16711935	; 0xff00ff
 80064b4:	f3c0 2407 	ubfx	r4, r0, #8, #8
 80064b8:	fb02 f106 	mul.w	r1, r2, r6
 80064bc:	fb07 f005 	mul.w	r0, r7, r5
 80064c0:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
 80064c4:	fb07 1103 	mla	r1, r7, r3, r1
 80064c8:	fb02 0004 	mla	r0, r2, r4, r0
 80064cc:	0a09      	lsrs	r1, r1, #8
 80064ce:	f000 20ff 	and.w	r0, r0, #4278255360	; 0xff00ff00
 80064d2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80064d6:	4308      	orrs	r0, r1
 80064d8:	bcf0      	pop	{r4, r5, r6, r7}
 80064da:	4770      	bx	lr
 80064dc:	80808081 	.word	0x80808081

080064e0 <_OnExit>:
 80064e0:	b510      	push	{r4, lr}
 80064e2:	4c08      	ldr	r4, [pc, #32]	; (8006504 <_OnExit+0x24>)
 80064e4:	6820      	ldr	r0, [r4, #0]
 80064e6:	f7fe fb95 	bl	8004c14 <GUI_ALLOC_FreeFixedBlock>
 80064ea:	6860      	ldr	r0, [r4, #4]
 80064ec:	f7fe fb92 	bl	8004c14 <GUI_ALLOC_FreeFixedBlock>
 80064f0:	68a0      	ldr	r0, [r4, #8]
 80064f2:	f7fe fb8f 	bl	8004c14 <GUI_ALLOC_FreeFixedBlock>
 80064f6:	2300      	movs	r3, #0
 80064f8:	60a3      	str	r3, [r4, #8]
 80064fa:	6063      	str	r3, [r4, #4]
 80064fc:	6023      	str	r3, [r4, #0]
 80064fe:	60e3      	str	r3, [r4, #12]
 8006500:	6123      	str	r3, [r4, #16]
 8006502:	bd10      	pop	{r4, pc}
 8006504:	20000510 	.word	0x20000510

08006508 <GUI__DoAlphaBlending>:
 8006508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800650c:	4c96      	ldr	r4, [pc, #600]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 800650e:	b08f      	sub	sp, #60	; 0x3c
 8006510:	461d      	mov	r5, r3
 8006512:	6924      	ldr	r4, [r4, #16]
 8006514:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8006516:	9005      	str	r0, [sp, #20]
 8006518:	2600      	movs	r6, #0
 800651a:	9107      	str	r1, [sp, #28]
 800651c:	4693      	mov	fp, r2
 800651e:	601e      	str	r6, [r3, #0]
 8006520:	2c00      	cmp	r4, #0
 8006522:	f000 80f0 	beq.w	8006706 <GUI__DoAlphaBlending+0x1fe>
 8006526:	4b90      	ldr	r3, [pc, #576]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 8006528:	68df      	ldr	r7, [r3, #12]
 800652a:	461c      	mov	r4, r3
 800652c:	b92f      	cbnz	r7, 800653a <GUI__DoAlphaBlending+0x32>
 800652e:	4b8f      	ldr	r3, [pc, #572]	; (800676c <GUI__DoAlphaBlending+0x264>)
 8006530:	681f      	ldr	r7, [r3, #0]
 8006532:	60e7      	str	r7, [r4, #12]
 8006534:	2f00      	cmp	r7, #0
 8006536:	f000 80f0 	beq.w	800671a <GUI__DoAlphaBlending+0x212>
 800653a:	4b8b      	ldr	r3, [pc, #556]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 800653c:	4e8a      	ldr	r6, [pc, #552]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 800653e:	681b      	ldr	r3, [r3, #0]
 8006540:	9302      	str	r3, [sp, #8]
 8006542:	2b00      	cmp	r3, #0
 8006544:	f000 80ff 	beq.w	8006746 <GUI__DoAlphaBlending+0x23e>
 8006548:	4b87      	ldr	r3, [pc, #540]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 800654a:	4c87      	ldr	r4, [pc, #540]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 800654c:	685b      	ldr	r3, [r3, #4]
 800654e:	9303      	str	r3, [sp, #12]
 8006550:	2b00      	cmp	r3, #0
 8006552:	f000 80ea 	beq.w	800672a <GUI__DoAlphaBlending+0x222>
 8006556:	4a86      	ldr	r2, [pc, #536]	; (8006770 <GUI__DoAlphaBlending+0x268>)
 8006558:	4b86      	ldr	r3, [pc, #536]	; (8006774 <GUI__DoAlphaBlending+0x26c>)
 800655a:	6812      	ldr	r2, [r2, #0]
 800655c:	7c50      	ldrb	r0, [r2, #17]
 800655e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8006562:	9308      	str	r3, [sp, #32]
 8006564:	691b      	ldr	r3, [r3, #16]
 8006566:	930d      	str	r3, [sp, #52]	; 0x34
 8006568:	f001 fb5a 	bl	8007c20 <GUI_GetBitsPerPixelEx>
 800656c:	4b80      	ldr	r3, [pc, #512]	; (8006770 <GUI__DoAlphaBlending+0x268>)
 800656e:	9004      	str	r0, [sp, #16]
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	7c58      	ldrb	r0, [r3, #17]
 8006574:	f001 fb6e 	bl	8007c54 <GUI_GetpfIndex2ColorEx>
 8006578:	4b7f      	ldr	r3, [pc, #508]	; (8006778 <GUI__DoAlphaBlending+0x270>)
 800657a:	900b      	str	r0, [sp, #44]	; 0x2c
 800657c:	42af      	cmp	r7, r5
 800657e:	bfa8      	it	ge
 8006580:	462f      	movge	r7, r5
 8006582:	4298      	cmp	r0, r3
 8006584:	f000 80ce 	beq.w	8006724 <GUI__DoAlphaBlending+0x21c>
 8006588:	4b7c      	ldr	r3, [pc, #496]	; (800677c <GUI__DoAlphaBlending+0x274>)
 800658a:	1ac3      	subs	r3, r0, r3
 800658c:	bf18      	it	ne
 800658e:	2301      	movne	r3, #1
 8006590:	930a      	str	r3, [sp, #40]	; 0x28
 8006592:	9b05      	ldr	r3, [sp, #20]
 8006594:	443b      	add	r3, r7
 8006596:	930c      	str	r3, [sp, #48]	; 0x30
 8006598:	2600      	movs	r6, #0
 800659a:	3b01      	subs	r3, #1
 800659c:	9309      	str	r3, [sp, #36]	; 0x24
 800659e:	4634      	mov	r4, r6
 80065a0:	46ba      	mov	sl, r7
 80065a2:	465f      	mov	r7, fp
 80065a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80065a6:	f857 0b04 	ldr.w	r0, [r7], #4
 80065aa:	4798      	blx	r3
 80065ac:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80065b0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80065b4:	4681      	mov	r9, r0
 80065b6:	d047      	beq.n	8006648 <GUI__DoAlphaBlending+0x140>
 80065b8:	2c00      	cmp	r4, #0
 80065ba:	d12b      	bne.n	8006614 <GUI__DoAlphaBlending+0x10c>
 80065bc:	4b6c      	ldr	r3, [pc, #432]	; (8006770 <GUI__DoAlphaBlending+0x268>)
 80065be:	9a05      	ldr	r2, [sp, #20]
 80065c0:	681b      	ldr	r3, [r3, #0]
 80065c2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80065c6:	1995      	adds	r5, r2, r6
 80065c8:	42ab      	cmp	r3, r5
 80065ca:	dd59      	ble.n	8006680 <GUI__DoAlphaBlending+0x178>
 80065cc:	1b5a      	subs	r2, r3, r5
 80065ce:	9206      	str	r2, [sp, #24]
 80065d0:	4614      	mov	r4, r2
 80065d2:	461d      	mov	r5, r3
 80065d4:	9b02      	ldr	r3, [sp, #8]
 80065d6:	9907      	ldr	r1, [sp, #28]
 80065d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80065da:	4434      	add	r4, r6
 80065dc:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80065e0:	9b08      	ldr	r3, [sp, #32]
 80065e2:	9301      	str	r3, [sp, #4]
 80065e4:	9400      	str	r4, [sp, #0]
 80065e6:	460b      	mov	r3, r1
 80065e8:	4628      	mov	r0, r5
 80065ea:	f001 fcdf 	bl	8007fac <GUI_ReadRectEx>
 80065ee:	9b04      	ldr	r3, [sp, #16]
 80065f0:	2b17      	cmp	r3, #23
 80065f2:	dd7e      	ble.n	80066f2 <GUI__DoAlphaBlending+0x1ea>
 80065f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d044      	beq.n	8006684 <GUI__DoAlphaBlending+0x17c>
 80065fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80065fc:	9606      	str	r6, [sp, #24]
 80065fe:	1b5d      	subs	r5, r3, r5
 8006600:	462e      	mov	r6, r5
 8006602:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006604:	6820      	ldr	r0, [r4, #0]
 8006606:	47a8      	blx	r5
 8006608:	3e01      	subs	r6, #1
 800660a:	f844 0b04 	str.w	r0, [r4], #4
 800660e:	d1f9      	bne.n	8006604 <GUI__DoAlphaBlending+0xfc>
 8006610:	9e06      	ldr	r6, [sp, #24]
 8006612:	2401      	movs	r4, #1
 8006614:	4b54      	ldr	r3, [pc, #336]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 8006616:	69dd      	ldr	r5, [r3, #28]
 8006618:	2d00      	cmp	r5, #0
 800661a:	d138      	bne.n	800668e <GUI__DoAlphaBlending+0x186>
 800661c:	fa5f f288 	uxtb.w	r2, r8
 8006620:	f1b8 0f00 	cmp.w	r8, #0
 8006624:	d11a      	bne.n	800665c <GUI__DoAlphaBlending+0x154>
 8006626:	9b02      	ldr	r3, [sp, #8]
 8006628:	9a03      	ldr	r2, [sp, #12]
 800662a:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
 800662e:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8006632:	f1ba 0a01 	subs.w	sl, sl, #1
 8006636:	f106 0601 	add.w	r6, r6, #1
 800663a:	46bb      	mov	fp, r7
 800663c:	d1b1      	bne.n	80065a2 <GUI__DoAlphaBlending+0x9a>
 800663e:	9c03      	ldr	r4, [sp, #12]
 8006640:	4620      	mov	r0, r4
 8006642:	b00f      	add	sp, #60	; 0x3c
 8006644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006648:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800664a:	9a03      	ldr	r2, [sp, #12]
 800664c:	681b      	ldr	r3, [r3, #0]
 800664e:	f842 0026 	str.w	r0, [r2, r6, lsl #2]
 8006652:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8006654:	f043 0301 	orr.w	r3, r3, #1
 8006658:	6013      	str	r3, [r2, #0]
 800665a:	e7ea      	b.n	8006632 <GUI__DoAlphaBlending+0x12a>
 800665c:	9902      	ldr	r1, [sp, #8]
 800665e:	4b48      	ldr	r3, [pc, #288]	; (8006780 <GUI__DoAlphaBlending+0x278>)
 8006660:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8006664:	681b      	ldr	r3, [r3, #0]
 8006666:	f049 407f 	orr.w	r0, r9, #4278190080	; 0xff000000
 800666a:	4798      	blx	r3
 800666c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800666e:	9a03      	ldr	r2, [sp, #12]
 8006670:	681b      	ldr	r3, [r3, #0]
 8006672:	f842 0026 	str.w	r0, [r2, r6, lsl #2]
 8006676:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8006678:	f043 0301 	orr.w	r3, r3, #1
 800667c:	6013      	str	r3, [r2, #0]
 800667e:	e7d8      	b.n	8006632 <GUI__DoAlphaBlending+0x12a>
 8006680:	9406      	str	r4, [sp, #24]
 8006682:	e7a7      	b.n	80065d4 <GUI__DoAlphaBlending+0xcc>
 8006684:	4b38      	ldr	r3, [pc, #224]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 8006686:	69dd      	ldr	r5, [r3, #28]
 8006688:	2401      	movs	r4, #1
 800668a:	2d00      	cmp	r5, #0
 800668c:	d0c6      	beq.n	800661c <GUI__DoAlphaBlending+0x114>
 800668e:	9b02      	ldr	r3, [sp, #8]
 8006690:	00b6      	lsls	r6, r6, #2
 8006692:	4433      	add	r3, r6
 8006694:	461c      	mov	r4, r3
 8006696:	9b03      	ldr	r3, [sp, #12]
 8006698:	441e      	add	r6, r3
 800669a:	4632      	mov	r2, r6
 800669c:	4621      	mov	r1, r4
 800669e:	4653      	mov	r3, sl
 80066a0:	4658      	mov	r0, fp
 80066a2:	47a8      	blx	r5
 80066a4:	4657      	mov	r7, sl
 80066a6:	f1ab 0204 	sub.w	r2, fp, #4
 80066aa:	e007      	b.n	80066bc <GUI__DoAlphaBlending+0x1b4>
 80066ac:	6823      	ldr	r3, [r4, #0]
 80066ae:	6033      	str	r3, [r6, #0]
 80066b0:	3f01      	subs	r7, #1
 80066b2:	f104 0404 	add.w	r4, r4, #4
 80066b6:	f106 0604 	add.w	r6, r6, #4
 80066ba:	d00f      	beq.n	80066dc <GUI__DoAlphaBlending+0x1d4>
 80066bc:	f852 3f04 	ldr.w	r3, [r2, #4]!
 80066c0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80066c4:	d0f2      	beq.n	80066ac <GUI__DoAlphaBlending+0x1a4>
 80066c6:	6821      	ldr	r1, [r4, #0]
 80066c8:	f011 4f7f 	tst.w	r1, #4278190080	; 0xff000000
 80066cc:	bf08      	it	eq
 80066ce:	6033      	streq	r3, [r6, #0]
 80066d0:	3f01      	subs	r7, #1
 80066d2:	f104 0404 	add.w	r4, r4, #4
 80066d6:	f106 0604 	add.w	r6, r6, #4
 80066da:	d1ef      	bne.n	80066bc <GUI__DoAlphaBlending+0x1b4>
 80066dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80066de:	9c03      	ldr	r4, [sp, #12]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80066e4:	f043 0301 	orr.w	r3, r3, #1
 80066e8:	4620      	mov	r0, r4
 80066ea:	6013      	str	r3, [r2, #0]
 80066ec:	b00f      	add	sp, #60	; 0x3c
 80066ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066f2:	461a      	mov	r2, r3
 80066f4:	9b06      	ldr	r3, [sp, #24]
 80066f6:	4620      	mov	r0, r4
 80066f8:	ebc3 010a 	rsb	r1, r3, sl
 80066fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80066fe:	f000 f8a5 	bl	800684c <GUI__ExpandPixelIndicesEx>
 8006702:	2401      	movs	r4, #1
 8006704:	e786      	b.n	8006614 <GUI__DoAlphaBlending+0x10c>
 8006706:	4818      	ldr	r0, [pc, #96]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 8006708:	4b1e      	ldr	r3, [pc, #120]	; (8006784 <GUI__DoAlphaBlending+0x27c>)
 800670a:	4a17      	ldr	r2, [pc, #92]	; (8006768 <GUI__DoAlphaBlending+0x260>)
 800670c:	f840 3f14 	str.w	r3, [r0, #20]!
 8006710:	2301      	movs	r3, #1
 8006712:	6113      	str	r3, [r2, #16]
 8006714:	f7ff f92c 	bl	8005970 <GUI__RegisterExit>
 8006718:	e705      	b.n	8006526 <GUI__DoAlphaBlending+0x1e>
 800671a:	f001 fadf 	bl	8007cdc <LCD_GetVXSizeMax>
 800671e:	4607      	mov	r7, r0
 8006720:	60e0      	str	r0, [r4, #12]
 8006722:	e70a      	b.n	800653a <GUI__DoAlphaBlending+0x32>
 8006724:	2300      	movs	r3, #0
 8006726:	930a      	str	r3, [sp, #40]	; 0x28
 8006728:	e733      	b.n	8006592 <GUI__DoAlphaBlending+0x8a>
 800672a:	68e0      	ldr	r0, [r4, #12]
 800672c:	0080      	lsls	r0, r0, #2
 800672e:	f7fe fa7b 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8006732:	9003      	str	r0, [sp, #12]
 8006734:	6060      	str	r0, [r4, #4]
 8006736:	2800      	cmp	r0, #0
 8006738:	f47f af0d 	bne.w	8006556 <GUI__DoAlphaBlending+0x4e>
 800673c:	2400      	movs	r4, #0
 800673e:	4620      	mov	r0, r4
 8006740:	b00f      	add	sp, #60	; 0x3c
 8006742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006746:	00b8      	lsls	r0, r7, #2
 8006748:	f7fe fa6e 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 800674c:	6030      	str	r0, [r6, #0]
 800674e:	b108      	cbz	r0, 8006754 <GUI__DoAlphaBlending+0x24c>
 8006750:	9002      	str	r0, [sp, #8]
 8006752:	e6f9      	b.n	8006548 <GUI__DoAlphaBlending+0x40>
 8006754:	6874      	ldr	r4, [r6, #4]
 8006756:	2c00      	cmp	r4, #0
 8006758:	d1f0      	bne.n	800673c <GUI__DoAlphaBlending+0x234>
 800675a:	68f0      	ldr	r0, [r6, #12]
 800675c:	0080      	lsls	r0, r0, #2
 800675e:	f7fe fa63 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8006762:	6070      	str	r0, [r6, #4]
 8006764:	e76c      	b.n	8006640 <GUI__DoAlphaBlending+0x138>
 8006766:	bf00      	nop
 8006768:	20000510 	.word	0x20000510
 800676c:	2001c1a4 	.word	0x2001c1a4
 8006770:	20000018 	.word	0x20000018
 8006774:	2001c19c 	.word	0x2001c19c
 8006778:	080042b9 	.word	0x080042b9
 800677c:	080042bd 	.word	0x080042bd
 8006780:	20000030 	.word	0x20000030
 8006784:	080064e1 	.word	0x080064e1

08006788 <GUI__AllocAlphaBuffer>:
 8006788:	b5f0      	push	{r4, r5, r6, r7, lr}
 800678a:	b083      	sub	sp, #12
 800678c:	b9c0      	cbnz	r0, 80067c0 <GUI__AllocAlphaBuffer+0x38>
 800678e:	4c22      	ldr	r4, [pc, #136]	; (8006818 <GUI__AllocAlphaBuffer+0x90>)
 8006790:	6923      	ldr	r3, [r4, #16]
 8006792:	4605      	mov	r5, r0
 8006794:	b1cb      	cbz	r3, 80067ca <GUI__AllocAlphaBuffer+0x42>
 8006796:	68e0      	ldr	r0, [r4, #12]
 8006798:	4e1f      	ldr	r6, [pc, #124]	; (8006818 <GUI__AllocAlphaBuffer+0x90>)
 800679a:	b918      	cbnz	r0, 80067a4 <GUI__AllocAlphaBuffer+0x1c>
 800679c:	4b1f      	ldr	r3, [pc, #124]	; (800681c <GUI__AllocAlphaBuffer+0x94>)
 800679e:	6818      	ldr	r0, [r3, #0]
 80067a0:	60f0      	str	r0, [r6, #12]
 80067a2:	b1d8      	cbz	r0, 80067dc <GUI__AllocAlphaBuffer+0x54>
 80067a4:	6823      	ldr	r3, [r4, #0]
 80067a6:	4f1c      	ldr	r7, [pc, #112]	; (8006818 <GUI__AllocAlphaBuffer+0x90>)
 80067a8:	2600      	movs	r6, #0
 80067aa:	b323      	cbz	r3, 80067f6 <GUI__AllocAlphaBuffer+0x6e>
 80067ac:	6863      	ldr	r3, [r4, #4]
 80067ae:	4f1a      	ldr	r7, [pc, #104]	; (8006818 <GUI__AllocAlphaBuffer+0x90>)
 80067b0:	b1c3      	cbz	r3, 80067e4 <GUI__AllocAlphaBuffer+0x5c>
 80067b2:	b115      	cbz	r5, 80067ba <GUI__AllocAlphaBuffer+0x32>
 80067b4:	68a3      	ldr	r3, [r4, #8]
 80067b6:	4c18      	ldr	r4, [pc, #96]	; (8006818 <GUI__AllocAlphaBuffer+0x90>)
 80067b8:	b32b      	cbz	r3, 8006806 <GUI__AllocAlphaBuffer+0x7e>
 80067ba:	4630      	mov	r0, r6
 80067bc:	b003      	add	sp, #12
 80067be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80067c0:	4c15      	ldr	r4, [pc, #84]	; (8006818 <GUI__AllocAlphaBuffer+0x90>)
 80067c2:	6923      	ldr	r3, [r4, #16]
 80067c4:	ad01      	add	r5, sp, #4
 80067c6:	2b00      	cmp	r3, #0
 80067c8:	d1e5      	bne.n	8006796 <GUI__AllocAlphaBuffer+0xe>
 80067ca:	4620      	mov	r0, r4
 80067cc:	4b14      	ldr	r3, [pc, #80]	; (8006820 <GUI__AllocAlphaBuffer+0x98>)
 80067ce:	f840 3f14 	str.w	r3, [r0, #20]!
 80067d2:	2301      	movs	r3, #1
 80067d4:	6123      	str	r3, [r4, #16]
 80067d6:	f7ff f8cb 	bl	8005970 <GUI__RegisterExit>
 80067da:	e7dc      	b.n	8006796 <GUI__AllocAlphaBuffer+0xe>
 80067dc:	f001 fa7e 	bl	8007cdc <LCD_GetVXSizeMax>
 80067e0:	60f0      	str	r0, [r6, #12]
 80067e2:	e7df      	b.n	80067a4 <GUI__AllocAlphaBuffer+0x1c>
 80067e4:	68f8      	ldr	r0, [r7, #12]
 80067e6:	0080      	lsls	r0, r0, #2
 80067e8:	f7fe fa1e 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 80067ec:	2800      	cmp	r0, #0
 80067ee:	bf08      	it	eq
 80067f0:	2601      	moveq	r6, #1
 80067f2:	6078      	str	r0, [r7, #4]
 80067f4:	e7dd      	b.n	80067b2 <GUI__AllocAlphaBuffer+0x2a>
 80067f6:	0080      	lsls	r0, r0, #2
 80067f8:	f7fe fa16 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 80067fc:	fab0 f680 	clz	r6, r0
 8006800:	6038      	str	r0, [r7, #0]
 8006802:	0976      	lsrs	r6, r6, #5
 8006804:	e7d2      	b.n	80067ac <GUI__AllocAlphaBuffer+0x24>
 8006806:	68e0      	ldr	r0, [r4, #12]
 8006808:	0080      	lsls	r0, r0, #2
 800680a:	f7fe fa0d 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 800680e:	2800      	cmp	r0, #0
 8006810:	bf08      	it	eq
 8006812:	2601      	moveq	r6, #1
 8006814:	60a0      	str	r0, [r4, #8]
 8006816:	e7d0      	b.n	80067ba <GUI__AllocAlphaBuffer+0x32>
 8006818:	20000510 	.word	0x20000510
 800681c:	2001c1a4 	.word	0x2001c1a4
 8006820:	080064e1 	.word	0x080064e1

08006824 <GUI_SetFuncDrawAlpha>:
 8006824:	b410      	push	{r4}
 8006826:	b148      	cbz	r0, 800683c <GUI_SetFuncDrawAlpha+0x18>
 8006828:	b149      	cbz	r1, 800683e <GUI_SetFuncDrawAlpha+0x1a>
 800682a:	4603      	mov	r3, r0
 800682c:	2000      	movs	r0, #0
 800682e:	4c05      	ldr	r4, [pc, #20]	; (8006844 <GUI_SetFuncDrawAlpha+0x20>)
 8006830:	4a05      	ldr	r2, [pc, #20]	; (8006848 <GUI_SetFuncDrawAlpha+0x24>)
 8006832:	6021      	str	r1, [r4, #0]
 8006834:	6013      	str	r3, [r2, #0]
 8006836:	f85d 4b04 	ldr.w	r4, [sp], #4
 800683a:	4770      	bx	lr
 800683c:	4601      	mov	r1, r0
 800683e:	460b      	mov	r3, r1
 8006840:	2001      	movs	r0, #1
 8006842:	e7f4      	b.n	800682e <GUI_SetFuncDrawAlpha+0xa>
 8006844:	2001c1ac 	.word	0x2001c1ac
 8006848:	2001c1b0 	.word	0x2001c1b0

0800684c <GUI__ExpandPixelIndicesEx>:
 800684c:	2900      	cmp	r1, #0
 800684e:	dd2a      	ble.n	80068a6 <GUI__ExpandPixelIndicesEx+0x5a>
 8006850:	2a08      	cmp	r2, #8
 8006852:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006856:	4604      	mov	r4, r0
 8006858:	685e      	ldr	r6, [r3, #4]
 800685a:	dd03      	ble.n	8006864 <GUI__ExpandPixelIndicesEx+0x18>
 800685c:	2a10      	cmp	r2, #16
 800685e:	dd0c      	ble.n	800687a <GUI__ExpandPixelIndicesEx+0x2e>
 8006860:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006864:	1e53      	subs	r3, r2, #1
 8006866:	2b07      	cmp	r3, #7
 8006868:	d805      	bhi.n	8006876 <GUI__ExpandPixelIndicesEx+0x2a>
 800686a:	e8df f003 	tbb	[pc, r3]
 800686e:	532a      	.short	0x532a
 8006870:	04047c04 	.word	0x04047c04
 8006874:	1d04      	.short	0x1d04
 8006876:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800687a:	695d      	ldr	r5, [r3, #20]
 800687c:	b135      	cbz	r5, 800688c <GUI__ExpandPixelIndicesEx+0x40>
 800687e:	460a      	mov	r2, r1
 8006880:	46ac      	mov	ip, r5
 8006882:	4621      	mov	r1, r4
 8006884:	2302      	movs	r3, #2
 8006886:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800688a:	4760      	bx	ip
 800688c:	0049      	lsls	r1, r1, #1
 800688e:	440c      	add	r4, r1
 8006890:	1865      	adds	r5, r4, r1
 8006892:	1a67      	subs	r7, r4, r1
 8006894:	f834 0d02 	ldrh.w	r0, [r4, #-2]!
 8006898:	47b0      	blx	r6
 800689a:	42bc      	cmp	r4, r7
 800689c:	f845 0d04 	str.w	r0, [r5, #-4]!
 80068a0:	d1f8      	bne.n	8006894 <GUI__ExpandPixelIndicesEx+0x48>
 80068a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80068a6:	4770      	bx	lr
 80068a8:	1865      	adds	r5, r4, r1
 80068aa:	1a6f      	subs	r7, r5, r1
 80068ac:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80068b0:	f815 0d01 	ldrb.w	r0, [r5, #-1]!
 80068b4:	47b0      	blx	r6
 80068b6:	42bd      	cmp	r5, r7
 80068b8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80068bc:	d1f8      	bne.n	80068b0 <GUI__ExpandPixelIndicesEx+0x64>
 80068be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80068c2:	1e4f      	subs	r7, r1, #1
 80068c4:	10fb      	asrs	r3, r7, #3
 80068c6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80068ca:	f007 0a07 	and.w	sl, r7, #7
 80068ce:	f04f 0880 	mov.w	r8, #128	; 0x80
 80068d2:	3901      	subs	r1, #1
 80068d4:	1e5a      	subs	r2, r3, #1
 80068d6:	fa48 f80a 	asr.w	r8, r8, sl
 80068da:	f814 9003 	ldrb.w	r9, [r4, r3]
 80068de:	eb04 0581 	add.w	r5, r4, r1, lsl #2
 80068e2:	fa5f f888 	uxtb.w	r8, r8
 80068e6:	4414      	add	r4, r2
 80068e8:	f1ca 0307 	rsb	r3, sl, #7
 80068ec:	ea08 0009 	and.w	r0, r8, r9
 80068f0:	4118      	asrs	r0, r3
 80068f2:	47b0      	blx	r6
 80068f4:	f845 0904 	str.w	r0, [r5], #-4
 80068f8:	f1ba 0f00 	cmp.w	sl, #0
 80068fc:	d15f      	bne.n	80069be <GUI__ExpandPixelIndicesEx+0x172>
 80068fe:	f894 9000 	ldrb.w	r9, [r4]
 8006902:	f04f 0801 	mov.w	r8, #1
 8006906:	3c01      	subs	r4, #1
 8006908:	f04f 0a07 	mov.w	sl, #7
 800690c:	2f00      	cmp	r7, #0
 800690e:	d0b2      	beq.n	8006876 <GUI__ExpandPixelIndicesEx+0x2a>
 8006910:	3f01      	subs	r7, #1
 8006912:	e7e9      	b.n	80068e8 <GUI__ExpandPixelIndicesEx+0x9c>
 8006914:	1e4f      	subs	r7, r1, #1
 8006916:	f007 0903 	and.w	r9, r7, #3
 800691a:	10bb      	asrs	r3, r7, #2
 800691c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8006920:	ea4f 0049 	mov.w	r0, r9, lsl #1
 8006924:	25c0      	movs	r5, #192	; 0xc0
 8006926:	3901      	subs	r1, #1
 8006928:	4105      	asrs	r5, r0
 800692a:	1e5a      	subs	r2, r3, #1
 800692c:	f814 8003 	ldrb.w	r8, [r4, r3]
 8006930:	eb04 0a81 	add.w	sl, r4, r1, lsl #2
 8006934:	b2ed      	uxtb	r5, r5
 8006936:	4414      	add	r4, r2
 8006938:	ea05 0308 	and.w	r3, r5, r8
 800693c:	f1c0 0006 	rsb	r0, r0, #6
 8006940:	fa43 f000 	asr.w	r0, r3, r0
 8006944:	47b0      	blx	r6
 8006946:	f84a 0904 	str.w	r0, [sl], #-4
 800694a:	f1b9 0f00 	cmp.w	r9, #0
 800694e:	d144      	bne.n	80069da <GUI__ExpandPixelIndicesEx+0x18e>
 8006950:	2503      	movs	r5, #3
 8006952:	f894 8000 	ldrb.w	r8, [r4]
 8006956:	46a9      	mov	r9, r5
 8006958:	3c01      	subs	r4, #1
 800695a:	2f00      	cmp	r7, #0
 800695c:	d08b      	beq.n	8006876 <GUI__ExpandPixelIndicesEx+0x2a>
 800695e:	3f01      	subs	r7, #1
 8006960:	ea4f 0049 	mov.w	r0, r9, lsl #1
 8006964:	e7e8      	b.n	8006938 <GUI__ExpandPixelIndicesEx+0xec>
 8006966:	1e4f      	subs	r7, r1, #1
 8006968:	f007 0801 	and.w	r8, r7, #1
 800696c:	107a      	asrs	r2, r7, #1
 800696e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8006972:	ea4f 0088 	mov.w	r0, r8, lsl #2
 8006976:	23f0      	movs	r3, #240	; 0xf0
 8006978:	3901      	subs	r1, #1
 800697a:	4103      	asrs	r3, r0
 800697c:	f102 3eff 	add.w	lr, r2, #4294967295
 8006980:	5ca5      	ldrb	r5, [r4, r2]
 8006982:	eb04 0981 	add.w	r9, r4, r1, lsl #2
 8006986:	fa5f fa83 	uxtb.w	sl, r3
 800698a:	4474      	add	r4, lr
 800698c:	ea0a 0305 	and.w	r3, sl, r5
 8006990:	f1c0 0004 	rsb	r0, r0, #4
 8006994:	fa43 f000 	asr.w	r0, r3, r0
 8006998:	47b0      	blx	r6
 800699a:	f849 0904 	str.w	r0, [r9], #-4
 800699e:	f1b8 0f00 	cmp.w	r8, #0
 80069a2:	d113      	bne.n	80069cc <GUI__ExpandPixelIndicesEx+0x180>
 80069a4:	7825      	ldrb	r5, [r4, #0]
 80069a6:	f04f 0a0f 	mov.w	sl, #15
 80069aa:	3c01      	subs	r4, #1
 80069ac:	f04f 0801 	mov.w	r8, #1
 80069b0:	2f00      	cmp	r7, #0
 80069b2:	f43f af60 	beq.w	8006876 <GUI__ExpandPixelIndicesEx+0x2a>
 80069b6:	3f01      	subs	r7, #1
 80069b8:	ea4f 0088 	mov.w	r0, r8, lsl #2
 80069bc:	e7e6      	b.n	800698c <GUI__ExpandPixelIndicesEx+0x140>
 80069be:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80069c2:	fa5f f888 	uxtb.w	r8, r8
 80069c6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80069ca:	e79f      	b.n	800690c <GUI__ExpandPixelIndicesEx+0xc0>
 80069cc:	ea4f 130a 	mov.w	r3, sl, lsl #4
 80069d0:	fa5f fa83 	uxtb.w	sl, r3
 80069d4:	f04f 0800 	mov.w	r8, #0
 80069d8:	e7ea      	b.n	80069b0 <GUI__ExpandPixelIndicesEx+0x164>
 80069da:	00ad      	lsls	r5, r5, #2
 80069dc:	b2ed      	uxtb	r5, r5
 80069de:	f109 39ff 	add.w	r9, r9, #4294967295
 80069e2:	e7ba      	b.n	800695a <GUI__ExpandPixelIndicesEx+0x10e>

080069e4 <GUI__DivideRound32>:
 80069e4:	b141      	cbz	r1, 80069f8 <GUI__DivideRound32+0x14>
 80069e6:	2800      	cmp	r0, #0
 80069e8:	bfb4      	ite	lt
 80069ea:	eba0 0061 	sublt.w	r0, r0, r1, asr #1
 80069ee:	eb00 0061 	addge.w	r0, r0, r1, asr #1
 80069f2:	fb90 f0f1 	sdiv	r0, r0, r1
 80069f6:	4770      	bx	lr
 80069f8:	4608      	mov	r0, r1
 80069fa:	4770      	bx	lr

080069fc <GUI__HandleEOLine>:
 80069fc:	b510      	push	{r4, lr}
 80069fe:	4604      	mov	r4, r0
 8006a00:	b082      	sub	sp, #8
 8006a02:	a802      	add	r0, sp, #8
 8006a04:	6823      	ldr	r3, [r4, #0]
 8006a06:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006a0a:	f7ff fc9f 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006a0e:	b148      	cbz	r0, 8006a24 <GUI__HandleEOLine+0x28>
 8006a10:	280a      	cmp	r0, #10
 8006a12:	d002      	beq.n	8006a1a <GUI__HandleEOLine+0x1e>
 8006a14:	2000      	movs	r0, #0
 8006a16:	b002      	add	sp, #8
 8006a18:	bd10      	pop	{r4, pc}
 8006a1a:	9b01      	ldr	r3, [sp, #4]
 8006a1c:	6023      	str	r3, [r4, #0]
 8006a1e:	2000      	movs	r0, #0
 8006a20:	b002      	add	sp, #8
 8006a22:	bd10      	pop	{r4, pc}
 8006a24:	2001      	movs	r0, #1
 8006a26:	b002      	add	sp, #8
 8006a28:	bd10      	pop	{r4, pc}
 8006a2a:	bf00      	nop

08006a2c <GUI__IntersectRect>:
 8006a2c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8006a30:	f9b0 2000 	ldrsh.w	r2, [r0]
 8006a34:	429a      	cmp	r2, r3
 8006a36:	bfb8      	it	lt
 8006a38:	8003      	strhlt	r3, [r0, #0]
 8006a3a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8006a3e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8006a42:	429a      	cmp	r2, r3
 8006a44:	bfb8      	it	lt
 8006a46:	8043      	strhlt	r3, [r0, #2]
 8006a48:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8006a4c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8006a50:	429a      	cmp	r2, r3
 8006a52:	bfc8      	it	gt
 8006a54:	8083      	strhgt	r3, [r0, #4]
 8006a56:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8006a5a:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8006a5e:	429a      	cmp	r2, r3
 8006a60:	bfc8      	it	gt
 8006a62:	80c3      	strhgt	r3, [r0, #6]
 8006a64:	4770      	bx	lr
 8006a66:	bf00      	nop

08006a68 <GUI__IntersectRects>:
 8006a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006a6a:	f9b2 c000 	ldrsh.w	ip, [r2]
 8006a6e:	f9b1 5000 	ldrsh.w	r5, [r1]
 8006a72:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8006a76:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8006a7a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8006a7e:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8006a82:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
 8006a86:	f9b1 6006 	ldrsh.w	r6, [r1, #6]
 8006a8a:	45ac      	cmp	ip, r5
 8006a8c:	4661      	mov	r1, ip
 8006a8e:	bfb8      	it	lt
 8006a90:	4629      	movlt	r1, r5
 8006a92:	42a3      	cmp	r3, r4
 8006a94:	bfb8      	it	lt
 8006a96:	4623      	movlt	r3, r4
 8006a98:	4572      	cmp	r2, lr
 8006a9a:	bfa8      	it	ge
 8006a9c:	4672      	movge	r2, lr
 8006a9e:	42b7      	cmp	r7, r6
 8006aa0:	463c      	mov	r4, r7
 8006aa2:	bfa8      	it	ge
 8006aa4:	4634      	movge	r4, r6
 8006aa6:	4291      	cmp	r1, r2
 8006aa8:	8001      	strh	r1, [r0, #0]
 8006aaa:	8043      	strh	r3, [r0, #2]
 8006aac:	8082      	strh	r2, [r0, #4]
 8006aae:	80c4      	strh	r4, [r0, #6]
 8006ab0:	dc04      	bgt.n	8006abc <GUI__IntersectRects+0x54>
 8006ab2:	42a3      	cmp	r3, r4
 8006ab4:	bfcc      	ite	gt
 8006ab6:	2000      	movgt	r0, #0
 8006ab8:	2001      	movle	r0, #1
 8006aba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006abc:	2000      	movs	r0, #0
 8006abe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006ac0 <GUI__memset>:
 8006ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ac2:	4606      	mov	r6, r0
 8006ac4:	b14a      	cbz	r2, 8006ada <GUI__memset+0x1a>
 8006ac6:	0784      	lsls	r4, r0, #30
 8006ac8:	b2c9      	uxtb	r1, r1
 8006aca:	d008      	beq.n	8006ade <GUI__memset+0x1e>
 8006acc:	e001      	b.n	8006ad2 <GUI__memset+0x12>
 8006ace:	0783      	lsls	r3, r0, #30
 8006ad0:	d005      	beq.n	8006ade <GUI__memset+0x1e>
 8006ad2:	3a01      	subs	r2, #1
 8006ad4:	f800 1b01 	strb.w	r1, [r0], #1
 8006ad8:	d1f9      	bne.n	8006ace <GUI__memset+0xe>
 8006ada:	4630      	mov	r0, r6
 8006adc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006ade:	0897      	lsrs	r7, r2, #2
 8006ae0:	463b      	mov	r3, r7
 8006ae2:	b357      	cbz	r7, 8006b3a <GUI__memset+0x7a>
 8006ae4:	eb01 2401 	add.w	r4, r1, r1, lsl #8
 8006ae8:	2f03      	cmp	r7, #3
 8006aea:	f002 0203 	and.w	r2, r2, #3
 8006aee:	eb04 4404 	add.w	r4, r4, r4, lsl #16
 8006af2:	d916      	bls.n	8006b22 <GUI__memset+0x62>
 8006af4:	f100 0310 	add.w	r3, r0, #16
 8006af8:	463d      	mov	r5, r7
 8006afa:	3d04      	subs	r5, #4
 8006afc:	2d03      	cmp	r5, #3
 8006afe:	f843 4c10 	str.w	r4, [r3, #-16]
 8006b02:	f843 4c0c 	str.w	r4, [r3, #-12]
 8006b06:	f843 4c08 	str.w	r4, [r3, #-8]
 8006b0a:	f843 4c04 	str.w	r4, [r3, #-4]
 8006b0e:	f103 0310 	add.w	r3, r3, #16
 8006b12:	dcf2      	bgt.n	8006afa <GUI__memset+0x3a>
 8006b14:	3f04      	subs	r7, #4
 8006b16:	08bb      	lsrs	r3, r7, #2
 8006b18:	1c5d      	adds	r5, r3, #1
 8006b1a:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 8006b1e:	eba7 0383 	sub.w	r3, r7, r3, lsl #2
 8006b22:	b143      	cbz	r3, 8006b36 <GUI__memset+0x76>
 8006b24:	2b01      	cmp	r3, #1
 8006b26:	6004      	str	r4, [r0, #0]
 8006b28:	d003      	beq.n	8006b32 <GUI__memset+0x72>
 8006b2a:	2b02      	cmp	r3, #2
 8006b2c:	6044      	str	r4, [r0, #4]
 8006b2e:	bf18      	it	ne
 8006b30:	6084      	strne	r4, [r0, #8]
 8006b32:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8006b36:	2a00      	cmp	r2, #0
 8006b38:	d0cf      	beq.n	8006ada <GUI__memset+0x1a>
 8006b3a:	f010 fc72 	bl	8017422 <memset>
 8006b3e:	4630      	mov	r0, r6
 8006b40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006b42:	bf00      	nop

08006b44 <GUI__memset16>:
 8006b44:	b470      	push	{r4, r5, r6}
 8006b46:	0784      	lsls	r4, r0, #30
 8006b48:	d502      	bpl.n	8006b50 <GUI__memset16+0xc>
 8006b4a:	8001      	strh	r1, [r0, #0]
 8006b4c:	3a01      	subs	r2, #1
 8006b4e:	3002      	adds	r0, #2
 8006b50:	0856      	lsrs	r6, r2, #1
 8006b52:	d00d      	beq.n	8006b70 <GUI__memset16+0x2c>
 8006b54:	2e03      	cmp	r6, #3
 8006b56:	4633      	mov	r3, r6
 8006b58:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 8006b5c:	d80d      	bhi.n	8006b7a <GUI__memset16+0x36>
 8006b5e:	2b01      	cmp	r3, #1
 8006b60:	6004      	str	r4, [r0, #0]
 8006b62:	d003      	beq.n	8006b6c <GUI__memset16+0x28>
 8006b64:	2b02      	cmp	r3, #2
 8006b66:	6044      	str	r4, [r0, #4]
 8006b68:	bf18      	it	ne
 8006b6a:	6084      	strne	r4, [r0, #8]
 8006b6c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8006b70:	07d3      	lsls	r3, r2, #31
 8006b72:	bf48      	it	mi
 8006b74:	8001      	strhmi	r1, [r0, #0]
 8006b76:	bc70      	pop	{r4, r5, r6}
 8006b78:	4770      	bx	lr
 8006b7a:	f100 0310 	add.w	r3, r0, #16
 8006b7e:	4635      	mov	r5, r6
 8006b80:	3d04      	subs	r5, #4
 8006b82:	2d03      	cmp	r5, #3
 8006b84:	f843 4c10 	str.w	r4, [r3, #-16]
 8006b88:	f843 4c0c 	str.w	r4, [r3, #-12]
 8006b8c:	f843 4c08 	str.w	r4, [r3, #-8]
 8006b90:	f843 4c04 	str.w	r4, [r3, #-4]
 8006b94:	f103 0310 	add.w	r3, r3, #16
 8006b98:	dcf2      	bgt.n	8006b80 <GUI__memset16+0x3c>
 8006b9a:	3e04      	subs	r6, #4
 8006b9c:	08b3      	lsrs	r3, r6, #2
 8006b9e:	1c5d      	adds	r5, r3, #1
 8006ba0:	ebb6 0383 	subs.w	r3, r6, r3, lsl #2
 8006ba4:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 8006ba8:	d1d9      	bne.n	8006b5e <GUI__memset16+0x1a>
 8006baa:	e7e1      	b.n	8006b70 <GUI__memset16+0x2c>

08006bac <GUI__ReduceRect>:
 8006bac:	b470      	push	{r4, r5, r6}
 8006bae:	88cb      	ldrh	r3, [r1, #6]
 8006bb0:	880e      	ldrh	r6, [r1, #0]
 8006bb2:	888d      	ldrh	r5, [r1, #4]
 8006bb4:	884c      	ldrh	r4, [r1, #2]
 8006bb6:	b292      	uxth	r2, r2
 8006bb8:	4416      	add	r6, r2
 8006bba:	1aad      	subs	r5, r5, r2
 8006bbc:	4414      	add	r4, r2
 8006bbe:	1a9a      	subs	r2, r3, r2
 8006bc0:	8006      	strh	r6, [r0, #0]
 8006bc2:	8085      	strh	r5, [r0, #4]
 8006bc4:	8044      	strh	r4, [r0, #2]
 8006bc6:	80c2      	strh	r2, [r0, #6]
 8006bc8:	bc70      	pop	{r4, r5, r6}
 8006bca:	4770      	bx	lr

08006bcc <GUI__SetText>:
 8006bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006bce:	6807      	ldr	r7, [r0, #0]
 8006bd0:	b083      	sub	sp, #12
 8006bd2:	4605      	mov	r5, r0
 8006bd4:	460e      	mov	r6, r1
 8006bd6:	b9cf      	cbnz	r7, 8006c0c <GUI__SetText+0x40>
 8006bd8:	2e00      	cmp	r6, #0
 8006bda:	d058      	beq.n	8006c8e <GUI__SetText+0xc2>
 8006bdc:	4633      	mov	r3, r6
 8006bde:	f04f 32ff 	mov.w	r2, #4294967295
 8006be2:	e000      	b.n	8006be6 <GUI__SetText+0x1a>
 8006be4:	4622      	mov	r2, r4
 8006be6:	f813 0b01 	ldrb.w	r0, [r3], #1
 8006bea:	1c54      	adds	r4, r2, #1
 8006bec:	2800      	cmp	r0, #0
 8006bee:	d1f9      	bne.n	8006be4 <GUI__SetText+0x18>
 8006bf0:	4638      	mov	r0, r7
 8006bf2:	1c94      	adds	r4, r2, #2
 8006bf4:	f7fe fabc 	bl	8005170 <GUI_ALLOC_GetSize>
 8006bf8:	4284      	cmp	r4, r0
 8006bfa:	d022      	beq.n	8006c42 <GUI__SetText+0x76>
 8006bfc:	4620      	mov	r0, r4
 8006bfe:	f7fe f92b 	bl	8004e58 <GUI_ALLOC_AllocNoInit>
 8006c02:	4607      	mov	r7, r0
 8006c04:	bb68      	cbnz	r0, 8006c62 <GUI__SetText+0x96>
 8006c06:	2000      	movs	r0, #0
 8006c08:	b003      	add	sp, #12
 8006c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c0c:	4638      	mov	r0, r7
 8006c0e:	f7fe f931 	bl	8004e74 <GUI_ALLOC_LockH>
 8006c12:	4b22      	ldr	r3, [pc, #136]	; (8006c9c <GUI__SetText+0xd0>)
 8006c14:	9001      	str	r0, [sp, #4]
 8006c16:	2e00      	cmp	r6, #0
 8006c18:	bf14      	ite	ne
 8006c1a:	4632      	movne	r2, r6
 8006c1c:	461a      	moveq	r2, r3
 8006c1e:	2800      	cmp	r0, #0
 8006c20:	bf08      	it	eq
 8006c22:	4618      	moveq	r0, r3
 8006c24:	7813      	ldrb	r3, [r2, #0]
 8006c26:	7801      	ldrb	r1, [r0, #0]
 8006c28:	428b      	cmp	r3, r1
 8006c2a:	d106      	bne.n	8006c3a <GUI__SetText+0x6e>
 8006c2c:	b35b      	cbz	r3, 8006c86 <GUI__SetText+0xba>
 8006c2e:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 8006c32:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006c36:	428b      	cmp	r3, r1
 8006c38:	d0f8      	beq.n	8006c2c <GUI__SetText+0x60>
 8006c3a:	a801      	add	r0, sp, #4
 8006c3c:	f7fe f92c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8006c40:	e7ca      	b.n	8006bd8 <GUI__SetText+0xc>
 8006c42:	4638      	mov	r0, r7
 8006c44:	f7fe f916 	bl	8004e74 <GUI_ALLOC_LockH>
 8006c48:	ad02      	add	r5, sp, #8
 8006c4a:	4b15      	ldr	r3, [pc, #84]	; (8006ca0 <GUI__SetText+0xd4>)
 8006c4c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8006c50:	4622      	mov	r2, r4
 8006c52:	4631      	mov	r1, r6
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	4798      	blx	r3
 8006c58:	4628      	mov	r0, r5
 8006c5a:	f7fe f91d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8006c5e:	2001      	movs	r0, #1
 8006c60:	e7d2      	b.n	8006c08 <GUI__SetText+0x3c>
 8006c62:	f7fe f907 	bl	8004e74 <GUI_ALLOC_LockH>
 8006c66:	ac02      	add	r4, sp, #8
 8006c68:	4631      	mov	r1, r6
 8006c6a:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006c6e:	f010 fbe0 	bl	8017432 <strcpy>
 8006c72:	4620      	mov	r0, r4
 8006c74:	f7fe f910 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8006c78:	4628      	mov	r0, r5
 8006c7a:	f7fe fa9f 	bl	80051bc <GUI_ALLOC_FreePtr>
 8006c7e:	2001      	movs	r0, #1
 8006c80:	602f      	str	r7, [r5, #0]
 8006c82:	b003      	add	sp, #12
 8006c84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c86:	a801      	add	r0, sp, #4
 8006c88:	f7fe f906 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8006c8c:	e7bb      	b.n	8006c06 <GUI__SetText+0x3a>
 8006c8e:	4638      	mov	r0, r7
 8006c90:	f7fe fa6e 	bl	8005170 <GUI_ALLOC_GetSize>
 8006c94:	2800      	cmp	r0, #0
 8006c96:	d0b6      	beq.n	8006c06 <GUI__SetText+0x3a>
 8006c98:	4634      	mov	r4, r6
 8006c9a:	e7af      	b.n	8006bfc <GUI__SetText+0x30>
 8006c9c:	0801d150 	.word	0x0801d150
 8006ca0:	20000038 	.word	0x20000038

08006ca4 <GUI__sqrt32>:
 8006ca4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006ca8:	bf2b      	itete	cs
 8006caa:	f04f 4300 	movcs.w	r3, #2147483648	; 0x80000000
 8006cae:	2300      	movcc	r3, #0
 8006cb0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8006cb4:	2200      	movcc	r2, #0
 8006cb6:	085b      	lsrs	r3, r3, #1
 8006cb8:	1a80      	subs	r0, r0, r2
 8006cba:	f103 5280 	add.w	r2, r3, #268435456	; 0x10000000
 8006cbe:	4290      	cmp	r0, r2
 8006cc0:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 8006cc4:	bf28      	it	cs
 8006cc6:	460b      	movcs	r3, r1
 8006cc8:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8006ccc:	bf38      	it	cc
 8006cce:	2200      	movcc	r2, #0
 8006cd0:	f103 6180 	add.w	r1, r3, #67108864	; 0x4000000
 8006cd4:	1a82      	subs	r2, r0, r2
 8006cd6:	428a      	cmp	r2, r1
 8006cd8:	f103 6000 	add.w	r0, r3, #134217728	; 0x8000000
 8006cdc:	bf2c      	ite	cs
 8006cde:	4603      	movcs	r3, r0
 8006ce0:	2100      	movcc	r1, #0
 8006ce2:	085b      	lsrs	r3, r3, #1
 8006ce4:	1a50      	subs	r0, r2, r1
 8006ce6:	f103 7280 	add.w	r2, r3, #16777216	; 0x1000000
 8006cea:	4290      	cmp	r0, r2
 8006cec:	f103 7100 	add.w	r1, r3, #33554432	; 0x2000000
 8006cf0:	bf2c      	ite	cs
 8006cf2:	460b      	movcs	r3, r1
 8006cf4:	2200      	movcc	r2, #0
 8006cf6:	085b      	lsrs	r3, r3, #1
 8006cf8:	1a81      	subs	r1, r0, r2
 8006cfa:	f503 0280 	add.w	r2, r3, #4194304	; 0x400000
 8006cfe:	4291      	cmp	r1, r2
 8006d00:	f503 0000 	add.w	r0, r3, #8388608	; 0x800000
 8006d04:	bf28      	it	cs
 8006d06:	4603      	movcs	r3, r0
 8006d08:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8006d0c:	bf38      	it	cc
 8006d0e:	2200      	movcc	r2, #0
 8006d10:	1a8a      	subs	r2, r1, r2
 8006d12:	f503 1180 	add.w	r1, r3, #1048576	; 0x100000
 8006d16:	428a      	cmp	r2, r1
 8006d18:	f503 1000 	add.w	r0, r3, #2097152	; 0x200000
 8006d1c:	bf2c      	ite	cs
 8006d1e:	4603      	movcs	r3, r0
 8006d20:	2100      	movcc	r1, #0
 8006d22:	085b      	lsrs	r3, r3, #1
 8006d24:	1a50      	subs	r0, r2, r1
 8006d26:	f503 2280 	add.w	r2, r3, #262144	; 0x40000
 8006d2a:	4290      	cmp	r0, r2
 8006d2c:	f503 2100 	add.w	r1, r3, #524288	; 0x80000
 8006d30:	bf2c      	ite	cs
 8006d32:	460b      	movcs	r3, r1
 8006d34:	2200      	movcc	r2, #0
 8006d36:	085b      	lsrs	r3, r3, #1
 8006d38:	1a81      	subs	r1, r0, r2
 8006d3a:	f503 3280 	add.w	r2, r3, #65536	; 0x10000
 8006d3e:	4291      	cmp	r1, r2
 8006d40:	f503 3000 	add.w	r0, r3, #131072	; 0x20000
 8006d44:	bf28      	it	cs
 8006d46:	4603      	movcs	r3, r0
 8006d48:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8006d4c:	bf38      	it	cc
 8006d4e:	2200      	movcc	r2, #0
 8006d50:	1a8a      	subs	r2, r1, r2
 8006d52:	f503 4180 	add.w	r1, r3, #16384	; 0x4000
 8006d56:	428a      	cmp	r2, r1
 8006d58:	f503 4000 	add.w	r0, r3, #32768	; 0x8000
 8006d5c:	bf2c      	ite	cs
 8006d5e:	4603      	movcs	r3, r0
 8006d60:	2100      	movcc	r1, #0
 8006d62:	085b      	lsrs	r3, r3, #1
 8006d64:	1a50      	subs	r0, r2, r1
 8006d66:	f503 5280 	add.w	r2, r3, #4096	; 0x1000
 8006d6a:	4290      	cmp	r0, r2
 8006d6c:	f503 5100 	add.w	r1, r3, #8192	; 0x2000
 8006d70:	bf2c      	ite	cs
 8006d72:	460b      	movcs	r3, r1
 8006d74:	2200      	movcc	r2, #0
 8006d76:	085b      	lsrs	r3, r3, #1
 8006d78:	1a81      	subs	r1, r0, r2
 8006d7a:	f503 6280 	add.w	r2, r3, #1024	; 0x400
 8006d7e:	4291      	cmp	r1, r2
 8006d80:	f503 6000 	add.w	r0, r3, #2048	; 0x800
 8006d84:	bf28      	it	cs
 8006d86:	4603      	movcs	r3, r0
 8006d88:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8006d8c:	bf38      	it	cc
 8006d8e:	2200      	movcc	r2, #0
 8006d90:	1a8a      	subs	r2, r1, r2
 8006d92:	f503 7180 	add.w	r1, r3, #256	; 0x100
 8006d96:	428a      	cmp	r2, r1
 8006d98:	f503 7000 	add.w	r0, r3, #512	; 0x200
 8006d9c:	bf2c      	ite	cs
 8006d9e:	4603      	movcs	r3, r0
 8006da0:	2100      	movcc	r1, #0
 8006da2:	085b      	lsrs	r3, r3, #1
 8006da4:	1a50      	subs	r0, r2, r1
 8006da6:	f103 0240 	add.w	r2, r3, #64	; 0x40
 8006daa:	4290      	cmp	r0, r2
 8006dac:	f103 0180 	add.w	r1, r3, #128	; 0x80
 8006db0:	bf2c      	ite	cs
 8006db2:	460b      	movcs	r3, r1
 8006db4:	2200      	movcc	r2, #0
 8006db6:	085b      	lsrs	r3, r3, #1
 8006db8:	1a81      	subs	r1, r0, r2
 8006dba:	f103 0210 	add.w	r2, r3, #16
 8006dbe:	4291      	cmp	r1, r2
 8006dc0:	f103 0020 	add.w	r0, r3, #32
 8006dc4:	bf28      	it	cs
 8006dc6:	4603      	movcs	r3, r0
 8006dc8:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8006dcc:	bf38      	it	cc
 8006dce:	2200      	movcc	r2, #0
 8006dd0:	1a8a      	subs	r2, r1, r2
 8006dd2:	1d19      	adds	r1, r3, #4
 8006dd4:	428a      	cmp	r2, r1
 8006dd6:	f103 0008 	add.w	r0, r3, #8
 8006dda:	bf2c      	ite	cs
 8006ddc:	4603      	movcs	r3, r0
 8006dde:	2100      	movcc	r1, #0
 8006de0:	085b      	lsrs	r3, r3, #1
 8006de2:	1a52      	subs	r2, r2, r1
 8006de4:	1c58      	adds	r0, r3, #1
 8006de6:	1c99      	adds	r1, r3, #2
 8006de8:	4290      	cmp	r0, r2
 8006dea:	bf94      	ite	ls
 8006dec:	4608      	movls	r0, r1
 8006dee:	4618      	movhi	r0, r3
 8006df0:	0840      	lsrs	r0, r0, #1
 8006df2:	4770      	bx	lr

08006df4 <_GetWordWrap>:
 8006df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006df8:	b083      	sub	sp, #12
 8006dfa:	ad02      	add	r5, sp, #8
 8006dfc:	460f      	mov	r7, r1
 8006dfe:	f845 0d04 	str.w	r0, [r5, #-4]!
 8006e02:	4628      	mov	r0, r5
 8006e04:	9200      	str	r2, [sp, #0]
 8006e06:	f7ff faa1 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006e0a:	f04f 0800 	mov.w	r8, #0
 8006e0e:	4e34      	ldr	r6, [pc, #208]	; (8006ee0 <_GetWordWrap+0xec>)
 8006e10:	4682      	mov	sl, r0
 8006e12:	4644      	mov	r4, r8
 8006e14:	46c3      	mov	fp, r8
 8006e16:	46c1      	mov	r9, r8
 8006e18:	2800      	cmp	r0, #0
 8006e1a:	d03a      	beq.n	8006e92 <_GetWordWrap+0x9e>
 8006e1c:	280a      	cmp	r0, #10
 8006e1e:	d038      	beq.n	8006e92 <_GetWordWrap+0x9e>
 8006e20:	2820      	cmp	r0, #32
 8006e22:	d041      	beq.n	8006ea8 <_GetWordWrap+0xb4>
 8006e24:	f1ba 0f20 	cmp.w	sl, #32
 8006e28:	d046      	beq.n	8006eb8 <_GetWordWrap+0xc4>
 8006e2a:	6871      	ldr	r1, [r6, #4]
 8006e2c:	6832      	ldr	r2, [r6, #0]
 8006e2e:	2900      	cmp	r1, #0
 8006e30:	dd0f      	ble.n	8006e52 <_GetWordWrap+0x5e>
 8006e32:	f8b2 e000 	ldrh.w	lr, [r2]
 8006e36:	4586      	cmp	lr, r0
 8006e38:	f102 0302 	add.w	r3, r2, #2
 8006e3c:	bf18      	it	ne
 8006e3e:	eb02 0141 	addne.w	r1, r2, r1, lsl #1
 8006e42:	d104      	bne.n	8006e4e <_GetWordWrap+0x5a>
 8006e44:	e027      	b.n	8006e96 <_GetWordWrap+0xa2>
 8006e46:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006e4a:	4282      	cmp	r2, r0
 8006e4c:	d023      	beq.n	8006e96 <_GetWordWrap+0xa2>
 8006e4e:	428b      	cmp	r3, r1
 8006e50:	d1f9      	bne.n	8006e46 <_GetWordWrap+0x52>
 8006e52:	f00b fa5b 	bl	801230c <GUI_GetCharDistX>
 8006e56:	4481      	add	r9, r0
 8006e58:	45b9      	cmp	r9, r7
 8006e5a:	4680      	mov	r8, r0
 8006e5c:	dd0e      	ble.n	8006e7c <_GetWordWrap+0x88>
 8006e5e:	f1bb 0f00 	cmp.w	fp, #0
 8006e62:	d00b      	beq.n	8006e7c <_GetWordWrap+0x88>
 8006e64:	9b00      	ldr	r3, [sp, #0]
 8006e66:	2c00      	cmp	r4, #0
 8006e68:	bf08      	it	eq
 8006e6a:	465c      	moveq	r4, fp
 8006e6c:	b113      	cbz	r3, 8006e74 <_GetWordWrap+0x80>
 8006e6e:	ebc8 0009 	rsb	r0, r8, r9
 8006e72:	6018      	str	r0, [r3, #0]
 8006e74:	4620      	mov	r0, r4
 8006e76:	b003      	add	sp, #12
 8006e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e7c:	4628      	mov	r0, r5
 8006e7e:	f7ff fa65 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006e82:	f10b 0b01 	add.w	fp, fp, #1
 8006e86:	f1ba 0f00 	cmp.w	sl, #0
 8006e8a:	bf08      	it	eq
 8006e8c:	4682      	moveq	sl, r0
 8006e8e:	2800      	cmp	r0, #0
 8006e90:	d1c4      	bne.n	8006e1c <_GetWordWrap+0x28>
 8006e92:	465c      	mov	r4, fp
 8006e94:	e7e6      	b.n	8006e64 <_GetWordWrap+0x70>
 8006e96:	f00b fa39 	bl	801230c <GUI_GetCharDistX>
 8006e9a:	4481      	add	r9, r0
 8006e9c:	45b9      	cmp	r9, r7
 8006e9e:	f10b 0401 	add.w	r4, fp, #1
 8006ea2:	4680      	mov	r8, r0
 8006ea4:	ddea      	ble.n	8006e7c <_GetWordWrap+0x88>
 8006ea6:	e7da      	b.n	8006e5e <_GetWordWrap+0x6a>
 8006ea8:	f00b fa30 	bl	801230c <GUI_GetCharDistX>
 8006eac:	4481      	add	r9, r0
 8006eae:	45b9      	cmp	r9, r7
 8006eb0:	465c      	mov	r4, fp
 8006eb2:	4680      	mov	r8, r0
 8006eb4:	dde2      	ble.n	8006e7c <_GetWordWrap+0x88>
 8006eb6:	e7d2      	b.n	8006e5e <_GetWordWrap+0x6a>
 8006eb8:	f00b fa28 	bl	801230c <GUI_GetCharDistX>
 8006ebc:	4481      	add	r9, r0
 8006ebe:	454f      	cmp	r7, r9
 8006ec0:	4680      	mov	r8, r0
 8006ec2:	db08      	blt.n	8006ed6 <_GetWordWrap+0xe2>
 8006ec4:	4628      	mov	r0, r5
 8006ec6:	f7ff fa41 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006eca:	f10b 0201 	add.w	r2, fp, #1
 8006ece:	465c      	mov	r4, fp
 8006ed0:	4682      	mov	sl, r0
 8006ed2:	4693      	mov	fp, r2
 8006ed4:	e7a0      	b.n	8006e18 <_GetWordWrap+0x24>
 8006ed6:	465c      	mov	r4, fp
 8006ed8:	f04f 0a00 	mov.w	sl, #0
 8006edc:	e7bf      	b.n	8006e5e <_GetWordWrap+0x6a>
 8006ede:	bf00      	nop
 8006ee0:	20000530 	.word	0x20000530

08006ee4 <_GetCharWrap>:
 8006ee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ee8:	b082      	sub	sp, #8
 8006eea:	af02      	add	r7, sp, #8
 8006eec:	2400      	movs	r4, #0
 8006eee:	4688      	mov	r8, r1
 8006ef0:	f847 0d04 	str.w	r0, [r7, #-4]!
 8006ef4:	4625      	mov	r5, r4
 8006ef6:	e008      	b.n	8006f0a <_GetCharWrap+0x26>
 8006ef8:	f00b fa08 	bl	801230c <GUI_GetCharDistX>
 8006efc:	4405      	add	r5, r0
 8006efe:	b10c      	cbz	r4, 8006f04 <_GetCharWrap+0x20>
 8006f00:	4545      	cmp	r5, r8
 8006f02:	dc08      	bgt.n	8006f16 <_GetCharWrap+0x32>
 8006f04:	2e0a      	cmp	r6, #10
 8006f06:	d006      	beq.n	8006f16 <_GetCharWrap+0x32>
 8006f08:	3401      	adds	r4, #1
 8006f0a:	4638      	mov	r0, r7
 8006f0c:	f7ff fa1e 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006f10:	4606      	mov	r6, r0
 8006f12:	2800      	cmp	r0, #0
 8006f14:	d1f0      	bne.n	8006ef8 <_GetCharWrap+0x14>
 8006f16:	4620      	mov	r0, r4
 8006f18:	b002      	add	sp, #8
 8006f1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f1e:	bf00      	nop

08006f20 <GUI__WrapGetNumCharsDisp>:
 8006f20:	2a01      	cmp	r2, #1
 8006f22:	d008      	beq.n	8006f36 <GUI__WrapGetNumCharsDisp+0x16>
 8006f24:	2a02      	cmp	r2, #2
 8006f26:	d102      	bne.n	8006f2e <GUI__WrapGetNumCharsDisp+0xe>
 8006f28:	4b05      	ldr	r3, [pc, #20]	; (8006f40 <GUI__WrapGetNumCharsDisp+0x20>)
 8006f2a:	685b      	ldr	r3, [r3, #4]
 8006f2c:	4718      	bx	r3
 8006f2e:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8006f32:	f00b ba4b 	b.w	80123cc <GUI__GetLineNumChars>
 8006f36:	4b02      	ldr	r3, [pc, #8]	; (8006f40 <GUI__WrapGetNumCharsDisp+0x20>)
 8006f38:	2200      	movs	r2, #0
 8006f3a:	681b      	ldr	r3, [r3, #0]
 8006f3c:	4718      	bx	r3
 8006f3e:	bf00      	nop
 8006f40:	20000040 	.word	0x20000040

08006f44 <GUI__WrapGetNumBytesToNextLine>:
 8006f44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f48:	b082      	sub	sp, #8
 8006f4a:	2a01      	cmp	r2, #1
 8006f4c:	4606      	mov	r6, r0
 8006f4e:	9000      	str	r0, [sp, #0]
 8006f50:	4688      	mov	r8, r1
 8006f52:	d038      	beq.n	8006fc6 <GUI__WrapGetNumBytesToNextLine+0x82>
 8006f54:	2a02      	cmp	r2, #2
 8006f56:	4617      	mov	r7, r2
 8006f58:	d01b      	beq.n	8006f92 <GUI__WrapGetNumBytesToNextLine+0x4e>
 8006f5a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8006f5e:	f00b fa35 	bl	80123cc <GUI__GetLineNumChars>
 8006f62:	4601      	mov	r1, r0
 8006f64:	4604      	mov	r4, r0
 8006f66:	9800      	ldr	r0, [sp, #0]
 8006f68:	f7ff fa04 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8006f6c:	9b00      	ldr	r3, [sp, #0]
 8006f6e:	ad02      	add	r5, sp, #8
 8006f70:	4418      	add	r0, r3
 8006f72:	f845 0d08 	str.w	r0, [r5, #-8]!
 8006f76:	4628      	mov	r0, r5
 8006f78:	f7ff f9e8 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006f7c:	280a      	cmp	r0, #10
 8006f7e:	d01a      	beq.n	8006fb6 <GUI__WrapGetNumBytesToNextLine+0x72>
 8006f80:	2f01      	cmp	r7, #1
 8006f82:	d033      	beq.n	8006fec <GUI__WrapGetNumBytesToNextLine+0xa8>
 8006f84:	4621      	mov	r1, r4
 8006f86:	4630      	mov	r0, r6
 8006f88:	f7ff f9f4 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8006f8c:	b002      	add	sp, #8
 8006f8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f92:	4b20      	ldr	r3, [pc, #128]	; (8007014 <GUI__WrapGetNumBytesToNextLine+0xd0>)
 8006f94:	685b      	ldr	r3, [r3, #4]
 8006f96:	4798      	blx	r3
 8006f98:	4601      	mov	r1, r0
 8006f9a:	4604      	mov	r4, r0
 8006f9c:	9800      	ldr	r0, [sp, #0]
 8006f9e:	f7ff f9e9 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8006fa2:	9a00      	ldr	r2, [sp, #0]
 8006fa4:	ab02      	add	r3, sp, #8
 8006fa6:	4410      	add	r0, r2
 8006fa8:	f843 0d08 	str.w	r0, [r3, #-8]!
 8006fac:	4618      	mov	r0, r3
 8006fae:	f7ff f9cd 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006fb2:	280a      	cmp	r0, #10
 8006fb4:	d1e6      	bne.n	8006f84 <GUI__WrapGetNumBytesToNextLine+0x40>
 8006fb6:	3401      	adds	r4, #1
 8006fb8:	4621      	mov	r1, r4
 8006fba:	4630      	mov	r0, r6
 8006fbc:	f7ff f9da 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8006fc0:	b002      	add	sp, #8
 8006fc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006fc6:	4b13      	ldr	r3, [pc, #76]	; (8007014 <GUI__WrapGetNumBytesToNextLine+0xd0>)
 8006fc8:	aa01      	add	r2, sp, #4
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	4798      	blx	r3
 8006fce:	4601      	mov	r1, r0
 8006fd0:	4604      	mov	r4, r0
 8006fd2:	9800      	ldr	r0, [sp, #0]
 8006fd4:	f7ff f9ce 	bl	8006374 <GUI_UC__NumChars2NumBytes>
 8006fd8:	9b00      	ldr	r3, [sp, #0]
 8006fda:	ad02      	add	r5, sp, #8
 8006fdc:	4418      	add	r0, r3
 8006fde:	f845 0d08 	str.w	r0, [r5, #-8]!
 8006fe2:	4628      	mov	r0, r5
 8006fe4:	f7ff f9b2 	bl	800634c <GUI_UC__GetCharCodeInc>
 8006fe8:	280a      	cmp	r0, #10
 8006fea:	d0e4      	beq.n	8006fb6 <GUI__WrapGetNumBytesToNextLine+0x72>
 8006fec:	2820      	cmp	r0, #32
 8006fee:	d1c9      	bne.n	8006f84 <GUI__WrapGetNumBytesToNextLine+0x40>
 8006ff0:	f00b f98c 	bl	801230c <GUI_GetCharDistX>
 8006ff4:	4607      	mov	r7, r0
 8006ff6:	9b01      	ldr	r3, [sp, #4]
 8006ff8:	4598      	cmp	r8, r3
 8006ffa:	4628      	mov	r0, r5
 8006ffc:	eb07 0203 	add.w	r2, r7, r3
 8007000:	dbc0      	blt.n	8006f84 <GUI__WrapGetNumBytesToNextLine+0x40>
 8007002:	9201      	str	r2, [sp, #4]
 8007004:	f7ff f9a2 	bl	800634c <GUI_UC__GetCharCodeInc>
 8007008:	2820      	cmp	r0, #32
 800700a:	f104 0401 	add.w	r4, r4, #1
 800700e:	d0f2      	beq.n	8006ff6 <GUI__WrapGetNumBytesToNextLine+0xb2>
 8007010:	e7b8      	b.n	8006f84 <GUI__WrapGetNumBytesToNextLine+0x40>
 8007012:	bf00      	nop
 8007014:	20000040 	.word	0x20000040

08007018 <_SetBkColor>:
 8007018:	b538      	push	{r3, r4, r5, lr}
 800701a:	4c0b      	ldr	r4, [pc, #44]	; (8007048 <_SetBkColor+0x30>)
 800701c:	6822      	ldr	r2, [r4, #0]
 800701e:	6b51      	ldr	r1, [r2, #52]	; 0x34
 8007020:	4281      	cmp	r1, r0
 8007022:	d00d      	beq.n	8007040 <_SetBkColor+0x28>
 8007024:	7c55      	ldrb	r5, [r2, #17]
 8007026:	4909      	ldr	r1, [pc, #36]	; (800704c <_SetBkColor+0x34>)
 8007028:	6350      	str	r0, [r2, #52]	; 0x34
 800702a:	f851 3025 	ldr.w	r3, [r1, r5, lsl #2]
 800702e:	691b      	ldr	r3, [r3, #16]
 8007030:	681b      	ldr	r3, [r3, #0]
 8007032:	4798      	blx	r3
 8007034:	6823      	ldr	r3, [r4, #0]
 8007036:	7c1a      	ldrb	r2, [r3, #16]
 8007038:	0752      	lsls	r2, r2, #29
 800703a:	d402      	bmi.n	8007042 <_SetBkColor+0x2a>
 800703c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800703e:	6018      	str	r0, [r3, #0]
 8007040:	bd38      	pop	{r3, r4, r5, pc}
 8007042:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007044:	6018      	str	r0, [r3, #0]
 8007046:	bd38      	pop	{r3, r4, r5, pc}
 8007048:	20000018 	.word	0x20000018
 800704c:	2001c19c 	.word	0x2001c19c

08007050 <_SetColor>:
 8007050:	b538      	push	{r3, r4, r5, lr}
 8007052:	4c0b      	ldr	r4, [pc, #44]	; (8007080 <_SetColor+0x30>)
 8007054:	6822      	ldr	r2, [r4, #0]
 8007056:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8007058:	4281      	cmp	r1, r0
 800705a:	d00d      	beq.n	8007078 <_SetColor+0x28>
 800705c:	7c55      	ldrb	r5, [r2, #17]
 800705e:	4909      	ldr	r1, [pc, #36]	; (8007084 <_SetColor+0x34>)
 8007060:	6310      	str	r0, [r2, #48]	; 0x30
 8007062:	f851 3025 	ldr.w	r3, [r1, r5, lsl #2]
 8007066:	691b      	ldr	r3, [r3, #16]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	4798      	blx	r3
 800706c:	6823      	ldr	r3, [r4, #0]
 800706e:	7c1a      	ldrb	r2, [r3, #16]
 8007070:	0752      	lsls	r2, r2, #29
 8007072:	d402      	bmi.n	800707a <_SetColor+0x2a>
 8007074:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007076:	6018      	str	r0, [r3, #0]
 8007078:	bd38      	pop	{r3, r4, r5, pc}
 800707a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800707c:	6018      	str	r0, [r3, #0]
 800707e:	bd38      	pop	{r3, r4, r5, pc}
 8007080:	20000018 	.word	0x20000018
 8007084:	2001c19c 	.word	0x2001c19c

08007088 <_SetDrawMode>:
 8007088:	4b0a      	ldr	r3, [pc, #40]	; (80070b4 <_SetDrawMode+0x2c>)
 800708a:	681b      	ldr	r3, [r3, #0]
 800708c:	7c1a      	ldrb	r2, [r3, #16]
 800708e:	ea82 0100 	eor.w	r1, r2, r0
 8007092:	0749      	lsls	r1, r1, #29
 8007094:	d50a      	bpl.n	80070ac <_SetDrawMode+0x24>
 8007096:	b470      	push	{r4, r5, r6}
 8007098:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800709a:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800709c:	680e      	ldr	r6, [r1, #0]
 800709e:	6825      	ldr	r5, [r4, #0]
 80070a0:	6026      	str	r6, [r4, #0]
 80070a2:	600d      	str	r5, [r1, #0]
 80070a4:	7418      	strb	r0, [r3, #16]
 80070a6:	bc70      	pop	{r4, r5, r6}
 80070a8:	4610      	mov	r0, r2
 80070aa:	4770      	bx	lr
 80070ac:	7418      	strb	r0, [r3, #16]
 80070ae:	4610      	mov	r0, r2
 80070b0:	4770      	bx	lr
 80070b2:	bf00      	nop
 80070b4:	20000018 	.word	0x20000018

080070b8 <LCD_SetDrawMode>:
 80070b8:	4b01      	ldr	r3, [pc, #4]	; (80070c0 <LCD_SetDrawMode+0x8>)
 80070ba:	681b      	ldr	r3, [r3, #0]
 80070bc:	689b      	ldr	r3, [r3, #8]
 80070be:	4718      	bx	r3
 80070c0:	20000048 	.word	0x20000048

080070c4 <LCD_DrawPixel>:
 80070c4:	4b18      	ldr	r3, [pc, #96]	; (8007128 <LCD_DrawPixel+0x64>)
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 80070cc:	428a      	cmp	r2, r1
 80070ce:	dc1d      	bgt.n	800710c <LCD_DrawPixel+0x48>
 80070d0:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 80070d4:	4291      	cmp	r1, r2
 80070d6:	dc19      	bgt.n	800710c <LCD_DrawPixel+0x48>
 80070d8:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 80070dc:	4282      	cmp	r2, r0
 80070de:	dc15      	bgt.n	800710c <LCD_DrawPixel+0x48>
 80070e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80070e4:	4290      	cmp	r0, r2
 80070e6:	dc11      	bgt.n	800710c <LCD_DrawPixel+0x48>
 80070e8:	b430      	push	{r4, r5}
 80070ea:	7c1a      	ldrb	r2, [r3, #16]
 80070ec:	07d2      	lsls	r2, r2, #31
 80070ee:	d40e      	bmi.n	800710e <LCD_DrawPixel+0x4a>
 80070f0:	4a0e      	ldr	r2, [pc, #56]	; (800712c <LCD_DrawPixel+0x68>)
 80070f2:	7c5c      	ldrb	r4, [r3, #17]
 80070f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80070f6:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80070fa:	681b      	ldr	r3, [r3, #0]
 80070fc:	68e5      	ldr	r5, [r4, #12]
 80070fe:	69ad      	ldr	r5, [r5, #24]
 8007100:	460a      	mov	r2, r1
 8007102:	46ac      	mov	ip, r5
 8007104:	4601      	mov	r1, r0
 8007106:	4620      	mov	r0, r4
 8007108:	bc30      	pop	{r4, r5}
 800710a:	4760      	bx	ip
 800710c:	4770      	bx	lr
 800710e:	7c5a      	ldrb	r2, [r3, #17]
 8007110:	4b06      	ldr	r3, [pc, #24]	; (800712c <LCD_DrawPixel+0x68>)
 8007112:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007116:	68dc      	ldr	r4, [r3, #12]
 8007118:	69e4      	ldr	r4, [r4, #28]
 800711a:	460a      	mov	r2, r1
 800711c:	4601      	mov	r1, r0
 800711e:	4618      	mov	r0, r3
 8007120:	4623      	mov	r3, r4
 8007122:	bc30      	pop	{r4, r5}
 8007124:	4718      	bx	r3
 8007126:	bf00      	nop
 8007128:	20000018 	.word	0x20000018
 800712c:	2001c19c 	.word	0x2001c19c

08007130 <LCD_DrawHLine>:
 8007130:	4b12      	ldr	r3, [pc, #72]	; (800717c <LCD_DrawHLine+0x4c>)
 8007132:	b430      	push	{r4, r5}
 8007134:	681c      	ldr	r4, [r3, #0]
 8007136:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800713a:	428b      	cmp	r3, r1
 800713c:	dc0f      	bgt.n	800715e <LCD_DrawHLine+0x2e>
 800713e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8007142:	4299      	cmp	r1, r3
 8007144:	dc0b      	bgt.n	800715e <LCD_DrawHLine+0x2e>
 8007146:	f9b4 5008 	ldrsh.w	r5, [r4, #8]
 800714a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800714e:	42a8      	cmp	r0, r5
 8007150:	bfb8      	it	lt
 8007152:	4628      	movlt	r0, r5
 8007154:	429a      	cmp	r2, r3
 8007156:	bfa8      	it	ge
 8007158:	461a      	movge	r2, r3
 800715a:	4290      	cmp	r0, r2
 800715c:	dd01      	ble.n	8007162 <LCD_DrawHLine+0x32>
 800715e:	bc30      	pop	{r4, r5}
 8007160:	4770      	bx	lr
 8007162:	4b07      	ldr	r3, [pc, #28]	; (8007180 <LCD_DrawHLine+0x50>)
 8007164:	7c64      	ldrb	r4, [r4, #17]
 8007166:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 800716a:	68e5      	ldr	r5, [r4, #12]
 800716c:	68ad      	ldr	r5, [r5, #8]
 800716e:	4613      	mov	r3, r2
 8007170:	46ac      	mov	ip, r5
 8007172:	460a      	mov	r2, r1
 8007174:	4601      	mov	r1, r0
 8007176:	4620      	mov	r0, r4
 8007178:	bc30      	pop	{r4, r5}
 800717a:	4760      	bx	ip
 800717c:	20000018 	.word	0x20000018
 8007180:	2001c19c 	.word	0x2001c19c

08007184 <LCD_DrawVLine>:
 8007184:	4b12      	ldr	r3, [pc, #72]	; (80071d0 <LCD_DrawVLine+0x4c>)
 8007186:	b430      	push	{r4, r5}
 8007188:	681c      	ldr	r4, [r3, #0]
 800718a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800718e:	4283      	cmp	r3, r0
 8007190:	dc0f      	bgt.n	80071b2 <LCD_DrawVLine+0x2e>
 8007192:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007196:	4298      	cmp	r0, r3
 8007198:	dc0b      	bgt.n	80071b2 <LCD_DrawVLine+0x2e>
 800719a:	f9b4 500a 	ldrsh.w	r5, [r4, #10]
 800719e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80071a2:	42a9      	cmp	r1, r5
 80071a4:	bfb8      	it	lt
 80071a6:	4629      	movlt	r1, r5
 80071a8:	429a      	cmp	r2, r3
 80071aa:	bfa8      	it	ge
 80071ac:	461a      	movge	r2, r3
 80071ae:	4291      	cmp	r1, r2
 80071b0:	dd01      	ble.n	80071b6 <LCD_DrawVLine+0x32>
 80071b2:	bc30      	pop	{r4, r5}
 80071b4:	4770      	bx	lr
 80071b6:	4b07      	ldr	r3, [pc, #28]	; (80071d4 <LCD_DrawVLine+0x50>)
 80071b8:	7c64      	ldrb	r4, [r4, #17]
 80071ba:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80071be:	68e5      	ldr	r5, [r4, #12]
 80071c0:	68ed      	ldr	r5, [r5, #12]
 80071c2:	4613      	mov	r3, r2
 80071c4:	46ac      	mov	ip, r5
 80071c6:	460a      	mov	r2, r1
 80071c8:	4601      	mov	r1, r0
 80071ca:	4620      	mov	r0, r4
 80071cc:	bc30      	pop	{r4, r5}
 80071ce:	4760      	bx	ip
 80071d0:	20000018 	.word	0x20000018
 80071d4:	2001c19c 	.word	0x2001c19c

080071d8 <LCD_FillRect>:
 80071d8:	b570      	push	{r4, r5, r6, lr}
 80071da:	4c15      	ldr	r4, [pc, #84]	; (8007230 <LCD_FillRect+0x58>)
 80071dc:	6824      	ldr	r4, [r4, #0]
 80071de:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 80071e2:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80071e6:	42b0      	cmp	r0, r6
 80071e8:	bfb8      	it	lt
 80071ea:	4630      	movlt	r0, r6
 80071ec:	42aa      	cmp	r2, r5
 80071ee:	bfa8      	it	ge
 80071f0:	462a      	movge	r2, r5
 80071f2:	4282      	cmp	r2, r0
 80071f4:	b082      	sub	sp, #8
 80071f6:	db0b      	blt.n	8007210 <LCD_FillRect+0x38>
 80071f8:	f9b4 600a 	ldrsh.w	r6, [r4, #10]
 80071fc:	f9b4 500e 	ldrsh.w	r5, [r4, #14]
 8007200:	42b1      	cmp	r1, r6
 8007202:	bfb8      	it	lt
 8007204:	4631      	movlt	r1, r6
 8007206:	42ab      	cmp	r3, r5
 8007208:	bfa8      	it	ge
 800720a:	462b      	movge	r3, r5
 800720c:	4299      	cmp	r1, r3
 800720e:	dd01      	ble.n	8007214 <LCD_FillRect+0x3c>
 8007210:	b002      	add	sp, #8
 8007212:	bd70      	pop	{r4, r5, r6, pc}
 8007214:	7c65      	ldrb	r5, [r4, #17]
 8007216:	4c07      	ldr	r4, [pc, #28]	; (8007234 <LCD_FillRect+0x5c>)
 8007218:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 800721c:	68e5      	ldr	r5, [r4, #12]
 800721e:	9300      	str	r3, [sp, #0]
 8007220:	4613      	mov	r3, r2
 8007222:	460a      	mov	r2, r1
 8007224:	4601      	mov	r1, r0
 8007226:	4620      	mov	r0, r4
 8007228:	692c      	ldr	r4, [r5, #16]
 800722a:	47a0      	blx	r4
 800722c:	b002      	add	sp, #8
 800722e:	bd70      	pop	{r4, r5, r6, pc}
 8007230:	20000018 	.word	0x20000018
 8007234:	2001c19c 	.word	0x2001c19c

08007238 <LCD__DrawBitmap_1bpp>:
 8007238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800723c:	b091      	sub	sp, #68	; 0x44
 800723e:	4c82      	ldr	r4, [pc, #520]	; (8007448 <LCD__DrawBitmap_1bpp+0x210>)
 8007240:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8007242:	950e      	str	r5, [sp, #56]	; 0x38
 8007244:	462e      	mov	r6, r5
 8007246:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8007248:	950c      	str	r5, [sp, #48]	; 0x30
 800724a:	6824      	ldr	r4, [r4, #0]
 800724c:	9d1e      	ldr	r5, [sp, #120]	; 0x78
 800724e:	9506      	str	r5, [sp, #24]
 8007250:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8007252:	9508      	str	r5, [sp, #32]
 8007254:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8007258:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
 800725c:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800725e:	900f      	str	r0, [sp, #60]	; 0x3c
 8007260:	9205      	str	r2, [sp, #20]
 8007262:	930d      	str	r3, [sp, #52]	; 0x34
 8007264:	b12c      	cbz	r4, 8007272 <LCD__DrawBitmap_1bpp+0x3a>
 8007266:	6824      	ldr	r4, [r4, #0]
 8007268:	46a4      	mov	ip, r4
 800726a:	b011      	add	sp, #68	; 0x44
 800726c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007270:	4760      	bx	ip
 8007272:	ea4a 0306 	orr.w	r3, sl, r6
 8007276:	2b01      	cmp	r3, #1
 8007278:	4689      	mov	r9, r1
 800727a:	f000 8091 	beq.w	80073a0 <LCD__DrawBitmap_1bpp+0x168>
 800727e:	f1ce 0308 	rsb	r3, lr, #8
 8007282:	9302      	str	r3, [sp, #8]
 8007284:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007286:	2b00      	cmp	r3, #0
 8007288:	f340 8087 	ble.w	800739a <LCD__DrawBitmap_1bpp+0x162>
 800728c:	4b6f      	ldr	r3, [pc, #444]	; (800744c <LCD__DrawBitmap_1bpp+0x214>)
 800728e:	940a      	str	r4, [sp, #40]	; 0x28
 8007290:	6818      	ldr	r0, [r3, #0]
 8007292:	9104      	str	r1, [sp, #16]
 8007294:	46a0      	mov	r8, r4
 8007296:	46f1      	mov	r9, lr
 8007298:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800729a:	9904      	ldr	r1, [sp, #16]
 800729c:	1853      	adds	r3, r2, r1
 800729e:	461a      	mov	r2, r3
 80072a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80072a2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80072a6:	3a01      	subs	r2, #1
 80072a8:	4293      	cmp	r3, r2
 80072aa:	9209      	str	r2, [sp, #36]	; 0x24
 80072ac:	dc68      	bgt.n	8007380 <LCD__DrawBitmap_1bpp+0x148>
 80072ae:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 80072b2:	428b      	cmp	r3, r1
 80072b4:	db64      	blt.n	8007380 <LCD__DrawBitmap_1bpp+0x148>
 80072b6:	9b05      	ldr	r3, [sp, #20]
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	dd61      	ble.n	8007380 <LCD__DrawBitmap_1bpp+0x148>
 80072bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80072be:	9f06      	ldr	r7, [sp, #24]
 80072c0:	9707      	str	r7, [sp, #28]
 80072c2:	2600      	movs	r6, #0
 80072c4:	4635      	mov	r5, r6
 80072c6:	eb03 040a 	add.w	r4, r3, sl
 80072ca:	e04c      	b.n	8007366 <LCD__DrawBitmap_1bpp+0x12e>
 80072cc:	9b02      	ldr	r3, [sp, #8]
 80072ce:	ebc9 0606 	rsb	r6, r9, r6
 80072d2:	fa48 f303 	asr.w	r3, r8, r3
 80072d6:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 80072da:	fa08 f809 	lsl.w	r8, r8, r9
 80072de:	fa5f f888 	uxtb.w	r8, r8
 80072e2:	d102      	bne.n	80072ea <LCD__DrawBitmap_1bpp+0xb2>
 80072e4:	7c02      	ldrb	r2, [r0, #16]
 80072e6:	0792      	lsls	r2, r2, #30
 80072e8:	d438      	bmi.n	800735c <LCD__DrawBitmap_1bpp+0x124>
 80072ea:	f8d0 e03c 	ldr.w	lr, [r0, #60]	; 0x3c
 80072ee:	f8de 2000 	ldr.w	r2, [lr]
 80072f2:	9203      	str	r2, [sp, #12]
 80072f4:	9a08      	ldr	r2, [sp, #32]
 80072f6:	b10a      	cbz	r2, 80072fc <LCD__DrawBitmap_1bpp+0xc4>
 80072f8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80072fc:	f9b0 b008 	ldrsh.w	fp, [r0, #8]
 8007300:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8007304:	f8ce 3000 	str.w	r3, [lr]
 8007308:	1e62      	subs	r2, r4, #1
 800730a:	4559      	cmp	r1, fp
 800730c:	bfb8      	it	lt
 800730e:	4659      	movlt	r1, fp
 8007310:	4562      	cmp	r2, ip
 8007312:	4613      	mov	r3, r2
 8007314:	bfa8      	it	ge
 8007316:	4663      	movge	r3, ip
 8007318:	428b      	cmp	r3, r1
 800731a:	db1c      	blt.n	8007356 <LCD__DrawBitmap_1bpp+0x11e>
 800731c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8007320:	9f04      	ldr	r7, [sp, #16]
 8007322:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 8007326:	42ba      	cmp	r2, r7
 8007328:	bfb8      	it	lt
 800732a:	463a      	movlt	r2, r7
 800732c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800732e:	45bc      	cmp	ip, r7
 8007330:	bfa8      	it	ge
 8007332:	46bc      	movge	ip, r7
 8007334:	4562      	cmp	r2, ip
 8007336:	dc0e      	bgt.n	8007356 <LCD__DrawBitmap_1bpp+0x11e>
 8007338:	7c40      	ldrb	r0, [r0, #17]
 800733a:	4f45      	ldr	r7, [pc, #276]	; (8007450 <LCD__DrawBitmap_1bpp+0x218>)
 800733c:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8007340:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8007344:	f8cd c000 	str.w	ip, [sp]
 8007348:	f8de b010 	ldr.w	fp, [lr, #16]
 800734c:	47d8      	blx	fp
 800734e:	4b3f      	ldr	r3, [pc, #252]	; (800744c <LCD__DrawBitmap_1bpp+0x214>)
 8007350:	6818      	ldr	r0, [r3, #0]
 8007352:	f8d0 e03c 	ldr.w	lr, [r0, #60]	; 0x3c
 8007356:	9b03      	ldr	r3, [sp, #12]
 8007358:	f8ce 3000 	str.w	r3, [lr]
 800735c:	9b05      	ldr	r3, [sp, #20]
 800735e:	3501      	adds	r5, #1
 8007360:	42ab      	cmp	r3, r5
 8007362:	4454      	add	r4, sl
 8007364:	d00c      	beq.n	8007380 <LCD__DrawBitmap_1bpp+0x148>
 8007366:	ebca 0104 	rsb	r1, sl, r4
 800736a:	2e00      	cmp	r6, #0
 800736c:	d1ae      	bne.n	80072cc <LCD__DrawBitmap_1bpp+0x94>
 800736e:	9a07      	ldr	r2, [sp, #28]
 8007370:	9e02      	ldr	r6, [sp, #8]
 8007372:	f892 8000 	ldrb.w	r8, [r2]
 8007376:	4613      	mov	r3, r2
 8007378:	3301      	adds	r3, #1
 800737a:	9307      	str	r3, [sp, #28]
 800737c:	4633      	mov	r3, r6
 800737e:	e7a8      	b.n	80072d2 <LCD__DrawBitmap_1bpp+0x9a>
 8007380:	9a06      	ldr	r2, [sp, #24]
 8007382:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007384:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007386:	440a      	add	r2, r1
 8007388:	9206      	str	r2, [sp, #24]
 800738a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800738c:	9204      	str	r2, [sp, #16]
 800738e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007390:	3301      	adds	r3, #1
 8007392:	429a      	cmp	r2, r3
 8007394:	930a      	str	r3, [sp, #40]	; 0x28
 8007396:	f47f af7f 	bne.w	8007298 <LCD__DrawBitmap_1bpp+0x60>
 800739a:	b011      	add	sp, #68	; 0x44
 800739c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80073a0:	4b2a      	ldr	r3, [pc, #168]	; (800744c <LCD__DrawBitmap_1bpp+0x214>)
 80073a2:	6818      	ldr	r0, [r3, #0]
 80073a4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80073a8:	1a53      	subs	r3, r2, r1
 80073aa:	2b00      	cmp	r3, #0
 80073ac:	dd47      	ble.n	800743e <LCD__DrawBitmap_1bpp+0x206>
 80073ae:	990d      	ldr	r1, [sp, #52]	; 0x34
 80073b0:	1acc      	subs	r4, r1, r3
 80073b2:	2c00      	cmp	r4, #0
 80073b4:	ddf1      	ble.n	800739a <LCD__DrawBitmap_1bpp+0x162>
 80073b6:	9e06      	ldr	r6, [sp, #24]
 80073b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80073ba:	fb01 6303 	mla	r3, r1, r3, r6
 80073be:	9306      	str	r3, [sp, #24]
 80073c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80073c2:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 80073c6:	444b      	add	r3, r9
 80073c8:	3b01      	subs	r3, #1
 80073ca:	1a5b      	subs	r3, r3, r1
 80073cc:	2b00      	cmp	r3, #0
 80073ce:	dd02      	ble.n	80073d6 <LCD__DrawBitmap_1bpp+0x19e>
 80073d0:	1ae4      	subs	r4, r4, r3
 80073d2:	2c00      	cmp	r4, #0
 80073d4:	dde1      	ble.n	800739a <LCD__DrawBitmap_1bpp+0x162>
 80073d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80073d8:	9e05      	ldr	r6, [sp, #20]
 80073da:	198b      	adds	r3, r1, r6
 80073dc:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
 80073e0:	3b01      	subs	r3, #1
 80073e2:	1a5b      	subs	r3, r3, r1
 80073e4:	2b00      	cmp	r3, #0
 80073e6:	dd01      	ble.n	80073ec <LCD__DrawBitmap_1bpp+0x1b4>
 80073e8:	1af3      	subs	r3, r6, r3
 80073ea:	9305      	str	r3, [sp, #20]
 80073ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80073ee:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80073f2:	1b49      	subs	r1, r1, r5
 80073f4:	4299      	cmp	r1, r3
 80073f6:	da0d      	bge.n	8007414 <LCD__DrawBitmap_1bpp+0x1dc>
 80073f8:	1a5b      	subs	r3, r3, r1
 80073fa:	9f06      	ldr	r7, [sp, #24]
 80073fc:	441d      	add	r5, r3
 80073fe:	eb07 07e5 	add.w	r7, r7, r5, asr #3
 8007402:	9706      	str	r7, [sp, #24]
 8007404:	9f05      	ldr	r7, [sp, #20]
 8007406:	f023 0607 	bic.w	r6, r3, #7
 800740a:	1afb      	subs	r3, r7, r3
 800740c:	f005 0507 	and.w	r5, r5, #7
 8007410:	9305      	str	r3, [sp, #20]
 8007412:	4431      	add	r1, r6
 8007414:	9b05      	ldr	r3, [sp, #20]
 8007416:	2b00      	cmp	r3, #0
 8007418:	ddbf      	ble.n	800739a <LCD__DrawBitmap_1bpp+0x162>
 800741a:	7c40      	ldrb	r0, [r0, #17]
 800741c:	4b0c      	ldr	r3, [pc, #48]	; (8007450 <LCD__DrawBitmap_1bpp+0x218>)
 800741e:	9f08      	ldr	r7, [sp, #32]
 8007420:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8007424:	9b05      	ldr	r3, [sp, #20]
 8007426:	68c6      	ldr	r6, [r0, #12]
 8007428:	951e      	str	r5, [sp, #120]	; 0x78
 800742a:	9d06      	ldr	r5, [sp, #24]
 800742c:	951d      	str	r5, [sp, #116]	; 0x74
 800742e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007430:	971f      	str	r7, [sp, #124]	; 0x7c
 8007432:	951c      	str	r5, [sp, #112]	; 0x70
 8007434:	f8cd e06c 	str.w	lr, [sp, #108]	; 0x6c
 8007438:	941a      	str	r4, [sp, #104]	; 0x68
 800743a:	6874      	ldr	r4, [r6, #4]
 800743c:	e714      	b.n	8007268 <LCD__DrawBitmap_1bpp+0x30>
 800743e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8007440:	460a      	mov	r2, r1
 8007442:	4623      	mov	r3, r4
 8007444:	e7bd      	b.n	80073c2 <LCD__DrawBitmap_1bpp+0x18a>
 8007446:	bf00      	nop
 8007448:	2001c158 	.word	0x2001c158
 800744c:	20000018 	.word	0x20000018
 8007450:	2001c19c 	.word	0x2001c19c

08007454 <LCD_DrawBitmap>:
 8007454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007458:	4cb6      	ldr	r4, [pc, #728]	; (8007734 <LCD_DrawBitmap+0x2e0>)
 800745a:	b091      	sub	sp, #68	; 0x44
 800745c:	f8d4 e000 	ldr.w	lr, [r4]
 8007460:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8007462:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8007464:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007466:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8007468:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 800746c:	950d      	str	r5, [sp, #52]	; 0x34
 800746e:	f8dd c070 	ldr.w	ip, [sp, #112]	; 0x70
 8007472:	960e      	str	r6, [sp, #56]	; 0x38
 8007474:	9707      	str	r7, [sp, #28]
 8007476:	9408      	str	r4, [sp, #32]
 8007478:	900f      	str	r0, [sp, #60]	; 0x3c
 800747a:	9205      	str	r2, [sp, #20]
 800747c:	930c      	str	r3, [sp, #48]	; 0x30
 800747e:	f1be 0f00 	cmp.w	lr, #0
 8007482:	d006      	beq.n	8007492 <LCD_DrawBitmap+0x3e>
 8007484:	f8de 4000 	ldr.w	r4, [lr]
 8007488:	46a4      	mov	ip, r4
 800748a:	b011      	add	sp, #68	; 0x44
 800748c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007490:	4760      	bx	ip
 8007492:	ea4a 0305 	orr.w	r3, sl, r5
 8007496:	2b01      	cmp	r3, #1
 8007498:	4689      	mov	r9, r1
 800749a:	f000 8092 	beq.w	80075c2 <LCD_DrawBitmap+0x16e>
 800749e:	f1cc 0308 	rsb	r3, ip, #8
 80074a2:	9302      	str	r3, [sp, #8]
 80074a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80074a6:	2b00      	cmp	r3, #0
 80074a8:	f340 8088 	ble.w	80075bc <LCD_DrawBitmap+0x168>
 80074ac:	4ba2      	ldr	r3, [pc, #648]	; (8007738 <LCD_DrawBitmap+0x2e4>)
 80074ae:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 80074b2:	6818      	ldr	r0, [r3, #0]
 80074b4:	9104      	str	r1, [sp, #16]
 80074b6:	46f0      	mov	r8, lr
 80074b8:	46e1      	mov	r9, ip
 80074ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80074bc:	9904      	ldr	r1, [sp, #16]
 80074be:	1853      	adds	r3, r2, r1
 80074c0:	461a      	mov	r2, r3
 80074c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80074c4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80074c8:	3a01      	subs	r2, #1
 80074ca:	4293      	cmp	r3, r2
 80074cc:	9209      	str	r2, [sp, #36]	; 0x24
 80074ce:	dc68      	bgt.n	80075a2 <LCD_DrawBitmap+0x14e>
 80074d0:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 80074d4:	428b      	cmp	r3, r1
 80074d6:	db64      	blt.n	80075a2 <LCD_DrawBitmap+0x14e>
 80074d8:	9b05      	ldr	r3, [sp, #20]
 80074da:	2b00      	cmp	r3, #0
 80074dc:	dd61      	ble.n	80075a2 <LCD_DrawBitmap+0x14e>
 80074de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80074e0:	9f07      	ldr	r7, [sp, #28]
 80074e2:	9706      	str	r7, [sp, #24]
 80074e4:	2600      	movs	r6, #0
 80074e6:	4635      	mov	r5, r6
 80074e8:	eb03 040a 	add.w	r4, r3, sl
 80074ec:	e04c      	b.n	8007588 <LCD_DrawBitmap+0x134>
 80074ee:	9b02      	ldr	r3, [sp, #8]
 80074f0:	ebc9 0606 	rsb	r6, r9, r6
 80074f4:	fa48 f303 	asr.w	r3, r8, r3
 80074f8:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 80074fc:	fa08 f809 	lsl.w	r8, r8, r9
 8007500:	fa5f f888 	uxtb.w	r8, r8
 8007504:	d102      	bne.n	800750c <LCD_DrawBitmap+0xb8>
 8007506:	7c02      	ldrb	r2, [r0, #16]
 8007508:	0792      	lsls	r2, r2, #30
 800750a:	d438      	bmi.n	800757e <LCD_DrawBitmap+0x12a>
 800750c:	f8d0 e03c 	ldr.w	lr, [r0, #60]	; 0x3c
 8007510:	f8de 2000 	ldr.w	r2, [lr]
 8007514:	9203      	str	r2, [sp, #12]
 8007516:	9a08      	ldr	r2, [sp, #32]
 8007518:	b10a      	cbz	r2, 800751e <LCD_DrawBitmap+0xca>
 800751a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800751e:	f9b0 b008 	ldrsh.w	fp, [r0, #8]
 8007522:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8007526:	f8ce 3000 	str.w	r3, [lr]
 800752a:	1e62      	subs	r2, r4, #1
 800752c:	4559      	cmp	r1, fp
 800752e:	bfb8      	it	lt
 8007530:	4659      	movlt	r1, fp
 8007532:	4562      	cmp	r2, ip
 8007534:	4613      	mov	r3, r2
 8007536:	bfa8      	it	ge
 8007538:	4663      	movge	r3, ip
 800753a:	428b      	cmp	r3, r1
 800753c:	db1c      	blt.n	8007578 <LCD_DrawBitmap+0x124>
 800753e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8007542:	9f04      	ldr	r7, [sp, #16]
 8007544:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 8007548:	42ba      	cmp	r2, r7
 800754a:	bfb8      	it	lt
 800754c:	463a      	movlt	r2, r7
 800754e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8007550:	45bc      	cmp	ip, r7
 8007552:	bfa8      	it	ge
 8007554:	46bc      	movge	ip, r7
 8007556:	4562      	cmp	r2, ip
 8007558:	dc0e      	bgt.n	8007578 <LCD_DrawBitmap+0x124>
 800755a:	7c40      	ldrb	r0, [r0, #17]
 800755c:	4f77      	ldr	r7, [pc, #476]	; (800773c <LCD_DrawBitmap+0x2e8>)
 800755e:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8007562:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8007566:	f8cd c000 	str.w	ip, [sp]
 800756a:	f8de b010 	ldr.w	fp, [lr, #16]
 800756e:	47d8      	blx	fp
 8007570:	4b71      	ldr	r3, [pc, #452]	; (8007738 <LCD_DrawBitmap+0x2e4>)
 8007572:	6818      	ldr	r0, [r3, #0]
 8007574:	f8d0 e03c 	ldr.w	lr, [r0, #60]	; 0x3c
 8007578:	9b03      	ldr	r3, [sp, #12]
 800757a:	f8ce 3000 	str.w	r3, [lr]
 800757e:	9b05      	ldr	r3, [sp, #20]
 8007580:	3501      	adds	r5, #1
 8007582:	42ab      	cmp	r3, r5
 8007584:	4454      	add	r4, sl
 8007586:	d00c      	beq.n	80075a2 <LCD_DrawBitmap+0x14e>
 8007588:	ebca 0104 	rsb	r1, sl, r4
 800758c:	2e00      	cmp	r6, #0
 800758e:	d1ae      	bne.n	80074ee <LCD_DrawBitmap+0x9a>
 8007590:	9a06      	ldr	r2, [sp, #24]
 8007592:	9e02      	ldr	r6, [sp, #8]
 8007594:	f892 8000 	ldrb.w	r8, [r2]
 8007598:	4613      	mov	r3, r2
 800759a:	3301      	adds	r3, #1
 800759c:	9306      	str	r3, [sp, #24]
 800759e:	4633      	mov	r3, r6
 80075a0:	e7a8      	b.n	80074f4 <LCD_DrawBitmap+0xa0>
 80075a2:	9a07      	ldr	r2, [sp, #28]
 80075a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80075a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80075a8:	440a      	add	r2, r1
 80075aa:	9207      	str	r2, [sp, #28]
 80075ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80075ae:	9204      	str	r2, [sp, #16]
 80075b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80075b2:	3301      	adds	r3, #1
 80075b4:	429a      	cmp	r2, r3
 80075b6:	930a      	str	r3, [sp, #40]	; 0x28
 80075b8:	f47f af7f 	bne.w	80074ba <LCD_DrawBitmap+0x66>
 80075bc:	b011      	add	sp, #68	; 0x44
 80075be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075c2:	4b5d      	ldr	r3, [pc, #372]	; (8007738 <LCD_DrawBitmap+0x2e4>)
 80075c4:	6819      	ldr	r1, [r3, #0]
 80075c6:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 80075ca:	ebc9 0302 	rsb	r3, r9, r2
 80075ce:	2b00      	cmp	r3, #0
 80075d0:	f340 80c2 	ble.w	8007758 <LCD_DrawBitmap+0x304>
 80075d4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80075d6:	1ac4      	subs	r4, r0, r3
 80075d8:	2c00      	cmp	r4, #0
 80075da:	ddef      	ble.n	80075bc <LCD_DrawBitmap+0x168>
 80075dc:	fb06 7303 	mla	r3, r6, r3, r7
 80075e0:	9307      	str	r3, [sp, #28]
 80075e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80075e4:	f9b1 000e 	ldrsh.w	r0, [r1, #14]
 80075e8:	444b      	add	r3, r9
 80075ea:	3b01      	subs	r3, #1
 80075ec:	1a1b      	subs	r3, r3, r0
 80075ee:	2b00      	cmp	r3, #0
 80075f0:	dd02      	ble.n	80075f8 <LCD_DrawBitmap+0x1a4>
 80075f2:	1ae4      	subs	r4, r4, r3
 80075f4:	2c00      	cmp	r4, #0
 80075f6:	dde1      	ble.n	80075bc <LCD_DrawBitmap+0x168>
 80075f8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80075fa:	9d05      	ldr	r5, [sp, #20]
 80075fc:	1943      	adds	r3, r0, r5
 80075fe:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 8007602:	3b01      	subs	r3, #1
 8007604:	1a1b      	subs	r3, r3, r0
 8007606:	2b00      	cmp	r3, #0
 8007608:	dd01      	ble.n	800760e <LCD_DrawBitmap+0x1ba>
 800760a:	1aeb      	subs	r3, r5, r3
 800760c:	9305      	str	r3, [sp, #20]
 800760e:	f9b1 0008 	ldrsh.w	r0, [r1, #8]
 8007612:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8007614:	4285      	cmp	r5, r0
 8007616:	db16      	blt.n	8007646 <LCD_DrawBitmap+0x1f2>
 8007618:	2300      	movs	r3, #0
 800761a:	9e05      	ldr	r6, [sp, #20]
 800761c:	2e00      	cmp	r6, #0
 800761e:	ddcd      	ble.n	80075bc <LCD_DrawBitmap+0x168>
 8007620:	7c48      	ldrb	r0, [r1, #17]
 8007622:	4946      	ldr	r1, [pc, #280]	; (800773c <LCD_DrawBitmap+0x2e8>)
 8007624:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8007628:	9908      	ldr	r1, [sp, #32]
 800762a:	68c5      	ldr	r5, [r0, #12]
 800762c:	931e      	str	r3, [sp, #120]	; 0x78
 800762e:	9b07      	ldr	r3, [sp, #28]
 8007630:	931d      	str	r3, [sp, #116]	; 0x74
 8007632:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007634:	911f      	str	r1, [sp, #124]	; 0x7c
 8007636:	931c      	str	r3, [sp, #112]	; 0x70
 8007638:	f8cd c06c 	str.w	ip, [sp, #108]	; 0x6c
 800763c:	941a      	str	r4, [sp, #104]	; 0x68
 800763e:	4633      	mov	r3, r6
 8007640:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007642:	686c      	ldr	r4, [r5, #4]
 8007644:	e720      	b.n	8007488 <LCD_DrawBitmap+0x34>
 8007646:	9e05      	ldr	r6, [sp, #20]
 8007648:	1b43      	subs	r3, r0, r5
 800764a:	1af6      	subs	r6, r6, r3
 800764c:	f10c 35ff 	add.w	r5, ip, #4294967295
 8007650:	9605      	str	r6, [sp, #20]
 8007652:	2d1f      	cmp	r5, #31
 8007654:	d8e1      	bhi.n	800761a <LCD_DrawBitmap+0x1c6>
 8007656:	a601      	add	r6, pc, #4	; (adr r6, 800765c <LCD_DrawBitmap+0x208>)
 8007658:	f856 f025 	ldr.w	pc, [r6, r5, lsl #2]
 800765c:	08007741 	.word	0x08007741
 8007660:	0800771d 	.word	0x0800771d
 8007664:	0800761b 	.word	0x0800761b
 8007668:	08007705 	.word	0x08007705
 800766c:	0800761b 	.word	0x0800761b
 8007670:	0800761b 	.word	0x0800761b
 8007674:	0800761b 	.word	0x0800761b
 8007678:	080076f9 	.word	0x080076f9
 800767c:	0800761b 	.word	0x0800761b
 8007680:	0800761b 	.word	0x0800761b
 8007684:	0800761b 	.word	0x0800761b
 8007688:	0800761b 	.word	0x0800761b
 800768c:	0800761b 	.word	0x0800761b
 8007690:	0800761b 	.word	0x0800761b
 8007694:	0800761b 	.word	0x0800761b
 8007698:	080076eb 	.word	0x080076eb
 800769c:	0800761b 	.word	0x0800761b
 80076a0:	0800761b 	.word	0x0800761b
 80076a4:	0800761b 	.word	0x0800761b
 80076a8:	0800761b 	.word	0x0800761b
 80076ac:	0800761b 	.word	0x0800761b
 80076b0:	0800761b 	.word	0x0800761b
 80076b4:	0800761b 	.word	0x0800761b
 80076b8:	080076dd 	.word	0x080076dd
 80076bc:	0800761b 	.word	0x0800761b
 80076c0:	0800761b 	.word	0x0800761b
 80076c4:	0800761b 	.word	0x0800761b
 80076c8:	0800761b 	.word	0x0800761b
 80076cc:	0800761b 	.word	0x0800761b
 80076d0:	0800761b 	.word	0x0800761b
 80076d4:	0800761b 	.word	0x0800761b
 80076d8:	080076dd 	.word	0x080076dd
 80076dc:	9d07      	ldr	r5, [sp, #28]
 80076de:	900f      	str	r0, [sp, #60]	; 0x3c
 80076e0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80076e4:	9307      	str	r3, [sp, #28]
 80076e6:	2300      	movs	r3, #0
 80076e8:	e797      	b.n	800761a <LCD_DrawBitmap+0x1c6>
 80076ea:	9d07      	ldr	r5, [sp, #28]
 80076ec:	900f      	str	r0, [sp, #60]	; 0x3c
 80076ee:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80076f2:	9307      	str	r3, [sp, #28]
 80076f4:	2300      	movs	r3, #0
 80076f6:	e790      	b.n	800761a <LCD_DrawBitmap+0x1c6>
 80076f8:	9d07      	ldr	r5, [sp, #28]
 80076fa:	900f      	str	r0, [sp, #60]	; 0x3c
 80076fc:	441d      	add	r5, r3
 80076fe:	9507      	str	r5, [sp, #28]
 8007700:	2300      	movs	r3, #0
 8007702:	e78a      	b.n	800761a <LCD_DrawBitmap+0x1c6>
 8007704:	9d07      	ldr	r5, [sp, #28]
 8007706:	eb05 0563 	add.w	r5, r5, r3, asr #1
 800770a:	9507      	str	r5, [sp, #28]
 800770c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800770e:	f023 0001 	bic.w	r0, r3, #1
 8007712:	4405      	add	r5, r0
 8007714:	950f      	str	r5, [sp, #60]	; 0x3c
 8007716:	f003 0301 	and.w	r3, r3, #1
 800771a:	e77e      	b.n	800761a <LCD_DrawBitmap+0x1c6>
 800771c:	9d07      	ldr	r5, [sp, #28]
 800771e:	eb05 05a3 	add.w	r5, r5, r3, asr #2
 8007722:	9507      	str	r5, [sp, #28]
 8007724:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8007726:	f023 0003 	bic.w	r0, r3, #3
 800772a:	4405      	add	r5, r0
 800772c:	950f      	str	r5, [sp, #60]	; 0x3c
 800772e:	f003 0303 	and.w	r3, r3, #3
 8007732:	e772      	b.n	800761a <LCD_DrawBitmap+0x1c6>
 8007734:	2001c158 	.word	0x2001c158
 8007738:	20000018 	.word	0x20000018
 800773c:	2001c19c 	.word	0x2001c19c
 8007740:	9d07      	ldr	r5, [sp, #28]
 8007742:	eb05 05e3 	add.w	r5, r5, r3, asr #3
 8007746:	9507      	str	r5, [sp, #28]
 8007748:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800774a:	f023 0007 	bic.w	r0, r3, #7
 800774e:	4405      	add	r5, r0
 8007750:	950f      	str	r5, [sp, #60]	; 0x3c
 8007752:	f003 0307 	and.w	r3, r3, #7
 8007756:	e760      	b.n	800761a <LCD_DrawBitmap+0x1c6>
 8007758:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800775a:	464a      	mov	r2, r9
 800775c:	4623      	mov	r3, r4
 800775e:	e741      	b.n	80075e4 <LCD_DrawBitmap+0x190>

08007760 <LCD_SetClipRectMax>:
 8007760:	4a04      	ldr	r2, [pc, #16]	; (8007774 <LCD_SetClipRectMax+0x14>)
 8007762:	4b05      	ldr	r3, [pc, #20]	; (8007778 <LCD_SetClipRectMax+0x18>)
 8007764:	6811      	ldr	r1, [r2, #0]
 8007766:	7c4a      	ldrb	r2, [r1, #17]
 8007768:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800776c:	68c3      	ldr	r3, [r0, #12]
 800776e:	3108      	adds	r1, #8
 8007770:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007772:	4718      	bx	r3
 8007774:	20000018 	.word	0x20000018
 8007778:	2001c19c 	.word	0x2001c19c

0800777c <emWin_LCD_Init>:
 800777c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007780:	4e3e      	ldr	r6, [pc, #248]	; (800787c <emWin_LCD_Init+0x100>)
 8007782:	4f3f      	ldr	r7, [pc, #252]	; (8007880 <emWin_LCD_Init+0x104>)
 8007784:	6831      	ldr	r1, [r6, #0]
 8007786:	7c4b      	ldrb	r3, [r1, #17]
 8007788:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800778c:	68c3      	ldr	r3, [r0, #12]
 800778e:	b084      	sub	sp, #16
 8007790:	3108      	adds	r1, #8
 8007792:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007794:	4798      	blx	r3
 8007796:	f000 f8c7 	bl	8007928 <LCD_InitColors>
 800779a:	4604      	mov	r4, r0
 800779c:	2800      	cmp	r0, #0
 800779e:	d15c      	bne.n	800785a <emWin_LCD_Init+0xde>
 80077a0:	4605      	mov	r5, r0
 80077a2:	4628      	mov	r0, r5
 80077a4:	f7fe f8f8 	bl	8005998 <GUI_DEVICE__GetpDriver>
 80077a8:	210c      	movs	r1, #12
 80077aa:	4603      	mov	r3, r0
 80077ac:	3501      	adds	r5, #1
 80077ae:	eb0d 0001 	add.w	r0, sp, r1
 80077b2:	9303      	str	r3, [sp, #12]
 80077b4:	b143      	cbz	r3, 80077c8 <emWin_LCD_Init+0x4c>
 80077b6:	68db      	ldr	r3, [r3, #12]
 80077b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077ba:	4798      	blx	r3
 80077bc:	4603      	mov	r3, r0
 80077be:	2800      	cmp	r0, #0
 80077c0:	d05a      	beq.n	8007878 <emWin_LCD_Init+0xfc>
 80077c2:	9803      	ldr	r0, [sp, #12]
 80077c4:	4798      	blx	r3
 80077c6:	4304      	orrs	r4, r0
 80077c8:	2d02      	cmp	r5, #2
 80077ca:	d1ea      	bne.n	80077a2 <emWin_LCD_Init+0x26>
 80077cc:	2c00      	cmp	r4, #0
 80077ce:	d144      	bne.n	800785a <emWin_LCD_Init+0xde>
 80077d0:	f000 f904 	bl	80079dc <LCD_InitLUT>
 80077d4:	4b2b      	ldr	r3, [pc, #172]	; (8007884 <emWin_LCD_Init+0x108>)
 80077d6:	681a      	ldr	r2, [r3, #0]
 80077d8:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80077dc:	429a      	cmp	r2, r3
 80077de:	d038      	beq.n	8007852 <emWin_LCD_Init+0xd6>
 80077e0:	4d29      	ldr	r5, [pc, #164]	; (8007888 <emWin_LCD_Init+0x10c>)
 80077e2:	2401      	movs	r4, #1
 80077e4:	4620      	mov	r0, r4
 80077e6:	f7fe f8d7 	bl	8005998 <GUI_DEVICE__GetpDriver>
 80077ea:	4603      	mov	r3, r0
 80077ec:	9303      	str	r3, [sp, #12]
 80077ee:	4620      	mov	r0, r4
 80077f0:	3c01      	subs	r4, #1
 80077f2:	b363      	cbz	r3, 800784e <emWin_LCD_Init+0xd2>
 80077f4:	f7fe fd74 	bl	80062e0 <GUI_SelectLayer>
 80077f8:	682b      	ldr	r3, [r5, #0]
 80077fa:	2004      	movs	r0, #4
 80077fc:	689b      	ldr	r3, [r3, #8]
 80077fe:	4798      	blx	r3
 8007800:	6830      	ldr	r0, [r6, #0]
 8007802:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 8007806:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800780a:	f643 7cff 	movw	ip, #16383	; 0x3fff
 800780e:	4563      	cmp	r3, ip
 8007810:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8007814:	bfa8      	it	ge
 8007816:	4663      	movge	r3, ip
 8007818:	428b      	cmp	r3, r1
 800781a:	db0a      	blt.n	8007832 <emWin_LCD_Init+0xb6>
 800781c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8007820:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8007824:	45e6      	cmp	lr, ip
 8007826:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800782a:	bfa8      	it	ge
 800782c:	46e6      	movge	lr, ip
 800782e:	4596      	cmp	lr, r2
 8007830:	da17      	bge.n	8007862 <emWin_LCD_Init+0xe6>
 8007832:	682b      	ldr	r3, [r5, #0]
 8007834:	2000      	movs	r0, #0
 8007836:	689b      	ldr	r3, [r3, #8]
 8007838:	4798      	blx	r3
 800783a:	9b03      	ldr	r3, [sp, #12]
 800783c:	68db      	ldr	r3, [r3, #12]
 800783e:	210e      	movs	r1, #14
 8007840:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007842:	a803      	add	r0, sp, #12
 8007844:	4798      	blx	r3
 8007846:	4603      	mov	r3, r0
 8007848:	b108      	cbz	r0, 800784e <emWin_LCD_Init+0xd2>
 800784a:	9803      	ldr	r0, [sp, #12]
 800784c:	4798      	blx	r3
 800784e:	1c63      	adds	r3, r4, #1
 8007850:	d1c8      	bne.n	80077e4 <emWin_LCD_Init+0x68>
 8007852:	2000      	movs	r0, #0
 8007854:	b004      	add	sp, #16
 8007856:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800785a:	4620      	mov	r0, r4
 800785c:	b004      	add	sp, #16
 800785e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007862:	7c40      	ldrb	r0, [r0, #17]
 8007864:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8007868:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 800786c:	f8cd e000 	str.w	lr, [sp]
 8007870:	f8dc 8010 	ldr.w	r8, [ip, #16]
 8007874:	47c0      	blx	r8
 8007876:	e7dc      	b.n	8007832 <emWin_LCD_Init+0xb6>
 8007878:	2001      	movs	r0, #1
 800787a:	e7ef      	b.n	800785c <emWin_LCD_Init+0xe0>
 800787c:	20000018 	.word	0x20000018
 8007880:	2001c19c 	.word	0x2001c19c
 8007884:	20000014 	.word	0x20000014
 8007888:	20000048 	.word	0x20000048

0800788c <LCD_Color2Index>:
 800788c:	4a04      	ldr	r2, [pc, #16]	; (80078a0 <LCD_Color2Index+0x14>)
 800788e:	4b05      	ldr	r3, [pc, #20]	; (80078a4 <LCD_Color2Index+0x18>)
 8007890:	6812      	ldr	r2, [r2, #0]
 8007892:	7c52      	ldrb	r2, [r2, #17]
 8007894:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007898:	691b      	ldr	r3, [r3, #16]
 800789a:	681b      	ldr	r3, [r3, #0]
 800789c:	4718      	bx	r3
 800789e:	bf00      	nop
 80078a0:	20000018 	.word	0x20000018
 80078a4:	2001c19c 	.word	0x2001c19c

080078a8 <LCD_Index2Color>:
 80078a8:	4a04      	ldr	r2, [pc, #16]	; (80078bc <LCD_Index2Color+0x14>)
 80078aa:	4b05      	ldr	r3, [pc, #20]	; (80078c0 <LCD_Index2Color+0x18>)
 80078ac:	6812      	ldr	r2, [r2, #0]
 80078ae:	7c52      	ldrb	r2, [r2, #17]
 80078b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80078b4:	691b      	ldr	r3, [r3, #16]
 80078b6:	685b      	ldr	r3, [r3, #4]
 80078b8:	4718      	bx	r3
 80078ba:	bf00      	nop
 80078bc:	20000018 	.word	0x20000018
 80078c0:	2001c19c 	.word	0x2001c19c

080078c4 <LCD_SetColorIndex>:
 80078c4:	4b04      	ldr	r3, [pc, #16]	; (80078d8 <LCD_SetColorIndex+0x14>)
 80078c6:	681b      	ldr	r3, [r3, #0]
 80078c8:	7c1a      	ldrb	r2, [r3, #16]
 80078ca:	0752      	lsls	r2, r2, #29
 80078cc:	bf4c      	ite	mi
 80078ce:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 80078d0:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 80078d2:	6018      	str	r0, [r3, #0]
 80078d4:	4770      	bx	lr
 80078d6:	bf00      	nop
 80078d8:	20000018 	.word	0x20000018

080078dc <LCD_SetBkColorIndex>:
 80078dc:	4b04      	ldr	r3, [pc, #16]	; (80078f0 <LCD_SetBkColorIndex+0x14>)
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	7c1a      	ldrb	r2, [r3, #16]
 80078e2:	0752      	lsls	r2, r2, #29
 80078e4:	bf4c      	ite	mi
 80078e6:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 80078e8:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 80078ea:	6018      	str	r0, [r3, #0]
 80078ec:	4770      	bx	lr
 80078ee:	bf00      	nop
 80078f0:	20000018 	.word	0x20000018

080078f4 <LCD_SetBkColor>:
 80078f4:	4b01      	ldr	r3, [pc, #4]	; (80078fc <LCD_SetBkColor+0x8>)
 80078f6:	681b      	ldr	r3, [r3, #0]
 80078f8:	685b      	ldr	r3, [r3, #4]
 80078fa:	4718      	bx	r3
 80078fc:	20000048 	.word	0x20000048

08007900 <LCD_SetColor>:
 8007900:	4b01      	ldr	r3, [pc, #4]	; (8007908 <LCD_SetColor+0x8>)
 8007902:	681b      	ldr	r3, [r3, #0]
 8007904:	681b      	ldr	r3, [r3, #0]
 8007906:	4718      	bx	r3
 8007908:	20000048 	.word	0x20000048

0800790c <_OnExit>:
 800790c:	b510      	push	{r4, lr}
 800790e:	4c04      	ldr	r4, [pc, #16]	; (8007920 <_OnExit+0x14>)
 8007910:	6820      	ldr	r0, [r4, #0]
 8007912:	f7fd f97f 	bl	8004c14 <GUI_ALLOC_FreeFixedBlock>
 8007916:	4a03      	ldr	r2, [pc, #12]	; (8007924 <_OnExit+0x18>)
 8007918:	2300      	movs	r3, #0
 800791a:	6023      	str	r3, [r4, #0]
 800791c:	6013      	str	r3, [r2, #0]
 800791e:	bd10      	pop	{r4, pc}
 8007920:	2001c1b4 	.word	0x2001c1b4
 8007924:	20000538 	.word	0x20000538

08007928 <LCD_InitColors>:
 8007928:	b538      	push	{r3, r4, r5, lr}
 800792a:	4d0b      	ldr	r5, [pc, #44]	; (8007958 <LCD_InitColors+0x30>)
 800792c:	682c      	ldr	r4, [r5, #0]
 800792e:	b10c      	cbz	r4, 8007934 <LCD_InitColors+0xc>
 8007930:	2000      	movs	r0, #0
 8007932:	bd38      	pop	{r3, r4, r5, pc}
 8007934:	4b09      	ldr	r3, [pc, #36]	; (800795c <LCD_InitColors+0x34>)
 8007936:	6818      	ldr	r0, [r3, #0]
 8007938:	0080      	lsls	r0, r0, #2
 800793a:	f7fd f975 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 800793e:	6028      	str	r0, [r5, #0]
 8007940:	b138      	cbz	r0, 8007952 <LCD_InitColors+0x2a>
 8007942:	4807      	ldr	r0, [pc, #28]	; (8007960 <LCD_InitColors+0x38>)
 8007944:	4b07      	ldr	r3, [pc, #28]	; (8007964 <LCD_InitColors+0x3c>)
 8007946:	f840 3f04 	str.w	r3, [r0, #4]!
 800794a:	f7fe f811 	bl	8005970 <GUI__RegisterExit>
 800794e:	4620      	mov	r0, r4
 8007950:	bd38      	pop	{r3, r4, r5, pc}
 8007952:	2001      	movs	r0, #1
 8007954:	bd38      	pop	{r3, r4, r5, pc}
 8007956:	bf00      	nop
 8007958:	2001c1b4 	.word	0x2001c1b4
 800795c:	2000004c 	.word	0x2000004c
 8007960:	20000538 	.word	0x20000538
 8007964:	0800790d 	.word	0x0800790d

08007968 <LCD_GetpPalConvTableBM>:
 8007968:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800796c:	b360      	cbz	r0, 80079c8 <LCD_GetpPalConvTableBM+0x60>
 800796e:	6885      	ldr	r5, [r0, #8]
 8007970:	b365      	cbz	r5, 80079cc <LCD_GetpPalConvTableBM+0x64>
 8007972:	f8df 8064 	ldr.w	r8, [pc, #100]	; 80079d8 <LCD_GetpPalConvTableBM+0x70>
 8007976:	f8d8 6000 	ldr.w	r6, [r8]
 800797a:	b306      	cbz	r6, 80079be <LCD_GetpPalConvTableBM+0x56>
 800797c:	6807      	ldr	r7, [r0, #0]
 800797e:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8007982:	dc1f      	bgt.n	80079c4 <LCD_GetpPalConvTableBM+0x5c>
 8007984:	4b12      	ldr	r3, [pc, #72]	; (80079d0 <LCD_GetpPalConvTableBM+0x68>)
 8007986:	681b      	ldr	r3, [r3, #0]
 8007988:	429f      	cmp	r7, r3
 800798a:	bfa8      	it	ge
 800798c:	461f      	movge	r7, r3
 800798e:	2f00      	cmp	r7, #0
 8007990:	4681      	mov	r9, r0
 8007992:	dd0d      	ble.n	80079b0 <LCD_GetpPalConvTableBM+0x48>
 8007994:	3d04      	subs	r5, #4
 8007996:	2400      	movs	r4, #0
 8007998:	e001      	b.n	800799e <LCD_GetpPalConvTableBM+0x36>
 800799a:	f8d8 6000 	ldr.w	r6, [r8]
 800799e:	f855 0f04 	ldr.w	r0, [r5, #4]!
 80079a2:	f7ff ff73 	bl	800788c <LCD_Color2Index>
 80079a6:	f846 0024 	str.w	r0, [r6, r4, lsl #2]
 80079aa:	3401      	adds	r4, #1
 80079ac:	42bc      	cmp	r4, r7
 80079ae:	d1f4      	bne.n	800799a <LCD_GetpPalConvTableBM+0x32>
 80079b0:	4b08      	ldr	r3, [pc, #32]	; (80079d4 <LCD_GetpPalConvTableBM+0x6c>)
 80079b2:	681b      	ldr	r3, [r3, #0]
 80079b4:	b10b      	cbz	r3, 80079ba <LCD_GetpPalConvTableBM+0x52>
 80079b6:	4648      	mov	r0, r9
 80079b8:	4798      	blx	r3
 80079ba:	f8d8 6000 	ldr.w	r6, [r8]
 80079be:	4630      	mov	r0, r6
 80079c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80079c4:	2600      	movs	r6, #0
 80079c6:	e7fa      	b.n	80079be <LCD_GetpPalConvTableBM+0x56>
 80079c8:	4606      	mov	r6, r0
 80079ca:	e7f8      	b.n	80079be <LCD_GetpPalConvTableBM+0x56>
 80079cc:	462e      	mov	r6, r5
 80079ce:	e7f6      	b.n	80079be <LCD_GetpPalConvTableBM+0x56>
 80079d0:	2000004c 	.word	0x2000004c
 80079d4:	20000538 	.word	0x20000538
 80079d8:	2001c1b4 	.word	0x2001c1b4

080079dc <LCD_InitLUT>:
 80079dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80079e0:	f000 f9da 	bl	8007d98 <LCD_GetNumLayers>
 80079e4:	f1b0 0900 	subs.w	r9, r0, #0
 80079e8:	dd2f      	ble.n	8007a4a <LCD_InitLUT+0x6e>
 80079ea:	4f19      	ldr	r7, [pc, #100]	; (8007a50 <LCD_InitLUT+0x74>)
 80079ec:	f8df b068 	ldr.w	fp, [pc, #104]	; 8007a58 <LCD_InitLUT+0x7c>
 80079f0:	2500      	movs	r5, #0
 80079f2:	4628      	mov	r0, r5
 80079f4:	f7fd ffd0 	bl	8005998 <GUI_DEVICE__GetpDriver>
 80079f8:	b320      	cbz	r0, 8007a44 <LCD_InitLUT+0x68>
 80079fa:	683b      	ldr	r3, [r7, #0]
 80079fc:	4628      	mov	r0, r5
 80079fe:	f893 8011 	ldrb.w	r8, [r3, #17]
 8007a02:	745d      	strb	r5, [r3, #17]
 8007a04:	f000 f87a 	bl	8007afc <LCD_GetBitsPerPixelEx>
 8007a08:	2808      	cmp	r0, #8
 8007a0a:	dc18      	bgt.n	8007a3e <LCD_InitLUT+0x62>
 8007a0c:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 8007a10:	4a10      	ldr	r2, [pc, #64]	; (8007a54 <LCD_InitLUT+0x78>)
 8007a12:	691b      	ldr	r3, [r3, #16]
 8007a14:	4293      	cmp	r3, r2
 8007a16:	d012      	beq.n	8007a3e <LCD_InitLUT+0x62>
 8007a18:	4628      	mov	r0, r5
 8007a1a:	f000 f87f 	bl	8007b1c <LCD_GetNumColorsEx>
 8007a1e:	1e06      	subs	r6, r0, #0
 8007a20:	dd0d      	ble.n	8007a3e <LCD_InitLUT+0x62>
 8007a22:	2400      	movs	r4, #0
 8007a24:	fa5f fa84 	uxtb.w	sl, r4
 8007a28:	4650      	mov	r0, sl
 8007a2a:	f7ff ff3d 	bl	80078a8 <LCD_Index2Color>
 8007a2e:	3401      	adds	r4, #1
 8007a30:	4602      	mov	r2, r0
 8007a32:	4651      	mov	r1, sl
 8007a34:	4628      	mov	r0, r5
 8007a36:	f000 fb3f 	bl	80080b8 <LCD_SetLUTEntryEx>
 8007a3a:	42a6      	cmp	r6, r4
 8007a3c:	d1f2      	bne.n	8007a24 <LCD_InitLUT+0x48>
 8007a3e:	683b      	ldr	r3, [r7, #0]
 8007a40:	f883 8011 	strb.w	r8, [r3, #17]
 8007a44:	3501      	adds	r5, #1
 8007a46:	45a9      	cmp	r9, r5
 8007a48:	d1d3      	bne.n	80079f2 <LCD_InitLUT+0x16>
 8007a4a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a4e:	bf00      	nop
 8007a50:	20000018 	.word	0x20000018
 8007a54:	0801bb88 	.word	0x0801bb88
 8007a58:	2001c19c 	.word	0x2001c19c

08007a5c <LCD_GetBkColorIndex>:
 8007a5c:	4b02      	ldr	r3, [pc, #8]	; (8007a68 <LCD_GetBkColorIndex+0xc>)
 8007a5e:	681b      	ldr	r3, [r3, #0]
 8007a60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a62:	6818      	ldr	r0, [r3, #0]
 8007a64:	4770      	bx	lr
 8007a66:	bf00      	nop
 8007a68:	20000018 	.word	0x20000018

08007a6c <LCD_GetColorIndex>:
 8007a6c:	4b02      	ldr	r3, [pc, #8]	; (8007a78 <LCD_GetColorIndex+0xc>)
 8007a6e:	681b      	ldr	r3, [r3, #0]
 8007a70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007a72:	6818      	ldr	r0, [r3, #0]
 8007a74:	4770      	bx	lr
 8007a76:	bf00      	nop
 8007a78:	20000018 	.word	0x20000018

08007a7c <LCD_GetXSizeEx>:
 8007a7c:	2801      	cmp	r0, #1
 8007a7e:	dd01      	ble.n	8007a84 <LCD_GetXSizeEx+0x8>
 8007a80:	2000      	movs	r0, #0
 8007a82:	4770      	bx	lr
 8007a84:	b510      	push	{r4, lr}
 8007a86:	f7fd ff87 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007a8a:	b128      	cbz	r0, 8007a98 <LCD_GetXSizeEx+0x1c>
 8007a8c:	68c3      	ldr	r3, [r0, #12]
 8007a8e:	2101      	movs	r1, #1
 8007a90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007a96:	4718      	bx	r3
 8007a98:	2000      	movs	r0, #0
 8007a9a:	bd10      	pop	{r4, pc}

08007a9c <LCD_GetYSizeEx>:
 8007a9c:	2801      	cmp	r0, #1
 8007a9e:	dd01      	ble.n	8007aa4 <LCD_GetYSizeEx+0x8>
 8007aa0:	2000      	movs	r0, #0
 8007aa2:	4770      	bx	lr
 8007aa4:	b510      	push	{r4, lr}
 8007aa6:	f7fd ff77 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007aaa:	b128      	cbz	r0, 8007ab8 <LCD_GetYSizeEx+0x1c>
 8007aac:	68c3      	ldr	r3, [r0, #12]
 8007aae:	2102      	movs	r1, #2
 8007ab0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ab2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ab6:	4718      	bx	r3
 8007ab8:	2000      	movs	r0, #0
 8007aba:	bd10      	pop	{r4, pc}

08007abc <LCD_GetVXSizeEx>:
 8007abc:	2801      	cmp	r0, #1
 8007abe:	dd01      	ble.n	8007ac4 <LCD_GetVXSizeEx+0x8>
 8007ac0:	2000      	movs	r0, #0
 8007ac2:	4770      	bx	lr
 8007ac4:	b510      	push	{r4, lr}
 8007ac6:	f7fd ff67 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007aca:	b128      	cbz	r0, 8007ad8 <LCD_GetVXSizeEx+0x1c>
 8007acc:	68c3      	ldr	r3, [r0, #12]
 8007ace:	2103      	movs	r1, #3
 8007ad0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ad2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ad6:	4718      	bx	r3
 8007ad8:	2000      	movs	r0, #0
 8007ada:	bd10      	pop	{r4, pc}

08007adc <LCD_GetVYSizeEx>:
 8007adc:	2801      	cmp	r0, #1
 8007ade:	dd01      	ble.n	8007ae4 <LCD_GetVYSizeEx+0x8>
 8007ae0:	2000      	movs	r0, #0
 8007ae2:	4770      	bx	lr
 8007ae4:	b510      	push	{r4, lr}
 8007ae6:	f7fd ff57 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007aea:	b128      	cbz	r0, 8007af8 <LCD_GetVYSizeEx+0x1c>
 8007aec:	68c3      	ldr	r3, [r0, #12]
 8007aee:	2104      	movs	r1, #4
 8007af0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007af2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007af6:	4718      	bx	r3
 8007af8:	2000      	movs	r0, #0
 8007afa:	bd10      	pop	{r4, pc}

08007afc <LCD_GetBitsPerPixelEx>:
 8007afc:	2801      	cmp	r0, #1
 8007afe:	dd01      	ble.n	8007b04 <LCD_GetBitsPerPixelEx+0x8>
 8007b00:	2000      	movs	r0, #0
 8007b02:	4770      	bx	lr
 8007b04:	b510      	push	{r4, lr}
 8007b06:	f7fd ff47 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007b0a:	b128      	cbz	r0, 8007b18 <LCD_GetBitsPerPixelEx+0x1c>
 8007b0c:	68c3      	ldr	r3, [r0, #12]
 8007b0e:	2108      	movs	r1, #8
 8007b10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007b12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b16:	4718      	bx	r3
 8007b18:	2000      	movs	r0, #0
 8007b1a:	bd10      	pop	{r4, pc}

08007b1c <LCD_GetNumColorsEx>:
 8007b1c:	2801      	cmp	r0, #1
 8007b1e:	dd01      	ble.n	8007b24 <LCD_GetNumColorsEx+0x8>
 8007b20:	2000      	movs	r0, #0
 8007b22:	4770      	bx	lr
 8007b24:	b510      	push	{r4, lr}
 8007b26:	f7fd ff37 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007b2a:	b128      	cbz	r0, 8007b38 <LCD_GetNumColorsEx+0x1c>
 8007b2c:	68c3      	ldr	r3, [r0, #12]
 8007b2e:	2109      	movs	r1, #9
 8007b30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007b32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b36:	4718      	bx	r3
 8007b38:	2000      	movs	r0, #0
 8007b3a:	bd10      	pop	{r4, pc}

08007b3c <LCD_GetMirrorXEx>:
 8007b3c:	2801      	cmp	r0, #1
 8007b3e:	dd01      	ble.n	8007b44 <LCD_GetMirrorXEx+0x8>
 8007b40:	2000      	movs	r0, #0
 8007b42:	4770      	bx	lr
 8007b44:	b510      	push	{r4, lr}
 8007b46:	f7fd ff27 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007b4a:	b128      	cbz	r0, 8007b58 <LCD_GetMirrorXEx+0x1c>
 8007b4c:	68c3      	ldr	r3, [r0, #12]
 8007b4e:	210c      	movs	r1, #12
 8007b50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007b52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b56:	4718      	bx	r3
 8007b58:	2000      	movs	r0, #0
 8007b5a:	bd10      	pop	{r4, pc}

08007b5c <LCD_GetMirrorYEx>:
 8007b5c:	2801      	cmp	r0, #1
 8007b5e:	dd01      	ble.n	8007b64 <LCD_GetMirrorYEx+0x8>
 8007b60:	2000      	movs	r0, #0
 8007b62:	4770      	bx	lr
 8007b64:	b510      	push	{r4, lr}
 8007b66:	f7fd ff17 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007b6a:	b128      	cbz	r0, 8007b78 <LCD_GetMirrorYEx+0x1c>
 8007b6c:	68c3      	ldr	r3, [r0, #12]
 8007b6e:	210d      	movs	r1, #13
 8007b70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007b72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b76:	4718      	bx	r3
 8007b78:	2000      	movs	r0, #0
 8007b7a:	bd10      	pop	{r4, pc}

08007b7c <LCD_GetSwapXYEx>:
 8007b7c:	2801      	cmp	r0, #1
 8007b7e:	dd01      	ble.n	8007b84 <LCD_GetSwapXYEx+0x8>
 8007b80:	2000      	movs	r0, #0
 8007b82:	4770      	bx	lr
 8007b84:	b510      	push	{r4, lr}
 8007b86:	f7fd ff07 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007b8a:	b128      	cbz	r0, 8007b98 <LCD_GetSwapXYEx+0x1c>
 8007b8c:	68c3      	ldr	r3, [r0, #12]
 8007b8e:	210e      	movs	r1, #14
 8007b90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007b92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b96:	4718      	bx	r3
 8007b98:	2000      	movs	r0, #0
 8007b9a:	bd10      	pop	{r4, pc}

08007b9c <LCD_GetXSize>:
 8007b9c:	4b09      	ldr	r3, [pc, #36]	; (8007bc4 <LCD_GetXSize+0x28>)
 8007b9e:	681b      	ldr	r3, [r3, #0]
 8007ba0:	7c58      	ldrb	r0, [r3, #17]
 8007ba2:	2801      	cmp	r0, #1
 8007ba4:	dd01      	ble.n	8007baa <LCD_GetXSize+0xe>
 8007ba6:	2000      	movs	r0, #0
 8007ba8:	4770      	bx	lr
 8007baa:	b510      	push	{r4, lr}
 8007bac:	f7fd fef4 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007bb0:	b128      	cbz	r0, 8007bbe <LCD_GetXSize+0x22>
 8007bb2:	68c3      	ldr	r3, [r0, #12]
 8007bb4:	2101      	movs	r1, #1
 8007bb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007bb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007bbc:	4718      	bx	r3
 8007bbe:	2000      	movs	r0, #0
 8007bc0:	bd10      	pop	{r4, pc}
 8007bc2:	bf00      	nop
 8007bc4:	20000018 	.word	0x20000018

08007bc8 <LCD_GetYSize>:
 8007bc8:	4b09      	ldr	r3, [pc, #36]	; (8007bf0 <LCD_GetYSize+0x28>)
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	7c58      	ldrb	r0, [r3, #17]
 8007bce:	2801      	cmp	r0, #1
 8007bd0:	dd01      	ble.n	8007bd6 <LCD_GetYSize+0xe>
 8007bd2:	2000      	movs	r0, #0
 8007bd4:	4770      	bx	lr
 8007bd6:	b510      	push	{r4, lr}
 8007bd8:	f7fd fede 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007bdc:	b128      	cbz	r0, 8007bea <LCD_GetYSize+0x22>
 8007bde:	68c3      	ldr	r3, [r0, #12]
 8007be0:	2102      	movs	r1, #2
 8007be2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007be4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007be8:	4718      	bx	r3
 8007bea:	2000      	movs	r0, #0
 8007bec:	bd10      	pop	{r4, pc}
 8007bee:	bf00      	nop
 8007bf0:	20000018 	.word	0x20000018

08007bf4 <LCD_GetNumColors>:
 8007bf4:	4b09      	ldr	r3, [pc, #36]	; (8007c1c <LCD_GetNumColors+0x28>)
 8007bf6:	681b      	ldr	r3, [r3, #0]
 8007bf8:	7c58      	ldrb	r0, [r3, #17]
 8007bfa:	2801      	cmp	r0, #1
 8007bfc:	dd01      	ble.n	8007c02 <LCD_GetNumColors+0xe>
 8007bfe:	2000      	movs	r0, #0
 8007c00:	4770      	bx	lr
 8007c02:	b510      	push	{r4, lr}
 8007c04:	f7fd fec8 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007c08:	b128      	cbz	r0, 8007c16 <LCD_GetNumColors+0x22>
 8007c0a:	68c3      	ldr	r3, [r0, #12]
 8007c0c:	2109      	movs	r1, #9
 8007c0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007c14:	4718      	bx	r3
 8007c16:	2000      	movs	r0, #0
 8007c18:	bd10      	pop	{r4, pc}
 8007c1a:	bf00      	nop
 8007c1c:	20000018 	.word	0x20000018

08007c20 <GUI_GetBitsPerPixelEx>:
 8007c20:	4b03      	ldr	r3, [pc, #12]	; (8007c30 <GUI_GetBitsPerPixelEx+0x10>)
 8007c22:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8007c26:	68c3      	ldr	r3, [r0, #12]
 8007c28:	2108      	movs	r1, #8
 8007c2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c2c:	4718      	bx	r3
 8007c2e:	bf00      	nop
 8007c30:	2001c19c 	.word	0x2001c19c

08007c34 <LCD_GetPalette>:
 8007c34:	b510      	push	{r4, lr}
 8007c36:	4b06      	ldr	r3, [pc, #24]	; (8007c50 <LCD_GetPalette+0x1c>)
 8007c38:	681b      	ldr	r3, [r3, #0]
 8007c3a:	7c58      	ldrb	r0, [r3, #17]
 8007c3c:	f7fd feac 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007c40:	b128      	cbz	r0, 8007c4e <LCD_GetPalette+0x1a>
 8007c42:	68c3      	ldr	r3, [r0, #12]
 8007c44:	2102      	movs	r1, #2
 8007c46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007c4c:	4718      	bx	r3
 8007c4e:	bd10      	pop	{r4, pc}
 8007c50:	20000018 	.word	0x20000018

08007c54 <GUI_GetpfIndex2ColorEx>:
 8007c54:	4b02      	ldr	r3, [pc, #8]	; (8007c60 <GUI_GetpfIndex2ColorEx+0xc>)
 8007c56:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8007c5a:	691b      	ldr	r3, [r3, #16]
 8007c5c:	6858      	ldr	r0, [r3, #4]
 8007c5e:	4770      	bx	lr
 8007c60:	2001c19c 	.word	0x2001c19c

08007c64 <GUI_GetpfColor2IndexEx>:
 8007c64:	4b02      	ldr	r3, [pc, #8]	; (8007c70 <GUI_GetpfColor2IndexEx+0xc>)
 8007c66:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8007c6a:	691b      	ldr	r3, [r3, #16]
 8007c6c:	6818      	ldr	r0, [r3, #0]
 8007c6e:	4770      	bx	lr
 8007c70:	2001c19c 	.word	0x2001c19c

08007c74 <LCD_GetXSizeMax>:
 8007c74:	b538      	push	{r3, r4, r5, lr}
 8007c76:	2501      	movs	r5, #1
 8007c78:	4628      	mov	r0, r5
 8007c7a:	f7fd fe8d 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007c7e:	2400      	movs	r4, #0
 8007c80:	2101      	movs	r1, #1
 8007c82:	b178      	cbz	r0, 8007ca4 <LCD_GetXSizeMax+0x30>
 8007c84:	68c3      	ldr	r3, [r0, #12]
 8007c86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c88:	4798      	blx	r3
 8007c8a:	4284      	cmp	r4, r0
 8007c8c:	bfb8      	it	lt
 8007c8e:	4604      	movlt	r4, r0
 8007c90:	b90d      	cbnz	r5, 8007c96 <LCD_GetXSizeMax+0x22>
 8007c92:	4620      	mov	r0, r4
 8007c94:	bd38      	pop	{r3, r4, r5, pc}
 8007c96:	2500      	movs	r5, #0
 8007c98:	4628      	mov	r0, r5
 8007c9a:	f7fd fe7d 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007c9e:	2101      	movs	r1, #1
 8007ca0:	2800      	cmp	r0, #0
 8007ca2:	d1ef      	bne.n	8007c84 <LCD_GetXSizeMax+0x10>
 8007ca4:	e7f1      	b.n	8007c8a <LCD_GetXSizeMax+0x16>
 8007ca6:	bf00      	nop

08007ca8 <LCD_GetYSizeMax>:
 8007ca8:	b538      	push	{r3, r4, r5, lr}
 8007caa:	2501      	movs	r5, #1
 8007cac:	4628      	mov	r0, r5
 8007cae:	f7fd fe73 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007cb2:	2400      	movs	r4, #0
 8007cb4:	2102      	movs	r1, #2
 8007cb6:	b178      	cbz	r0, 8007cd8 <LCD_GetYSizeMax+0x30>
 8007cb8:	68c3      	ldr	r3, [r0, #12]
 8007cba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007cbc:	4798      	blx	r3
 8007cbe:	4284      	cmp	r4, r0
 8007cc0:	bfb8      	it	lt
 8007cc2:	4604      	movlt	r4, r0
 8007cc4:	b90d      	cbnz	r5, 8007cca <LCD_GetYSizeMax+0x22>
 8007cc6:	4620      	mov	r0, r4
 8007cc8:	bd38      	pop	{r3, r4, r5, pc}
 8007cca:	2500      	movs	r5, #0
 8007ccc:	4628      	mov	r0, r5
 8007cce:	f7fd fe63 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007cd2:	2102      	movs	r1, #2
 8007cd4:	2800      	cmp	r0, #0
 8007cd6:	d1ef      	bne.n	8007cb8 <LCD_GetYSizeMax+0x10>
 8007cd8:	e7f1      	b.n	8007cbe <LCD_GetYSizeMax+0x16>
 8007cda:	bf00      	nop

08007cdc <LCD_GetVXSizeMax>:
 8007cdc:	b538      	push	{r3, r4, r5, lr}
 8007cde:	2501      	movs	r5, #1
 8007ce0:	4628      	mov	r0, r5
 8007ce2:	f7fd fe59 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007ce6:	2400      	movs	r4, #0
 8007ce8:	2103      	movs	r1, #3
 8007cea:	b178      	cbz	r0, 8007d0c <LCD_GetVXSizeMax+0x30>
 8007cec:	68c3      	ldr	r3, [r0, #12]
 8007cee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007cf0:	4798      	blx	r3
 8007cf2:	4284      	cmp	r4, r0
 8007cf4:	bfb8      	it	lt
 8007cf6:	4604      	movlt	r4, r0
 8007cf8:	b90d      	cbnz	r5, 8007cfe <LCD_GetVXSizeMax+0x22>
 8007cfa:	4620      	mov	r0, r4
 8007cfc:	bd38      	pop	{r3, r4, r5, pc}
 8007cfe:	2500      	movs	r5, #0
 8007d00:	4628      	mov	r0, r5
 8007d02:	f7fd fe49 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007d06:	2103      	movs	r1, #3
 8007d08:	2800      	cmp	r0, #0
 8007d0a:	d1ef      	bne.n	8007cec <LCD_GetVXSizeMax+0x10>
 8007d0c:	e7f1      	b.n	8007cf2 <LCD_GetVXSizeMax+0x16>
 8007d0e:	bf00      	nop

08007d10 <LCD_SetDisplaySize>:
 8007d10:	4b01      	ldr	r3, [pc, #4]	; (8007d18 <LCD_SetDisplaySize+0x8>)
 8007d12:	e883 0003 	stmia.w	r3, {r0, r1}
 8007d16:	4770      	bx	lr
 8007d18:	20000544 	.word	0x20000544

08007d1c <LCD_GetXSizeDisplay>:
 8007d1c:	4b01      	ldr	r3, [pc, #4]	; (8007d24 <LCD_GetXSizeDisplay+0x8>)
 8007d1e:	6818      	ldr	r0, [r3, #0]
 8007d20:	4770      	bx	lr
 8007d22:	bf00      	nop
 8007d24:	20000544 	.word	0x20000544

08007d28 <LCD_GetYSizeDisplay>:
 8007d28:	4b01      	ldr	r3, [pc, #4]	; (8007d30 <LCD_GetYSizeDisplay+0x8>)
 8007d2a:	6858      	ldr	r0, [r3, #4]
 8007d2c:	4770      	bx	lr
 8007d2e:	bf00      	nop
 8007d30:	20000544 	.word	0x20000544

08007d34 <LCD__GetBPPDevice>:
 8007d34:	b1c8      	cbz	r0, 8007d6a <LCD__GetBPPDevice+0x36>
 8007d36:	f030 0301 	bics.w	r3, r0, #1
 8007d3a:	d017      	beq.n	8007d6c <LCD__GetBPPDevice+0x38>
 8007d3c:	f030 0303 	bics.w	r3, r0, #3
 8007d40:	d101      	bne.n	8007d46 <LCD__GetBPPDevice+0x12>
 8007d42:	2008      	movs	r0, #8
 8007d44:	4770      	bx	lr
 8007d46:	f030 0307 	bics.w	r3, r0, #7
 8007d4a:	d0fa      	beq.n	8007d42 <LCD__GetBPPDevice+0xe>
 8007d4c:	f030 030f 	bics.w	r3, r0, #15
 8007d50:	d0f7      	beq.n	8007d42 <LCD__GetBPPDevice+0xe>
 8007d52:	f030 031f 	bics.w	r3, r0, #31
 8007d56:	d0f4      	beq.n	8007d42 <LCD__GetBPPDevice+0xe>
 8007d58:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8007d5c:	d0f1      	beq.n	8007d42 <LCD__GetBPPDevice+0xe>
 8007d5e:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 8007d62:	f023 0301 	bic.w	r3, r3, #1
 8007d66:	b91b      	cbnz	r3, 8007d70 <LCD__GetBPPDevice+0x3c>
 8007d68:	2010      	movs	r0, #16
 8007d6a:	4770      	bx	lr
 8007d6c:	2001      	movs	r0, #1
 8007d6e:	4770      	bx	lr
 8007d70:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 8007d74:	f023 030f 	bic.w	r3, r3, #15
 8007d78:	2b00      	cmp	r3, #0
 8007d7a:	d0f5      	beq.n	8007d68 <LCD__GetBPPDevice+0x34>
 8007d7c:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8007d80:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007d84:	2b00      	cmp	r3, #0
 8007d86:	d0ef      	beq.n	8007d68 <LCD__GetBPPDevice+0x34>
 8007d88:	0c00      	lsrs	r0, r0, #16
 8007d8a:	0400      	lsls	r0, r0, #16
 8007d8c:	2800      	cmp	r0, #0
 8007d8e:	bf0c      	ite	eq
 8007d90:	2010      	moveq	r0, #16
 8007d92:	2020      	movne	r0, #32
 8007d94:	4770      	bx	lr
 8007d96:	bf00      	nop

08007d98 <LCD_GetNumLayers>:
 8007d98:	b510      	push	{r4, lr}
 8007d9a:	2000      	movs	r0, #0
 8007d9c:	f7fd fdfc 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007da0:	1c04      	adds	r4, r0, #0
 8007da2:	f04f 0001 	mov.w	r0, #1
 8007da6:	bf18      	it	ne
 8007da8:	2401      	movne	r4, #1
 8007daa:	f7fd fdf5 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8007dae:	b100      	cbz	r0, 8007db2 <LCD_GetNumLayers+0x1a>
 8007db0:	3401      	adds	r4, #1
 8007db2:	4620      	mov	r0, r4
 8007db4:	bd10      	pop	{r4, pc}
 8007db6:	bf00      	nop

08007db8 <LCD_ReadRectEx>:
 8007db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007dbc:	b085      	sub	sp, #20
 8007dbe:	4681      	mov	r9, r0
 8007dc0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8007dc2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8007dc4:	68ed      	ldr	r5, [r5, #12]
 8007dc6:	f8d5 8024 	ldr.w	r8, [r5, #36]	; 0x24
 8007dca:	696f      	ldr	r7, [r5, #20]
 8007dcc:	4616      	mov	r6, r2
 8007dce:	460d      	mov	r5, r1
 8007dd0:	469a      	mov	sl, r3
 8007dd2:	f1b8 0f00 	cmp.w	r8, #0
 8007dd6:	d00f      	beq.n	8007df8 <LCD_ReadRectEx+0x40>
 8007dd8:	2101      	movs	r1, #1
 8007dda:	a80f      	add	r0, sp, #60	; 0x3c
 8007ddc:	47c0      	blx	r8
 8007dde:	4680      	mov	r8, r0
 8007de0:	b150      	cbz	r0, 8007df8 <LCD_ReadRectEx+0x40>
 8007de2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007de4:	9401      	str	r4, [sp, #4]
 8007de6:	f8cd a000 	str.w	sl, [sp]
 8007dea:	4633      	mov	r3, r6
 8007dec:	462a      	mov	r2, r5
 8007dee:	4649      	mov	r1, r9
 8007df0:	47c0      	blx	r8
 8007df2:	b005      	add	sp, #20
 8007df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007df8:	4b6b      	ldr	r3, [pc, #428]	; (8007fa8 <LCD_ReadRectEx+0x1f0>)
 8007dfa:	681b      	ldr	r3, [r3, #0]
 8007dfc:	7c58      	ldrb	r0, [r3, #17]
 8007dfe:	f7ff ff0f 	bl	8007c20 <GUI_GetBitsPerPixelEx>
 8007e02:	2808      	cmp	r0, #8
 8007e04:	dc34      	bgt.n	8007e70 <LCD_ReadRectEx+0xb8>
 8007e06:	2301      	movs	r3, #1
 8007e08:	4555      	cmp	r5, sl
 8007e0a:	dcf2      	bgt.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007e0c:	2b02      	cmp	r3, #2
 8007e0e:	d00a      	beq.n	8007e26 <LCD_ReadRectEx+0x6e>
 8007e10:	2b04      	cmp	r3, #4
 8007e12:	d01d      	beq.n	8007e50 <LCD_ReadRectEx+0x98>
 8007e14:	2b01      	cmp	r3, #1
 8007e16:	d030      	beq.n	8007e7a <LCD_ReadRectEx+0xc2>
 8007e18:	3501      	adds	r5, #1
 8007e1a:	45aa      	cmp	sl, r5
 8007e1c:	daf6      	bge.n	8007e0c <LCD_ReadRectEx+0x54>
 8007e1e:	e7e8      	b.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007e20:	3501      	adds	r5, #1
 8007e22:	4555      	cmp	r5, sl
 8007e24:	dce5      	bgt.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007e26:	45b1      	cmp	r9, r6
 8007e28:	bfd8      	it	le
 8007e2a:	46c8      	movle	r8, r9
 8007e2c:	dcf8      	bgt.n	8007e20 <LCD_ReadRectEx+0x68>
 8007e2e:	4641      	mov	r1, r8
 8007e30:	462a      	mov	r2, r5
 8007e32:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007e34:	47b8      	blx	r7
 8007e36:	f108 0801 	add.w	r8, r8, #1
 8007e3a:	4546      	cmp	r6, r8
 8007e3c:	f824 0b02 	strh.w	r0, [r4], #2
 8007e40:	daf5      	bge.n	8007e2e <LCD_ReadRectEx+0x76>
 8007e42:	3501      	adds	r5, #1
 8007e44:	45aa      	cmp	sl, r5
 8007e46:	daee      	bge.n	8007e26 <LCD_ReadRectEx+0x6e>
 8007e48:	e7d3      	b.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007e4a:	3501      	adds	r5, #1
 8007e4c:	45aa      	cmp	sl, r5
 8007e4e:	dbd0      	blt.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007e50:	45b1      	cmp	r9, r6
 8007e52:	bfd8      	it	le
 8007e54:	46c8      	movle	r8, r9
 8007e56:	f300 80a1 	bgt.w	8007f9c <LCD_ReadRectEx+0x1e4>
 8007e5a:	4641      	mov	r1, r8
 8007e5c:	462a      	mov	r2, r5
 8007e5e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007e60:	47b8      	blx	r7
 8007e62:	f108 0801 	add.w	r8, r8, #1
 8007e66:	4546      	cmp	r6, r8
 8007e68:	f844 0b04 	str.w	r0, [r4], #4
 8007e6c:	daf5      	bge.n	8007e5a <LCD_ReadRectEx+0xa2>
 8007e6e:	e7ec      	b.n	8007e4a <LCD_ReadRectEx+0x92>
 8007e70:	2811      	cmp	r0, #17
 8007e72:	bfb4      	ite	lt
 8007e74:	2302      	movlt	r3, #2
 8007e76:	2304      	movge	r3, #4
 8007e78:	e7c6      	b.n	8007e08 <LCD_ReadRectEx+0x50>
 8007e7a:	1e43      	subs	r3, r0, #1
 8007e7c:	9303      	str	r3, [sp, #12]
 8007e7e:	f04f 0800 	mov.w	r8, #0
 8007e82:	f8cd a008 	str.w	sl, [sp, #8]
 8007e86:	9b03      	ldr	r3, [sp, #12]
 8007e88:	2b07      	cmp	r3, #7
 8007e8a:	f200 8081 	bhi.w	8007f90 <LCD_ReadRectEx+0x1d8>
 8007e8e:	e8df f003 	tbb	[pc, r3]
 8007e92:	5833      	.short	0x5833
 8007e94:	04041717 	.word	0x04041717
 8007e98:	0404      	.short	0x0404
 8007e9a:	45b1      	cmp	r9, r6
 8007e9c:	bfd8      	it	le
 8007e9e:	46cb      	movle	fp, r9
 8007ea0:	dc09      	bgt.n	8007eb6 <LCD_ReadRectEx+0xfe>
 8007ea2:	4659      	mov	r1, fp
 8007ea4:	462a      	mov	r2, r5
 8007ea6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007ea8:	47b8      	blx	r7
 8007eaa:	f10b 0b01 	add.w	fp, fp, #1
 8007eae:	455e      	cmp	r6, fp
 8007eb0:	f804 0b01 	strb.w	r0, [r4], #1
 8007eb4:	daf5      	bge.n	8007ea2 <LCD_ReadRectEx+0xea>
 8007eb6:	9b02      	ldr	r3, [sp, #8]
 8007eb8:	3501      	adds	r5, #1
 8007eba:	42ab      	cmp	r3, r5
 8007ebc:	dae3      	bge.n	8007e86 <LCD_ReadRectEx+0xce>
 8007ebe:	e798      	b.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007ec0:	45b1      	cmp	r9, r6
 8007ec2:	dcf8      	bgt.n	8007eb6 <LCD_ReadRectEx+0xfe>
 8007ec4:	46ca      	mov	sl, r9
 8007ec6:	f04f 0b0f 	mov.w	fp, #15
 8007eca:	4651      	mov	r1, sl
 8007ecc:	462a      	mov	r2, r5
 8007ece:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007ed0:	47b8      	blx	r7
 8007ed2:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8007ed6:	7821      	ldrb	r1, [r4, #0]
 8007ed8:	f1c3 0204 	rsb	r2, r3, #4
 8007edc:	fa0b f303 	lsl.w	r3, fp, r3
 8007ee0:	4090      	lsls	r0, r2
 8007ee2:	400b      	ands	r3, r1
 8007ee4:	f10a 0a01 	add.w	sl, sl, #1
 8007ee8:	4303      	orrs	r3, r0
 8007eea:	4556      	cmp	r6, sl
 8007eec:	7023      	strb	r3, [r4, #0]
 8007eee:	4444      	add	r4, r8
 8007ef0:	f088 0801 	eor.w	r8, r8, #1
 8007ef4:	dae9      	bge.n	8007eca <LCD_ReadRectEx+0x112>
 8007ef6:	e7de      	b.n	8007eb6 <LCD_ReadRectEx+0xfe>
 8007ef8:	f8dd b008 	ldr.w	fp, [sp, #8]
 8007efc:	45b1      	cmp	r9, r6
 8007efe:	dcda      	bgt.n	8007eb6 <LCD_ReadRectEx+0xfe>
 8007f00:	46ca      	mov	sl, r9
 8007f02:	4651      	mov	r1, sl
 8007f04:	462a      	mov	r2, r5
 8007f06:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007f08:	47b8      	blx	r7
 8007f0a:	7821      	ldrb	r1, [r4, #0]
 8007f0c:	f64f 727f 	movw	r2, #65407	; 0xff7f
 8007f10:	f1c8 0307 	rsb	r3, r8, #7
 8007f14:	fa42 f208 	asr.w	r2, r2, r8
 8007f18:	4098      	lsls	r0, r3
 8007f1a:	f10a 0a01 	add.w	sl, sl, #1
 8007f1e:	ea01 0302 	and.w	r3, r1, r2
 8007f22:	f108 0201 	add.w	r2, r8, #1
 8007f26:	4318      	orrs	r0, r3
 8007f28:	f022 0807 	bic.w	r8, r2, #7
 8007f2c:	4556      	cmp	r6, sl
 8007f2e:	7020      	strb	r0, [r4, #0]
 8007f30:	fa42 f808 	asr.w	r8, r2, r8
 8007f34:	eb04 04e2 	add.w	r4, r4, r2, asr #3
 8007f38:	dae3      	bge.n	8007f02 <LCD_ReadRectEx+0x14a>
 8007f3a:	3501      	adds	r5, #1
 8007f3c:	45ab      	cmp	fp, r5
 8007f3e:	dadd      	bge.n	8007efc <LCD_ReadRectEx+0x144>
 8007f40:	e757      	b.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007f42:	f64f 7b3f 	movw	fp, #65343	; 0xff3f
 8007f46:	45b1      	cmp	r9, r6
 8007f48:	dcb5      	bgt.n	8007eb6 <LCD_ReadRectEx+0xfe>
 8007f4a:	46ca      	mov	sl, r9
 8007f4c:	4651      	mov	r1, sl
 8007f4e:	462a      	mov	r2, r5
 8007f50:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007f52:	47b8      	blx	r7
 8007f54:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8007f58:	f894 e000 	ldrb.w	lr, [r4]
 8007f5c:	f1c3 0206 	rsb	r2, r3, #6
 8007f60:	fa4b f303 	asr.w	r3, fp, r3
 8007f64:	f108 0101 	add.w	r1, r8, #1
 8007f68:	4090      	lsls	r0, r2
 8007f6a:	ea0e 0303 	and.w	r3, lr, r3
 8007f6e:	f10a 0a01 	add.w	sl, sl, #1
 8007f72:	4303      	orrs	r3, r0
 8007f74:	f021 0803 	bic.w	r8, r1, #3
 8007f78:	4556      	cmp	r6, sl
 8007f7a:	7023      	strb	r3, [r4, #0]
 8007f7c:	fa41 f808 	asr.w	r8, r1, r8
 8007f80:	eb04 04a1 	add.w	r4, r4, r1, asr #2
 8007f84:	dae2      	bge.n	8007f4c <LCD_ReadRectEx+0x194>
 8007f86:	9b02      	ldr	r3, [sp, #8]
 8007f88:	3501      	adds	r5, #1
 8007f8a:	42ab      	cmp	r3, r5
 8007f8c:	dadb      	bge.n	8007f46 <LCD_ReadRectEx+0x18e>
 8007f8e:	e730      	b.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007f90:	9b02      	ldr	r3, [sp, #8]
 8007f92:	3501      	adds	r5, #1
 8007f94:	429d      	cmp	r5, r3
 8007f96:	f77f af76 	ble.w	8007e86 <LCD_ReadRectEx+0xce>
 8007f9a:	e72a      	b.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007f9c:	3501      	adds	r5, #1
 8007f9e:	4555      	cmp	r5, sl
 8007fa0:	f77f af56 	ble.w	8007e50 <LCD_ReadRectEx+0x98>
 8007fa4:	e725      	b.n	8007df2 <LCD_ReadRectEx+0x3a>
 8007fa6:	bf00      	nop
 8007fa8:	20000018 	.word	0x20000018

08007fac <GUI_ReadRectEx>:
 8007fac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007fae:	4c16      	ldr	r4, [pc, #88]	; (8008008 <GUI_ReadRectEx+0x5c>)
 8007fb0:	9e05      	ldr	r6, [sp, #20]
 8007fb2:	6825      	ldr	r5, [r4, #0]
 8007fb4:	9c06      	ldr	r4, [sp, #24]
 8007fb6:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8007fba:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 8007fbe:	4570      	cmp	r0, lr
 8007fc0:	bfb8      	it	lt
 8007fc2:	4670      	movlt	r0, lr
 8007fc4:	42ba      	cmp	r2, r7
 8007fc6:	bfa8      	it	ge
 8007fc8:	463a      	movge	r2, r7
 8007fca:	4290      	cmp	r0, r2
 8007fcc:	dc1a      	bgt.n	8008004 <GUI_ReadRectEx+0x58>
 8007fce:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8007fd2:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 8007fd6:	42b9      	cmp	r1, r7
 8007fd8:	bfb8      	it	lt
 8007fda:	4639      	movlt	r1, r7
 8007fdc:	42ab      	cmp	r3, r5
 8007fde:	bfa8      	it	ge
 8007fe0:	462b      	movge	r3, r5
 8007fe2:	428b      	cmp	r3, r1
 8007fe4:	da03      	bge.n	8007fee <GUI_ReadRectEx+0x42>
 8007fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007fe8:	6825      	ldr	r5, [r4, #0]
 8007fea:	b12d      	cbz	r5, 8007ff8 <GUI_ReadRectEx+0x4c>
 8007fec:	462c      	mov	r4, r5
 8007fee:	68e5      	ldr	r5, [r4, #12]
 8007ff0:	682d      	ldr	r5, [r5, #0]
 8007ff2:	f035 0504 	bics.w	r5, r5, #4
 8007ff6:	d1f7      	bne.n	8007fe8 <GUI_ReadRectEx+0x3c>
 8007ff8:	9406      	str	r4, [sp, #24]
 8007ffa:	9605      	str	r6, [sp, #20]
 8007ffc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008000:	f7ff beda 	b.w	8007db8 <LCD_ReadRectEx>
 8008004:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008006:	bf00      	nop
 8008008:	20000018 	.word	0x20000018

0800800c <LCD_SelectLCD>:
 800800c:	b510      	push	{r4, lr}
 800800e:	4c0e      	ldr	r4, [pc, #56]	; (8008048 <LCD_SelectLCD+0x3c>)
 8008010:	4b0e      	ldr	r3, [pc, #56]	; (800804c <LCD_SelectLCD+0x40>)
 8008012:	6822      	ldr	r2, [r4, #0]
 8008014:	7c51      	ldrb	r1, [r2, #17]
 8008016:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800801a:	b138      	cbz	r0, 800802c <LCD_SelectLCD+0x20>
 800801c:	68c3      	ldr	r3, [r0, #12]
 800801e:	b113      	cbz	r3, 8008026 <LCD_SelectLCD+0x1a>
 8008020:	681b      	ldr	r3, [r3, #0]
 8008022:	2b04      	cmp	r3, #4
 8008024:	d00b      	beq.n	800803e <LCD_SelectLCD+0x32>
 8008026:	6800      	ldr	r0, [r0, #0]
 8008028:	2800      	cmp	r0, #0
 800802a:	d1f7      	bne.n	800801c <LCD_SelectLCD+0x10>
 800802c:	2100      	movs	r1, #0
 800802e:	f102 0308 	add.w	r3, r2, #8
 8008032:	6611      	str	r1, [r2, #96]	; 0x60
 8008034:	6153      	str	r3, [r2, #20]
 8008036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800803a:	f7ff bb91 	b.w	8007760 <LCD_SetClipRectMax>
 800803e:	f7fd fceb 	bl	8005a18 <GUI_DEVICE_Unlink>
 8008042:	6822      	ldr	r2, [r4, #0]
 8008044:	e7f2      	b.n	800802c <LCD_SelectLCD+0x20>
 8008046:	bf00      	nop
 8008048:	20000018 	.word	0x20000018
 800804c:	2001c19c 	.word	0x2001c19c

08008050 <LCD_GetPosEx>:
 8008050:	b530      	push	{r4, r5, lr}
 8008052:	b083      	sub	sp, #12
 8008054:	460c      	mov	r4, r1
 8008056:	4615      	mov	r5, r2
 8008058:	f7fd fc9e 	bl	8005998 <GUI_DEVICE__GetpDriver>
 800805c:	9001      	str	r0, [sp, #4]
 800805e:	b170      	cbz	r0, 800807e <LCD_GetPosEx+0x2e>
 8008060:	68c3      	ldr	r3, [r0, #12]
 8008062:	2104      	movs	r1, #4
 8008064:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008066:	eb0d 0001 	add.w	r0, sp, r1
 800806a:	4798      	blx	r3
 800806c:	4603      	mov	r3, r0
 800806e:	b130      	cbz	r0, 800807e <LCD_GetPosEx+0x2e>
 8008070:	9801      	ldr	r0, [sp, #4]
 8008072:	462a      	mov	r2, r5
 8008074:	4621      	mov	r1, r4
 8008076:	4798      	blx	r3
 8008078:	2000      	movs	r0, #0
 800807a:	b003      	add	sp, #12
 800807c:	bd30      	pop	{r4, r5, pc}
 800807e:	2001      	movs	r0, #1
 8008080:	b003      	add	sp, #12
 8008082:	bd30      	pop	{r4, r5, pc}

08008084 <LCD_SetDevFunc>:
 8008084:	b530      	push	{r4, r5, lr}
 8008086:	b083      	sub	sp, #12
 8008088:	460c      	mov	r4, r1
 800808a:	4615      	mov	r5, r2
 800808c:	f7fd fc84 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8008090:	9001      	str	r0, [sp, #4]
 8008092:	b168      	cbz	r0, 80080b0 <LCD_SetDevFunc+0x2c>
 8008094:	68c3      	ldr	r3, [r0, #12]
 8008096:	2116      	movs	r1, #22
 8008098:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800809a:	a801      	add	r0, sp, #4
 800809c:	4798      	blx	r3
 800809e:	4603      	mov	r3, r0
 80080a0:	b130      	cbz	r0, 80080b0 <LCD_SetDevFunc+0x2c>
 80080a2:	9801      	ldr	r0, [sp, #4]
 80080a4:	462a      	mov	r2, r5
 80080a6:	4621      	mov	r1, r4
 80080a8:	4798      	blx	r3
 80080aa:	2000      	movs	r0, #0
 80080ac:	b003      	add	sp, #12
 80080ae:	bd30      	pop	{r4, r5, pc}
 80080b0:	2001      	movs	r0, #1
 80080b2:	b003      	add	sp, #12
 80080b4:	bd30      	pop	{r4, r5, pc}
 80080b6:	bf00      	nop

080080b8 <LCD_SetLUTEntryEx>:
 80080b8:	b530      	push	{r4, r5, lr}
 80080ba:	b083      	sub	sp, #12
 80080bc:	460c      	mov	r4, r1
 80080be:	4615      	mov	r5, r2
 80080c0:	f7fd fc6a 	bl	8005998 <GUI_DEVICE__GetpDriver>
 80080c4:	9001      	str	r0, [sp, #4]
 80080c6:	b168      	cbz	r0, 80080e4 <LCD_SetLUTEntryEx+0x2c>
 80080c8:	68c3      	ldr	r3, [r0, #12]
 80080ca:	2110      	movs	r1, #16
 80080cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80080ce:	a801      	add	r0, sp, #4
 80080d0:	4798      	blx	r3
 80080d2:	4603      	mov	r3, r0
 80080d4:	b130      	cbz	r0, 80080e4 <LCD_SetLUTEntryEx+0x2c>
 80080d6:	9801      	ldr	r0, [sp, #4]
 80080d8:	462a      	mov	r2, r5
 80080da:	4621      	mov	r1, r4
 80080dc:	4798      	blx	r3
 80080de:	2000      	movs	r0, #0
 80080e0:	b003      	add	sp, #12
 80080e2:	bd30      	pop	{r4, r5, pc}
 80080e4:	2001      	movs	r0, #1
 80080e6:	b003      	add	sp, #12
 80080e8:	bd30      	pop	{r4, r5, pc}
 80080ea:	bf00      	nop

080080ec <LCD_SetPosEx>:
 80080ec:	b530      	push	{r4, r5, lr}
 80080ee:	b083      	sub	sp, #12
 80080f0:	460c      	mov	r4, r1
 80080f2:	4615      	mov	r5, r2
 80080f4:	f7fd fc50 	bl	8005998 <GUI_DEVICE__GetpDriver>
 80080f8:	9001      	str	r0, [sp, #4]
 80080fa:	b168      	cbz	r0, 8008118 <LCD_SetPosEx+0x2c>
 80080fc:	68c3      	ldr	r3, [r0, #12]
 80080fe:	2103      	movs	r1, #3
 8008100:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008102:	a801      	add	r0, sp, #4
 8008104:	4798      	blx	r3
 8008106:	4603      	mov	r3, r0
 8008108:	b130      	cbz	r0, 8008118 <LCD_SetPosEx+0x2c>
 800810a:	9801      	ldr	r0, [sp, #4]
 800810c:	462a      	mov	r2, r5
 800810e:	4621      	mov	r1, r4
 8008110:	4798      	blx	r3
 8008112:	2000      	movs	r0, #0
 8008114:	b003      	add	sp, #12
 8008116:	bd30      	pop	{r4, r5, pc}
 8008118:	2001      	movs	r0, #1
 800811a:	b003      	add	sp, #12
 800811c:	bd30      	pop	{r4, r5, pc}
 800811e:	bf00      	nop

08008120 <LCD_SetSizeEx>:
 8008120:	b530      	push	{r4, r5, lr}
 8008122:	b083      	sub	sp, #12
 8008124:	460c      	mov	r4, r1
 8008126:	4615      	mov	r5, r2
 8008128:	f7fd fc36 	bl	8005998 <GUI_DEVICE__GetpDriver>
 800812c:	9001      	str	r0, [sp, #4]
 800812e:	b168      	cbz	r0, 800814c <LCD_SetSizeEx+0x2c>
 8008130:	68c3      	ldr	r3, [r0, #12]
 8008132:	210b      	movs	r1, #11
 8008134:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008136:	a801      	add	r0, sp, #4
 8008138:	4798      	blx	r3
 800813a:	4603      	mov	r3, r0
 800813c:	b130      	cbz	r0, 800814c <LCD_SetSizeEx+0x2c>
 800813e:	9801      	ldr	r0, [sp, #4]
 8008140:	462a      	mov	r2, r5
 8008142:	4621      	mov	r1, r4
 8008144:	4798      	blx	r3
 8008146:	2000      	movs	r0, #0
 8008148:	b003      	add	sp, #12
 800814a:	bd30      	pop	{r4, r5, pc}
 800814c:	2001      	movs	r0, #1
 800814e:	b003      	add	sp, #12
 8008150:	bd30      	pop	{r4, r5, pc}
 8008152:	bf00      	nop

08008154 <LCD_SetVRAMAddrEx>:
 8008154:	b510      	push	{r4, lr}
 8008156:	b082      	sub	sp, #8
 8008158:	460c      	mov	r4, r1
 800815a:	f7fd fc1d 	bl	8005998 <GUI_DEVICE__GetpDriver>
 800815e:	9001      	str	r0, [sp, #4]
 8008160:	b160      	cbz	r0, 800817c <LCD_SetVRAMAddrEx+0x28>
 8008162:	68c3      	ldr	r3, [r0, #12]
 8008164:	2109      	movs	r1, #9
 8008166:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008168:	a801      	add	r0, sp, #4
 800816a:	4798      	blx	r3
 800816c:	4603      	mov	r3, r0
 800816e:	b128      	cbz	r0, 800817c <LCD_SetVRAMAddrEx+0x28>
 8008170:	9801      	ldr	r0, [sp, #4]
 8008172:	4621      	mov	r1, r4
 8008174:	4798      	blx	r3
 8008176:	2000      	movs	r0, #0
 8008178:	b002      	add	sp, #8
 800817a:	bd10      	pop	{r4, pc}
 800817c:	2001      	movs	r0, #1
 800817e:	b002      	add	sp, #8
 8008180:	bd10      	pop	{r4, pc}
 8008182:	bf00      	nop

08008184 <LCD_SetVSizeEx>:
 8008184:	b530      	push	{r4, r5, lr}
 8008186:	b083      	sub	sp, #12
 8008188:	460c      	mov	r4, r1
 800818a:	4615      	mov	r5, r2
 800818c:	f7fd fc04 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8008190:	9001      	str	r0, [sp, #4]
 8008192:	b168      	cbz	r0, 80081b0 <LCD_SetVSizeEx+0x2c>
 8008194:	68c3      	ldr	r3, [r0, #12]
 8008196:	210a      	movs	r1, #10
 8008198:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800819a:	a801      	add	r0, sp, #4
 800819c:	4798      	blx	r3
 800819e:	4603      	mov	r3, r0
 80081a0:	b130      	cbz	r0, 80081b0 <LCD_SetVSizeEx+0x2c>
 80081a2:	9801      	ldr	r0, [sp, #4]
 80081a4:	462a      	mov	r2, r5
 80081a6:	4621      	mov	r1, r4
 80081a8:	4798      	blx	r3
 80081aa:	2000      	movs	r0, #0
 80081ac:	b003      	add	sp, #12
 80081ae:	bd30      	pop	{r4, r5, pc}
 80081b0:	2001      	movs	r0, #1
 80081b2:	b003      	add	sp, #12
 80081b4:	bd30      	pop	{r4, r5, pc}
 80081b6:	bf00      	nop

080081b8 <LCD_UpdateColorIndices>:
 80081b8:	b510      	push	{r4, lr}
 80081ba:	4c07      	ldr	r4, [pc, #28]	; (80081d8 <LCD_UpdateColorIndices+0x20>)
 80081bc:	6823      	ldr	r3, [r4, #0]
 80081be:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80081c0:	f7ff fb64 	bl	800788c <LCD_Color2Index>
 80081c4:	f7ff fb7e 	bl	80078c4 <LCD_SetColorIndex>
 80081c8:	6823      	ldr	r3, [r4, #0]
 80081ca:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80081cc:	f7ff fb5e 	bl	800788c <LCD_Color2Index>
 80081d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80081d4:	f7ff bb82 	b.w	80078dc <LCD_SetBkColorIndex>
 80081d8:	20000018 	.word	0x20000018

080081dc <_GetRect>:
 80081dc:	6883      	ldr	r3, [r0, #8]
 80081de:	699a      	ldr	r2, [r3, #24]
 80081e0:	69db      	ldr	r3, [r3, #28]
 80081e2:	2000      	movs	r0, #0
 80081e4:	3a01      	subs	r2, #1
 80081e6:	3b01      	subs	r3, #1
 80081e8:	808a      	strh	r2, [r1, #4]
 80081ea:	80cb      	strh	r3, [r1, #6]
 80081ec:	8008      	strh	r0, [r1, #0]
 80081ee:	8048      	strh	r0, [r1, #2]
 80081f0:	4770      	bx	lr
 80081f2:	bf00      	nop

080081f4 <_SetPixelIndex>:
 80081f4:	b410      	push	{r4}
 80081f6:	6884      	ldr	r4, [r0, #8]
 80081f8:	6a20      	ldr	r0, [r4, #32]
 80081fa:	6824      	ldr	r4, [r4, #0]
 80081fc:	fb00 1202 	mla	r2, r0, r2, r1
 8008200:	f824 3012 	strh.w	r3, [r4, r2, lsl #1]
 8008204:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008208:	4770      	bx	lr
 800820a:	bf00      	nop

0800820c <_GetPixelIndex>:
 800820c:	6880      	ldr	r0, [r0, #8]
 800820e:	6a03      	ldr	r3, [r0, #32]
 8008210:	6800      	ldr	r0, [r0, #0]
 8008212:	fb03 1202 	mla	r2, r3, r2, r1
 8008216:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
 800821a:	4770      	bx	lr

0800821c <_XorPixel>:
 800821c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800821e:	460f      	mov	r7, r1
 8008220:	6881      	ldr	r1, [r0, #8]
 8008222:	6904      	ldr	r4, [r0, #16]
 8008224:	6a0b      	ldr	r3, [r1, #32]
 8008226:	4606      	mov	r6, r0
 8008228:	fb03 7302 	mla	r3, r3, r2, r7
 800822c:	6808      	ldr	r0, [r1, #0]
 800822e:	68a1      	ldr	r1, [r4, #8]
 8008230:	f830 5013 	ldrh.w	r5, [r0, r3, lsl #1]
 8008234:	4614      	mov	r4, r2
 8008236:	4788      	blx	r1
 8008238:	68b3      	ldr	r3, [r6, #8]
 800823a:	6a19      	ldr	r1, [r3, #32]
 800823c:	681b      	ldr	r3, [r3, #0]
 800823e:	fb01 7404 	mla	r4, r1, r4, r7
 8008242:	4068      	eors	r0, r5
 8008244:	f823 0014 	strh.w	r0, [r3, r4, lsl #1]
 8008248:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800824a:	bf00      	nop

0800824c <_GetDevProp>:
 800824c:	3901      	subs	r1, #1
 800824e:	6883      	ldr	r3, [r0, #8]
 8008250:	290d      	cmp	r1, #13
 8008252:	d816      	bhi.n	8008282 <_GetDevProp+0x36>
 8008254:	e8df f001 	tbb	[pc, r1]
 8008258:	0d13110f 	.word	0x0d13110f
 800825c:	0b151515 	.word	0x0b151515
 8008260:	07090907 	.word	0x07090907
 8008264:	0707      	.short	0x0707
 8008266:	2000      	movs	r0, #0
 8008268:	4770      	bx	lr
 800826a:	2001      	movs	r0, #1
 800826c:	4770      	bx	lr
 800826e:	2010      	movs	r0, #16
 8008270:	4770      	bx	lr
 8008272:	69d8      	ldr	r0, [r3, #28]
 8008274:	4770      	bx	lr
 8008276:	6918      	ldr	r0, [r3, #16]
 8008278:	4770      	bx	lr
 800827a:	6958      	ldr	r0, [r3, #20]
 800827c:	4770      	bx	lr
 800827e:	6998      	ldr	r0, [r3, #24]
 8008280:	4770      	bx	lr
 8008282:	f04f 30ff 	mov.w	r0, #4294967295
 8008286:	4770      	bx	lr

08008288 <_GetDevData>:
 8008288:	2901      	cmp	r1, #1
 800828a:	4802      	ldr	r0, [pc, #8]	; (8008294 <_GetDevData+0xc>)
 800828c:	bf18      	it	ne
 800828e:	2000      	movne	r0, #0
 8008290:	4770      	bx	lr
 8008292:	bf00      	nop
 8008294:	0801ba78 	.word	0x0801ba78

08008298 <_ReadRect>:
 8008298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800829c:	6880      	ldr	r0, [r0, #8]
 800829e:	b085      	sub	sp, #20
 80082a0:	1a5b      	subs	r3, r3, r1
 80082a2:	f8d0 8020 	ldr.w	r8, [r0, #32]
 80082a6:	f8d0 c000 	ldr.w	ip, [r0]
 80082aa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80082ac:	1e5c      	subs	r4, r3, #1
 80082ae:	f103 0e01 	add.w	lr, r3, #1
 80082b2:	005b      	lsls	r3, r3, #1
 80082b4:	0864      	lsrs	r4, r4, #1
 80082b6:	9303      	str	r3, [sp, #12]
 80082b8:	ea4f 034e 	mov.w	r3, lr, lsl #1
 80082bc:	1c66      	adds	r6, r4, #1
 80082be:	fb08 1702 	mla	r7, r8, r2, r1
 80082c2:	9301      	str	r3, [sp, #4]
 80082c4:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80082c8:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 80082cc:	ea4f 0986 	mov.w	r9, r6, lsl #2
 80082d0:	eb0c 0547 	add.w	r5, ip, r7, lsl #1
 80082d4:	9302      	str	r3, [sp, #8]
 80082d6:	1d03      	adds	r3, r0, #4
 80082d8:	42ab      	cmp	r3, r5
 80082da:	bf8c      	ite	hi
 80082dc:	2300      	movhi	r3, #0
 80082de:	2301      	movls	r3, #1
 80082e0:	1d29      	adds	r1, r5, #4
 80082e2:	4288      	cmp	r0, r1
 80082e4:	bf28      	it	cs
 80082e6:	f043 0301 	orrcs.w	r3, r3, #1
 80082ea:	b36b      	cbz	r3, 8008348 <_ReadRect+0xb0>
 80082ec:	ea40 0305 	orr.w	r3, r0, r5
 80082f0:	f1be 0f0c 	cmp.w	lr, #12
 80082f4:	f3c3 0301 	ubfx	r3, r3, #0, #2
 80082f8:	bf94      	ite	ls
 80082fa:	2100      	movls	r1, #0
 80082fc:	2101      	movhi	r1, #1
 80082fe:	2b00      	cmp	r3, #0
 8008300:	bf18      	it	ne
 8008302:	2100      	movne	r1, #0
 8008304:	b301      	cbz	r1, 8008348 <_ReadRect+0xb0>
 8008306:	1f2c      	subs	r4, r5, #4
 8008308:	4601      	mov	r1, r0
 800830a:	2300      	movs	r3, #0
 800830c:	4693      	mov	fp, r2
 800830e:	3301      	adds	r3, #1
 8008310:	f854 2f04 	ldr.w	r2, [r4, #4]!
 8008314:	f841 2b04 	str.w	r2, [r1], #4
 8008318:	429e      	cmp	r6, r3
 800831a:	d8f8      	bhi.n	800830e <_ReadRect+0x76>
 800831c:	45d6      	cmp	lr, sl
 800831e:	465a      	mov	r2, fp
 8008320:	eb07 030a 	add.w	r3, r7, sl
 8008324:	d003      	beq.n	800832e <_ReadRect+0x96>
 8008326:	f83c 3013 	ldrh.w	r3, [ip, r3, lsl #1]
 800832a:	f820 3009 	strh.w	r3, [r0, r9]
 800832e:	9901      	ldr	r1, [sp, #4]
 8008330:	4408      	add	r0, r1
 8008332:	9902      	ldr	r1, [sp, #8]
 8008334:	3201      	adds	r2, #1
 8008336:	440d      	add	r5, r1
 8008338:	990e      	ldr	r1, [sp, #56]	; 0x38
 800833a:	1e53      	subs	r3, r2, #1
 800833c:	4299      	cmp	r1, r3
 800833e:	4447      	add	r7, r8
 8008340:	dcc9      	bgt.n	80082d6 <_ReadRect+0x3e>
 8008342:	b005      	add	sp, #20
 8008344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008348:	9903      	ldr	r1, [sp, #12]
 800834a:	1e83      	subs	r3, r0, #2
 800834c:	eb00 0b01 	add.w	fp, r0, r1
 8008350:	4629      	mov	r1, r5
 8008352:	f831 4b02 	ldrh.w	r4, [r1], #2
 8008356:	f823 4f02 	strh.w	r4, [r3, #2]!
 800835a:	455b      	cmp	r3, fp
 800835c:	d1f9      	bne.n	8008352 <_ReadRect+0xba>
 800835e:	e7e6      	b.n	800832e <_ReadRect+0x96>

08008360 <_GetDevFunc>:
 8008360:	3901      	subs	r1, #1
 8008362:	2928      	cmp	r1, #40	; 0x28
 8008364:	d84a      	bhi.n	80083fc <_GetDevFunc+0x9c>
 8008366:	e8df f001 	tbb	[pc, r1]
 800836a:	1d1f      	.short	0x1d1f
 800836c:	1749191b 	.word	0x1749191b
 8008370:	47154949 	.word	0x47154949
 8008374:	41494345 	.word	0x41494345
 8008378:	4949493f 	.word	0x4949493f
 800837c:	37393b3d 	.word	0x37393b3d
 8008380:	49334949 	.word	0x49334949
 8008384:	49494949 	.word	0x49494949
 8008388:	2b2d2f49 	.word	0x2b2d2f49
 800838c:	49234927 	.word	0x49234927
 8008390:	4949      	.short	0x4949
 8008392:	21          	.byte	0x21
 8008393:	00          	.byte	0x00
 8008394:	481a      	ldr	r0, [pc, #104]	; (8008400 <_GetDevFunc+0xa0>)
 8008396:	4770      	bx	lr
 8008398:	481a      	ldr	r0, [pc, #104]	; (8008404 <_GetDevFunc+0xa4>)
 800839a:	4770      	bx	lr
 800839c:	481a      	ldr	r0, [pc, #104]	; (8008408 <_GetDevFunc+0xa8>)
 800839e:	4770      	bx	lr
 80083a0:	481a      	ldr	r0, [pc, #104]	; (800840c <_GetDevFunc+0xac>)
 80083a2:	4770      	bx	lr
 80083a4:	481a      	ldr	r0, [pc, #104]	; (8008410 <_GetDevFunc+0xb0>)
 80083a6:	4770      	bx	lr
 80083a8:	481a      	ldr	r0, [pc, #104]	; (8008414 <_GetDevFunc+0xb4>)
 80083aa:	4770      	bx	lr
 80083ac:	481a      	ldr	r0, [pc, #104]	; (8008418 <_GetDevFunc+0xb8>)
 80083ae:	4770      	bx	lr
 80083b0:	6803      	ldr	r3, [r0, #0]
 80083b2:	689b      	ldr	r3, [r3, #8]
 80083b4:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80083b6:	4770      	bx	lr
 80083b8:	6803      	ldr	r3, [r0, #0]
 80083ba:	689b      	ldr	r3, [r3, #8]
 80083bc:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80083be:	4770      	bx	lr
 80083c0:	4816      	ldr	r0, [pc, #88]	; (800841c <_GetDevFunc+0xbc>)
 80083c2:	4770      	bx	lr
 80083c4:	4816      	ldr	r0, [pc, #88]	; (8008420 <_GetDevFunc+0xc0>)
 80083c6:	4770      	bx	lr
 80083c8:	6803      	ldr	r3, [r0, #0]
 80083ca:	689b      	ldr	r3, [r3, #8]
 80083cc:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 80083ce:	4770      	bx	lr
 80083d0:	6803      	ldr	r3, [r0, #0]
 80083d2:	689b      	ldr	r3, [r3, #8]
 80083d4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80083d6:	4770      	bx	lr
 80083d8:	4812      	ldr	r0, [pc, #72]	; (8008424 <_GetDevFunc+0xc4>)
 80083da:	4770      	bx	lr
 80083dc:	4812      	ldr	r0, [pc, #72]	; (8008428 <_GetDevFunc+0xc8>)
 80083de:	4770      	bx	lr
 80083e0:	4812      	ldr	r0, [pc, #72]	; (800842c <_GetDevFunc+0xcc>)
 80083e2:	4770      	bx	lr
 80083e4:	4812      	ldr	r0, [pc, #72]	; (8008430 <_GetDevFunc+0xd0>)
 80083e6:	4770      	bx	lr
 80083e8:	4812      	ldr	r0, [pc, #72]	; (8008434 <_GetDevFunc+0xd4>)
 80083ea:	4770      	bx	lr
 80083ec:	4812      	ldr	r0, [pc, #72]	; (8008438 <_GetDevFunc+0xd8>)
 80083ee:	4770      	bx	lr
 80083f0:	4812      	ldr	r0, [pc, #72]	; (800843c <_GetDevFunc+0xdc>)
 80083f2:	4770      	bx	lr
 80083f4:	4812      	ldr	r0, [pc, #72]	; (8008440 <_GetDevFunc+0xe0>)
 80083f6:	4770      	bx	lr
 80083f8:	4812      	ldr	r0, [pc, #72]	; (8008444 <_GetDevFunc+0xe4>)
 80083fa:	4770      	bx	lr
 80083fc:	2000      	movs	r0, #0
 80083fe:	4770      	bx	lr
 8008400:	08009089 	.word	0x08009089
 8008404:	08009049 	.word	0x08009049
 8008408:	08008f9d 	.word	0x08008f9d
 800840c:	08009255 	.word	0x08009255
 8008410:	08009009 	.word	0x08009009
 8008414:	08008299 	.word	0x08008299
 8008418:	08008f71 	.word	0x08008f71
 800841c:	08008fcd 	.word	0x08008fcd
 8008420:	080091cd 	.word	0x080091cd
 8008424:	0800915d 	.word	0x0800915d
 8008428:	08008449 	.word	0x08008449
 800842c:	08008461 	.word	0x08008461
 8008430:	08008479 	.word	0x08008479
 8008434:	08008491 	.word	0x08008491
 8008438:	0800849d 	.word	0x0800849d
 800843c:	08008f41 	.word	0x08008f41
 8008440:	08009101 	.word	0x08009101
 8008444:	080090c9 	.word	0x080090c9

08008448 <_SetChroma>:
 8008448:	b500      	push	{lr}
 800844a:	b083      	sub	sp, #12
 800844c:	e88d 0006 	stmia.w	sp, {r1, r2}
 8008450:	6980      	ldr	r0, [r0, #24]
 8008452:	466a      	mov	r2, sp
 8008454:	210d      	movs	r1, #13
 8008456:	f7fb fce5 	bl	8003e24 <LCD_X_DisplayDriver>
 800845a:	b003      	add	sp, #12
 800845c:	f85d fb04 	ldr.w	pc, [sp], #4

08008460 <_SetChromaMode>:
 8008460:	b500      	push	{lr}
 8008462:	b083      	sub	sp, #12
 8008464:	aa02      	add	r2, sp, #8
 8008466:	6980      	ldr	r0, [r0, #24]
 8008468:	f842 1d04 	str.w	r1, [r2, #-4]!
 800846c:	210c      	movs	r1, #12
 800846e:	f7fb fcd9 	bl	8003e24 <LCD_X_DisplayDriver>
 8008472:	b003      	add	sp, #12
 8008474:	f85d fb04 	ldr.w	pc, [sp], #4

08008478 <_SetAlphaMode>:
 8008478:	b500      	push	{lr}
 800847a:	b083      	sub	sp, #12
 800847c:	aa02      	add	r2, sp, #8
 800847e:	6980      	ldr	r0, [r0, #24]
 8008480:	f842 1d04 	str.w	r1, [r2, #-4]!
 8008484:	210b      	movs	r1, #11
 8008486:	f7fb fccd 	bl	8003e24 <LCD_X_DisplayDriver>
 800848a:	b003      	add	sp, #12
 800848c:	f85d fb04 	ldr.w	pc, [sp], #4

08008490 <_Off>:
 8008490:	6980      	ldr	r0, [r0, #24]
 8008492:	2200      	movs	r2, #0
 8008494:	2106      	movs	r1, #6
 8008496:	f7fb bcc5 	b.w	8003e24 <LCD_X_DisplayDriver>
 800849a:	bf00      	nop

0800849c <_On>:
 800849c:	6980      	ldr	r0, [r0, #24]
 800849e:	2200      	movs	r2, #0
 80084a0:	2105      	movs	r1, #5
 80084a2:	f7fb bcbf 	b.w	8003e24 <LCD_X_DisplayDriver>
 80084a6:	bf00      	nop

080084a8 <_SetOrg>:
 80084a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80084ac:	4604      	mov	r4, r0
 80084ae:	b083      	sub	sp, #12
 80084b0:	2300      	movs	r3, #0
 80084b2:	6980      	ldr	r0, [r0, #24]
 80084b4:	9301      	str	r3, [sp, #4]
 80084b6:	460f      	mov	r7, r1
 80084b8:	4690      	mov	r8, r2
 80084ba:	9300      	str	r3, [sp, #0]
 80084bc:	68a6      	ldr	r6, [r4, #8]
 80084be:	f7ff fb3d 	bl	8007b3c <LCD_GetMirrorXEx>
 80084c2:	4605      	mov	r5, r0
 80084c4:	69a0      	ldr	r0, [r4, #24]
 80084c6:	f7ff fb49 	bl	8007b5c <LCD_GetMirrorYEx>
 80084ca:	4681      	mov	r9, r0
 80084cc:	69a0      	ldr	r0, [r4, #24]
 80084ce:	f7ff fb55 	bl	8007b7c <LCD_GetSwapXYEx>
 80084d2:	0080      	lsls	r0, r0, #2
 80084d4:	ea40 0049 	orr.w	r0, r0, r9, lsl #1
 80084d8:	4328      	orrs	r0, r5
 80084da:	2807      	cmp	r0, #7
 80084dc:	d810      	bhi.n	8008500 <_SetOrg+0x58>
 80084de:	e8df f000 	tbb	[pc, r0]
 80084e2:	1a17      	.short	0x1a17
 80084e4:	3a362a22 	.word	0x3a362a22
 80084e8:	0442      	.short	0x0442
 80084ea:	69f2      	ldr	r2, [r6, #28]
 80084ec:	6970      	ldr	r0, [r6, #20]
 80084ee:	69b3      	ldr	r3, [r6, #24]
 80084f0:	6931      	ldr	r1, [r6, #16]
 80084f2:	1a12      	subs	r2, r2, r0
 80084f4:	1a59      	subs	r1, r3, r1
 80084f6:	ebc8 0202 	rsb	r2, r8, r2
 80084fa:	1bcf      	subs	r7, r1, r7
 80084fc:	e88d 0084 	stmia.w	sp, {r2, r7}
 8008500:	466a      	mov	r2, sp
 8008502:	69a0      	ldr	r0, [r4, #24]
 8008504:	2103      	movs	r1, #3
 8008506:	f7fb fc8d 	bl	8003e24 <LCD_X_DisplayDriver>
 800850a:	b003      	add	sp, #12
 800850c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008510:	e88d 0180 	stmia.w	sp, {r7, r8}
 8008514:	e7f4      	b.n	8008500 <_SetOrg+0x58>
 8008516:	69b3      	ldr	r3, [r6, #24]
 8008518:	6931      	ldr	r1, [r6, #16]
 800851a:	f8cd 8004 	str.w	r8, [sp, #4]
 800851e:	1a59      	subs	r1, r3, r1
 8008520:	1bcf      	subs	r7, r1, r7
 8008522:	9700      	str	r7, [sp, #0]
 8008524:	e7ec      	b.n	8008500 <_SetOrg+0x58>
 8008526:	69f3      	ldr	r3, [r6, #28]
 8008528:	6972      	ldr	r2, [r6, #20]
 800852a:	9700      	str	r7, [sp, #0]
 800852c:	1a9a      	subs	r2, r3, r2
 800852e:	ebc8 0202 	rsb	r2, r8, r2
 8008532:	9201      	str	r2, [sp, #4]
 8008534:	e7e4      	b.n	8008500 <_SetOrg+0x58>
 8008536:	69b1      	ldr	r1, [r6, #24]
 8008538:	6930      	ldr	r0, [r6, #16]
 800853a:	69f3      	ldr	r3, [r6, #28]
 800853c:	6972      	ldr	r2, [r6, #20]
 800853e:	1a09      	subs	r1, r1, r0
 8008540:	1a9a      	subs	r2, r3, r2
 8008542:	1bcf      	subs	r7, r1, r7
 8008544:	ebc8 0202 	rsb	r2, r8, r2
 8008548:	9700      	str	r7, [sp, #0]
 800854a:	9201      	str	r2, [sp, #4]
 800854c:	e7d8      	b.n	8008500 <_SetOrg+0x58>
 800854e:	f8cd 8000 	str.w	r8, [sp]
 8008552:	9701      	str	r7, [sp, #4]
 8008554:	e7d4      	b.n	8008500 <_SetOrg+0x58>
 8008556:	69f3      	ldr	r3, [r6, #28]
 8008558:	6972      	ldr	r2, [r6, #20]
 800855a:	9701      	str	r7, [sp, #4]
 800855c:	1a9a      	subs	r2, r3, r2
 800855e:	ebc8 0202 	rsb	r2, r8, r2
 8008562:	9200      	str	r2, [sp, #0]
 8008564:	e7cc      	b.n	8008500 <_SetOrg+0x58>
 8008566:	69b3      	ldr	r3, [r6, #24]
 8008568:	6931      	ldr	r1, [r6, #16]
 800856a:	f8cd 8000 	str.w	r8, [sp]
 800856e:	1a59      	subs	r1, r3, r1
 8008570:	1bcf      	subs	r7, r1, r7
 8008572:	9701      	str	r7, [sp, #4]
 8008574:	e7c4      	b.n	8008500 <_SetOrg+0x58>
 8008576:	bf00      	nop

08008578 <_FillRect>:
 8008578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800857c:	6887      	ldr	r7, [r0, #8]
 800857e:	b087      	sub	sp, #28
 8008580:	6b7e      	ldr	r6, [r7, #52]	; 0x34
 8008582:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8008584:	b156      	cbz	r6, 800859c <_FillRect+0x24>
 8008586:	4d98      	ldr	r5, [pc, #608]	; (80087e8 <_FillRect+0x270>)
 8008588:	6980      	ldr	r0, [r0, #24]
 800858a:	682d      	ldr	r5, [r5, #0]
 800858c:	6bed      	ldr	r5, [r5, #60]	; 0x3c
 800858e:	682d      	ldr	r5, [r5, #0]
 8008590:	e88d 0030 	stmia.w	sp, {r4, r5}
 8008594:	47b0      	blx	r6
 8008596:	b007      	add	sp, #28
 8008598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800859c:	469c      	mov	ip, r3
 800859e:	4b92      	ldr	r3, [pc, #584]	; (80087e8 <_FillRect+0x270>)
 80085a0:	6838      	ldr	r0, [r7, #0]
 80085a2:	681b      	ldr	r3, [r3, #0]
 80085a4:	4696      	mov	lr, r2
 80085a6:	6a3a      	ldr	r2, [r7, #32]
 80085a8:	ebce 0404 	rsb	r4, lr, r4
 80085ac:	460d      	mov	r5, r1
 80085ae:	1052      	asrs	r2, r2, #1
 80085b0:	7c19      	ldrb	r1, [r3, #16]
 80085b2:	9403      	str	r4, [sp, #12]
 80085b4:	4626      	mov	r6, r4
 80085b6:	4614      	mov	r4, r2
 80085b8:	086a      	lsrs	r2, r5, #1
 80085ba:	fb04 2e0e 	mla	lr, r4, lr, r2
 80085be:	ebc5 070c 	rsb	r7, r5, ip
 80085c2:	3601      	adds	r6, #1
 80085c4:	07c9      	lsls	r1, r1, #31
 80085c6:	9402      	str	r4, [sp, #8]
 80085c8:	eb00 028e 	add.w	r2, r0, lr, lsl #2
 80085cc:	f107 0401 	add.w	r4, r7, #1
 80085d0:	4630      	mov	r0, r6
 80085d2:	d54f      	bpl.n	8008674 <_FillRect+0xfc>
 80085d4:	f015 0501 	ands.w	r5, r5, #1
 80085d8:	d013      	beq.n	8008602 <_FillRect+0x8a>
 80085da:	2e00      	cmp	r6, #0
 80085dc:	f000 80ff 	beq.w	80087de <_FillRect+0x266>
 80085e0:	9c02      	ldr	r4, [sp, #8]
 80085e2:	4613      	mov	r3, r2
 80085e4:	00a5      	lsls	r5, r4, #2
 80085e6:	4634      	mov	r4, r6
 80085e8:	6819      	ldr	r1, [r3, #0]
 80085ea:	f081 417f 	eor.w	r1, r1, #4278190080	; 0xff000000
 80085ee:	f481 017f 	eor.w	r1, r1, #16711680	; 0xff0000
 80085f2:	3c01      	subs	r4, #1
 80085f4:	6019      	str	r1, [r3, #0]
 80085f6:	442b      	add	r3, r5
 80085f8:	d1f6      	bne.n	80085e8 <_FillRect+0x70>
 80085fa:	fb05 2506 	mla	r5, r5, r6, r2
 80085fe:	3204      	adds	r2, #4
 8008600:	463c      	mov	r4, r7
 8008602:	2c01      	cmp	r4, #1
 8008604:	dd26      	ble.n	8008654 <_FillRect+0xdc>
 8008606:	2e00      	cmp	r6, #0
 8008608:	f000 80e1 	beq.w	80087ce <_FillRect+0x256>
 800860c:	9b02      	ldr	r3, [sp, #8]
 800860e:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 8008612:	9b03      	ldr	r3, [sp, #12]
 8008614:	fb0c f903 	mul.w	r9, ip, r3
 8008618:	eb02 0e09 	add.w	lr, r2, r9
 800861c:	f1cc 0800 	rsb	r8, ip, #0
 8008620:	4637      	mov	r7, r6
 8008622:	3f01      	subs	r7, #1
 8008624:	4675      	mov	r5, lr
 8008626:	4621      	mov	r1, r4
 8008628:	682b      	ldr	r3, [r5, #0]
 800862a:	3902      	subs	r1, #2
 800862c:	43db      	mvns	r3, r3
 800862e:	2901      	cmp	r1, #1
 8008630:	f845 3b04 	str.w	r3, [r5], #4
 8008634:	dcf8      	bgt.n	8008628 <_FillRect+0xb0>
 8008636:	ebcc 0e0e 	rsb	lr, ip, lr
 800863a:	2f00      	cmp	r7, #0
 800863c:	d1f1      	bne.n	8008622 <_FillRect+0xaa>
 800863e:	1ea3      	subs	r3, r4, #2
 8008640:	9903      	ldr	r1, [sp, #12]
 8008642:	085b      	lsrs	r3, r3, #1
 8008644:	fb08 9801 	mla	r8, r8, r1, r9
 8008648:	3301      	adds	r3, #1
 800864a:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800864e:	441a      	add	r2, r3
 8008650:	f004 0401 	and.w	r4, r4, #1
 8008654:	2c01      	cmp	r4, #1
 8008656:	d19e      	bne.n	8008596 <_FillRect+0x1e>
 8008658:	2e00      	cmp	r6, #0
 800865a:	d09c      	beq.n	8008596 <_FillRect+0x1e>
 800865c:	9b02      	ldr	r3, [sp, #8]
 800865e:	0099      	lsls	r1, r3, #2
 8008660:	6813      	ldr	r3, [r2, #0]
 8008662:	f483 437f 	eor.w	r3, r3, #65280	; 0xff00
 8008666:	f083 03ff 	eor.w	r3, r3, #255	; 0xff
 800866a:	3801      	subs	r0, #1
 800866c:	6013      	str	r3, [r2, #0]
 800866e:	440a      	add	r2, r1
 8008670:	d1f6      	bne.n	8008660 <_FillRect+0xe8>
 8008672:	e790      	b.n	8008596 <_FillRect+0x1e>
 8008674:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008676:	f015 0501 	ands.w	r5, r5, #1
 800867a:	f8d3 e000 	ldr.w	lr, [r3]
 800867e:	d015      	beq.n	80086ac <_FillRect+0x134>
 8008680:	2e00      	cmp	r6, #0
 8008682:	f000 80a8 	beq.w	80087d6 <_FillRect+0x25e>
 8008686:	9b02      	ldr	r3, [sp, #8]
 8008688:	46b4      	mov	ip, r6
 800868a:	0099      	lsls	r1, r3, #2
 800868c:	4614      	mov	r4, r2
 800868e:	ea4f 430e 	mov.w	r3, lr, lsl #16
 8008692:	8825      	ldrh	r5, [r4, #0]
 8008694:	f1bc 0c01 	subs.w	ip, ip, #1
 8008698:	ea45 0503 	orr.w	r5, r5, r3
 800869c:	6025      	str	r5, [r4, #0]
 800869e:	440c      	add	r4, r1
 80086a0:	d1f7      	bne.n	8008692 <_FillRect+0x11a>
 80086a2:	fb01 2506 	mla	r5, r1, r6, r2
 80086a6:	3204      	adds	r2, #4
 80086a8:	463c      	mov	r4, r7
 80086aa:	e001      	b.n	80086b0 <_FillRect+0x138>
 80086ac:	ea4f 430e 	mov.w	r3, lr, lsl #16
 80086b0:	2c0f      	cmp	r4, #15
 80086b2:	4473      	add	r3, lr
 80086b4:	dd39      	ble.n	800872a <_FillRect+0x1b2>
 80086b6:	f1a4 0810 	sub.w	r8, r4, #16
 80086ba:	2e00      	cmp	r6, #0
 80086bc:	f000 8091 	beq.w	80087e2 <_FillRect+0x26a>
 80086c0:	9902      	ldr	r1, [sp, #8]
 80086c2:	ea4f 0981 	mov.w	r9, r1, lsl #2
 80086c6:	9903      	ldr	r1, [sp, #12]
 80086c8:	fb01 fa09 	mul.w	sl, r1, r9
 80086cc:	f10a 0720 	add.w	r7, sl, #32
 80086d0:	4417      	add	r7, r2
 80086d2:	4639      	mov	r1, r7
 80086d4:	f1c9 0b00 	rsb	fp, r9, #0
 80086d8:	4637      	mov	r7, r6
 80086da:	468c      	mov	ip, r1
 80086dc:	3f01      	subs	r7, #1
 80086de:	4661      	mov	r1, ip
 80086e0:	4645      	mov	r5, r8
 80086e2:	3d10      	subs	r5, #16
 80086e4:	f841 3c20 	str.w	r3, [r1, #-32]
 80086e8:	f841 3c1c 	str.w	r3, [r1, #-28]
 80086ec:	f841 3c18 	str.w	r3, [r1, #-24]
 80086f0:	f841 3c14 	str.w	r3, [r1, #-20]
 80086f4:	f841 3c10 	str.w	r3, [r1, #-16]
 80086f8:	f841 3c0c 	str.w	r3, [r1, #-12]
 80086fc:	f841 3c08 	str.w	r3, [r1, #-8]
 8008700:	f841 3c04 	str.w	r3, [r1, #-4]
 8008704:	f101 0120 	add.w	r1, r1, #32
 8008708:	d5eb      	bpl.n	80086e2 <_FillRect+0x16a>
 800870a:	ebc9 0c0c 	rsb	ip, r9, ip
 800870e:	2f00      	cmp	r7, #0
 8008710:	d1e4      	bne.n	80086dc <_FillRect+0x164>
 8008712:	9d03      	ldr	r5, [sp, #12]
 8008714:	ea4f 1118 	mov.w	r1, r8, lsr #4
 8008718:	3101      	adds	r1, #1
 800871a:	fb05 aa0b 	mla	sl, r5, fp, sl
 800871e:	eb0a 1141 	add.w	r1, sl, r1, lsl #5
 8008722:	440a      	add	r2, r1
 8008724:	f004 040f 	and.w	r4, r4, #15
 8008728:	4615      	mov	r5, r2
 800872a:	2c01      	cmp	r4, #1
 800872c:	dd3f      	ble.n	80087ae <_FillRect+0x236>
 800872e:	2e00      	cmp	r6, #0
 8008730:	d04f      	beq.n	80087d2 <_FillRect+0x25a>
 8008732:	9902      	ldr	r1, [sp, #8]
 8008734:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 8008738:	9903      	ldr	r1, [sp, #12]
 800873a:	f1cc 0500 	rsb	r5, ip, #0
 800873e:	fb01 f10c 	mul.w	r1, r1, ip
 8008742:	9105      	str	r1, [sp, #20]
 8008744:	9504      	str	r5, [sp, #16]
 8008746:	1851      	adds	r1, r2, r1
 8008748:	1ea7      	subs	r7, r4, #2
 800874a:	4635      	mov	r5, r6
 800874c:	f1a4 0b04 	sub.w	fp, r4, #4
 8008750:	f1a4 0a06 	sub.w	sl, r4, #6
 8008754:	f1a4 0908 	sub.w	r9, r4, #8
 8008758:	f1a4 080a 	sub.w	r8, r4, #10
 800875c:	2f01      	cmp	r7, #1
 800875e:	f105 35ff 	add.w	r5, r5, #4294967295
 8008762:	600b      	str	r3, [r1, #0]
 8008764:	dd13      	ble.n	800878e <_FillRect+0x216>
 8008766:	f1bb 0f01 	cmp.w	fp, #1
 800876a:	604b      	str	r3, [r1, #4]
 800876c:	dd0f      	ble.n	800878e <_FillRect+0x216>
 800876e:	f1ba 0f01 	cmp.w	sl, #1
 8008772:	608b      	str	r3, [r1, #8]
 8008774:	dd0b      	ble.n	800878e <_FillRect+0x216>
 8008776:	f1b9 0f01 	cmp.w	r9, #1
 800877a:	60cb      	str	r3, [r1, #12]
 800877c:	dd07      	ble.n	800878e <_FillRect+0x216>
 800877e:	f1b8 0f01 	cmp.w	r8, #1
 8008782:	610b      	str	r3, [r1, #16]
 8008784:	dd03      	ble.n	800878e <_FillRect+0x216>
 8008786:	2c0d      	cmp	r4, #13
 8008788:	614b      	str	r3, [r1, #20]
 800878a:	dd00      	ble.n	800878e <_FillRect+0x216>
 800878c:	618b      	str	r3, [r1, #24]
 800878e:	ebcc 0101 	rsb	r1, ip, r1
 8008792:	2d00      	cmp	r5, #0
 8008794:	d1e2      	bne.n	800875c <_FillRect+0x1e4>
 8008796:	087b      	lsrs	r3, r7, #1
 8008798:	9904      	ldr	r1, [sp, #16]
 800879a:	9d03      	ldr	r5, [sp, #12]
 800879c:	9f05      	ldr	r7, [sp, #20]
 800879e:	3301      	adds	r3, #1
 80087a0:	fb05 7101 	mla	r1, r5, r1, r7
 80087a4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80087a8:	441a      	add	r2, r3
 80087aa:	f004 0401 	and.w	r4, r4, #1
 80087ae:	2c01      	cmp	r4, #1
 80087b0:	f47f aef1 	bne.w	8008596 <_FillRect+0x1e>
 80087b4:	2e00      	cmp	r6, #0
 80087b6:	f43f aeee 	beq.w	8008596 <_FillRect+0x1e>
 80087ba:	9b02      	ldr	r3, [sp, #8]
 80087bc:	0099      	lsls	r1, r3, #2
 80087be:	8853      	ldrh	r3, [r2, #2]
 80087c0:	3801      	subs	r0, #1
 80087c2:	ea4e 4303 	orr.w	r3, lr, r3, lsl #16
 80087c6:	6013      	str	r3, [r2, #0]
 80087c8:	440a      	add	r2, r1
 80087ca:	d1f8      	bne.n	80087be <_FillRect+0x246>
 80087cc:	e6e3      	b.n	8008596 <_FillRect+0x1e>
 80087ce:	462a      	mov	r2, r5
 80087d0:	e73e      	b.n	8008650 <_FillRect+0xd8>
 80087d2:	462a      	mov	r2, r5
 80087d4:	e7e9      	b.n	80087aa <_FillRect+0x232>
 80087d6:	4615      	mov	r5, r2
 80087d8:	ea4f 430e 	mov.w	r3, lr, lsl #16
 80087dc:	e763      	b.n	80086a6 <_FillRect+0x12e>
 80087de:	4615      	mov	r5, r2
 80087e0:	e70d      	b.n	80085fe <_FillRect+0x86>
 80087e2:	462a      	mov	r2, r5
 80087e4:	e79e      	b.n	8008724 <_FillRect+0x1ac>
 80087e6:	bf00      	nop
 80087e8:	20000018 	.word	0x20000018

080087ec <_DrawHLine>:
 80087ec:	b500      	push	{lr}
 80087ee:	b083      	sub	sp, #12
 80087f0:	9200      	str	r2, [sp, #0]
 80087f2:	f7ff fec1 	bl	8008578 <_FillRect>
 80087f6:	b003      	add	sp, #12
 80087f8:	f85d fb04 	ldr.w	pc, [sp], #4

080087fc <_DrawVLine>:
 80087fc:	b500      	push	{lr}
 80087fe:	b083      	sub	sp, #12
 8008800:	9300      	str	r3, [sp, #0]
 8008802:	460b      	mov	r3, r1
 8008804:	f7ff feb8 	bl	8008578 <_FillRect>
 8008808:	b003      	add	sp, #12
 800880a:	f85d fb04 	ldr.w	pc, [sp], #4
 800880e:	bf00      	nop

08008810 <_DrawBitmap>:
 8008810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008814:	b08b      	sub	sp, #44	; 0x2c
 8008816:	460e      	mov	r6, r1
 8008818:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800881a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800881c:	9500      	str	r5, [sp, #0]
 800881e:	3c01      	subs	r4, #1
 8008820:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8008822:	9501      	str	r5, [sp, #4]
 8008824:	9302      	str	r3, [sp, #8]
 8008826:	f8dd e050 	ldr.w	lr, [sp, #80]	; 0x50
 800882a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800882c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800882e:	9003      	str	r0, [sp, #12]
 8008830:	6883      	ldr	r3, [r0, #8]
 8008832:	2c0f      	cmp	r4, #15
 8008834:	d83a      	bhi.n	80088ac <_DrawBitmap+0x9c>
 8008836:	e8df f014 	tbh	[pc, r4, lsl #1]
 800883a:	003c      	.short	0x003c
 800883c:	003900ad 	.word	0x003900ad
 8008840:	003900fa 	.word	0x003900fa
 8008844:	00390039 	.word	0x00390039
 8008848:	00390148 	.word	0x00390148
 800884c:	00390039 	.word	0x00390039
 8008850:	00390039 	.word	0x00390039
 8008854:	00390039 	.word	0x00390039
 8008858:	0010      	.short	0x0010
 800885a:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800885c:	b12c      	cbz	r4, 800886a <_DrawBitmap+0x5a>
 800885e:	49a6      	ldr	r1, [pc, #664]	; (8008af8 <_DrawBitmap+0x2e8>)
 8008860:	6809      	ldr	r1, [r1, #0]
 8008862:	7c09      	ldrb	r1, [r1, #16]
 8008864:	07c9      	lsls	r1, r1, #31
 8008866:	f140 835c 	bpl.w	8008f22 <_DrawBitmap+0x712>
 800886a:	f1be 0f00 	cmp.w	lr, #0
 800886e:	dd1d      	ble.n	80088ac <_DrawBitmap+0x9c>
 8008870:	4614      	mov	r4, r2
 8008872:	eb0e 0502 	add.w	r5, lr, r2
 8008876:	9a02      	ldr	r2, [sp, #8]
 8008878:	f8df a280 	ldr.w	sl, [pc, #640]	; 8008afc <_DrawBitmap+0x2ec>
 800887c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8008880:	f8dd 8000 	ldr.w	r8, [sp]
 8008884:	ea4f 0942 	mov.w	r9, r2, lsl #1
 8008888:	e001      	b.n	800888e <_DrawBitmap+0x7e>
 800888a:	f8db 3008 	ldr.w	r3, [fp, #8]
 800888e:	6a1a      	ldr	r2, [r3, #32]
 8008890:	6818      	ldr	r0, [r3, #0]
 8008892:	f8da 3000 	ldr.w	r3, [sl]
 8008896:	fb02 6204 	mla	r2, r2, r4, r6
 800889a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 800889e:	4639      	mov	r1, r7
 80088a0:	3401      	adds	r4, #1
 80088a2:	464a      	mov	r2, r9
 80088a4:	4798      	blx	r3
 80088a6:	42ac      	cmp	r4, r5
 80088a8:	4447      	add	r7, r8
 80088aa:	d1ee      	bne.n	800888a <_DrawBitmap+0x7a>
 80088ac:	b00b      	add	sp, #44	; 0x2c
 80088ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80088b2:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80088b4:	b12c      	cbz	r4, 80088c2 <_DrawBitmap+0xb2>
 80088b6:	4990      	ldr	r1, [pc, #576]	; (8008af8 <_DrawBitmap+0x2e8>)
 80088b8:	6809      	ldr	r1, [r1, #0]
 80088ba:	7c09      	ldrb	r1, [r1, #16]
 80088bc:	07c9      	lsls	r1, r1, #31
 80088be:	f140 831f 	bpl.w	8008f00 <_DrawBitmap+0x6f0>
 80088c2:	f1be 0f00 	cmp.w	lr, #0
 80088c6:	ddf1      	ble.n	80088ac <_DrawBitmap+0x9c>
 80088c8:	4611      	mov	r1, r2
 80088ca:	4472      	add	r2, lr
 80088cc:	9204      	str	r2, [sp, #16]
 80088ce:	9a01      	ldr	r2, [sp, #4]
 80088d0:	4889      	ldr	r0, [pc, #548]	; (8008af8 <_DrawBitmap+0x2e8>)
 80088d2:	9006      	str	r0, [sp, #24]
 80088d4:	4698      	mov	r8, r3
 80088d6:	18b0      	adds	r0, r6, r2
 80088d8:	f1c2 0308 	rsb	r3, r2, #8
 80088dc:	f8df b220 	ldr.w	fp, [pc, #544]	; 8008b00 <_DrawBitmap+0x2f0>
 80088e0:	9005      	str	r0, [sp, #20]
 80088e2:	468a      	mov	sl, r1
 80088e4:	9308      	str	r3, [sp, #32]
 80088e6:	4646      	mov	r6, r8
 80088e8:	9507      	str	r5, [sp, #28]
 80088ea:	4629      	mov	r1, r5
 80088ec:	9b06      	ldr	r3, [sp, #24]
 80088ee:	783a      	ldrb	r2, [r7, #0]
 80088f0:	681b      	ldr	r3, [r3, #0]
 80088f2:	f81b 4002 	ldrb.w	r4, [fp, r2]
 80088f6:	7c1b      	ldrb	r3, [r3, #16]
 80088f8:	9a01      	ldr	r2, [sp, #4]
 80088fa:	6a35      	ldr	r5, [r6, #32]
 80088fc:	6848      	ldr	r0, [r1, #4]
 80088fe:	f003 0303 	and.w	r3, r3, #3
 8008902:	4114      	asrs	r4, r2
 8008904:	9a05      	ldr	r2, [sp, #20]
 8008906:	2b02      	cmp	r3, #2
 8008908:	fb05 250a 	mla	r5, r5, sl, r2
 800890c:	f000 8287 	beq.w	8008e1e <_DrawBitmap+0x60e>
 8008910:	2b03      	cmp	r3, #3
 8008912:	f000 8262 	beq.w	8008dda <_DrawBitmap+0x5ca>
 8008916:	2b01      	cmp	r3, #1
 8008918:	f000 825f 	beq.w	8008dda <_DrawBitmap+0x5ca>
 800891c:	6833      	ldr	r3, [r6, #0]
 800891e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8008922:	680e      	ldr	r6, [r1, #0]
 8008924:	f8dd c020 	ldr.w	ip, [sp, #32]
 8008928:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800892c:	462a      	mov	r2, r5
 800892e:	46b9      	mov	r9, r7
 8008930:	4645      	mov	r5, r8
 8008932:	469a      	mov	sl, r3
 8008934:	4690      	mov	r8, r2
 8008936:	4565      	cmp	r5, ip
 8008938:	46ae      	mov	lr, r5
 800893a:	bf28      	it	cs
 800893c:	46e6      	movcs	lr, ip
 800893e:	4673      	mov	r3, lr
 8008940:	eb0a 0248 	add.w	r2, sl, r8, lsl #1
 8008944:	f014 0f01 	tst.w	r4, #1
 8008948:	bf0c      	ite	eq
 800894a:	4631      	moveq	r1, r6
 800894c:	4601      	movne	r1, r0
 800894e:	3b01      	subs	r3, #1
 8008950:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8008954:	f822 1b02 	strh.w	r1, [r2], #2
 8008958:	d1f4      	bne.n	8008944 <_DrawBitmap+0x134>
 800895a:	ebbc 0c0e 	subs.w	ip, ip, lr
 800895e:	44f0      	add	r8, lr
 8008960:	ebce 0505 	rsb	r5, lr, r5
 8008964:	d107      	bne.n	8008976 <_DrawBitmap+0x166>
 8008966:	f899 3001 	ldrb.w	r3, [r9, #1]
 800896a:	f81b 4003 	ldrb.w	r4, [fp, r3]
 800896e:	f109 0901 	add.w	r9, r9, #1
 8008972:	f04f 0c08 	mov.w	ip, #8
 8008976:	2d00      	cmp	r5, #0
 8008978:	d1dd      	bne.n	8008936 <_DrawBitmap+0x126>
 800897a:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 800897e:	9b00      	ldr	r3, [sp, #0]
 8008980:	441f      	add	r7, r3
 8008982:	9b04      	ldr	r3, [sp, #16]
 8008984:	f10a 0a01 	add.w	sl, sl, #1
 8008988:	459a      	cmp	sl, r3
 800898a:	d08f      	beq.n	80088ac <_DrawBitmap+0x9c>
 800898c:	9b03      	ldr	r3, [sp, #12]
 800898e:	9907      	ldr	r1, [sp, #28]
 8008990:	689e      	ldr	r6, [r3, #8]
 8008992:	e7ab      	b.n	80088ec <_DrawBitmap+0xdc>
 8008994:	f1be 0f00 	cmp.w	lr, #0
 8008998:	dd88      	ble.n	80088ac <_DrawBitmap+0x9c>
 800899a:	4957      	ldr	r1, [pc, #348]	; (8008af8 <_DrawBitmap+0x2e8>)
 800899c:	9801      	ldr	r0, [sp, #4]
 800899e:	6809      	ldr	r1, [r1, #0]
 80089a0:	9103      	str	r1, [sp, #12]
 80089a2:	9902      	ldr	r1, [sp, #8]
 80089a4:	1830      	adds	r0, r6, r0
 80089a6:	4401      	add	r1, r0
 80089a8:	eb0e 0b02 	add.w	fp, lr, r2
 80089ac:	9004      	str	r0, [sp, #16]
 80089ae:	460e      	mov	r6, r1
 80089b0:	f04f 0ec0 	mov.w	lr, #192	; 0xc0
 80089b4:	9903      	ldr	r1, [sp, #12]
 80089b6:	7838      	ldrb	r0, [r7, #0]
 80089b8:	7c09      	ldrb	r1, [r1, #16]
 80089ba:	f011 0103 	ands.w	r1, r1, #3
 80089be:	f000 80eb 	beq.w	8008b98 <_DrawBitmap+0x388>
 80089c2:	2902      	cmp	r1, #2
 80089c4:	d12d      	bne.n	8008a22 <_DrawBitmap+0x212>
 80089c6:	2d00      	cmp	r5, #0
 80089c8:	f000 8243 	beq.w	8008e52 <_DrawBitmap+0x642>
 80089cc:	f8dd c004 	ldr.w	ip, [sp, #4]
 80089d0:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80089d4:	46b9      	mov	r9, r7
 80089d6:	46ba      	mov	sl, r7
 80089d8:	e001      	b.n	80089de <_DrawBitmap+0x1ce>
 80089da:	4546      	cmp	r6, r8
 80089dc:	d020      	beq.n	8008a20 <_DrawBitmap+0x210>
 80089de:	f1cc 0403 	rsb	r4, ip, #3
 80089e2:	0064      	lsls	r4, r4, #1
 80089e4:	f1c4 0106 	rsb	r1, r4, #6
 80089e8:	fa4e f101 	asr.w	r1, lr, r1
 80089ec:	4001      	ands	r1, r0
 80089ee:	40e1      	lsrs	r1, r4
 80089f0:	f10c 0c01 	add.w	ip, ip, #1
 80089f4:	d007      	beq.n	8008a06 <_DrawBitmap+0x1f6>
 80089f6:	6a1c      	ldr	r4, [r3, #32]
 80089f8:	681f      	ldr	r7, [r3, #0]
 80089fa:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80089fe:	fb04 8402 	mla	r4, r4, r2, r8
 8008a02:	f827 1014 	strh.w	r1, [r7, r4, lsl #1]
 8008a06:	f1bc 0f04 	cmp.w	ip, #4
 8008a0a:	f108 0801 	add.w	r8, r8, #1
 8008a0e:	d1e4      	bne.n	80089da <_DrawBitmap+0x1ca>
 8008a10:	4546      	cmp	r6, r8
 8008a12:	f899 0001 	ldrb.w	r0, [r9, #1]
 8008a16:	f04f 0c00 	mov.w	ip, #0
 8008a1a:	f109 0901 	add.w	r9, r9, #1
 8008a1e:	d1de      	bne.n	80089de <_DrawBitmap+0x1ce>
 8008a20:	4657      	mov	r7, sl
 8008a22:	3201      	adds	r2, #1
 8008a24:	9900      	ldr	r1, [sp, #0]
 8008a26:	455a      	cmp	r2, fp
 8008a28:	440f      	add	r7, r1
 8008a2a:	d1c3      	bne.n	80089b4 <_DrawBitmap+0x1a4>
 8008a2c:	e73e      	b.n	80088ac <_DrawBitmap+0x9c>
 8008a2e:	f1be 0f00 	cmp.w	lr, #0
 8008a32:	f77f af3b 	ble.w	80088ac <_DrawBitmap+0x9c>
 8008a36:	4930      	ldr	r1, [pc, #192]	; (8008af8 <_DrawBitmap+0x2e8>)
 8008a38:	9801      	ldr	r0, [sp, #4]
 8008a3a:	6809      	ldr	r1, [r1, #0]
 8008a3c:	9103      	str	r1, [sp, #12]
 8008a3e:	9902      	ldr	r1, [sp, #8]
 8008a40:	1830      	adds	r0, r6, r0
 8008a42:	4401      	add	r1, r0
 8008a44:	eb0e 0b02 	add.w	fp, lr, r2
 8008a48:	9004      	str	r0, [sp, #16]
 8008a4a:	460e      	mov	r6, r1
 8008a4c:	f04f 0ef0 	mov.w	lr, #240	; 0xf0
 8008a50:	9903      	ldr	r1, [sp, #12]
 8008a52:	7838      	ldrb	r0, [r7, #0]
 8008a54:	7c09      	ldrb	r1, [r1, #16]
 8008a56:	f011 0103 	ands.w	r1, r1, #3
 8008a5a:	f000 80e4 	beq.w	8008c26 <_DrawBitmap+0x416>
 8008a5e:	2902      	cmp	r1, #2
 8008a60:	d12d      	bne.n	8008abe <_DrawBitmap+0x2ae>
 8008a62:	2d00      	cmp	r5, #0
 8008a64:	f000 821e 	beq.w	8008ea4 <_DrawBitmap+0x694>
 8008a68:	f8dd c004 	ldr.w	ip, [sp, #4]
 8008a6c:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8008a70:	46b9      	mov	r9, r7
 8008a72:	46ba      	mov	sl, r7
 8008a74:	e001      	b.n	8008a7a <_DrawBitmap+0x26a>
 8008a76:	4546      	cmp	r6, r8
 8008a78:	d020      	beq.n	8008abc <_DrawBitmap+0x2ac>
 8008a7a:	f1cc 0401 	rsb	r4, ip, #1
 8008a7e:	00a4      	lsls	r4, r4, #2
 8008a80:	f1c4 0104 	rsb	r1, r4, #4
 8008a84:	fa4e f101 	asr.w	r1, lr, r1
 8008a88:	4001      	ands	r1, r0
 8008a8a:	40e1      	lsrs	r1, r4
 8008a8c:	f10c 0c01 	add.w	ip, ip, #1
 8008a90:	d007      	beq.n	8008aa2 <_DrawBitmap+0x292>
 8008a92:	6a1c      	ldr	r4, [r3, #32]
 8008a94:	681f      	ldr	r7, [r3, #0]
 8008a96:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8008a9a:	fb04 8402 	mla	r4, r4, r2, r8
 8008a9e:	f827 1014 	strh.w	r1, [r7, r4, lsl #1]
 8008aa2:	f1bc 0f02 	cmp.w	ip, #2
 8008aa6:	f108 0801 	add.w	r8, r8, #1
 8008aaa:	d1e4      	bne.n	8008a76 <_DrawBitmap+0x266>
 8008aac:	4546      	cmp	r6, r8
 8008aae:	f899 0001 	ldrb.w	r0, [r9, #1]
 8008ab2:	f04f 0c00 	mov.w	ip, #0
 8008ab6:	f109 0901 	add.w	r9, r9, #1
 8008aba:	d1de      	bne.n	8008a7a <_DrawBitmap+0x26a>
 8008abc:	4657      	mov	r7, sl
 8008abe:	3201      	adds	r2, #1
 8008ac0:	9900      	ldr	r1, [sp, #0]
 8008ac2:	455a      	cmp	r2, fp
 8008ac4:	440f      	add	r7, r1
 8008ac6:	d1c3      	bne.n	8008a50 <_DrawBitmap+0x240>
 8008ac8:	e6f0      	b.n	80088ac <_DrawBitmap+0x9c>
 8008aca:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8008acc:	b1d4      	cbz	r4, 8008b04 <_DrawBitmap+0x2f4>
 8008ace:	490a      	ldr	r1, [pc, #40]	; (8008af8 <_DrawBitmap+0x2e8>)
 8008ad0:	6809      	ldr	r1, [r1, #0]
 8008ad2:	7c09      	ldrb	r1, [r1, #16]
 8008ad4:	0789      	lsls	r1, r1, #30
 8008ad6:	d415      	bmi.n	8008b04 <_DrawBitmap+0x2f4>
 8008ad8:	b1a5      	cbz	r5, 8008b04 <_DrawBitmap+0x2f4>
 8008ada:	9b00      	ldr	r3, [sp, #0]
 8008adc:	6980      	ldr	r0, [r0, #24]
 8008ade:	9316      	str	r3, [sp, #88]	; 0x58
 8008ae0:	9b02      	ldr	r3, [sp, #8]
 8008ae2:	9314      	str	r3, [sp, #80]	; 0x50
 8008ae4:	4631      	mov	r1, r6
 8008ae6:	463b      	mov	r3, r7
 8008ae8:	46a4      	mov	ip, r4
 8008aea:	9517      	str	r5, [sp, #92]	; 0x5c
 8008aec:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 8008af0:	b00b      	add	sp, #44	; 0x2c
 8008af2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008af6:	4760      	bx	ip
 8008af8:	20000018 	.word	0x20000018
 8008afc:	20000038 	.word	0x20000038
 8008b00:	0801bbe8 	.word	0x0801bbe8
 8008b04:	f1be 0f00 	cmp.w	lr, #0
 8008b08:	f77f aed0 	ble.w	80088ac <_DrawBitmap+0x9c>
 8008b0c:	9902      	ldr	r1, [sp, #8]
 8008b0e:	4cd4      	ldr	r4, [pc, #848]	; (8008e60 <_DrawBitmap+0x650>)
 8008b10:	3908      	subs	r1, #8
 8008b12:	08c8      	lsrs	r0, r1, #3
 8008b14:	f100 0c01 	add.w	ip, r0, #1
 8008b18:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8008b1c:	eba1 0ac0 	sub.w	sl, r1, r0, lsl #3
 8008b20:	9902      	ldr	r1, [sp, #8]
 8008b22:	6824      	ldr	r4, [r4, #0]
 8008b24:	f8cd a008 	str.w	sl, [sp, #8]
 8008b28:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8008b2c:	9003      	str	r0, [sp, #12]
 8008b2e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8008b32:	f108 0b20 	add.w	fp, r8, #32
 8008b36:	9004      	str	r0, [sp, #16]
 8008b38:	f8dd 8000 	ldr.w	r8, [sp]
 8008b3c:	f8cd b014 	str.w	fp, [sp, #20]
 8008b40:	0048      	lsls	r0, r1, #1
 8008b42:	4496      	add	lr, r2
 8008b44:	9001      	str	r0, [sp, #4]
 8008b46:	468b      	mov	fp, r1
 8008b48:	b1fd      	cbz	r5, 8008b8a <_DrawBitmap+0x37a>
 8008b4a:	6a18      	ldr	r0, [r3, #32]
 8008b4c:	f894 c010 	ldrb.w	ip, [r4, #16]
 8008b50:	fb00 6102 	mla	r1, r0, r2, r6
 8008b54:	6818      	ldr	r0, [r3, #0]
 8008b56:	f01c 0c03 	ands.w	ip, ip, #3
 8008b5a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8008b5e:	f000 80a9 	beq.w	8008cb4 <_DrawBitmap+0x4a4>
 8008b62:	f1bc 0f02 	cmp.w	ip, #2
 8008b66:	d110      	bne.n	8008b8a <_DrawBitmap+0x37a>
 8008b68:	f1bb 0f00 	cmp.w	fp, #0
 8008b6c:	dd0d      	ble.n	8008b8a <_DrawBitmap+0x37a>
 8008b6e:	9801      	ldr	r0, [sp, #4]
 8008b70:	f107 3cff 	add.w	ip, r7, #4294967295
 8008b74:	eb01 0900 	add.w	r9, r1, r0
 8008b78:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
 8008b7c:	b110      	cbz	r0, 8008b84 <_DrawBitmap+0x374>
 8008b7e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8008b82:	8008      	strh	r0, [r1, #0]
 8008b84:	3102      	adds	r1, #2
 8008b86:	4549      	cmp	r1, r9
 8008b88:	d1f6      	bne.n	8008b78 <_DrawBitmap+0x368>
 8008b8a:	3201      	adds	r2, #1
 8008b8c:	4572      	cmp	r2, lr
 8008b8e:	4447      	add	r7, r8
 8008b90:	d1da      	bne.n	8008b48 <_DrawBitmap+0x338>
 8008b92:	b00b      	add	sp, #44	; 0x2c
 8008b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b98:	6a19      	ldr	r1, [r3, #32]
 8008b9a:	681c      	ldr	r4, [r3, #0]
 8008b9c:	f8dd c004 	ldr.w	ip, [sp, #4]
 8008ba0:	fb01 f902 	mul.w	r9, r1, r2
 8008ba4:	9904      	ldr	r1, [sp, #16]
 8008ba6:	eb01 0809 	add.w	r8, r1, r9
 8008baa:	44b1      	add	r9, r6
 8008bac:	eb04 0848 	add.w	r8, r4, r8, lsl #1
 8008bb0:	eb04 0949 	add.w	r9, r4, r9, lsl #1
 8008bb4:	46ba      	mov	sl, r7
 8008bb6:	b91d      	cbnz	r5, 8008bc0 <_DrawBitmap+0x3b0>
 8008bb8:	e024      	b.n	8008c04 <_DrawBitmap+0x3f4>
 8008bba:	45c8      	cmp	r8, r9
 8008bbc:	f43f af31 	beq.w	8008a22 <_DrawBitmap+0x212>
 8008bc0:	f1cc 0103 	rsb	r1, ip, #3
 8008bc4:	004c      	lsls	r4, r1, #1
 8008bc6:	f1c4 0106 	rsb	r1, r4, #6
 8008bca:	fa4e f101 	asr.w	r1, lr, r1
 8008bce:	4001      	ands	r1, r0
 8008bd0:	40e1      	lsrs	r1, r4
 8008bd2:	f10c 0c01 	add.w	ip, ip, #1
 8008bd6:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8008bda:	f828 1b02 	strh.w	r1, [r8], #2
 8008bde:	f1bc 0f04 	cmp.w	ip, #4
 8008be2:	d1ea      	bne.n	8008bba <_DrawBitmap+0x3aa>
 8008be4:	f89a 0001 	ldrb.w	r0, [sl, #1]
 8008be8:	f04f 0c00 	mov.w	ip, #0
 8008bec:	f10a 0a01 	add.w	sl, sl, #1
 8008bf0:	e7e3      	b.n	8008bba <_DrawBitmap+0x3aa>
 8008bf2:	f89a 0001 	ldrb.w	r0, [sl, #1]
 8008bf6:	f04f 0c00 	mov.w	ip, #0
 8008bfa:	f10a 0a01 	add.w	sl, sl, #1
 8008bfe:	45c8      	cmp	r8, r9
 8008c00:	f43f af0f 	beq.w	8008a22 <_DrawBitmap+0x212>
 8008c04:	f1cc 0103 	rsb	r1, ip, #3
 8008c08:	004c      	lsls	r4, r1, #1
 8008c0a:	f1c4 0106 	rsb	r1, r4, #6
 8008c0e:	fa4e f101 	asr.w	r1, lr, r1
 8008c12:	4001      	ands	r1, r0
 8008c14:	f10c 0c01 	add.w	ip, ip, #1
 8008c18:	40e1      	lsrs	r1, r4
 8008c1a:	f1bc 0f04 	cmp.w	ip, #4
 8008c1e:	f828 1b02 	strh.w	r1, [r8], #2
 8008c22:	d1ec      	bne.n	8008bfe <_DrawBitmap+0x3ee>
 8008c24:	e7e5      	b.n	8008bf2 <_DrawBitmap+0x3e2>
 8008c26:	6a19      	ldr	r1, [r3, #32]
 8008c28:	681c      	ldr	r4, [r3, #0]
 8008c2a:	f8dd c004 	ldr.w	ip, [sp, #4]
 8008c2e:	fb01 f902 	mul.w	r9, r1, r2
 8008c32:	9904      	ldr	r1, [sp, #16]
 8008c34:	eb01 0809 	add.w	r8, r1, r9
 8008c38:	44b1      	add	r9, r6
 8008c3a:	eb04 0848 	add.w	r8, r4, r8, lsl #1
 8008c3e:	eb04 0949 	add.w	r9, r4, r9, lsl #1
 8008c42:	46ba      	mov	sl, r7
 8008c44:	b91d      	cbnz	r5, 8008c4e <_DrawBitmap+0x43e>
 8008c46:	e024      	b.n	8008c92 <_DrawBitmap+0x482>
 8008c48:	45c8      	cmp	r8, r9
 8008c4a:	f43f af38 	beq.w	8008abe <_DrawBitmap+0x2ae>
 8008c4e:	f1cc 0101 	rsb	r1, ip, #1
 8008c52:	008c      	lsls	r4, r1, #2
 8008c54:	f1c4 0104 	rsb	r1, r4, #4
 8008c58:	fa4e f101 	asr.w	r1, lr, r1
 8008c5c:	4001      	ands	r1, r0
 8008c5e:	40e1      	lsrs	r1, r4
 8008c60:	f10c 0c01 	add.w	ip, ip, #1
 8008c64:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8008c68:	f828 1b02 	strh.w	r1, [r8], #2
 8008c6c:	f1bc 0f02 	cmp.w	ip, #2
 8008c70:	d1ea      	bne.n	8008c48 <_DrawBitmap+0x438>
 8008c72:	f89a 0001 	ldrb.w	r0, [sl, #1]
 8008c76:	f04f 0c00 	mov.w	ip, #0
 8008c7a:	f10a 0a01 	add.w	sl, sl, #1
 8008c7e:	e7e3      	b.n	8008c48 <_DrawBitmap+0x438>
 8008c80:	f89a 0001 	ldrb.w	r0, [sl, #1]
 8008c84:	f04f 0c00 	mov.w	ip, #0
 8008c88:	f10a 0a01 	add.w	sl, sl, #1
 8008c8c:	45c8      	cmp	r8, r9
 8008c8e:	f43f af16 	beq.w	8008abe <_DrawBitmap+0x2ae>
 8008c92:	f1cc 0101 	rsb	r1, ip, #1
 8008c96:	008c      	lsls	r4, r1, #2
 8008c98:	f1c4 0104 	rsb	r1, r4, #4
 8008c9c:	fa4e f101 	asr.w	r1, lr, r1
 8008ca0:	4001      	ands	r1, r0
 8008ca2:	f10c 0c01 	add.w	ip, ip, #1
 8008ca6:	40e1      	lsrs	r1, r4
 8008ca8:	f1bc 0f02 	cmp.w	ip, #2
 8008cac:	f828 1b02 	strh.w	r1, [r8], #2
 8008cb0:	d1ec      	bne.n	8008c8c <_DrawBitmap+0x47c>
 8008cb2:	e7e5      	b.n	8008c80 <_DrawBitmap+0x470>
 8008cb4:	f1bb 0f07 	cmp.w	fp, #7
 8008cb8:	f340 811f 	ble.w	8008efa <_DrawBitmap+0x6ea>
 8008cbc:	f101 0010 	add.w	r0, r1, #16
 8008cc0:	9000      	str	r0, [sp, #0]
 8008cc2:	9805      	ldr	r0, [sp, #20]
 8008cc4:	eb00 0a01 	add.w	sl, r0, r1
 8008cc8:	9800      	ldr	r0, [sp, #0]
 8008cca:	f107 0c08 	add.w	ip, r7, #8
 8008cce:	4699      	mov	r9, r3
 8008cd0:	f81c 3c08 	ldrb.w	r3, [ip, #-8]
 8008cd4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008cd8:	f820 3c10 	strh.w	r3, [r0, #-16]
 8008cdc:	f81c 3c07 	ldrb.w	r3, [ip, #-7]
 8008ce0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008ce4:	f820 3c0e 	strh.w	r3, [r0, #-14]
 8008ce8:	f81c 3c06 	ldrb.w	r3, [ip, #-6]
 8008cec:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008cf0:	f820 3c0c 	strh.w	r3, [r0, #-12]
 8008cf4:	f81c 3c05 	ldrb.w	r3, [ip, #-5]
 8008cf8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008cfc:	f820 3c0a 	strh.w	r3, [r0, #-10]
 8008d00:	f81c 3c04 	ldrb.w	r3, [ip, #-4]
 8008d04:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008d08:	f820 3c08 	strh.w	r3, [r0, #-8]
 8008d0c:	f81c 3c03 	ldrb.w	r3, [ip, #-3]
 8008d10:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008d14:	f820 3c06 	strh.w	r3, [r0, #-6]
 8008d18:	f81c 3c02 	ldrb.w	r3, [ip, #-2]
 8008d1c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008d20:	f820 3c04 	strh.w	r3, [r0, #-4]
 8008d24:	f81c 3c01 	ldrb.w	r3, [ip, #-1]
 8008d28:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8008d2c:	f820 3c02 	strh.w	r3, [r0, #-2]
 8008d30:	3010      	adds	r0, #16
 8008d32:	4582      	cmp	sl, r0
 8008d34:	f10c 0c08 	add.w	ip, ip, #8
 8008d38:	d1ca      	bne.n	8008cd0 <_DrawBitmap+0x4c0>
 8008d3a:	9804      	ldr	r0, [sp, #16]
 8008d3c:	f8dd a008 	ldr.w	sl, [sp, #8]
 8008d40:	4401      	add	r1, r0
 8008d42:	9803      	ldr	r0, [sp, #12]
 8008d44:	464b      	mov	r3, r9
 8008d46:	1838      	adds	r0, r7, r0
 8008d48:	f1ba 0f03 	cmp.w	sl, #3
 8008d4c:	dd23      	ble.n	8008d96 <_DrawBitmap+0x586>
 8008d4e:	f890 c000 	ldrb.w	ip, [r0]
 8008d52:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8008d56:	f8a1 c000 	strh.w	ip, [r1]
 8008d5a:	f890 c001 	ldrb.w	ip, [r0, #1]
 8008d5e:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8008d62:	f8a1 c002 	strh.w	ip, [r1, #2]
 8008d66:	f890 c002 	ldrb.w	ip, [r0, #2]
 8008d6a:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8008d6e:	f8a1 c004 	strh.w	ip, [r1, #4]
 8008d72:	f890 9003 	ldrb.w	r9, [r0, #3]
 8008d76:	f1aa 0a04 	sub.w	sl, sl, #4
 8008d7a:	ea4f 0c9a 	mov.w	ip, sl, lsr #2
 8008d7e:	f855 9029 	ldr.w	r9, [r5, r9, lsl #2]
 8008d82:	f8a1 9006 	strh.w	r9, [r1, #6]
 8008d86:	f10c 0901 	add.w	r9, ip, #1
 8008d8a:	ebaa 0a8c 	sub.w	sl, sl, ip, lsl #2
 8008d8e:	eb00 0089 	add.w	r0, r0, r9, lsl #2
 8008d92:	eb01 01c9 	add.w	r1, r1, r9, lsl #3
 8008d96:	f1ba 0f00 	cmp.w	sl, #0
 8008d9a:	f43f aef6 	beq.w	8008b8a <_DrawBitmap+0x37a>
 8008d9e:	f890 c000 	ldrb.w	ip, [r0]
 8008da2:	f1ba 0f01 	cmp.w	sl, #1
 8008da6:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8008daa:	f8a1 c000 	strh.w	ip, [r1]
 8008dae:	f43f aeec 	beq.w	8008b8a <_DrawBitmap+0x37a>
 8008db2:	f890 c001 	ldrb.w	ip, [r0, #1]
 8008db6:	f1ba 0f02 	cmp.w	sl, #2
 8008dba:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8008dbe:	f8a1 c002 	strh.w	ip, [r1, #2]
 8008dc2:	f43f aee2 	beq.w	8008b8a <_DrawBitmap+0x37a>
 8008dc6:	7880      	ldrb	r0, [r0, #2]
 8008dc8:	3201      	adds	r2, #1
 8008dca:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8008dce:	8088      	strh	r0, [r1, #4]
 8008dd0:	4572      	cmp	r2, lr
 8008dd2:	4447      	add	r7, r8
 8008dd4:	f47f aeb8 	bne.w	8008b48 <_DrawBitmap+0x338>
 8008dd8:	e6db      	b.n	8008b92 <_DrawBitmap+0x382>
 8008dda:	9b03      	ldr	r3, [sp, #12]
 8008ddc:	691b      	ldr	r3, [r3, #16]
 8008dde:	689b      	ldr	r3, [r3, #8]
 8008de0:	4798      	blx	r3
 8008de2:	9b02      	ldr	r3, [sp, #8]
 8008de4:	eb03 0e05 	add.w	lr, r3, r5
 8008de8:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8008dec:	006d      	lsls	r5, r5, #1
 8008dee:	9b08      	ldr	r3, [sp, #32]
 8008df0:	4639      	mov	r1, r7
 8008df2:	4684      	mov	ip, r0
 8008df4:	e004      	b.n	8008e00 <_DrawBitmap+0x5f0>
 8008df6:	0864      	lsrs	r4, r4, #1
 8008df8:	3502      	adds	r5, #2
 8008dfa:	4575      	cmp	r5, lr
 8008dfc:	f43f adbf 	beq.w	800897e <_DrawBitmap+0x16e>
 8008e00:	07e0      	lsls	r0, r4, #31
 8008e02:	d504      	bpl.n	8008e0e <_DrawBitmap+0x5fe>
 8008e04:	6830      	ldr	r0, [r6, #0]
 8008e06:	5a2a      	ldrh	r2, [r5, r0]
 8008e08:	ea8c 0202 	eor.w	r2, ip, r2
 8008e0c:	522a      	strh	r2, [r5, r0]
 8008e0e:	3b01      	subs	r3, #1
 8008e10:	d1f1      	bne.n	8008df6 <_DrawBitmap+0x5e6>
 8008e12:	784a      	ldrb	r2, [r1, #1]
 8008e14:	2308      	movs	r3, #8
 8008e16:	f81b 4002 	ldrb.w	r4, [fp, r2]
 8008e1a:	3101      	adds	r1, #1
 8008e1c:	e7ec      	b.n	8008df8 <_DrawBitmap+0x5e8>
 8008e1e:	9b02      	ldr	r3, [sp, #8]
 8008e20:	9a08      	ldr	r2, [sp, #32]
 8008e22:	1959      	adds	r1, r3, r5
 8008e24:	0049      	lsls	r1, r1, #1
 8008e26:	006d      	lsls	r5, r5, #1
 8008e28:	46be      	mov	lr, r7
 8008e2a:	e004      	b.n	8008e36 <_DrawBitmap+0x626>
 8008e2c:	0864      	lsrs	r4, r4, #1
 8008e2e:	3502      	adds	r5, #2
 8008e30:	42a9      	cmp	r1, r5
 8008e32:	f43f ada4 	beq.w	800897e <_DrawBitmap+0x16e>
 8008e36:	07e3      	lsls	r3, r4, #31
 8008e38:	bf44      	itt	mi
 8008e3a:	6833      	ldrmi	r3, [r6, #0]
 8008e3c:	5358      	strhmi	r0, [r3, r5]
 8008e3e:	3a01      	subs	r2, #1
 8008e40:	d1f4      	bne.n	8008e2c <_DrawBitmap+0x61c>
 8008e42:	f89e 3001 	ldrb.w	r3, [lr, #1]
 8008e46:	2208      	movs	r2, #8
 8008e48:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8008e4c:	f10e 0e01 	add.w	lr, lr, #1
 8008e50:	e7ed      	b.n	8008e2e <_DrawBitmap+0x61e>
 8008e52:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8008e56:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8008e5a:	46ba      	mov	sl, r7
 8008e5c:	46ac      	mov	ip, r5
 8008e5e:	e003      	b.n	8008e68 <_DrawBitmap+0x658>
 8008e60:	20000018 	.word	0x20000018
 8008e64:	454e      	cmp	r6, r9
 8008e66:	d044      	beq.n	8008ef2 <_DrawBitmap+0x6e2>
 8008e68:	f1c8 0403 	rsb	r4, r8, #3
 8008e6c:	0064      	lsls	r4, r4, #1
 8008e6e:	f1c4 0106 	rsb	r1, r4, #6
 8008e72:	fa4e f101 	asr.w	r1, lr, r1
 8008e76:	4001      	ands	r1, r0
 8008e78:	40e1      	lsrs	r1, r4
 8008e7a:	f108 0801 	add.w	r8, r8, #1
 8008e7e:	d005      	beq.n	8008e8c <_DrawBitmap+0x67c>
 8008e80:	6a1c      	ldr	r4, [r3, #32]
 8008e82:	681d      	ldr	r5, [r3, #0]
 8008e84:	fb04 9402 	mla	r4, r4, r2, r9
 8008e88:	f825 1014 	strh.w	r1, [r5, r4, lsl #1]
 8008e8c:	f1b8 0f04 	cmp.w	r8, #4
 8008e90:	f109 0901 	add.w	r9, r9, #1
 8008e94:	d1e6      	bne.n	8008e64 <_DrawBitmap+0x654>
 8008e96:	f89a 0001 	ldrb.w	r0, [sl, #1]
 8008e9a:	f04f 0800 	mov.w	r8, #0
 8008e9e:	f10a 0a01 	add.w	sl, sl, #1
 8008ea2:	e7df      	b.n	8008e64 <_DrawBitmap+0x654>
 8008ea4:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8008ea8:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8008eac:	46ba      	mov	sl, r7
 8008eae:	46ac      	mov	ip, r5
 8008eb0:	e001      	b.n	8008eb6 <_DrawBitmap+0x6a6>
 8008eb2:	454e      	cmp	r6, r9
 8008eb4:	d01f      	beq.n	8008ef6 <_DrawBitmap+0x6e6>
 8008eb6:	f1c8 0401 	rsb	r4, r8, #1
 8008eba:	00a4      	lsls	r4, r4, #2
 8008ebc:	f1c4 0104 	rsb	r1, r4, #4
 8008ec0:	fa4e f101 	asr.w	r1, lr, r1
 8008ec4:	4001      	ands	r1, r0
 8008ec6:	40e1      	lsrs	r1, r4
 8008ec8:	f108 0801 	add.w	r8, r8, #1
 8008ecc:	d005      	beq.n	8008eda <_DrawBitmap+0x6ca>
 8008ece:	6a1c      	ldr	r4, [r3, #32]
 8008ed0:	681d      	ldr	r5, [r3, #0]
 8008ed2:	fb04 9402 	mla	r4, r4, r2, r9
 8008ed6:	f825 1014 	strh.w	r1, [r5, r4, lsl #1]
 8008eda:	f1b8 0f02 	cmp.w	r8, #2
 8008ede:	f109 0901 	add.w	r9, r9, #1
 8008ee2:	d1e6      	bne.n	8008eb2 <_DrawBitmap+0x6a2>
 8008ee4:	f89a 0001 	ldrb.w	r0, [sl, #1]
 8008ee8:	f04f 0800 	mov.w	r8, #0
 8008eec:	f10a 0a01 	add.w	sl, sl, #1
 8008ef0:	e7df      	b.n	8008eb2 <_DrawBitmap+0x6a2>
 8008ef2:	4665      	mov	r5, ip
 8008ef4:	e595      	b.n	8008a22 <_DrawBitmap+0x212>
 8008ef6:	4665      	mov	r5, ip
 8008ef8:	e5e1      	b.n	8008abe <_DrawBitmap+0x2ae>
 8008efa:	46da      	mov	sl, fp
 8008efc:	4638      	mov	r0, r7
 8008efe:	e723      	b.n	8008d48 <_DrawBitmap+0x538>
 8008f00:	9b00      	ldr	r3, [sp, #0]
 8008f02:	6980      	ldr	r0, [r0, #24]
 8008f04:	9317      	str	r3, [sp, #92]	; 0x5c
 8008f06:	9b02      	ldr	r3, [sp, #8]
 8008f08:	9315      	str	r3, [sp, #84]	; 0x54
 8008f0a:	9b01      	ldr	r3, [sp, #4]
 8008f0c:	9314      	str	r3, [sp, #80]	; 0x50
 8008f0e:	4631      	mov	r1, r6
 8008f10:	463b      	mov	r3, r7
 8008f12:	46a4      	mov	ip, r4
 8008f14:	9518      	str	r5, [sp, #96]	; 0x60
 8008f16:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
 8008f1a:	b00b      	add	sp, #44	; 0x2c
 8008f1c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f20:	4760      	bx	ip
 8008f22:	9b00      	ldr	r3, [sp, #0]
 8008f24:	6980      	ldr	r0, [r0, #24]
 8008f26:	9316      	str	r3, [sp, #88]	; 0x58
 8008f28:	9b02      	ldr	r3, [sp, #8]
 8008f2a:	9314      	str	r3, [sp, #80]	; 0x50
 8008f2c:	4631      	mov	r1, r6
 8008f2e:	463b      	mov	r3, r7
 8008f30:	46a4      	mov	ip, r4
 8008f32:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 8008f36:	b00b      	add	sp, #44	; 0x2c
 8008f38:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f3c:	4760      	bx	ip
 8008f3e:	bf00      	nop

08008f40 <_Init>:
 8008f40:	b538      	push	{r3, r4, r5, lr}
 8008f42:	6884      	ldr	r4, [r0, #8]
 8008f44:	4605      	mov	r5, r0
 8008f46:	b14c      	cbz	r4, 8008f5c <_Init+0x1c>
 8008f48:	69a8      	ldr	r0, [r5, #24]
 8008f4a:	2200      	movs	r2, #0
 8008f4c:	2101      	movs	r1, #1
 8008f4e:	f7fa ff69 	bl	8003e24 <LCD_X_DisplayDriver>
 8008f52:	2c00      	cmp	r4, #0
 8008f54:	bf08      	it	eq
 8008f56:	f040 0001 	orreq.w	r0, r0, #1
 8008f5a:	bd38      	pop	{r3, r4, r5, pc}
 8008f5c:	2050      	movs	r0, #80	; 0x50
 8008f5e:	f7fb fe63 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8008f62:	4621      	mov	r1, r4
 8008f64:	60a8      	str	r0, [r5, #8]
 8008f66:	2250      	movs	r2, #80	; 0x50
 8008f68:	f7fd fdaa 	bl	8006ac0 <GUI__memset>
 8008f6c:	68ac      	ldr	r4, [r5, #8]
 8008f6e:	e7eb      	b.n	8008f48 <_Init+0x8>

08008f70 <_SetVRAM_BufferPTR>:
 8008f70:	b570      	push	{r4, r5, r6, lr}
 8008f72:	6884      	ldr	r4, [r0, #8]
 8008f74:	460d      	mov	r5, r1
 8008f76:	b11c      	cbz	r4, 8008f80 <_SetVRAM_BufferPTR+0x10>
 8008f78:	682b      	ldr	r3, [r5, #0]
 8008f7a:	6023      	str	r3, [r4, #0]
 8008f7c:	60a5      	str	r5, [r4, #8]
 8008f7e:	bd70      	pop	{r4, r5, r6, pc}
 8008f80:	4606      	mov	r6, r0
 8008f82:	2050      	movs	r0, #80	; 0x50
 8008f84:	f7fb fe50 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8008f88:	4621      	mov	r1, r4
 8008f8a:	60b0      	str	r0, [r6, #8]
 8008f8c:	2250      	movs	r2, #80	; 0x50
 8008f8e:	f7fd fd97 	bl	8006ac0 <GUI__memset>
 8008f92:	68b4      	ldr	r4, [r6, #8]
 8008f94:	2c00      	cmp	r4, #0
 8008f96:	d1ef      	bne.n	8008f78 <_SetVRAM_BufferPTR+0x8>
 8008f98:	bd70      	pop	{r4, r5, r6, pc}
 8008f9a:	bf00      	nop

08008f9c <_GetPos>:
 8008f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f9e:	6884      	ldr	r4, [r0, #8]
 8008fa0:	460f      	mov	r7, r1
 8008fa2:	4616      	mov	r6, r2
 8008fa4:	b124      	cbz	r4, 8008fb0 <_GetPos+0x14>
 8008fa6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008fa8:	603b      	str	r3, [r7, #0]
 8008faa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008fac:	6033      	str	r3, [r6, #0]
 8008fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008fb0:	4605      	mov	r5, r0
 8008fb2:	2050      	movs	r0, #80	; 0x50
 8008fb4:	f7fb fe38 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8008fb8:	4621      	mov	r1, r4
 8008fba:	60a8      	str	r0, [r5, #8]
 8008fbc:	2250      	movs	r2, #80	; 0x50
 8008fbe:	f7fd fd7f 	bl	8006ac0 <GUI__memset>
 8008fc2:	68ac      	ldr	r4, [r5, #8]
 8008fc4:	2c00      	cmp	r4, #0
 8008fc6:	d1ee      	bne.n	8008fa6 <_GetPos+0xa>
 8008fc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008fca:	bf00      	nop

08008fcc <_ShowBuffer>:
 8008fcc:	b570      	push	{r4, r5, r6, lr}
 8008fce:	6885      	ldr	r5, [r0, #8]
 8008fd0:	b082      	sub	sp, #8
 8008fd2:	2300      	movs	r3, #0
 8008fd4:	4604      	mov	r4, r0
 8008fd6:	9301      	str	r3, [sp, #4]
 8008fd8:	460e      	mov	r6, r1
 8008fda:	b145      	cbz	r5, 8008fee <_ShowBuffer+0x22>
 8008fdc:	aa02      	add	r2, sp, #8
 8008fde:	69a0      	ldr	r0, [r4, #24]
 8008fe0:	f842 6d04 	str.w	r6, [r2, #-4]!
 8008fe4:	210e      	movs	r1, #14
 8008fe6:	f7fa ff1d 	bl	8003e24 <LCD_X_DisplayDriver>
 8008fea:	b002      	add	sp, #8
 8008fec:	bd70      	pop	{r4, r5, r6, pc}
 8008fee:	2050      	movs	r0, #80	; 0x50
 8008ff0:	f7fb fe1a 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8008ff4:	4629      	mov	r1, r5
 8008ff6:	60a0      	str	r0, [r4, #8]
 8008ff8:	2250      	movs	r2, #80	; 0x50
 8008ffa:	f7fd fd61 	bl	8006ac0 <GUI__memset>
 8008ffe:	68a3      	ldr	r3, [r4, #8]
 8009000:	2b00      	cmp	r3, #0
 8009002:	d1eb      	bne.n	8008fdc <_ShowBuffer+0x10>
 8009004:	b002      	add	sp, #8
 8009006:	bd70      	pop	{r4, r5, r6, pc}

08009008 <_SetAlpha>:
 8009008:	b570      	push	{r4, r5, r6, lr}
 800900a:	6884      	ldr	r4, [r0, #8]
 800900c:	b082      	sub	sp, #8
 800900e:	2300      	movs	r3, #0
 8009010:	4605      	mov	r5, r0
 8009012:	9301      	str	r3, [sp, #4]
 8009014:	460e      	mov	r6, r1
 8009016:	b14c      	cbz	r4, 800902c <_SetAlpha+0x24>
 8009018:	aa02      	add	r2, sp, #8
 800901a:	62e6      	str	r6, [r4, #44]	; 0x2c
 800901c:	f842 6d04 	str.w	r6, [r2, #-4]!
 8009020:	69a8      	ldr	r0, [r5, #24]
 8009022:	210a      	movs	r1, #10
 8009024:	f7fa fefe 	bl	8003e24 <LCD_X_DisplayDriver>
 8009028:	b002      	add	sp, #8
 800902a:	bd70      	pop	{r4, r5, r6, pc}
 800902c:	2050      	movs	r0, #80	; 0x50
 800902e:	f7fb fdfb 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8009032:	4621      	mov	r1, r4
 8009034:	60a8      	str	r0, [r5, #8]
 8009036:	2250      	movs	r2, #80	; 0x50
 8009038:	f7fd fd42 	bl	8006ac0 <GUI__memset>
 800903c:	68ac      	ldr	r4, [r5, #8]
 800903e:	2c00      	cmp	r4, #0
 8009040:	d1ea      	bne.n	8009018 <_SetAlpha+0x10>
 8009042:	b002      	add	sp, #8
 8009044:	bd70      	pop	{r4, r5, r6, pc}
 8009046:	bf00      	nop

08009048 <_SetVis>:
 8009048:	b570      	push	{r4, r5, r6, lr}
 800904a:	6884      	ldr	r4, [r0, #8]
 800904c:	b082      	sub	sp, #8
 800904e:	2300      	movs	r3, #0
 8009050:	4605      	mov	r5, r0
 8009052:	9301      	str	r3, [sp, #4]
 8009054:	460e      	mov	r6, r1
 8009056:	b14c      	cbz	r4, 800906c <_SetVis+0x24>
 8009058:	aa02      	add	r2, sp, #8
 800905a:	6326      	str	r6, [r4, #48]	; 0x30
 800905c:	f842 6d04 	str.w	r6, [r2, #-4]!
 8009060:	69a8      	ldr	r0, [r5, #24]
 8009062:	2109      	movs	r1, #9
 8009064:	f7fa fede 	bl	8003e24 <LCD_X_DisplayDriver>
 8009068:	b002      	add	sp, #8
 800906a:	bd70      	pop	{r4, r5, r6, pc}
 800906c:	2050      	movs	r0, #80	; 0x50
 800906e:	f7fb fddb 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8009072:	4621      	mov	r1, r4
 8009074:	60a8      	str	r0, [r5, #8]
 8009076:	2250      	movs	r2, #80	; 0x50
 8009078:	f7fd fd22 	bl	8006ac0 <GUI__memset>
 800907c:	68ac      	ldr	r4, [r5, #8]
 800907e:	2c00      	cmp	r4, #0
 8009080:	d1ea      	bne.n	8009058 <_SetVis+0x10>
 8009082:	b002      	add	sp, #8
 8009084:	bd70      	pop	{r4, r5, r6, pc}
 8009086:	bf00      	nop

08009088 <_SetVRAMAddr>:
 8009088:	b570      	push	{r4, r5, r6, lr}
 800908a:	6884      	ldr	r4, [r0, #8]
 800908c:	b082      	sub	sp, #8
 800908e:	2300      	movs	r3, #0
 8009090:	4606      	mov	r6, r0
 8009092:	9301      	str	r3, [sp, #4]
 8009094:	460d      	mov	r5, r1
 8009096:	b154      	cbz	r4, 80090ae <_SetVRAMAddr+0x26>
 8009098:	aa02      	add	r2, sp, #8
 800909a:	6025      	str	r5, [r4, #0]
 800909c:	6065      	str	r5, [r4, #4]
 800909e:	f842 5d04 	str.w	r5, [r2, #-4]!
 80090a2:	69b0      	ldr	r0, [r6, #24]
 80090a4:	2102      	movs	r1, #2
 80090a6:	f7fa febd 	bl	8003e24 <LCD_X_DisplayDriver>
 80090aa:	b002      	add	sp, #8
 80090ac:	bd70      	pop	{r4, r5, r6, pc}
 80090ae:	2050      	movs	r0, #80	; 0x50
 80090b0:	f7fb fdba 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 80090b4:	4621      	mov	r1, r4
 80090b6:	60b0      	str	r0, [r6, #8]
 80090b8:	2250      	movs	r2, #80	; 0x50
 80090ba:	f7fd fd01 	bl	8006ac0 <GUI__memset>
 80090be:	68b4      	ldr	r4, [r6, #8]
 80090c0:	2c00      	cmp	r4, #0
 80090c2:	d1e9      	bne.n	8009098 <_SetVRAMAddr+0x10>
 80090c4:	b002      	add	sp, #8
 80090c6:	bd70      	pop	{r4, r5, r6, pc}

080090c8 <_SetVSize>:
 80090c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090ca:	6884      	ldr	r4, [r0, #8]
 80090cc:	4605      	mov	r5, r0
 80090ce:	460e      	mov	r6, r1
 80090d0:	4617      	mov	r7, r2
 80090d2:	b14c      	cbz	r4, 80090e8 <_SetVSize+0x20>
 80090d4:	69a8      	ldr	r0, [r5, #24]
 80090d6:	f7fe fd51 	bl	8007b7c <LCD_GetSwapXYEx>
 80090da:	61a6      	str	r6, [r4, #24]
 80090dc:	61e7      	str	r7, [r4, #28]
 80090de:	b908      	cbnz	r0, 80090e4 <_SetVSize+0x1c>
 80090e0:	6226      	str	r6, [r4, #32]
 80090e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090e4:	6227      	str	r7, [r4, #32]
 80090e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090e8:	2050      	movs	r0, #80	; 0x50
 80090ea:	f7fb fd9d 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 80090ee:	4621      	mov	r1, r4
 80090f0:	60a8      	str	r0, [r5, #8]
 80090f2:	2250      	movs	r2, #80	; 0x50
 80090f4:	f7fd fce4 	bl	8006ac0 <GUI__memset>
 80090f8:	68ac      	ldr	r4, [r5, #8]
 80090fa:	2c00      	cmp	r4, #0
 80090fc:	d1ea      	bne.n	80090d4 <_SetVSize+0xc>
 80090fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009100 <_SetSize>:
 8009100:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009102:	6884      	ldr	r4, [r0, #8]
 8009104:	b083      	sub	sp, #12
 8009106:	2300      	movs	r3, #0
 8009108:	4605      	mov	r5, r0
 800910a:	460f      	mov	r7, r1
 800910c:	4616      	mov	r6, r2
 800910e:	9301      	str	r3, [sp, #4]
 8009110:	9300      	str	r3, [sp, #0]
 8009112:	b1ac      	cbz	r4, 8009140 <_SetSize+0x40>
 8009114:	6a23      	ldr	r3, [r4, #32]
 8009116:	b153      	cbz	r3, 800912e <_SetSize+0x2e>
 8009118:	6127      	str	r7, [r4, #16]
 800911a:	6166      	str	r6, [r4, #20]
 800911c:	466a      	mov	r2, sp
 800911e:	69a8      	ldr	r0, [r5, #24]
 8009120:	9700      	str	r7, [sp, #0]
 8009122:	2107      	movs	r1, #7
 8009124:	9601      	str	r6, [sp, #4]
 8009126:	f7fa fe7d 	bl	8003e24 <LCD_X_DisplayDriver>
 800912a:	b003      	add	sp, #12
 800912c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800912e:	69a8      	ldr	r0, [r5, #24]
 8009130:	f7fe fd24 	bl	8007b7c <LCD_GetSwapXYEx>
 8009134:	2800      	cmp	r0, #0
 8009136:	bf0c      	ite	eq
 8009138:	4638      	moveq	r0, r7
 800913a:	4630      	movne	r0, r6
 800913c:	6220      	str	r0, [r4, #32]
 800913e:	e7eb      	b.n	8009118 <_SetSize+0x18>
 8009140:	2050      	movs	r0, #80	; 0x50
 8009142:	f7fb fd71 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8009146:	4621      	mov	r1, r4
 8009148:	60a8      	str	r0, [r5, #8]
 800914a:	2250      	movs	r2, #80	; 0x50
 800914c:	f7fd fcb8 	bl	8006ac0 <GUI__memset>
 8009150:	68ac      	ldr	r4, [r5, #8]
 8009152:	2c00      	cmp	r4, #0
 8009154:	d1de      	bne.n	8009114 <_SetSize+0x14>
 8009156:	b003      	add	sp, #12
 8009158:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800915a:	bf00      	nop

0800915c <_SetDevFunc>:
 800915c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800915e:	6885      	ldr	r5, [r0, #8]
 8009160:	460c      	mov	r4, r1
 8009162:	4617      	mov	r7, r2
 8009164:	b325      	cbz	r5, 80091b0 <_SetDevFunc+0x54>
 8009166:	1ee3      	subs	r3, r4, #3
 8009168:	2b22      	cmp	r3, #34	; 0x22
 800916a:	d814      	bhi.n	8009196 <_SetDevFunc+0x3a>
 800916c:	e8df f003 	tbb	[pc, r3]
 8009170:	13131316 	.word	0x13131316
 8009174:	13131313 	.word	0x13131313
 8009178:	13131313 	.word	0x13131313
 800917c:	13131313 	.word	0x13131313
 8009180:	13131313 	.word	0x13131313
 8009184:	13181313 	.word	0x13181313
 8009188:	13131313 	.word	0x13131313
 800918c:	131c1a13 	.word	0x131c1a13
 8009190:	121e      	.short	0x121e
 8009192:	14          	.byte	0x14
 8009193:	00          	.byte	0x00
 8009194:	64ef      	str	r7, [r5, #76]	; 0x4c
 8009196:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009198:	642f      	str	r7, [r5, #64]	; 0x40
 800919a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800919c:	64af      	str	r7, [r5, #72]	; 0x48
 800919e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091a0:	636f      	str	r7, [r5, #52]	; 0x34
 80091a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091a4:	63ef      	str	r7, [r5, #60]	; 0x3c
 80091a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091a8:	63af      	str	r7, [r5, #56]	; 0x38
 80091aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091ac:	646f      	str	r7, [r5, #68]	; 0x44
 80091ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091b0:	4606      	mov	r6, r0
 80091b2:	2050      	movs	r0, #80	; 0x50
 80091b4:	f7fb fd38 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 80091b8:	4629      	mov	r1, r5
 80091ba:	60b0      	str	r0, [r6, #8]
 80091bc:	2250      	movs	r2, #80	; 0x50
 80091be:	f7fd fc7f 	bl	8006ac0 <GUI__memset>
 80091c2:	68b5      	ldr	r5, [r6, #8]
 80091c4:	2d00      	cmp	r5, #0
 80091c6:	d1ce      	bne.n	8009166 <_SetDevFunc+0xa>
 80091c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80091ca:	bf00      	nop

080091cc <_CopyBuffer>:
 80091cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80091d0:	6884      	ldr	r4, [r0, #8]
 80091d2:	4605      	mov	r5, r0
 80091d4:	460e      	mov	r6, r1
 80091d6:	4617      	mov	r7, r2
 80091d8:	b334      	cbz	r4, 8009228 <_CopyBuffer+0x5c>
 80091da:	42be      	cmp	r6, r7
 80091dc:	d01c      	beq.n	8009218 <_CopyBuffer+0x4c>
 80091de:	68eb      	ldr	r3, [r5, #12]
 80091e0:	2108      	movs	r1, #8
 80091e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80091e4:	4628      	mov	r0, r5
 80091e6:	4798      	blx	r3
 80091e8:	69a1      	ldr	r1, [r4, #24]
 80091ea:	6963      	ldr	r3, [r4, #20]
 80091ec:	68a2      	ldr	r2, [r4, #8]
 80091ee:	fb03 f301 	mul.w	r3, r3, r1
 80091f2:	fb00 f003 	mul.w	r0, r0, r3
 80091f6:	08c3      	lsrs	r3, r0, #3
 80091f8:	b182      	cbz	r2, 800921c <_CopyBuffer+0x50>
 80091fa:	f852 1026 	ldr.w	r1, [r2, r6, lsl #2]
 80091fe:	f852 9027 	ldr.w	r9, [r2, r7, lsl #2]
 8009202:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8009206:	f1b8 0f00 	cmp.w	r8, #0
 800920a:	d01a      	beq.n	8009242 <_CopyBuffer+0x76>
 800920c:	463a      	mov	r2, r7
 800920e:	4631      	mov	r1, r6
 8009210:	69a8      	ldr	r0, [r5, #24]
 8009212:	47c0      	blx	r8
 8009214:	f8c4 9000 	str.w	r9, [r4]
 8009218:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800921c:	6862      	ldr	r2, [r4, #4]
 800921e:	fb03 2106 	mla	r1, r3, r6, r2
 8009222:	fb03 2907 	mla	r9, r3, r7, r2
 8009226:	e7ec      	b.n	8009202 <_CopyBuffer+0x36>
 8009228:	2050      	movs	r0, #80	; 0x50
 800922a:	f7fb fcfd 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 800922e:	4621      	mov	r1, r4
 8009230:	60a8      	str	r0, [r5, #8]
 8009232:	2250      	movs	r2, #80	; 0x50
 8009234:	f7fd fc44 	bl	8006ac0 <GUI__memset>
 8009238:	68ac      	ldr	r4, [r5, #8]
 800923a:	2c00      	cmp	r4, #0
 800923c:	d1cd      	bne.n	80091da <_CopyBuffer+0xe>
 800923e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009242:	4803      	ldr	r0, [pc, #12]	; (8009250 <_CopyBuffer+0x84>)
 8009244:	461a      	mov	r2, r3
 8009246:	6803      	ldr	r3, [r0, #0]
 8009248:	4648      	mov	r0, r9
 800924a:	4798      	blx	r3
 800924c:	e7e2      	b.n	8009214 <_CopyBuffer+0x48>
 800924e:	bf00      	nop
 8009250:	20000038 	.word	0x20000038

08009254 <_SetPos>:
 8009254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009258:	6884      	ldr	r4, [r0, #8]
 800925a:	b089      	sub	sp, #36	; 0x24
 800925c:	2300      	movs	r3, #0
 800925e:	4605      	mov	r5, r0
 8009260:	460f      	mov	r7, r1
 8009262:	4616      	mov	r6, r2
 8009264:	9303      	str	r3, [sp, #12]
 8009266:	9302      	str	r3, [sp, #8]
 8009268:	9304      	str	r3, [sp, #16]
 800926a:	9305      	str	r3, [sp, #20]
 800926c:	9306      	str	r3, [sp, #24]
 800926e:	9307      	str	r3, [sp, #28]
 8009270:	2c00      	cmp	r4, #0
 8009272:	d05e      	beq.n	8009332 <_SetPos+0xde>
 8009274:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8009276:	b133      	cbz	r3, 8009286 <_SetPos+0x32>
 8009278:	4632      	mov	r2, r6
 800927a:	4639      	mov	r1, r7
 800927c:	69a8      	ldr	r0, [r5, #24]
 800927e:	4798      	blx	r3
 8009280:	b009      	add	sp, #36	; 0x24
 8009282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009286:	6267      	str	r7, [r4, #36]	; 0x24
 8009288:	62a6      	str	r6, [r4, #40]	; 0x28
 800928a:	f7fe fd47 	bl	8007d1c <LCD_GetXSizeDisplay>
 800928e:	4681      	mov	r9, r0
 8009290:	f7fe fd4a 	bl	8007d28 <LCD_GetYSizeDisplay>
 8009294:	68eb      	ldr	r3, [r5, #12]
 8009296:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800929a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800929c:	f8d4 8014 	ldr.w	r8, [r4, #20]
 80092a0:	4682      	mov	sl, r0
 80092a2:	2108      	movs	r1, #8
 80092a4:	4628      	mov	r0, r5
 80092a6:	4798      	blx	r3
 80092a8:	1dc2      	adds	r2, r0, #7
 80092aa:	bf48      	it	mi
 80092ac:	f100 020e 	addmi.w	r2, r0, #14
 80092b0:	10d2      	asrs	r2, r2, #3
 80092b2:	2f00      	cmp	r7, #0
 80092b4:	9206      	str	r2, [sp, #24]
 80092b6:	db56      	blt.n	8009366 <_SetPos+0x112>
 80092b8:	eb07 030b 	add.w	r3, r7, fp
 80092bc:	4599      	cmp	r9, r3
 80092be:	9702      	str	r7, [sp, #8]
 80092c0:	bfb6      	itet	lt
 80092c2:	ebc7 0709 	rsblt	r7, r7, r9
 80092c6:	f8cd b010 	strge.w	fp, [sp, #16]
 80092ca:	9704      	strlt	r7, [sp, #16]
 80092cc:	2e00      	cmp	r6, #0
 80092ce:	db3e      	blt.n	800934e <_SetPos+0xfa>
 80092d0:	eb06 0308 	add.w	r3, r6, r8
 80092d4:	459a      	cmp	sl, r3
 80092d6:	bfb8      	it	lt
 80092d8:	ebc6 010a 	rsblt	r1, r6, sl
 80092dc:	9603      	str	r6, [sp, #12]
 80092de:	bfa6      	itte	ge
 80092e0:	f8cd 8014 	strge.w	r8, [sp, #20]
 80092e4:	4641      	movge	r1, r8
 80092e6:	9105      	strlt	r1, [sp, #20]
 80092e8:	9b04      	ldr	r3, [sp, #16]
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	dd0f      	ble.n	800930e <_SetPos+0xba>
 80092ee:	2900      	cmp	r1, #0
 80092f0:	dd0d      	ble.n	800930e <_SetPos+0xba>
 80092f2:	9b02      	ldr	r3, [sp, #8]
 80092f4:	4599      	cmp	r9, r3
 80092f6:	dd0a      	ble.n	800930e <_SetPos+0xba>
 80092f8:	45b2      	cmp	sl, r6
 80092fa:	dd08      	ble.n	800930e <_SetPos+0xba>
 80092fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80092fe:	2b00      	cmp	r3, #0
 8009300:	d03a      	beq.n	8009378 <_SetPos+0x124>
 8009302:	aa02      	add	r2, sp, #8
 8009304:	69a8      	ldr	r0, [r5, #24]
 8009306:	2108      	movs	r1, #8
 8009308:	f7fa fd8c 	bl	8003e24 <LCD_X_DisplayDriver>
 800930c:	e7b8      	b.n	8009280 <_SetPos+0x2c>
 800930e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009310:	2b01      	cmp	r3, #1
 8009312:	d1b5      	bne.n	8009280 <_SetPos+0x2c>
 8009314:	68ac      	ldr	r4, [r5, #8]
 8009316:	2300      	movs	r3, #0
 8009318:	9301      	str	r3, [sp, #4]
 800931a:	2c00      	cmp	r4, #0
 800931c:	d039      	beq.n	8009392 <_SetPos+0x13e>
 800931e:	aa08      	add	r2, sp, #32
 8009320:	2300      	movs	r3, #0
 8009322:	6323      	str	r3, [r4, #48]	; 0x30
 8009324:	69a8      	ldr	r0, [r5, #24]
 8009326:	f842 3d1c 	str.w	r3, [r2, #-28]!
 800932a:	2109      	movs	r1, #9
 800932c:	f7fa fd7a 	bl	8003e24 <LCD_X_DisplayDriver>
 8009330:	e7a6      	b.n	8009280 <_SetPos+0x2c>
 8009332:	2050      	movs	r0, #80	; 0x50
 8009334:	f7fb fc78 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8009338:	4621      	mov	r1, r4
 800933a:	60a8      	str	r0, [r5, #8]
 800933c:	2250      	movs	r2, #80	; 0x50
 800933e:	f7fd fbbf 	bl	8006ac0 <GUI__memset>
 8009342:	68ac      	ldr	r4, [r5, #8]
 8009344:	2c00      	cmp	r4, #0
 8009346:	d195      	bne.n	8009274 <_SetPos+0x20>
 8009348:	b009      	add	sp, #36	; 0x24
 800934a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800934e:	9b07      	ldr	r3, [sp, #28]
 8009350:	fb02 f206 	mul.w	r2, r2, r6
 8009354:	eb06 0108 	add.w	r1, r6, r8
 8009358:	fb0b 3312 	mls	r3, fp, r2, r3
 800935c:	2600      	movs	r6, #0
 800935e:	9105      	str	r1, [sp, #20]
 8009360:	9307      	str	r3, [sp, #28]
 8009362:	9603      	str	r6, [sp, #12]
 8009364:	e7c0      	b.n	80092e8 <_SetPos+0x94>
 8009366:	9b07      	ldr	r3, [sp, #28]
 8009368:	2100      	movs	r1, #0
 800936a:	fb02 3317 	mls	r3, r2, r7, r3
 800936e:	445f      	add	r7, fp
 8009370:	9307      	str	r3, [sp, #28]
 8009372:	9704      	str	r7, [sp, #16]
 8009374:	9102      	str	r1, [sp, #8]
 8009376:	e7a9      	b.n	80092cc <_SetPos+0x78>
 8009378:	68ac      	ldr	r4, [r5, #8]
 800937a:	9301      	str	r3, [sp, #4]
 800937c:	b1b4      	cbz	r4, 80093ac <_SetPos+0x158>
 800937e:	aa08      	add	r2, sp, #32
 8009380:	2301      	movs	r3, #1
 8009382:	6323      	str	r3, [r4, #48]	; 0x30
 8009384:	2109      	movs	r1, #9
 8009386:	f842 3d1c 	str.w	r3, [r2, #-28]!
 800938a:	69a8      	ldr	r0, [r5, #24]
 800938c:	f7fa fd4a 	bl	8003e24 <LCD_X_DisplayDriver>
 8009390:	e7b7      	b.n	8009302 <_SetPos+0xae>
 8009392:	2050      	movs	r0, #80	; 0x50
 8009394:	f7fb fc48 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 8009398:	4621      	mov	r1, r4
 800939a:	60a8      	str	r0, [r5, #8]
 800939c:	2250      	movs	r2, #80	; 0x50
 800939e:	f7fd fb8f 	bl	8006ac0 <GUI__memset>
 80093a2:	68ac      	ldr	r4, [r5, #8]
 80093a4:	2c00      	cmp	r4, #0
 80093a6:	f43f af6b 	beq.w	8009280 <_SetPos+0x2c>
 80093aa:	e7b8      	b.n	800931e <_SetPos+0xca>
 80093ac:	2050      	movs	r0, #80	; 0x50
 80093ae:	f7fb fc3b 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 80093b2:	4621      	mov	r1, r4
 80093b4:	60a8      	str	r0, [r5, #8]
 80093b6:	2250      	movs	r2, #80	; 0x50
 80093b8:	f7fd fb82 	bl	8006ac0 <GUI__memset>
 80093bc:	68ac      	ldr	r4, [r5, #8]
 80093be:	2c00      	cmp	r4, #0
 80093c0:	d09f      	beq.n	8009302 <_SetPos+0xae>
 80093c2:	e7dc      	b.n	800937e <_SetPos+0x12a>

080093c4 <_GetDevData>:
 80093c4:	2901      	cmp	r1, #1
 80093c6:	4802      	ldr	r0, [pc, #8]	; (80093d0 <_GetDevData+0xc>)
 80093c8:	bf18      	it	ne
 80093ca:	2000      	movne	r0, #0
 80093cc:	4770      	bx	lr
 80093ce:	bf00      	nop
 80093d0:	0801ba78 	.word	0x0801ba78

080093d4 <_GetDevFunc>:
 80093d4:	2916      	cmp	r1, #22
 80093d6:	4802      	ldr	r0, [pc, #8]	; (80093e0 <_GetDevFunc+0xc>)
 80093d8:	bf18      	it	ne
 80093da:	2000      	movne	r0, #0
 80093dc:	4770      	bx	lr
 80093de:	bf00      	nop
 80093e0:	0800a261 	.word	0x0800a261

080093e4 <_SetOrg>:
 80093e4:	6800      	ldr	r0, [r0, #0]
 80093e6:	b110      	cbz	r0, 80093ee <_SetOrg+0xa>
 80093e8:	68c3      	ldr	r3, [r0, #12]
 80093ea:	6a1b      	ldr	r3, [r3, #32]
 80093ec:	4718      	bx	r3
 80093ee:	4770      	bx	lr

080093f0 <_GetRect>:
 80093f0:	b570      	push	{r4, r5, r6, lr}
 80093f2:	b082      	sub	sp, #8
 80093f4:	6880      	ldr	r0, [r0, #8]
 80093f6:	460c      	mov	r4, r1
 80093f8:	f7fb fd3c 	bl	8004e74 <GUI_ALLOC_LockH>
 80093fc:	a902      	add	r1, sp, #8
 80093fe:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8009402:	f9b0 5006 	ldrsh.w	r5, [r0, #6]
 8009406:	8902      	ldrh	r2, [r0, #8]
 8009408:	8943      	ldrh	r3, [r0, #10]
 800940a:	f841 0d04 	str.w	r0, [r1, #-4]!
 800940e:	4432      	add	r2, r6
 8009410:	442b      	add	r3, r5
 8009412:	3a01      	subs	r2, #1
 8009414:	3b01      	subs	r3, #1
 8009416:	8026      	strh	r6, [r4, #0]
 8009418:	80a2      	strh	r2, [r4, #4]
 800941a:	8065      	strh	r5, [r4, #2]
 800941c:	80e3      	strh	r3, [r4, #6]
 800941e:	4608      	mov	r0, r1
 8009420:	f7fb fd3a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009424:	b002      	add	sp, #8
 8009426:	bd70      	pop	{r4, r5, r6, pc}

08009428 <_DrawBitmap>:
 8009428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800942c:	4ca7      	ldr	r4, [pc, #668]	; (80096cc <_DrawBitmap+0x2a4>)
 800942e:	6824      	ldr	r4, [r4, #0]
 8009430:	b095      	sub	sp, #84	; 0x54
 8009432:	4683      	mov	fp, r0
 8009434:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8009436:	920a      	str	r2, [sp, #40]	; 0x28
 8009438:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800943a:	f8dd a08c 	ldr.w	sl, [sp, #140]	; 0x8c
 800943e:	9309      	str	r3, [sp, #36]	; 0x24
 8009440:	460c      	mov	r4, r1
 8009442:	f7fb fd17 	bl	8004e74 <GUI_ALLOC_LockH>
 8009446:	6942      	ldr	r2, [r0, #20]
 8009448:	9011      	str	r0, [sp, #68]	; 0x44
 800944a:	2a00      	cmp	r2, #0
 800944c:	f040 80ae 	bne.w	80095ac <_DrawBitmap+0x184>
 8009450:	4603      	mov	r3, r0
 8009452:	68db      	ldr	r3, [r3, #12]
 8009454:	9306      	str	r3, [sp, #24]
 8009456:	a811      	add	r0, sp, #68	; 0x44
 8009458:	9212      	str	r2, [sp, #72]	; 0x48
 800945a:	f7fb fd1d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800945e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009460:	9812      	ldr	r0, [sp, #72]	; 0x48
 8009462:	18e3      	adds	r3, r4, r3
 8009464:	9308      	str	r3, [sp, #32]
 8009466:	4b99      	ldr	r3, [pc, #612]	; (80096cc <_DrawBitmap+0x2a4>)
 8009468:	681b      	ldr	r3, [r3, #0]
 800946a:	b120      	cbz	r0, 8009476 <_DrawBitmap+0x4e>
 800946c:	7c1a      	ldrb	r2, [r3, #16]
 800946e:	4c97      	ldr	r4, [pc, #604]	; (80096cc <_DrawBitmap+0x2a4>)
 8009470:	0791      	lsls	r1, r2, #30
 8009472:	f000 80cf 	beq.w	8009614 <_DrawBitmap+0x1ec>
 8009476:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009478:	f7fb fcfc 	bl	8004e74 <GUI_ALLOC_LockH>
 800947c:	4604      	mov	r4, r0
 800947e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009480:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009484:	68e3      	ldr	r3, [r4, #12]
 8009486:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800948a:	1a8a      	subs	r2, r1, r2
 800948c:	fb03 f302 	mul.w	r3, r3, r2
 8009490:	9a08      	ldr	r2, [sp, #32]
 8009492:	a814      	add	r0, sp, #80	; 0x50
 8009494:	ebc9 0902 	rsb	r9, r9, r2
 8009498:	3318      	adds	r3, #24
 800949a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800949e:	18e3      	adds	r3, r4, r3
 80094a0:	f840 4d04 	str.w	r4, [r0, #-4]!
 80094a4:	9302      	str	r3, [sp, #8]
 80094a6:	f7fb fcf7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80094aa:	2d10      	cmp	r5, #16
 80094ac:	f000 8084 	beq.w	80095b8 <_DrawBitmap+0x190>
 80094b0:	2d17      	cmp	r5, #23
 80094b2:	dd41      	ble.n	8009538 <_DrawBitmap+0x110>
 80094b4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80094b6:	2b00      	cmp	r3, #0
 80094b8:	f340 84b9 	ble.w	8009e2e <_DrawBitmap+0xa06>
 80094bc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80094c0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80094c2:	444b      	add	r3, r9
 80094c4:	9303      	str	r3, [sp, #12]
 80094c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80094c8:	f1a3 0a04 	sub.w	sl, r3, #4
 80094cc:	f11a 0f04 	cmn.w	sl, #4
 80094d0:	d020      	beq.n	8009514 <_DrawBitmap+0xec>
 80094d2:	9f02      	ldr	r7, [sp, #8]
 80094d4:	b1f7      	cbz	r7, 8009514 <_DrawBitmap+0xec>
 80094d6:	2e00      	cmp	r6, #0
 80094d8:	d05a      	beq.n	8009590 <_DrawBitmap+0x168>
 80094da:	68b2      	ldr	r2, [r6, #8]
 80094dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80094de:	6854      	ldr	r4, [r2, #4]
 80094e0:	9908      	ldr	r1, [sp, #32]
 80094e2:	462b      	mov	r3, r5
 80094e4:	464a      	mov	r2, r9
 80094e6:	4630      	mov	r0, r6
 80094e8:	47a0      	blx	r4
 80094ea:	9c08      	ldr	r4, [sp, #32]
 80094ec:	46d0      	mov	r8, sl
 80094ee:	f8db 3010 	ldr.w	r3, [fp, #16]
 80094f2:	f858 0f04 	ldr.w	r0, [r8, #4]!
 80094f6:	681b      	ldr	r3, [r3, #0]
 80094f8:	4798      	blx	r3
 80094fa:	68b3      	ldr	r3, [r6, #8]
 80094fc:	f827 0b02 	strh.w	r0, [r7], #2
 8009500:	4621      	mov	r1, r4
 8009502:	681b      	ldr	r3, [r3, #0]
 8009504:	464a      	mov	r2, r9
 8009506:	4630      	mov	r0, r6
 8009508:	4798      	blx	r3
 800950a:	3d01      	subs	r5, #1
 800950c:	f104 0401 	add.w	r4, r4, #1
 8009510:	d1ed      	bne.n	80094ee <_DrawBitmap+0xc6>
 8009512:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8009514:	9b02      	ldr	r3, [sp, #8]
 8009516:	9a06      	ldr	r2, [sp, #24]
 8009518:	4413      	add	r3, r2
 800951a:	9302      	str	r3, [sp, #8]
 800951c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800951e:	449a      	add	sl, r3
 8009520:	9b03      	ldr	r3, [sp, #12]
 8009522:	f109 0901 	add.w	r9, r9, #1
 8009526:	4599      	cmp	r9, r3
 8009528:	d1d0      	bne.n	80094cc <_DrawBitmap+0xa4>
 800952a:	b116      	cbz	r6, 8009532 <_DrawBitmap+0x10a>
 800952c:	a812      	add	r0, sp, #72	; 0x48
 800952e:	f7fb fcb3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009532:	b015      	add	sp, #84	; 0x54
 8009534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009538:	2d08      	cmp	r5, #8
 800953a:	d074      	beq.n	8009626 <_DrawBitmap+0x1fe>
 800953c:	4b64      	ldr	r3, [pc, #400]	; (80096d0 <_DrawBitmap+0x2a8>)
 800953e:	f1ba 0f00 	cmp.w	sl, #0
 8009542:	bf08      	it	eq
 8009544:	469a      	moveq	sl, r3
 8009546:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8009548:	2b00      	cmp	r3, #0
 800954a:	f340 812b 	ble.w	80097a4 <_DrawBitmap+0x37c>
 800954e:	461c      	mov	r4, r3
 8009550:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009552:	9806      	ldr	r0, [sp, #24]
 8009554:	9a02      	ldr	r2, [sp, #8]
 8009556:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8009558:	9921      	ldr	r1, [sp, #132]	; 0x84
 800955a:	009b      	lsls	r3, r3, #2
 800955c:	9303      	str	r3, [sp, #12]
 800955e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009560:	005b      	lsls	r3, r3, #1
 8009562:	9307      	str	r3, [sp, #28]
 8009564:	2300      	movs	r3, #0
 8009566:	2d02      	cmp	r5, #2
 8009568:	f000 8123 	beq.w	80097b2 <_DrawBitmap+0x38a>
 800956c:	2d04      	cmp	r5, #4
 800956e:	f000 81f8 	beq.w	8009962 <_DrawBitmap+0x53a>
 8009572:	2d01      	cmp	r5, #1
 8009574:	f000 8337 	beq.w	8009be6 <_DrawBitmap+0x7be>
 8009578:	3301      	adds	r3, #1
 800957a:	429c      	cmp	r4, r3
 800957c:	4431      	add	r1, r6
 800957e:	4402      	add	r2, r0
 8009580:	dcf1      	bgt.n	8009566 <_DrawBitmap+0x13e>
 8009582:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8009586:	46de      	mov	lr, fp
 8009588:	f1be 0f00 	cmp.w	lr, #0
 800958c:	d1ce      	bne.n	800952c <_DrawBitmap+0x104>
 800958e:	e7d0      	b.n	8009532 <_DrawBitmap+0x10a>
 8009590:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8009592:	463d      	mov	r5, r7
 8009594:	4656      	mov	r6, sl
 8009596:	f8db 3010 	ldr.w	r3, [fp, #16]
 800959a:	f856 0f04 	ldr.w	r0, [r6, #4]!
 800959e:	681b      	ldr	r3, [r3, #0]
 80095a0:	4798      	blx	r3
 80095a2:	3c01      	subs	r4, #1
 80095a4:	f825 0b02 	strh.w	r0, [r5], #2
 80095a8:	d1f5      	bne.n	8009596 <_DrawBitmap+0x16e>
 80095aa:	e7b2      	b.n	8009512 <_DrawBitmap+0xea>
 80095ac:	4610      	mov	r0, r2
 80095ae:	f7fb fc61 	bl	8004e74 <GUI_ALLOC_LockH>
 80095b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80095b4:	4602      	mov	r2, r0
 80095b6:	e74c      	b.n	8009452 <_DrawBitmap+0x2a>
 80095b8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80095ba:	2f00      	cmp	r7, #0
 80095bc:	f000 8429 	beq.w	8009e12 <_DrawBitmap+0x9ea>
 80095c0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80095c2:	2b00      	cmp	r3, #0
 80095c4:	ddb2      	ble.n	800952c <_DrawBitmap+0x104>
 80095c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80095c8:	4e42      	ldr	r6, [pc, #264]	; (80096d4 <_DrawBitmap+0x2ac>)
 80095ca:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
 80095ce:	f8dd b080 	ldr.w	fp, [sp, #128]	; 0x80
 80095d2:	005d      	lsls	r5, r3, #1
 80095d4:	2400      	movs	r4, #0
 80095d6:	46a0      	mov	r8, r4
 80095d8:	46a9      	mov	r9, r5
 80095da:	9c21      	ldr	r4, [sp, #132]	; 0x84
 80095dc:	9d02      	ldr	r5, [sp, #8]
 80095de:	4621      	mov	r1, r4
 80095e0:	464a      	mov	r2, r9
 80095e2:	4628      	mov	r0, r5
 80095e4:	b164      	cbz	r4, 8009600 <_DrawBitmap+0x1d8>
 80095e6:	b15d      	cbz	r5, 8009600 <_DrawBitmap+0x1d8>
 80095e8:	6833      	ldr	r3, [r6, #0]
 80095ea:	4798      	blx	r3
 80095ec:	b13f      	cbz	r7, 80095fe <_DrawBitmap+0x1d6>
 80095ee:	68bb      	ldr	r3, [r7, #8]
 80095f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80095f2:	9908      	ldr	r1, [sp, #32]
 80095f4:	4638      	mov	r0, r7
 80095f6:	4442      	add	r2, r8
 80095f8:	685f      	ldr	r7, [r3, #4]
 80095fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80095fc:	47b8      	blx	r7
 80095fe:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8009600:	9b06      	ldr	r3, [sp, #24]
 8009602:	f108 0801 	add.w	r8, r8, #1
 8009606:	45c2      	cmp	sl, r8
 8009608:	445c      	add	r4, fp
 800960a:	441d      	add	r5, r3
 800960c:	dce7      	bgt.n	80095de <_DrawBitmap+0x1b6>
 800960e:	2f00      	cmp	r7, #0
 8009610:	d18c      	bne.n	800952c <_DrawBitmap+0x104>
 8009612:	e78e      	b.n	8009532 <_DrawBitmap+0x10a>
 8009614:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8009616:	9300      	str	r3, [sp, #0]
 8009618:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800961a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800961c:	9908      	ldr	r1, [sp, #32]
 800961e:	f000 fe0d 	bl	800a23c <GUI_USAGE_AddRect>
 8009622:	6823      	ldr	r3, [r4, #0]
 8009624:	e727      	b.n	8009476 <_DrawBitmap+0x4e>
 8009626:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8009628:	2b00      	cmp	r3, #0
 800962a:	f340 8409 	ble.w	8009e40 <_DrawBitmap+0xa18>
 800962e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8009632:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8009636:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009638:	444b      	add	r3, r9
 800963a:	9304      	str	r3, [sp, #16]
 800963c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800963e:	3b01      	subs	r3, #1
 8009640:	9303      	str	r3, [sp, #12]
 8009642:	9b02      	ldr	r3, [sp, #8]
 8009644:	4658      	mov	r0, fp
 8009646:	eb03 0642 	add.w	r6, r3, r2, lsl #1
 800964a:	4657      	mov	r7, sl
 800964c:	9b03      	ldr	r3, [sp, #12]
 800964e:	1c59      	adds	r1, r3, #1
 8009650:	4b1e      	ldr	r3, [pc, #120]	; (80096cc <_DrawBitmap+0x2a4>)
 8009652:	681b      	ldr	r3, [r3, #0]
 8009654:	7c1b      	ldrb	r3, [r3, #16]
 8009656:	2f00      	cmp	r7, #0
 8009658:	d049      	beq.n	80096ee <_DrawBitmap+0x2c6>
 800965a:	f013 0303 	ands.w	r3, r3, #3
 800965e:	d03b      	beq.n	80096d8 <_DrawBitmap+0x2b0>
 8009660:	2b02      	cmp	r3, #2
 8009662:	d11f      	bne.n	80096a4 <_DrawBitmap+0x27c>
 8009664:	f1bb 0f00 	cmp.w	fp, #0
 8009668:	d064      	beq.n	8009734 <_DrawBitmap+0x30c>
 800966a:	f8dd a00c 	ldr.w	sl, [sp, #12]
 800966e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8009672:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8009674:	9c08      	ldr	r4, [sp, #32]
 8009676:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800967a:	4621      	mov	r1, r4
 800967c:	464a      	mov	r2, r9
 800967e:	3401      	adds	r4, #1
 8009680:	4658      	mov	r0, fp
 8009682:	b143      	cbz	r3, 8009696 <_DrawBitmap+0x26e>
 8009684:	f8db e008 	ldr.w	lr, [fp, #8]
 8009688:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 800968c:	f8a8 3000 	strh.w	r3, [r8]
 8009690:	f8de 3000 	ldr.w	r3, [lr]
 8009694:	4798      	blx	r3
 8009696:	3d01      	subs	r5, #1
 8009698:	f108 0802 	add.w	r8, r8, #2
 800969c:	d1eb      	bne.n	8009676 <_DrawBitmap+0x24e>
 800969e:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 80096a2:	4658      	mov	r0, fp
 80096a4:	9b02      	ldr	r3, [sp, #8]
 80096a6:	9a06      	ldr	r2, [sp, #24]
 80096a8:	4619      	mov	r1, r3
 80096aa:	4411      	add	r1, r2
 80096ac:	9b03      	ldr	r3, [sp, #12]
 80096ae:	9102      	str	r1, [sp, #8]
 80096b0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80096b2:	440b      	add	r3, r1
 80096b4:	9303      	str	r3, [sp, #12]
 80096b6:	9b04      	ldr	r3, [sp, #16]
 80096b8:	f109 0901 	add.w	r9, r9, #1
 80096bc:	454b      	cmp	r3, r9
 80096be:	4416      	add	r6, r2
 80096c0:	d1c4      	bne.n	800964c <_DrawBitmap+0x224>
 80096c2:	2800      	cmp	r0, #0
 80096c4:	f47f af32 	bne.w	800952c <_DrawBitmap+0x104>
 80096c8:	e733      	b.n	8009532 <_DrawBitmap+0x10a>
 80096ca:	bf00      	nop
 80096cc:	20000018 	.word	0x20000018
 80096d0:	0801baac 	.word	0x0801baac
 80096d4:	20000038 	.word	0x20000038
 80096d8:	9a03      	ldr	r2, [sp, #12]
 80096da:	9b02      	ldr	r3, [sp, #8]
 80096dc:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 80096e0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80096e4:	f823 1b02 	strh.w	r1, [r3], #2
 80096e8:	42b3      	cmp	r3, r6
 80096ea:	d1f7      	bne.n	80096dc <_DrawBitmap+0x2b4>
 80096ec:	e7da      	b.n	80096a4 <_DrawBitmap+0x27c>
 80096ee:	f013 0303 	ands.w	r3, r3, #3
 80096f2:	f000 836a 	beq.w	8009dca <_DrawBitmap+0x9a2>
 80096f6:	2b02      	cmp	r3, #2
 80096f8:	d1d4      	bne.n	80096a4 <_DrawBitmap+0x27c>
 80096fa:	f1bb 0f00 	cmp.w	fp, #0
 80096fe:	f000 837e 	beq.w	8009dfe <_DrawBitmap+0x9d6>
 8009702:	f8dd a00c 	ldr.w	sl, [sp, #12]
 8009706:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800970a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800970c:	9c08      	ldr	r4, [sp, #32]
 800970e:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 8009712:	4621      	mov	r1, r4
 8009714:	464a      	mov	r2, r9
 8009716:	3401      	adds	r4, #1
 8009718:	4658      	mov	r0, fp
 800971a:	b133      	cbz	r3, 800972a <_DrawBitmap+0x302>
 800971c:	f8db e008 	ldr.w	lr, [fp, #8]
 8009720:	f8a8 3000 	strh.w	r3, [r8]
 8009724:	f8de 3000 	ldr.w	r3, [lr]
 8009728:	4798      	blx	r3
 800972a:	3d01      	subs	r5, #1
 800972c:	f108 0802 	add.w	r8, r8, #2
 8009730:	d1ed      	bne.n	800970e <_DrawBitmap+0x2e6>
 8009732:	e7b4      	b.n	800969e <_DrawBitmap+0x276>
 8009734:	9903      	ldr	r1, [sp, #12]
 8009736:	9b02      	ldr	r3, [sp, #8]
 8009738:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800973c:	b112      	cbz	r2, 8009744 <_DrawBitmap+0x31c>
 800973e:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8009742:	801a      	strh	r2, [r3, #0]
 8009744:	3302      	adds	r3, #2
 8009746:	429e      	cmp	r6, r3
 8009748:	d1f6      	bne.n	8009738 <_DrawBitmap+0x310>
 800974a:	e7aa      	b.n	80096a2 <_DrawBitmap+0x27a>
 800974c:	9b03      	ldr	r3, [sp, #12]
 800974e:	464a      	mov	r2, r9
 8009750:	f014 0f01 	tst.w	r4, #1
 8009754:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8009758:	d003      	beq.n	8009762 <_DrawBitmap+0x33a>
 800975a:	8819      	ldrh	r1, [r3, #0]
 800975c:	ea8a 0101 	eor.w	r1, sl, r1
 8009760:	8019      	strh	r1, [r3, #0]
 8009762:	3a01      	subs	r2, #1
 8009764:	f103 0302 	add.w	r3, r3, #2
 8009768:	d1f2      	bne.n	8009750 <_DrawBitmap+0x328>
 800976a:	9b03      	ldr	r3, [sp, #12]
 800976c:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 8009770:	9303      	str	r3, [sp, #12]
 8009772:	f1bb 0f00 	cmp.w	fp, #0
 8009776:	f040 82c6 	bne.w	8009d06 <_DrawBitmap+0x8de>
 800977a:	f8dd a08c 	ldr.w	sl, [sp, #140]	; 0x8c
 800977e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009780:	9a06      	ldr	r2, [sp, #24]
 8009782:	3301      	adds	r3, #1
 8009784:	461c      	mov	r4, r3
 8009786:	930b      	str	r3, [sp, #44]	; 0x2c
 8009788:	9b02      	ldr	r3, [sp, #8]
 800978a:	4413      	add	r3, r2
 800978c:	9302      	str	r3, [sp, #8]
 800978e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009790:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009792:	a811      	add	r0, sp, #68	; 0x44
 8009794:	4413      	add	r3, r2
 8009796:	930c      	str	r3, [sp, #48]	; 0x30
 8009798:	f7fb fb7e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800979c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800979e:	4294      	cmp	r4, r2
 80097a0:	f2c0 822d 	blt.w	8009bfe <_DrawBitmap+0x7d6>
 80097a4:	f8dd e048 	ldr.w	lr, [sp, #72]	; 0x48
 80097a8:	f1be 0f00 	cmp.w	lr, #0
 80097ac:	f47f aebe 	bne.w	800952c <_DrawBitmap+0x104>
 80097b0:	e6bf      	b.n	8009532 <_DrawBitmap+0x10a>
 80097b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80097b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80097b6:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 80097ba:	9202      	str	r2, [sp, #8]
 80097bc:	f1c3 0304 	rsb	r3, r3, #4
 80097c0:	b2db      	uxtb	r3, r3
 80097c2:	930c      	str	r3, [sp, #48]	; 0x30
 80097c4:	465b      	mov	r3, fp
 80097c6:	9121      	str	r1, [sp, #132]	; 0x84
 80097c8:	46d3      	mov	fp, sl
 80097ca:	469a      	mov	sl, r3
 80097cc:	46d6      	mov	lr, sl
 80097ce:	4657      	mov	r7, sl
 80097d0:	4ba4      	ldr	r3, [pc, #656]	; (8009a64 <_DrawBitmap+0x63c>)
 80097d2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80097d4:	681b      	ldr	r3, [r3, #0]
 80097d6:	7814      	ldrb	r4, [r2, #0]
 80097d8:	7c1b      	ldrb	r3, [r3, #16]
 80097da:	9a07      	ldr	r2, [sp, #28]
 80097dc:	f003 0303 	and.w	r3, r3, #3
 80097e0:	4094      	lsls	r4, r2
 80097e2:	2b01      	cmp	r3, #1
 80097e4:	b2e4      	uxtb	r4, r4
 80097e6:	f000 809d 	beq.w	8009924 <_DrawBitmap+0x4fc>
 80097ea:	d37b      	bcc.n	80098e4 <_DrawBitmap+0x4bc>
 80097ec:	2b02      	cmp	r3, #2
 80097ee:	d166      	bne.n	80098be <_DrawBitmap+0x496>
 80097f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097f2:	9303      	str	r3, [sp, #12]
 80097f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80097f6:	9305      	str	r3, [sp, #20]
 80097f8:	9b08      	ldr	r3, [sp, #32]
 80097fa:	9304      	str	r3, [sp, #16]
 80097fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80097fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009800:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009804:	9d02      	ldr	r5, [sp, #8]
 8009806:	eb03 0a02 	add.w	sl, r3, r2
 800980a:	9a03      	ldr	r2, [sp, #12]
 800980c:	9b03      	ldr	r3, [sp, #12]
 800980e:	4591      	cmp	r9, r2
 8009810:	bfc8      	it	gt
 8009812:	fa5f f982 	uxtbgt.w	r9, r2
 8009816:	ebc9 0303 	rsb	r3, r9, r3
 800981a:	f109 39ff 	add.w	r9, r9, #4294967295
 800981e:	9303      	str	r3, [sp, #12]
 8009820:	fa5f f989 	uxtb.w	r9, r9
 8009824:	b347      	cbz	r7, 8009878 <_DrawBitmap+0x450>
 8009826:	f109 0801 	add.w	r8, r9, #1
 800982a:	9e04      	ldr	r6, [sp, #16]
 800982c:	eb05 0848 	add.w	r8, r5, r8, lsl #1
 8009830:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 8009834:	4631      	mov	r1, r6
 8009836:	ea4f 1394 	mov.w	r3, r4, lsr #6
 800983a:	f106 0601 	add.w	r6, r6, #1
 800983e:	4652      	mov	r2, sl
 8009840:	4638      	mov	r0, r7
 8009842:	d007      	beq.n	8009854 <_DrawBitmap+0x42c>
 8009844:	f8d7 e008 	ldr.w	lr, [r7, #8]
 8009848:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 800984c:	802b      	strh	r3, [r5, #0]
 800984e:	f8de 3000 	ldr.w	r3, [lr]
 8009852:	4798      	blx	r3
 8009854:	3502      	adds	r5, #2
 8009856:	00a4      	lsls	r4, r4, #2
 8009858:	4545      	cmp	r5, r8
 800985a:	b2e4      	uxtb	r4, r4
 800985c:	d1e8      	bne.n	8009830 <_DrawBitmap+0x408>
 800985e:	9b04      	ldr	r3, [sp, #16]
 8009860:	3301      	adds	r3, #1
 8009862:	444b      	add	r3, r9
 8009864:	9304      	str	r3, [sp, #16]
 8009866:	9b03      	ldr	r3, [sp, #12]
 8009868:	b1c3      	cbz	r3, 800989c <_DrawBitmap+0x474>
 800986a:	9b05      	ldr	r3, [sp, #20]
 800986c:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8009870:	9305      	str	r3, [sp, #20]
 8009872:	f04f 0904 	mov.w	r9, #4
 8009876:	e7c8      	b.n	800980a <_DrawBitmap+0x3e2>
 8009878:	f109 0101 	add.w	r1, r9, #1
 800987c:	eb05 0141 	add.w	r1, r5, r1, lsl #1
 8009880:	09a2      	lsrs	r2, r4, #6
 8009882:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 8009886:	ea4f 0384 	mov.w	r3, r4, lsl #2
 800988a:	b2dc      	uxtb	r4, r3
 800988c:	bf1c      	itt	ne
 800988e:	f85b 3022 	ldrne.w	r3, [fp, r2, lsl #2]
 8009892:	802b      	strhne	r3, [r5, #0]
 8009894:	3502      	adds	r5, #2
 8009896:	42a9      	cmp	r1, r5
 8009898:	d1f2      	bne.n	8009880 <_DrawBitmap+0x458>
 800989a:	e7e0      	b.n	800985e <_DrawBitmap+0x436>
 800989c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800989e:	46be      	mov	lr, r7
 80098a0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80098a2:	9920      	ldr	r1, [sp, #128]	; 0x80
 80098a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80098a6:	440a      	add	r2, r1
 80098a8:	9221      	str	r2, [sp, #132]	; 0x84
 80098aa:	9906      	ldr	r1, [sp, #24]
 80098ac:	9a02      	ldr	r2, [sp, #8]
 80098ae:	440a      	add	r2, r1
 80098b0:	9202      	str	r2, [sp, #8]
 80098b2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80098b4:	3301      	adds	r3, #1
 80098b6:	429a      	cmp	r2, r3
 80098b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80098ba:	dc89      	bgt.n	80097d0 <_DrawBitmap+0x3a8>
 80098bc:	e664      	b.n	8009588 <_DrawBitmap+0x160>
 80098be:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80098c0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80098c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80098c4:	440a      	add	r2, r1
 80098c6:	9221      	str	r2, [sp, #132]	; 0x84
 80098c8:	9906      	ldr	r1, [sp, #24]
 80098ca:	9a02      	ldr	r2, [sp, #8]
 80098cc:	440a      	add	r2, r1
 80098ce:	9202      	str	r2, [sp, #8]
 80098d0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80098d2:	3301      	adds	r3, #1
 80098d4:	429a      	cmp	r2, r3
 80098d6:	46ba      	mov	sl, r7
 80098d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80098da:	f73f af77 	bgt.w	80097cc <_DrawBitmap+0x3a4>
 80098de:	46d3      	mov	fp, sl
 80098e0:	46de      	mov	lr, fp
 80098e2:	e651      	b.n	8009588 <_DrawBitmap+0x160>
 80098e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80098e6:	9e02      	ldr	r6, [sp, #8]
 80098e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80098ea:	f8dd c084 	ldr.w	ip, [sp, #132]	; 0x84
 80098ee:	42ab      	cmp	r3, r5
 80098f0:	bfc8      	it	gt
 80098f2:	b2eb      	uxtbgt	r3, r5
 80098f4:	1e58      	subs	r0, r3, #1
 80098f6:	b2c0      	uxtb	r0, r0
 80098f8:	1aed      	subs	r5, r5, r3
 80098fa:	eb06 0140 	add.w	r1, r6, r0, lsl #1
 80098fe:	1eb3      	subs	r3, r6, #2
 8009900:	09a2      	lsrs	r2, r4, #6
 8009902:	00a4      	lsls	r4, r4, #2
 8009904:	f85b 2022 	ldr.w	r2, [fp, r2, lsl #2]
 8009908:	f823 2f02 	strh.w	r2, [r3, #2]!
 800990c:	428b      	cmp	r3, r1
 800990e:	b2e4      	uxtb	r4, r4
 8009910:	d1f6      	bne.n	8009900 <_DrawBitmap+0x4d8>
 8009912:	3001      	adds	r0, #1
 8009914:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8009918:	2d00      	cmp	r5, #0
 800991a:	d0c1      	beq.n	80098a0 <_DrawBitmap+0x478>
 800991c:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 8009920:	2304      	movs	r3, #4
 8009922:	e7e4      	b.n	80098ee <_DrawBitmap+0x4c6>
 8009924:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009926:	9b02      	ldr	r3, [sp, #8]
 8009928:	9809      	ldr	r0, [sp, #36]	; 0x24
 800992a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 800992c:	4282      	cmp	r2, r0
 800992e:	bfc8      	it	gt
 8009930:	b2c2      	uxtbgt	r2, r0
 8009932:	1e51      	subs	r1, r2, #1
 8009934:	b2c9      	uxtb	r1, r1
 8009936:	3101      	adds	r1, #1
 8009938:	1a80      	subs	r0, r0, r2
 800993a:	eb03 0141 	add.w	r1, r3, r1, lsl #1
 800993e:	00a2      	lsls	r2, r4, #2
 8009940:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 8009944:	b2d4      	uxtb	r4, r2
 8009946:	d003      	beq.n	8009950 <_DrawBitmap+0x528>
 8009948:	881a      	ldrh	r2, [r3, #0]
 800994a:	f082 02ff 	eor.w	r2, r2, #255	; 0xff
 800994e:	801a      	strh	r2, [r3, #0]
 8009950:	3302      	adds	r3, #2
 8009952:	428b      	cmp	r3, r1
 8009954:	d1f3      	bne.n	800993e <_DrawBitmap+0x516>
 8009956:	2800      	cmp	r0, #0
 8009958:	d0a2      	beq.n	80098a0 <_DrawBitmap+0x478>
 800995a:	f815 4f01 	ldrb.w	r4, [r5, #1]!
 800995e:	2204      	movs	r2, #4
 8009960:	e7e4      	b.n	800992c <_DrawBitmap+0x504>
 8009962:	9121      	str	r1, [sp, #132]	; 0x84
 8009964:	9922      	ldr	r1, [sp, #136]	; 0x88
 8009966:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 800996a:	930b      	str	r3, [sp, #44]	; 0x2c
 800996c:	f1c1 0302 	rsb	r3, r1, #2
 8009970:	b2d9      	uxtb	r1, r3
 8009972:	f8dd 9084 	ldr.w	r9, [sp, #132]	; 0x84
 8009976:	9107      	str	r1, [sp, #28]
 8009978:	4613      	mov	r3, r2
 800997a:	465a      	mov	r2, fp
 800997c:	46d3      	mov	fp, sl
 800997e:	4692      	mov	sl, r2
 8009980:	3302      	adds	r3, #2
 8009982:	9302      	str	r3, [sp, #8]
 8009984:	46d6      	mov	lr, sl
 8009986:	4b37      	ldr	r3, [pc, #220]	; (8009a64 <_DrawBitmap+0x63c>)
 8009988:	9903      	ldr	r1, [sp, #12]
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	f899 2000 	ldrb.w	r2, [r9]
 8009990:	7c1b      	ldrb	r3, [r3, #16]
 8009992:	408a      	lsls	r2, r1
 8009994:	f003 0303 	and.w	r3, r3, #3
 8009998:	9902      	ldr	r1, [sp, #8]
 800999a:	2b01      	cmp	r3, #1
 800999c:	b2d4      	uxtb	r4, r2
 800999e:	f1a1 0802 	sub.w	r8, r1, #2
 80099a2:	f000 80d2 	beq.w	8009b4a <_DrawBitmap+0x722>
 80099a6:	f0c0 809d 	bcc.w	8009ae4 <_DrawBitmap+0x6bc>
 80099aa:	2b02      	cmp	r3, #2
 80099ac:	f040 808c 	bne.w	8009ac8 <_DrawBitmap+0x6a0>
 80099b0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80099b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80099b4:	440b      	add	r3, r1
 80099b6:	4619      	mov	r1, r3
 80099b8:	9305      	str	r3, [sp, #20]
 80099ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80099bc:	2b00      	cmp	r3, #0
 80099be:	f000 80e8 	beq.w	8009b92 <_DrawBitmap+0x76a>
 80099c2:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 80099c6:	f040 8209 	bne.w	8009ddc <_DrawBitmap+0x9b4>
 80099ca:	9b08      	ldr	r3, [sp, #32]
 80099cc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80099d0:	f899 4001 	ldrb.w	r4, [r9, #1]
 80099d4:	1c59      	adds	r1, r3, #1
 80099d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80099d8:	f109 0601 	add.w	r6, r9, #1
 80099dc:	1e5f      	subs	r7, r3, #1
 80099de:	2f01      	cmp	r7, #1
 80099e0:	dd51      	ble.n	8009a86 <_DrawBitmap+0x65e>
 80099e2:	1ebb      	subs	r3, r7, #2
 80099e4:	9304      	str	r3, [sp, #16]
 80099e6:	f1ba 0f00 	cmp.w	sl, #0
 80099ea:	f000 80d6 	beq.w	8009b9a <_DrawBitmap+0x772>
 80099ee:	085b      	lsrs	r3, r3, #1
 80099f0:	1c8a      	adds	r2, r1, #2
 80099f2:	930c      	str	r3, [sp, #48]	; 0x30
 80099f4:	005b      	lsls	r3, r3, #1
 80099f6:	930d      	str	r3, [sp, #52]	; 0x34
 80099f8:	18d3      	adds	r3, r2, r3
 80099fa:	f108 0704 	add.w	r7, r8, #4
 80099fe:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8009a02:	f8cd 9084 	str.w	r9, [sp, #132]	; 0x84
 8009a06:	920e      	str	r2, [sp, #56]	; 0x38
 8009a08:	460d      	mov	r5, r1
 8009a0a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8009a0e:	4699      	mov	r9, r3
 8009a10:	e01d      	b.n	8009a4e <_DrawBitmap+0x626>
 8009a12:	f8da e008 	ldr.w	lr, [sl, #8]
 8009a16:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 8009a1a:	f827 3c04 	strh.w	r3, [r7, #-4]
 8009a1e:	f8de 3000 	ldr.w	r3, [lr]
 8009a22:	4798      	blx	r3
 8009a24:	f014 040f 	ands.w	r4, r4, #15
 8009a28:	d00a      	beq.n	8009a40 <_DrawBitmap+0x618>
 8009a2a:	f85b 3024 	ldr.w	r3, [fp, r4, lsl #2]
 8009a2e:	f827 3c02 	strh.w	r3, [r7, #-2]
 8009a32:	f8da 3008 	ldr.w	r3, [sl, #8]
 8009a36:	4642      	mov	r2, r8
 8009a38:	681b      	ldr	r3, [r3, #0]
 8009a3a:	1c69      	adds	r1, r5, #1
 8009a3c:	4650      	mov	r0, sl
 8009a3e:	4798      	blx	r3
 8009a40:	3502      	adds	r5, #2
 8009a42:	45a9      	cmp	r9, r5
 8009a44:	f107 0704 	add.w	r7, r7, #4
 8009a48:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 8009a4c:	d00c      	beq.n	8009a68 <_DrawBitmap+0x640>
 8009a4e:	f014 0ff0 	tst.w	r4, #240	; 0xf0
 8009a52:	ea4f 1314 	mov.w	r3, r4, lsr #4
 8009a56:	4629      	mov	r1, r5
 8009a58:	4642      	mov	r2, r8
 8009a5a:	4650      	mov	r0, sl
 8009a5c:	d1d9      	bne.n	8009a12 <_DrawBitmap+0x5ea>
 8009a5e:	2c00      	cmp	r4, #0
 8009a60:	d0ee      	beq.n	8009a40 <_DrawBitmap+0x618>
 8009a62:	e7e2      	b.n	8009a2a <_DrawBitmap+0x602>
 8009a64:	20000018 	.word	0x20000018
 8009a68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009a6a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8009a6c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8009a6e:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
 8009a72:	f8dd 9084 	ldr.w	r9, [sp, #132]	; 0x84
 8009a76:	4613      	mov	r3, r2
 8009a78:	4401      	add	r1, r0
 8009a7a:	9804      	ldr	r0, [sp, #16]
 8009a7c:	3301      	adds	r3, #1
 8009a7e:	eba0 0742 	sub.w	r7, r0, r2, lsl #1
 8009a82:	eb08 0883 	add.w	r8, r8, r3, lsl #2
 8009a86:	b177      	cbz	r7, 8009aa6 <_DrawBitmap+0x67e>
 8009a88:	0924      	lsrs	r4, r4, #4
 8009a8a:	d00c      	beq.n	8009aa6 <_DrawBitmap+0x67e>
 8009a8c:	f85b 3024 	ldr.w	r3, [fp, r4, lsl #2]
 8009a90:	f8a8 3000 	strh.w	r3, [r8]
 8009a94:	f1ba 0f00 	cmp.w	sl, #0
 8009a98:	d005      	beq.n	8009aa6 <_DrawBitmap+0x67e>
 8009a9a:	f8da 3008 	ldr.w	r3, [sl, #8]
 8009a9e:	9a05      	ldr	r2, [sp, #20]
 8009aa0:	681b      	ldr	r3, [r3, #0]
 8009aa2:	4650      	mov	r0, sl
 8009aa4:	4798      	blx	r3
 8009aa6:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
 8009aaa:	46d6      	mov	lr, sl
 8009aac:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009aae:	9906      	ldr	r1, [sp, #24]
 8009ab0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009ab2:	4491      	add	r9, r2
 8009ab4:	9a02      	ldr	r2, [sp, #8]
 8009ab6:	440a      	add	r2, r1
 8009ab8:	9202      	str	r2, [sp, #8]
 8009aba:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8009abc:	3301      	adds	r3, #1
 8009abe:	429a      	cmp	r2, r3
 8009ac0:	930b      	str	r3, [sp, #44]	; 0x2c
 8009ac2:	f73f af60 	bgt.w	8009986 <_DrawBitmap+0x55e>
 8009ac6:	e55f      	b.n	8009588 <_DrawBitmap+0x160>
 8009ac8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009aca:	991e      	ldr	r1, [sp, #120]	; 0x78
 8009acc:	3301      	adds	r3, #1
 8009ace:	461a      	mov	r2, r3
 8009ad0:	930b      	str	r3, [sp, #44]	; 0x2c
 8009ad2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009ad4:	4499      	add	r9, r3
 8009ad6:	9b06      	ldr	r3, [sp, #24]
 8009ad8:	4291      	cmp	r1, r2
 8009ada:	4443      	add	r3, r8
 8009adc:	f73f af50 	bgt.w	8009980 <_DrawBitmap+0x558>
 8009ae0:	46d3      	mov	fp, sl
 8009ae2:	e6fd      	b.n	80098e0 <_DrawBitmap+0x4b8>
 8009ae4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009ae6:	2b00      	cmp	r3, #0
 8009ae8:	d050      	beq.n	8009b8c <_DrawBitmap+0x764>
 8009aea:	0924      	lsrs	r4, r4, #4
 8009aec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009aee:	1e5d      	subs	r5, r3, #1
 8009af0:	f85b 3024 	ldr.w	r3, [fp, r4, lsl #2]
 8009af4:	f8a8 3000 	strh.w	r3, [r8]
 8009af8:	f899 4001 	ldrb.w	r4, [r9, #1]
 8009afc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8009b00:	f109 0201 	add.w	r2, r9, #1
 8009b04:	2d01      	cmp	r5, #1
 8009b06:	dd18      	ble.n	8009b3a <_DrawBitmap+0x712>
 8009b08:	106e      	asrs	r6, r5, #1
 8009b0a:	1990      	adds	r0, r2, r6
 8009b0c:	f005 0501 	and.w	r5, r5, #1
 8009b10:	f108 0304 	add.w	r3, r8, #4
 8009b14:	0921      	lsrs	r1, r4, #4
 8009b16:	f004 040f 	and.w	r4, r4, #15
 8009b1a:	f85b 7021 	ldr.w	r7, [fp, r1, lsl #2]
 8009b1e:	f85b 1024 	ldr.w	r1, [fp, r4, lsl #2]
 8009b22:	f823 1c02 	strh.w	r1, [r3, #-2]
 8009b26:	f823 7c04 	strh.w	r7, [r3, #-4]
 8009b2a:	f812 4f01 	ldrb.w	r4, [r2, #1]!
 8009b2e:	4282      	cmp	r2, r0
 8009b30:	f103 0304 	add.w	r3, r3, #4
 8009b34:	d1ee      	bne.n	8009b14 <_DrawBitmap+0x6ec>
 8009b36:	eb08 0886 	add.w	r8, r8, r6, lsl #2
 8009b3a:	2d00      	cmp	r5, #0
 8009b3c:	d0b6      	beq.n	8009aac <_DrawBitmap+0x684>
 8009b3e:	0924      	lsrs	r4, r4, #4
 8009b40:	f85b 3024 	ldr.w	r3, [fp, r4, lsl #2]
 8009b44:	f8a8 3000 	strh.w	r3, [r8]
 8009b48:	e7b0      	b.n	8009aac <_DrawBitmap+0x684>
 8009b4a:	9b07      	ldr	r3, [sp, #28]
 8009b4c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009b4e:	4648      	mov	r0, r9
 8009b50:	428b      	cmp	r3, r1
 8009b52:	bfc8      	it	gt
 8009b54:	b2cb      	uxtbgt	r3, r1
 8009b56:	1e5a      	subs	r2, r3, #1
 8009b58:	b2d2      	uxtb	r2, r2
 8009b5a:	3201      	adds	r2, #1
 8009b5c:	1ac9      	subs	r1, r1, r3
 8009b5e:	eb08 0242 	add.w	r2, r8, r2, lsl #1
 8009b62:	0123      	lsls	r3, r4, #4
 8009b64:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 8009b68:	b2dc      	uxtb	r4, r3
 8009b6a:	d005      	beq.n	8009b78 <_DrawBitmap+0x750>
 8009b6c:	f8b8 3000 	ldrh.w	r3, [r8]
 8009b70:	f083 03ff 	eor.w	r3, r3, #255	; 0xff
 8009b74:	f8a8 3000 	strh.w	r3, [r8]
 8009b78:	f108 0802 	add.w	r8, r8, #2
 8009b7c:	4590      	cmp	r8, r2
 8009b7e:	d1f0      	bne.n	8009b62 <_DrawBitmap+0x73a>
 8009b80:	2900      	cmp	r1, #0
 8009b82:	d093      	beq.n	8009aac <_DrawBitmap+0x684>
 8009b84:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 8009b88:	2302      	movs	r3, #2
 8009b8a:	e7e1      	b.n	8009b50 <_DrawBitmap+0x728>
 8009b8c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8009b8e:	464a      	mov	r2, r9
 8009b90:	e7b8      	b.n	8009b04 <_DrawBitmap+0x6dc>
 8009b92:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8009b94:	9908      	ldr	r1, [sp, #32]
 8009b96:	464e      	mov	r6, r9
 8009b98:	e721      	b.n	80099de <_DrawBitmap+0x5b6>
 8009b9a:	085f      	lsrs	r7, r3, #1
 8009b9c:	f107 0e01 	add.w	lr, r7, #1
 8009ba0:	eb06 000e 	add.w	r0, r6, lr
 8009ba4:	f108 0304 	add.w	r3, r8, #4
 8009ba8:	f014 0ff0 	tst.w	r4, #240	; 0xf0
 8009bac:	ea4f 1214 	mov.w	r2, r4, lsr #4
 8009bb0:	d003      	beq.n	8009bba <_DrawBitmap+0x792>
 8009bb2:	f85b 2022 	ldr.w	r2, [fp, r2, lsl #2]
 8009bb6:	f823 2c04 	strh.w	r2, [r3, #-4]
 8009bba:	f014 040f 	ands.w	r4, r4, #15
 8009bbe:	d003      	beq.n	8009bc8 <_DrawBitmap+0x7a0>
 8009bc0:	f85b 2024 	ldr.w	r2, [fp, r4, lsl #2]
 8009bc4:	f823 2c02 	strh.w	r2, [r3, #-2]
 8009bc8:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 8009bcc:	42b0      	cmp	r0, r6
 8009bce:	f103 0304 	add.w	r3, r3, #4
 8009bd2:	d1e9      	bne.n	8009ba8 <_DrawBitmap+0x780>
 8009bd4:	9b04      	ldr	r3, [sp, #16]
 8009bd6:	3102      	adds	r1, #2
 8009bd8:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8009bdc:	eb08 088e 	add.w	r8, r8, lr, lsl #2
 8009be0:	eba3 0747 	sub.w	r7, r3, r7, lsl #1
 8009be4:	e74f      	b.n	8009a86 <_DrawBitmap+0x65e>
 8009be6:	930b      	str	r3, [sp, #44]	; 0x2c
 8009be8:	460b      	mov	r3, r1
 8009bea:	3301      	adds	r3, #1
 8009bec:	930c      	str	r3, [sp, #48]	; 0x30
 8009bee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009bf0:	9202      	str	r2, [sp, #8]
 8009bf2:	f1c3 0308 	rsb	r3, r3, #8
 8009bf6:	9121      	str	r1, [sp, #132]	; 0x84
 8009bf8:	930d      	str	r3, [sp, #52]	; 0x34
 8009bfa:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8009bfe:	4b93      	ldr	r3, [pc, #588]	; (8009e4c <_DrawBitmap+0xa24>)
 8009c00:	4c93      	ldr	r4, [pc, #588]	; (8009e50 <_DrawBitmap+0xa28>)
 8009c02:	681b      	ldr	r3, [r3, #0]
 8009c04:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009c06:	f7fb f935 	bl	8004e74 <GUI_ALLOC_LockH>
 8009c0a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8009c0c:	4b8f      	ldr	r3, [pc, #572]	; (8009e4c <_DrawBitmap+0xa24>)
 8009c0e:	f811 2c01 	ldrb.w	r2, [r1, #-1]
 8009c12:	681b      	ldr	r3, [r3, #0]
 8009c14:	5ca4      	ldrb	r4, [r4, r2]
 8009c16:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8009c18:	7c1b      	ldrb	r3, [r3, #16]
 8009c1a:	9011      	str	r0, [sp, #68]	; 0x44
 8009c1c:	4114      	asrs	r4, r2
 8009c1e:	f101 3bff 	add.w	fp, r1, #4294967295
 8009c22:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009c24:	990a      	ldr	r1, [sp, #40]	; 0x28
 8009c26:	f8dd 8048 	ldr.w	r8, [sp, #72]	; 0x48
 8009c2a:	f003 0303 	and.w	r3, r3, #3
 8009c2e:	440a      	add	r2, r1
 8009c30:	2b02      	cmp	r3, #2
 8009c32:	9204      	str	r2, [sp, #16]
 8009c34:	d071      	beq.n	8009d1a <_DrawBitmap+0x8f2>
 8009c36:	2b03      	cmp	r3, #3
 8009c38:	d01f      	beq.n	8009c7a <_DrawBitmap+0x852>
 8009c3a:	2b01      	cmp	r3, #1
 8009c3c:	d01d      	beq.n	8009c7a <_DrawBitmap+0x852>
 8009c3e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8009c40:	9e02      	ldr	r6, [sp, #8]
 8009c42:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8009c44:	42a8      	cmp	r0, r5
 8009c46:	bf28      	it	cs
 8009c48:	4628      	movcs	r0, r5
 8009c4a:	1a2d      	subs	r5, r5, r0
 8009c4c:	4602      	mov	r2, r0
 8009c4e:	4631      	mov	r1, r6
 8009c50:	f004 0301 	and.w	r3, r4, #1
 8009c54:	3a01      	subs	r2, #1
 8009c56:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8009c5a:	f821 3b02 	strh.w	r3, [r1], #2
 8009c5e:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8009c62:	d1f5      	bne.n	8009c50 <_DrawBitmap+0x828>
 8009c64:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8009c68:	2d00      	cmp	r5, #0
 8009c6a:	f43f ad88 	beq.w	800977e <_DrawBitmap+0x356>
 8009c6e:	f81b 3f01 	ldrb.w	r3, [fp, #1]!
 8009c72:	4a77      	ldr	r2, [pc, #476]	; (8009e50 <_DrawBitmap+0xa28>)
 8009c74:	2008      	movs	r0, #8
 8009c76:	5cd4      	ldrb	r4, [r2, r3]
 8009c78:	e7e4      	b.n	8009c44 <_DrawBitmap+0x81c>
 8009c7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009c7c:	691b      	ldr	r3, [r3, #16]
 8009c7e:	689b      	ldr	r3, [r3, #8]
 8009c80:	4798      	blx	r3
 8009c82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c84:	9a02      	ldr	r2, [sp, #8]
 8009c86:	9305      	str	r3, [sp, #20]
 8009c88:	9203      	str	r2, [sp, #12]
 8009c8a:	b283      	uxth	r3, r0
 8009c8c:	9a08      	ldr	r2, [sp, #32]
 8009c8e:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
 8009c92:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8009c96:	f8cd a08c 	str.w	sl, [sp, #140]	; 0x8c
 8009c9a:	9207      	str	r2, [sp, #28]
 8009c9c:	469a      	mov	sl, r3
 8009c9e:	45d9      	cmp	r9, fp
 8009ca0:	bf28      	it	cs
 8009ca2:	46d9      	movcs	r9, fp
 8009ca4:	ebc9 0b0b 	rsb	fp, r9, fp
 8009ca8:	f1b8 0f00 	cmp.w	r8, #0
 8009cac:	f43f ad4e 	beq.w	800974c <_DrawBitmap+0x324>
 8009cb0:	464d      	mov	r5, r9
 8009cb2:	9e03      	ldr	r6, [sp, #12]
 8009cb4:	9f07      	ldr	r7, [sp, #28]
 8009cb6:	e005      	b.n	8009cc4 <_DrawBitmap+0x89c>
 8009cb8:	3d01      	subs	r5, #1
 8009cba:	f106 0602 	add.w	r6, r6, #2
 8009cbe:	f107 0701 	add.w	r7, r7, #1
 8009cc2:	d015      	beq.n	8009cf0 <_DrawBitmap+0x8c8>
 8009cc4:	f014 0f01 	tst.w	r4, #1
 8009cc8:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8009ccc:	d0f4      	beq.n	8009cb8 <_DrawBitmap+0x890>
 8009cce:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8009cd2:	9a04      	ldr	r2, [sp, #16]
 8009cd4:	681b      	ldr	r3, [r3, #0]
 8009cd6:	4639      	mov	r1, r7
 8009cd8:	4640      	mov	r0, r8
 8009cda:	4798      	blx	r3
 8009cdc:	8833      	ldrh	r3, [r6, #0]
 8009cde:	3d01      	subs	r5, #1
 8009ce0:	ea8a 0303 	eor.w	r3, sl, r3
 8009ce4:	8033      	strh	r3, [r6, #0]
 8009ce6:	f107 0701 	add.w	r7, r7, #1
 8009cea:	f106 0602 	add.w	r6, r6, #2
 8009cee:	d1e9      	bne.n	8009cc4 <_DrawBitmap+0x89c>
 8009cf0:	9b03      	ldr	r3, [sp, #12]
 8009cf2:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 8009cf6:	9303      	str	r3, [sp, #12]
 8009cf8:	9b07      	ldr	r3, [sp, #28]
 8009cfa:	444b      	add	r3, r9
 8009cfc:	9307      	str	r3, [sp, #28]
 8009cfe:	f1bb 0f00 	cmp.w	fp, #0
 8009d02:	f43f ad3a 	beq.w	800977a <_DrawBitmap+0x352>
 8009d06:	9b05      	ldr	r3, [sp, #20]
 8009d08:	4a51      	ldr	r2, [pc, #324]	; (8009e50 <_DrawBitmap+0xa28>)
 8009d0a:	781b      	ldrb	r3, [r3, #0]
 8009d0c:	5cd4      	ldrb	r4, [r2, r3]
 8009d0e:	9b05      	ldr	r3, [sp, #20]
 8009d10:	3301      	adds	r3, #1
 8009d12:	9305      	str	r3, [sp, #20]
 8009d14:	f04f 0908 	mov.w	r9, #8
 8009d18:	e7c1      	b.n	8009c9e <_DrawBitmap+0x876>
 8009d1a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8009d1c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8009d20:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 8009d24:	f8cd b00c 	str.w	fp, [sp, #12]
 8009d28:	454d      	cmp	r5, r9
 8009d2a:	bf28      	it	cs
 8009d2c:	464d      	movcs	r5, r9
 8009d2e:	f8cd a08c 	str.w	sl, [sp, #140]	; 0x8c
 8009d32:	9e02      	ldr	r6, [sp, #8]
 8009d34:	9f08      	ldr	r7, [sp, #32]
 8009d36:	f8dd b010 	ldr.w	fp, [sp, #16]
 8009d3a:	469a      	mov	sl, r3
 8009d3c:	ebc5 0909 	rsb	r9, r5, r9
 8009d40:	f1b8 0f00 	cmp.w	r8, #0
 8009d44:	d02d      	beq.n	8009da2 <_DrawBitmap+0x97a>
 8009d46:	b944      	cbnz	r4, 8009d5a <_DrawBitmap+0x932>
 8009d48:	e038      	b.n	8009dbc <_DrawBitmap+0x994>
 8009d4a:	3d01      	subs	r5, #1
 8009d4c:	f107 0701 	add.w	r7, r7, #1
 8009d50:	f106 0602 	add.w	r6, r6, #2
 8009d54:	d012      	beq.n	8009d7c <_DrawBitmap+0x954>
 8009d56:	0864      	lsrs	r4, r4, #1
 8009d58:	d030      	beq.n	8009dbc <_DrawBitmap+0x994>
 8009d5a:	07e2      	lsls	r2, r4, #31
 8009d5c:	d5f5      	bpl.n	8009d4a <_DrawBitmap+0x922>
 8009d5e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8009d62:	4639      	mov	r1, r7
 8009d64:	465a      	mov	r2, fp
 8009d66:	681b      	ldr	r3, [r3, #0]
 8009d68:	4640      	mov	r0, r8
 8009d6a:	4798      	blx	r3
 8009d6c:	3d01      	subs	r5, #1
 8009d6e:	f8a6 a000 	strh.w	sl, [r6]
 8009d72:	f107 0701 	add.w	r7, r7, #1
 8009d76:	f106 0602 	add.w	r6, r6, #2
 8009d7a:	d1ec      	bne.n	8009d56 <_DrawBitmap+0x92e>
 8009d7c:	f1b9 0f00 	cmp.w	r9, #0
 8009d80:	f43f acfb 	beq.w	800977a <_DrawBitmap+0x352>
 8009d84:	9a03      	ldr	r2, [sp, #12]
 8009d86:	2508      	movs	r5, #8
 8009d88:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8009d8c:	9203      	str	r2, [sp, #12]
 8009d8e:	454d      	cmp	r5, r9
 8009d90:	4a2f      	ldr	r2, [pc, #188]	; (8009e50 <_DrawBitmap+0xa28>)
 8009d92:	bf28      	it	cs
 8009d94:	464d      	movcs	r5, r9
 8009d96:	5cd4      	ldrb	r4, [r2, r3]
 8009d98:	ebc5 0909 	rsb	r9, r5, r9
 8009d9c:	f1b8 0f00 	cmp.w	r8, #0
 8009da0:	d1d1      	bne.n	8009d46 <_DrawBitmap+0x91e>
 8009da2:	b914      	cbnz	r4, 8009daa <_DrawBitmap+0x982>
 8009da4:	e00e      	b.n	8009dc4 <_DrawBitmap+0x99c>
 8009da6:	0864      	lsrs	r4, r4, #1
 8009da8:	d00c      	beq.n	8009dc4 <_DrawBitmap+0x99c>
 8009daa:	07e3      	lsls	r3, r4, #31
 8009dac:	bf48      	it	mi
 8009dae:	f8a6 a000 	strhmi.w	sl, [r6]
 8009db2:	3d01      	subs	r5, #1
 8009db4:	f106 0602 	add.w	r6, r6, #2
 8009db8:	d1f5      	bne.n	8009da6 <_DrawBitmap+0x97e>
 8009dba:	e7df      	b.n	8009d7c <_DrawBitmap+0x954>
 8009dbc:	eb06 0645 	add.w	r6, r6, r5, lsl #1
 8009dc0:	442f      	add	r7, r5
 8009dc2:	e7db      	b.n	8009d7c <_DrawBitmap+0x954>
 8009dc4:	eb06 0645 	add.w	r6, r6, r5, lsl #1
 8009dc8:	e7d8      	b.n	8009d7c <_DrawBitmap+0x954>
 8009dca:	4b22      	ldr	r3, [pc, #136]	; (8009e54 <_DrawBitmap+0xa2c>)
 8009dcc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009dce:	681b      	ldr	r3, [r3, #0]
 8009dd0:	9802      	ldr	r0, [sp, #8]
 8009dd2:	4798      	blx	r3
 8009dd4:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8009dd8:	4658      	mov	r0, fp
 8009dda:	e463      	b.n	80096a4 <_DrawBitmap+0x27c>
 8009ddc:	0924      	lsrs	r4, r4, #4
 8009dde:	f85b 3024 	ldr.w	r3, [fp, r4, lsl #2]
 8009de2:	f8a8 3000 	strh.w	r3, [r8]
 8009de6:	f1ba 0f00 	cmp.w	sl, #0
 8009dea:	f43f adee 	beq.w	80099ca <_DrawBitmap+0x5a2>
 8009dee:	f8da 3008 	ldr.w	r3, [sl, #8]
 8009df2:	460a      	mov	r2, r1
 8009df4:	681b      	ldr	r3, [r3, #0]
 8009df6:	9908      	ldr	r1, [sp, #32]
 8009df8:	4650      	mov	r0, sl
 8009dfa:	4798      	blx	r3
 8009dfc:	e5e5      	b.n	80099ca <_DrawBitmap+0x5a2>
 8009dfe:	9903      	ldr	r1, [sp, #12]
 8009e00:	9b02      	ldr	r3, [sp, #8]
 8009e02:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8009e06:	b102      	cbz	r2, 8009e0a <_DrawBitmap+0x9e2>
 8009e08:	801a      	strh	r2, [r3, #0]
 8009e0a:	3302      	adds	r3, #2
 8009e0c:	42b3      	cmp	r3, r6
 8009e0e:	d1f8      	bne.n	8009e02 <_DrawBitmap+0x9da>
 8009e10:	e447      	b.n	80096a2 <_DrawBitmap+0x27a>
 8009e12:	4b11      	ldr	r3, [pc, #68]	; (8009e58 <_DrawBitmap+0xa30>)
 8009e14:	681c      	ldr	r4, [r3, #0]
 8009e16:	b16c      	cbz	r4, 8009e34 <_DrawBitmap+0xa0c>
 8009e18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8009e1a:	9301      	str	r3, [sp, #4]
 8009e1c:	9b06      	ldr	r3, [sp, #24]
 8009e1e:	9300      	str	r3, [sp, #0]
 8009e20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009e22:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8009e24:	9921      	ldr	r1, [sp, #132]	; 0x84
 8009e26:	9802      	ldr	r0, [sp, #8]
 8009e28:	47a0      	blx	r4
 8009e2a:	f7ff bb82 	b.w	8009532 <_DrawBitmap+0x10a>
 8009e2e:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8009e30:	f7ff bb7b 	b.w	800952a <_DrawBitmap+0x102>
 8009e34:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8009e36:	2b00      	cmp	r3, #0
 8009e38:	f77f ab7b 	ble.w	8009532 <_DrawBitmap+0x10a>
 8009e3c:	f7ff bbc3 	b.w	80095c6 <_DrawBitmap+0x19e>
 8009e40:	9812      	ldr	r0, [sp, #72]	; 0x48
 8009e42:	2800      	cmp	r0, #0
 8009e44:	f47f ab72 	bne.w	800952c <_DrawBitmap+0x104>
 8009e48:	f7ff bb73 	b.w	8009532 <_DrawBitmap+0x10a>
 8009e4c:	20000018 	.word	0x20000018
 8009e50:	0801bbe8 	.word	0x0801bbe8
 8009e54:	20000038 	.word	0x20000038
 8009e58:	2000054c 	.word	0x2000054c

08009e5c <_GetDevProp>:
 8009e5c:	2908      	cmp	r1, #8
 8009e5e:	d101      	bne.n	8009e64 <_GetDevProp+0x8>
 8009e60:	2010      	movs	r0, #16
 8009e62:	4770      	bx	lr
 8009e64:	6800      	ldr	r0, [r0, #0]
 8009e66:	b110      	cbz	r0, 8009e6e <_GetDevProp+0x12>
 8009e68:	68c3      	ldr	r3, [r0, #12]
 8009e6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e6c:	4718      	bx	r3
 8009e6e:	f04f 30ff 	mov.w	r0, #4294967295
 8009e72:	4770      	bx	lr

08009e74 <_GetPixelIndex>:
 8009e74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e76:	4b0e      	ldr	r3, [pc, #56]	; (8009eb0 <_GetPixelIndex+0x3c>)
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	b083      	sub	sp, #12
 8009e7c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009e7e:	460e      	mov	r6, r1
 8009e80:	4617      	mov	r7, r2
 8009e82:	f7fa fff7 	bl	8004e74 <GUI_ALLOC_LockH>
 8009e86:	4605      	mov	r5, r0
 8009e88:	a802      	add	r0, sp, #8
 8009e8a:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8009e8e:	68eb      	ldr	r3, [r5, #12]
 8009e90:	f9b5 4004 	ldrsh.w	r4, [r5, #4]
 8009e94:	f840 5d04 	str.w	r5, [r0, #-4]!
 8009e98:	1abf      	subs	r7, r7, r2
 8009e9a:	fb03 f307 	mul.w	r3, r3, r7
 8009e9e:	3318      	adds	r3, #24
 8009ea0:	1b34      	subs	r4, r6, r4
 8009ea2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8009ea6:	f7fa fff7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009eaa:	5b28      	ldrh	r0, [r5, r4]
 8009eac:	b003      	add	sp, #12
 8009eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009eb0:	20000018 	.word	0x20000018

08009eb4 <_SetPixelIndex>:
 8009eb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009eb8:	4c1b      	ldr	r4, [pc, #108]	; (8009f28 <_SetPixelIndex+0x74>)
 8009eba:	6820      	ldr	r0, [r4, #0]
 8009ebc:	b083      	sub	sp, #12
 8009ebe:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8009ec0:	460f      	mov	r7, r1
 8009ec2:	4690      	mov	r8, r2
 8009ec4:	4699      	mov	r9, r3
 8009ec6:	f7fa ffd5 	bl	8004e74 <GUI_ALLOC_LockH>
 8009eca:	6823      	ldr	r3, [r4, #0]
 8009ecc:	9000      	str	r0, [sp, #0]
 8009ece:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009ed0:	f7fa ffd0 	bl	8004e74 <GUI_ALLOC_LockH>
 8009ed4:	ae02      	add	r6, sp, #8
 8009ed6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8009eda:	68c1      	ldr	r1, [r0, #12]
 8009edc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8009ee0:	f846 0d04 	str.w	r0, [r6, #-4]!
 8009ee4:	ebc2 0208 	rsb	r2, r2, r8
 8009ee8:	fb01 f202 	mul.w	r2, r1, r2
 8009eec:	4605      	mov	r5, r0
 8009eee:	3218      	adds	r2, #24
 8009ef0:	1b3c      	subs	r4, r7, r4
 8009ef2:	4630      	mov	r0, r6
 8009ef4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8009ef8:	f7fa ffce 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009efc:	9b00      	ldr	r3, [sp, #0]
 8009efe:	f825 9004 	strh.w	r9, [r5, r4]
 8009f02:	6958      	ldr	r0, [r3, #20]
 8009f04:	b150      	cbz	r0, 8009f1c <_SetPixelIndex+0x68>
 8009f06:	f7fa ffb5 	bl	8004e74 <GUI_ALLOC_LockH>
 8009f0a:	9001      	str	r0, [sp, #4]
 8009f0c:	6883      	ldr	r3, [r0, #8]
 8009f0e:	4642      	mov	r2, r8
 8009f10:	4639      	mov	r1, r7
 8009f12:	681b      	ldr	r3, [r3, #0]
 8009f14:	4798      	blx	r3
 8009f16:	4630      	mov	r0, r6
 8009f18:	f7fa ffbe 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009f1c:	4668      	mov	r0, sp
 8009f1e:	f7fa ffbb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009f22:	b003      	add	sp, #12
 8009f24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009f28:	20000018 	.word	0x20000018

08009f2c <_XorPixel>:
 8009f2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009f30:	4c1e      	ldr	r4, [pc, #120]	; (8009fac <_XorPixel+0x80>)
 8009f32:	6823      	ldr	r3, [r4, #0]
 8009f34:	b083      	sub	sp, #12
 8009f36:	4681      	mov	r9, r0
 8009f38:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009f3a:	460f      	mov	r7, r1
 8009f3c:	4690      	mov	r8, r2
 8009f3e:	f7fa ff99 	bl	8004e74 <GUI_ALLOC_LockH>
 8009f42:	6823      	ldr	r3, [r4, #0]
 8009f44:	9000      	str	r0, [sp, #0]
 8009f46:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009f48:	f7fa ff94 	bl	8004e74 <GUI_ALLOC_LockH>
 8009f4c:	ae02      	add	r6, sp, #8
 8009f4e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8009f52:	68c2      	ldr	r2, [r0, #12]
 8009f54:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8009f58:	f846 0d04 	str.w	r0, [r6, #-4]!
 8009f5c:	ebc3 0308 	rsb	r3, r3, r8
 8009f60:	fb02 f303 	mul.w	r3, r2, r3
 8009f64:	4605      	mov	r5, r0
 8009f66:	3318      	adds	r3, #24
 8009f68:	1b3c      	subs	r4, r7, r4
 8009f6a:	4630      	mov	r0, r6
 8009f6c:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8009f70:	f7fa ff92 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009f74:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8009f78:	689b      	ldr	r3, [r3, #8]
 8009f7a:	4798      	blx	r3
 8009f7c:	9a00      	ldr	r2, [sp, #0]
 8009f7e:	5b2b      	ldrh	r3, [r5, r4]
 8009f80:	6952      	ldr	r2, [r2, #20]
 8009f82:	4058      	eors	r0, r3
 8009f84:	5328      	strh	r0, [r5, r4]
 8009f86:	b15a      	cbz	r2, 8009fa0 <_XorPixel+0x74>
 8009f88:	4610      	mov	r0, r2
 8009f8a:	f7fa ff73 	bl	8004e74 <GUI_ALLOC_LockH>
 8009f8e:	9001      	str	r0, [sp, #4]
 8009f90:	6883      	ldr	r3, [r0, #8]
 8009f92:	4642      	mov	r2, r8
 8009f94:	4639      	mov	r1, r7
 8009f96:	681b      	ldr	r3, [r3, #0]
 8009f98:	4798      	blx	r3
 8009f9a:	4630      	mov	r0, r6
 8009f9c:	f7fa ff7c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009fa0:	4668      	mov	r0, sp
 8009fa2:	f7fa ff79 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8009fa6:	b003      	add	sp, #12
 8009fa8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009fac:	20000018 	.word	0x20000018

08009fb0 <_FillRect>:
 8009fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fb4:	4f58      	ldr	r7, [pc, #352]	; (800a118 <_FillRect+0x168>)
 8009fb6:	683c      	ldr	r4, [r7, #0]
 8009fb8:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 8009fba:	b089      	sub	sp, #36	; 0x24
 8009fbc:	4683      	mov	fp, r0
 8009fbe:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8009fc0:	f8d5 a000 	ldr.w	sl, [r5]
 8009fc4:	4689      	mov	r9, r1
 8009fc6:	4615      	mov	r5, r2
 8009fc8:	461e      	mov	r6, r3
 8009fca:	f7fa ff53 	bl	8004e74 <GUI_ALLOC_LockH>
 8009fce:	683b      	ldr	r3, [r7, #0]
 8009fd0:	9006      	str	r0, [sp, #24]
 8009fd2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8009fd4:	f7fa ff4e 	bl	8004e74 <GUI_ALLOC_LockH>
 8009fd8:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8009fdc:	68c3      	ldr	r3, [r0, #12]
 8009fde:	f10d 0820 	add.w	r8, sp, #32
 8009fe2:	4604      	mov	r4, r0
 8009fe4:	1aaa      	subs	r2, r5, r2
 8009fe6:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8009fea:	f848 4d04 	str.w	r4, [r8, #-4]!
 8009fee:	fb03 f202 	mul.w	r2, r3, r2
 8009ff2:	f102 0118 	add.w	r1, r2, #24
 8009ff6:	ebc0 0209 	rsb	r2, r0, r9
 8009ffa:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8009ffe:	4640      	mov	r0, r8
 800a000:	4414      	add	r4, r2
 800a002:	f7fa ff49 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a006:	9b06      	ldr	r3, [sp, #24]
 800a008:	6958      	ldr	r0, [r3, #20]
 800a00a:	68db      	ldr	r3, [r3, #12]
 800a00c:	9302      	str	r3, [sp, #8]
 800a00e:	ebc9 0306 	rsb	r3, r9, r6
 800a012:	9305      	str	r3, [sp, #20]
 800a014:	1c5e      	adds	r6, r3, #1
 800a016:	2800      	cmp	r0, #0
 800a018:	d16e      	bne.n	800a0f8 <_FillRect+0x148>
 800a01a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a01c:	429d      	cmp	r5, r3
 800a01e:	dc5d      	bgt.n	800a0dc <_FillRect+0x12c>
 800a020:	fa1f f38a 	uxth.w	r3, sl
 800a024:	9304      	str	r3, [sp, #16]
 800a026:	683b      	ldr	r3, [r7, #0]
 800a028:	7c1b      	ldrb	r3, [r3, #16]
 800a02a:	07db      	lsls	r3, r3, #31
 800a02c:	d55c      	bpl.n	800a0e8 <_FillRect+0x138>
 800a02e:	f8db 3010 	ldr.w	r3, [fp, #16]
 800a032:	689b      	ldr	r3, [r3, #8]
 800a034:	4798      	blx	r3
 800a036:	f3c4 0340 	ubfx	r3, r4, #1, #1
 800a03a:	42b3      	cmp	r3, r6
 800a03c:	bf28      	it	cs
 800a03e:	4633      	movcs	r3, r6
 800a040:	2e03      	cmp	r6, #3
 800a042:	bf98      	it	ls
 800a044:	4633      	movls	r3, r6
 800a046:	b280      	uxth	r0, r0
 800a048:	2b00      	cmp	r3, #0
 800a04a:	d053      	beq.n	800a0f4 <_FillRect+0x144>
 800a04c:	8822      	ldrh	r2, [r4, #0]
 800a04e:	46a4      	mov	ip, r4
 800a050:	4042      	eors	r2, r0
 800a052:	2b01      	cmp	r3, #1
 800a054:	f82c 2b02 	strh.w	r2, [ip], #2
 800a058:	d00c      	beq.n	800a074 <_FillRect+0xc4>
 800a05a:	8862      	ldrh	r2, [r4, #2]
 800a05c:	2b03      	cmp	r3, #3
 800a05e:	ea82 0200 	eor.w	r2, r2, r0
 800a062:	8062      	strh	r2, [r4, #2]
 800a064:	f104 0c04 	add.w	ip, r4, #4
 800a068:	d104      	bne.n	800a074 <_FillRect+0xc4>
 800a06a:	88a2      	ldrh	r2, [r4, #4]
 800a06c:	4042      	eors	r2, r0
 800a06e:	80a2      	strh	r2, [r4, #4]
 800a070:	f104 0c06 	add.w	ip, r4, #6
 800a074:	42b3      	cmp	r3, r6
 800a076:	d02b      	beq.n	800a0d0 <_FillRect+0x120>
 800a078:	ebc3 0a06 	rsb	sl, r3, r6
 800a07c:	f1aa 0e02 	sub.w	lr, sl, #2
 800a080:	ea4f 0e5e 	mov.w	lr, lr, lsr #1
 800a084:	f10e 0e01 	add.w	lr, lr, #1
 800a088:	ea4f 024e 	mov.w	r2, lr, lsl #1
 800a08c:	9203      	str	r2, [sp, #12]
 800a08e:	9a05      	ldr	r2, [sp, #20]
 800a090:	4293      	cmp	r3, r2
 800a092:	d018      	beq.n	800a0c6 <_FillRect+0x116>
 800a094:	f04f 0900 	mov.w	r9, #0
 800a098:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800a09c:	f360 090f 	bfi	r9, r0, #0, #16
 800a0a0:	f360 491f 	bfi	r9, r0, #16, #16
 800a0a4:	f1a3 0804 	sub.w	r8, r3, #4
 800a0a8:	2100      	movs	r1, #0
 800a0aa:	f858 2f04 	ldr.w	r2, [r8, #4]!
 800a0ae:	3101      	adds	r1, #1
 800a0b0:	ea89 0202 	eor.w	r2, r9, r2
 800a0b4:	458e      	cmp	lr, r1
 800a0b6:	f843 2b04 	str.w	r2, [r3], #4
 800a0ba:	d8f6      	bhi.n	800a0aa <_FillRect+0xfa>
 800a0bc:	9a03      	ldr	r2, [sp, #12]
 800a0be:	4592      	cmp	sl, r2
 800a0c0:	eb0c 0c42 	add.w	ip, ip, r2, lsl #1
 800a0c4:	d004      	beq.n	800a0d0 <_FillRect+0x120>
 800a0c6:	f8bc 3000 	ldrh.w	r3, [ip]
 800a0ca:	4058      	eors	r0, r3
 800a0cc:	f8ac 0000 	strh.w	r0, [ip]
 800a0d0:	9b02      	ldr	r3, [sp, #8]
 800a0d2:	441c      	add	r4, r3
 800a0d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a0d6:	3501      	adds	r5, #1
 800a0d8:	42ab      	cmp	r3, r5
 800a0da:	daa4      	bge.n	800a026 <_FillRect+0x76>
 800a0dc:	a806      	add	r0, sp, #24
 800a0de:	f7fa fedb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a0e2:	b009      	add	sp, #36	; 0x24
 800a0e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0e8:	4632      	mov	r2, r6
 800a0ea:	9904      	ldr	r1, [sp, #16]
 800a0ec:	4620      	mov	r0, r4
 800a0ee:	f7fc fd29 	bl	8006b44 <GUI__memset16>
 800a0f2:	e7ed      	b.n	800a0d0 <_FillRect+0x120>
 800a0f4:	46a4      	mov	ip, r4
 800a0f6:	e7bf      	b.n	800a078 <_FillRect+0xc8>
 800a0f8:	f7fa febc 	bl	8004e74 <GUI_ALLOC_LockH>
 800a0fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a0fe:	9007      	str	r0, [sp, #28]
 800a100:	1b5b      	subs	r3, r3, r5
 800a102:	3301      	adds	r3, #1
 800a104:	9300      	str	r3, [sp, #0]
 800a106:	4649      	mov	r1, r9
 800a108:	4633      	mov	r3, r6
 800a10a:	462a      	mov	r2, r5
 800a10c:	f000 f896 	bl	800a23c <GUI_USAGE_AddRect>
 800a110:	4640      	mov	r0, r8
 800a112:	f7fa fec1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a116:	e780      	b.n	800a01a <_FillRect+0x6a>
 800a118:	20000018 	.word	0x20000018

0800a11c <_DrawHLine>:
 800a11c:	b500      	push	{lr}
 800a11e:	b083      	sub	sp, #12
 800a120:	9200      	str	r2, [sp, #0]
 800a122:	f7ff ff45 	bl	8009fb0 <_FillRect>
 800a126:	b003      	add	sp, #12
 800a128:	f85d fb04 	ldr.w	pc, [sp], #4

0800a12c <_DrawVLine>:
 800a12c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a130:	4f36      	ldr	r7, [pc, #216]	; (800a20c <_DrawVLine+0xe0>)
 800a132:	683c      	ldr	r4, [r7, #0]
 800a134:	b085      	sub	sp, #20
 800a136:	4681      	mov	r9, r0
 800a138:	6e20      	ldr	r0, [r4, #96]	; 0x60
 800a13a:	4688      	mov	r8, r1
 800a13c:	4615      	mov	r5, r2
 800a13e:	461e      	mov	r6, r3
 800a140:	f7fa fe98 	bl	8004e74 <GUI_ALLOC_LockH>
 800a144:	9001      	str	r0, [sp, #4]
 800a146:	6940      	ldr	r0, [r0, #20]
 800a148:	2800      	cmp	r0, #0
 800a14a:	d13d      	bne.n	800a1c8 <_DrawVLine+0x9c>
 800a14c:	683b      	ldr	r3, [r7, #0]
 800a14e:	9002      	str	r0, [sp, #8]
 800a150:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800a152:	f7fa fe8f 	bl	8004e74 <GUI_ALLOC_LockH>
 800a156:	4602      	mov	r2, r0
 800a158:	a804      	add	r0, sp, #16
 800a15a:	f9b2 4006 	ldrsh.w	r4, [r2, #6]
 800a15e:	68d3      	ldr	r3, [r2, #12]
 800a160:	f840 2d04 	str.w	r2, [r0, #-4]!
 800a164:	1b2c      	subs	r4, r5, r4
 800a166:	fb03 f304 	mul.w	r3, r3, r4
 800a16a:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 800a16e:	3318      	adds	r3, #24
 800a170:	ebc4 0408 	rsb	r4, r4, r8
 800a174:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 800a178:	18d4      	adds	r4, r2, r3
 800a17a:	f7fa fe8d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a17e:	683b      	ldr	r3, [r7, #0]
 800a180:	7c1a      	ldrb	r2, [r3, #16]
 800a182:	07d2      	lsls	r2, r2, #31
 800a184:	d423      	bmi.n	800a1ce <_DrawVLine+0xa2>
 800a186:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a188:	9802      	ldr	r0, [sp, #8]
 800a18a:	9b01      	ldr	r3, [sp, #4]
 800a18c:	6812      	ldr	r2, [r2, #0]
 800a18e:	68df      	ldr	r7, [r3, #12]
 800a190:	2800      	cmp	r0, #0
 800a192:	d033      	beq.n	800a1fc <_DrawVLine+0xd0>
 800a194:	fa1f f982 	uxth.w	r9, r2
 800a198:	e000      	b.n	800a19c <_DrawVLine+0x70>
 800a19a:	9802      	ldr	r0, [sp, #8]
 800a19c:	6883      	ldr	r3, [r0, #8]
 800a19e:	462a      	mov	r2, r5
 800a1a0:	681b      	ldr	r3, [r3, #0]
 800a1a2:	4641      	mov	r1, r8
 800a1a4:	3501      	adds	r5, #1
 800a1a6:	4798      	blx	r3
 800a1a8:	42ae      	cmp	r6, r5
 800a1aa:	f8a4 9000 	strh.w	r9, [r4]
 800a1ae:	443c      	add	r4, r7
 800a1b0:	daf3      	bge.n	800a19a <_DrawVLine+0x6e>
 800a1b2:	a801      	add	r0, sp, #4
 800a1b4:	f7fa fe70 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a1b8:	9b02      	ldr	r3, [sp, #8]
 800a1ba:	b113      	cbz	r3, 800a1c2 <_DrawVLine+0x96>
 800a1bc:	a802      	add	r0, sp, #8
 800a1be:	f7fa fe6b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a1c2:	b005      	add	sp, #20
 800a1c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a1c8:	f7fa fe54 	bl	8004e74 <GUI_ALLOC_LockH>
 800a1cc:	e7be      	b.n	800a14c <_DrawVLine+0x20>
 800a1ce:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800a1d2:	689b      	ldr	r3, [r3, #8]
 800a1d4:	4798      	blx	r3
 800a1d6:	b287      	uxth	r7, r0
 800a1d8:	9b02      	ldr	r3, [sp, #8]
 800a1da:	462a      	mov	r2, r5
 800a1dc:	4641      	mov	r1, r8
 800a1de:	3501      	adds	r5, #1
 800a1e0:	4618      	mov	r0, r3
 800a1e2:	b113      	cbz	r3, 800a1ea <_DrawVLine+0xbe>
 800a1e4:	689b      	ldr	r3, [r3, #8]
 800a1e6:	681b      	ldr	r3, [r3, #0]
 800a1e8:	4798      	blx	r3
 800a1ea:	9a01      	ldr	r2, [sp, #4]
 800a1ec:	8823      	ldrh	r3, [r4, #0]
 800a1ee:	68d2      	ldr	r2, [r2, #12]
 800a1f0:	407b      	eors	r3, r7
 800a1f2:	42b5      	cmp	r5, r6
 800a1f4:	8023      	strh	r3, [r4, #0]
 800a1f6:	4414      	add	r4, r2
 800a1f8:	ddee      	ble.n	800a1d8 <_DrawVLine+0xac>
 800a1fa:	e7da      	b.n	800a1b2 <_DrawVLine+0x86>
 800a1fc:	1b73      	subs	r3, r6, r5
 800a1fe:	3301      	adds	r3, #1
 800a200:	b292      	uxth	r2, r2
 800a202:	3b01      	subs	r3, #1
 800a204:	8022      	strh	r2, [r4, #0]
 800a206:	443c      	add	r4, r7
 800a208:	d1fb      	bne.n	800a202 <_DrawVLine+0xd6>
 800a20a:	e7d2      	b.n	800a1b2 <_DrawVLine+0x86>
 800a20c:	20000018 	.word	0x20000018

0800a210 <GUI_USAGE_DecUseCnt>:
 800a210:	b530      	push	{r4, r5, lr}
 800a212:	b083      	sub	sp, #12
 800a214:	4605      	mov	r5, r0
 800a216:	f7fa fe2d 	bl	8004e74 <GUI_ALLOC_LockH>
 800a21a:	ab02      	add	r3, sp, #8
 800a21c:	8984      	ldrh	r4, [r0, #12]
 800a21e:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a222:	3c01      	subs	r4, #1
 800a224:	b224      	sxth	r4, r4
 800a226:	8184      	strh	r4, [r0, #12]
 800a228:	4618      	mov	r0, r3
 800a22a:	f7fa fe35 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a22e:	b914      	cbnz	r4, 800a236 <GUI_USAGE_DecUseCnt+0x26>
 800a230:	4628      	mov	r0, r5
 800a232:	f7fa ffa9 	bl	8005188 <GUI_ALLOC_Free>
 800a236:	b003      	add	sp, #12
 800a238:	bd30      	pop	{r4, r5, pc}
 800a23a:	bf00      	nop

0800a23c <GUI_USAGE_AddRect>:
 800a23c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a240:	9c08      	ldr	r4, [sp, #32]
 800a242:	4605      	mov	r5, r0
 800a244:	4689      	mov	r9, r1
 800a246:	4698      	mov	r8, r3
 800a248:	68ab      	ldr	r3, [r5, #8]
 800a24a:	4649      	mov	r1, r9
 800a24c:	685f      	ldr	r7, [r3, #4]
 800a24e:	4628      	mov	r0, r5
 800a250:	4643      	mov	r3, r8
 800a252:	1c56      	adds	r6, r2, #1
 800a254:	47b8      	blx	r7
 800a256:	3c01      	subs	r4, #1
 800a258:	4632      	mov	r2, r6
 800a25a:	d1f5      	bne.n	800a248 <GUI_USAGE_AddRect+0xc>
 800a25c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800a260 <GUI_MEMDEV__WriteToActiveOpaque>:
 800a260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a264:	b0a1      	sub	sp, #132	; 0x84
 800a266:	910d      	str	r1, [sp, #52]	; 0x34
 800a268:	b910      	cbnz	r0, 800a270 <GUI_MEMDEV__WriteToActiveOpaque+0x10>
 800a26a:	b021      	add	sp, #132	; 0x84
 800a26c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a270:	4692      	mov	sl, r2
 800a272:	4607      	mov	r7, r0
 800a274:	f7fa fdfe 	bl	8004e74 <GUI_ALLOC_LockH>
 800a278:	ab20      	add	r3, sp, #128	; 0x80
 800a27a:	6944      	ldr	r4, [r0, #20]
 800a27c:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800a280:	4618      	mov	r0, r3
 800a282:	f7fa fe09 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a286:	4638      	mov	r0, r7
 800a288:	f00a ff8e 	bl	80151a8 <GUI_MEMDEV_GetBitsPerPixel>
 800a28c:	2808      	cmp	r0, #8
 800a28e:	4605      	mov	r5, r0
 800a290:	dd02      	ble.n	800a298 <GUI_MEMDEV__WriteToActiveOpaque+0x38>
 800a292:	2c00      	cmp	r4, #0
 800a294:	f000 80d9 	beq.w	800a44a <GUI_MEMDEV__WriteToActiveOpaque+0x1ea>
 800a298:	2301      	movs	r3, #1
 800a29a:	f04f 0b00 	mov.w	fp, #0
 800a29e:	4638      	mov	r0, r7
 800a2a0:	931f      	str	r3, [sp, #124]	; 0x7c
 800a2a2:	930a      	str	r3, [sp, #40]	; 0x28
 800a2a4:	f8cd b078 	str.w	fp, [sp, #120]	; 0x78
 800a2a8:	f7fa fde4 	bl	8004e74 <GUI_ALLOC_LockH>
 800a2ac:	6801      	ldr	r1, [r0, #0]
 800a2ae:	f8df 8468 	ldr.w	r8, [pc, #1128]	; 800a718 <GUI_MEMDEV__WriteToActiveOpaque+0x4b8>
 800a2b2:	6909      	ldr	r1, [r1, #16]
 800a2b4:	4604      	mov	r4, r0
 800a2b6:	f8d8 0000 	ldr.w	r0, [r8]
 800a2ba:	68e3      	ldr	r3, [r4, #12]
 800a2bc:	684d      	ldr	r5, [r1, #4]
 800a2be:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a2c2:	930f      	str	r3, [sp, #60]	; 0x3c
 800a2c4:	ae20      	add	r6, sp, #128	; 0x80
 800a2c6:	6923      	ldr	r3, [r4, #16]
 800a2c8:	9114      	str	r1, [sp, #80]	; 0x50
 800a2ca:	7c40      	ldrb	r0, [r0, #17]
 800a2cc:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800a2d0:	9309      	str	r3, [sp, #36]	; 0x24
 800a2d2:	f846 4d14 	str.w	r4, [r6, #-20]!
 800a2d6:	f8d4 9014 	ldr.w	r9, [r4, #20]
 800a2da:	9116      	str	r1, [sp, #88]	; 0x58
 800a2dc:	f7fd fca0 	bl	8007c20 <GUI_GetBitsPerPixelEx>
 800a2e0:	f8d8 1000 	ldr.w	r1, [r8]
 800a2e4:	9008      	str	r0, [sp, #32]
 800a2e6:	7c48      	ldrb	r0, [r1, #17]
 800a2e8:	f7fd fcb4 	bl	8007c54 <GUI_GetpfIndex2ColorEx>
 800a2ec:	4604      	mov	r4, r0
 800a2ee:	4630      	mov	r0, r6
 800a2f0:	f7fa fdd2 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a2f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a2f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a2f8:	2a08      	cmp	r2, #8
 800a2fa:	f240 80a0 	bls.w	800a43e <GUI_MEMDEV__WriteToActiveOpaque+0x1de>
 800a2fe:	2a10      	cmp	r2, #16
 800a300:	4613      	mov	r3, r2
 800a302:	bf8c      	ite	hi
 800a304:	2304      	movhi	r3, #4
 800a306:	2302      	movls	r3, #2
 800a308:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800a30c:	930e      	str	r3, [sp, #56]	; 0x38
 800a30e:	42a5      	cmp	r5, r4
 800a310:	f000 81ac 	beq.w	800a66c <GUI_MEMDEV__WriteToActiveOpaque+0x40c>
 800a314:	f8d8 3000 	ldr.w	r3, [r8]
 800a318:	7c58      	ldrb	r0, [r3, #17]
 800a31a:	f7fd fca3 	bl	8007c64 <GUI_GetpfColor2IndexEx>
 800a31e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a320:	4606      	mov	r6, r0
 800a322:	0098      	lsls	r0, r3, #2
 800a324:	f7fa fd98 	bl	8004e58 <GUI_ALLOC_AllocNoInit>
 800a328:	9012      	str	r0, [sp, #72]	; 0x48
 800a32a:	2800      	cmp	r0, #0
 800a32c:	d09d      	beq.n	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a32e:	4638      	mov	r0, r7
 800a330:	f00b f8c8 	bl	80154c4 <GUI_MEMDEV_GetDataPtr>
 800a334:	4607      	mov	r7, r0
 800a336:	f1b9 0f00 	cmp.w	r9, #0
 800a33a:	f000 80f5 	beq.w	800a528 <GUI_MEMDEV__WriteToActiveOpaque+0x2c8>
 800a33e:	4648      	mov	r0, r9
 800a340:	f7fa fd98 	bl	8004e74 <GUI_ALLOC_LockH>
 800a344:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a346:	901c      	str	r0, [sp, #112]	; 0x70
 800a348:	2b00      	cmp	r3, #0
 800a34a:	f340 818b 	ble.w	800a664 <GUI_MEMDEV__WriteToActiveOpaque+0x404>
 800a34e:	2300      	movs	r3, #0
 800a350:	930c      	str	r3, [sp, #48]	; 0x30
 800a352:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a354:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 800a358:	18fb      	adds	r3, r7, r3
 800a35a:	9315      	str	r3, [sp, #84]	; 0x54
 800a35c:	ab1d      	add	r3, sp, #116	; 0x74
 800a35e:	9311      	str	r3, [sp, #68]	; 0x44
 800a360:	f04f 0801 	mov.w	r8, #1
 800a364:	4619      	mov	r1, r3
 800a366:	6883      	ldr	r3, [r0, #8]
 800a368:	2200      	movs	r2, #0
 800a36a:	921d      	str	r2, [sp, #116]	; 0x74
 800a36c:	695b      	ldr	r3, [r3, #20]
 800a36e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a370:	4798      	blx	r3
 800a372:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a374:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800a376:	1a9b      	subs	r3, r3, r2
 800a378:	930b      	str	r3, [sp, #44]	; 0x2c
 800a37a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a37c:	4283      	cmp	r3, r0
 800a37e:	4604      	mov	r4, r0
 800a380:	f000 8131 	beq.w	800a5e6 <GUI_MEMDEV__WriteToActiveOpaque+0x386>
 800a384:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a386:	2b01      	cmp	r3, #1
 800a388:	f000 80f2 	beq.w	800a570 <GUI_MEMDEV__WriteToActiveOpaque+0x310>
 800a38c:	2800      	cmp	r0, #0
 800a38e:	d045      	beq.n	800a41c <GUI_MEMDEV__WriteToActiveOpaque+0x1bc>
 800a390:	ab1a      	add	r3, sp, #104	; 0x68
 800a392:	9313      	str	r3, [sp, #76]	; 0x4c
 800a394:	9812      	ldr	r0, [sp, #72]	; 0x48
 800a396:	f7fa fd6d 	bl	8004e74 <GUI_ALLOC_LockH>
 800a39a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a39c:	901a      	str	r0, [sp, #104]	; 0x68
 800a39e:	2b08      	cmp	r3, #8
 800a3a0:	4607      	mov	r7, r0
 800a3a2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800a3a4:	f240 80d4 	bls.w	800a550 <GUI_MEMDEV__WriteToActiveOpaque+0x2f0>
 800a3a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a3aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a3ac:	46a3      	mov	fp, r4
 800a3ae:	fb02 1a03 	mla	sl, r2, r3, r1
 800a3b2:	4681      	mov	r9, r0
 800a3b4:	f83a 0b02 	ldrh.w	r0, [sl], #2
 800a3b8:	47a8      	blx	r5
 800a3ba:	47b0      	blx	r6
 800a3bc:	f1bb 0b01 	subs.w	fp, fp, #1
 800a3c0:	f849 0b04 	str.w	r0, [r9], #4
 800a3c4:	d1f6      	bne.n	800a3b4 <GUI_MEMDEV__WriteToActiveOpaque+0x154>
 800a3c6:	9b08      	ldr	r3, [sp, #32]
 800a3c8:	2b1f      	cmp	r3, #31
 800a3ca:	d804      	bhi.n	800a3d6 <GUI_MEMDEV__WriteToActiveOpaque+0x176>
 800a3cc:	4638      	mov	r0, r7
 800a3ce:	461a      	mov	r2, r3
 800a3d0:	4621      	mov	r1, r4
 800a3d2:	f00a fa21 	bl	8014818 <GUI__CompactPixelIndices>
 800a3d6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a3d8:	9205      	str	r2, [sp, #20]
 800a3da:	2200      	movs	r2, #0
 800a3dc:	9203      	str	r2, [sp, #12]
 800a3de:	9a08      	ldr	r2, [sp, #32]
 800a3e0:	981d      	ldr	r0, [sp, #116]	; 0x74
 800a3e2:	9202      	str	r2, [sp, #8]
 800a3e4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800a3e6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800a3e8:	9910      	ldr	r1, [sp, #64]	; 0x40
 800a3ea:	9304      	str	r3, [sp, #16]
 800a3ec:	4410      	add	r0, r2
 800a3ee:	2301      	movs	r3, #1
 800a3f0:	4622      	mov	r2, r4
 800a3f2:	f8cd 8004 	str.w	r8, [sp, #4]
 800a3f6:	f8cd 8000 	str.w	r8, [sp]
 800a3fa:	f7fd f82b 	bl	8007454 <LCD_DrawBitmap>
 800a3fe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800a400:	f7fa fd4a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a404:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a406:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a408:	6882      	ldr	r2, [r0, #8]
 800a40a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800a40c:	6957      	ldr	r7, [r2, #20]
 800a40e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a410:	441c      	add	r4, r3
 800a412:	941d      	str	r4, [sp, #116]	; 0x74
 800a414:	47b8      	blx	r7
 800a416:	4604      	mov	r4, r0
 800a418:	2800      	cmp	r0, #0
 800a41a:	d1bb      	bne.n	800a394 <GUI_MEMDEV__WriteToActiveOpaque+0x134>
 800a41c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800a41e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800a420:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a422:	440a      	add	r2, r1
 800a424:	9215      	str	r2, [sp, #84]	; 0x54
 800a426:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a428:	3201      	adds	r2, #1
 800a42a:	9210      	str	r2, [sp, #64]	; 0x40
 800a42c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800a42e:	3301      	adds	r3, #1
 800a430:	429a      	cmp	r2, r3
 800a432:	930c      	str	r3, [sp, #48]	; 0x30
 800a434:	f000 8116 	beq.w	800a664 <GUI_MEMDEV__WriteToActiveOpaque+0x404>
 800a438:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a43a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800a43c:	e793      	b.n	800a366 <GUI_MEMDEV__WriteToActiveOpaque+0x106>
 800a43e:	2a01      	cmp	r2, #1
 800a440:	d16e      	bne.n	800a520 <GUI_MEMDEV__WriteToActiveOpaque+0x2c0>
 800a442:	ab1e      	add	r3, sp, #120	; 0x78
 800a444:	920e      	str	r2, [sp, #56]	; 0x38
 800a446:	930a      	str	r3, [sp, #40]	; 0x28
 800a448:	e761      	b.n	800a30e <GUI_MEMDEV__WriteToActiveOpaque+0xae>
 800a44a:	4638      	mov	r0, r7
 800a44c:	f7fa fd12 	bl	8004e74 <GUI_ALLOC_LockH>
 800a450:	ab20      	add	r3, sp, #128	; 0x80
 800a452:	f9b0 8008 	ldrsh.w	r8, [r0, #8]
 800a456:	f843 0d10 	str.w	r0, [r3, #-16]!
 800a45a:	4602      	mov	r2, r0
 800a45c:	6801      	ldr	r1, [r0, #0]
 800a45e:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 800a462:	9008      	str	r0, [sp, #32]
 800a464:	4618      	mov	r0, r3
 800a466:	690e      	ldr	r6, [r1, #16]
 800a468:	f8d2 b00c 	ldr.w	fp, [r2, #12]
 800a46c:	9209      	str	r2, [sp, #36]	; 0x24
 800a46e:	930e      	str	r3, [sp, #56]	; 0x38
 800a470:	f7fa fd12 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a474:	48a8      	ldr	r0, [pc, #672]	; (800a718 <GUI_MEMDEV__WriteToActiveOpaque+0x4b8>)
 800a476:	49a9      	ldr	r1, [pc, #676]	; (800a71c <GUI_MEMDEV__WriteToActiveOpaque+0x4bc>)
 800a478:	6800      	ldr	r0, [r0, #0]
 800a47a:	6873      	ldr	r3, [r6, #4]
 800a47c:	7c40      	ldrb	r0, [r0, #17]
 800a47e:	930c      	str	r3, [sp, #48]	; 0x30
 800a480:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 800a484:	690c      	ldr	r4, [r1, #16]
 800a486:	6823      	ldr	r3, [r4, #0]
 800a488:	930a      	str	r3, [sp, #40]	; 0x28
 800a48a:	f7fd fbc9 	bl	8007c20 <GUI_GetBitsPerPixelEx>
 800a48e:	2808      	cmp	r0, #8
 800a490:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a492:	d940      	bls.n	800a516 <GUI_MEMDEV__WriteToActiveOpaque+0x2b6>
 800a494:	2810      	cmp	r0, #16
 800a496:	bf8c      	ite	hi
 800a498:	2320      	movhi	r3, #32
 800a49a:	2310      	movls	r3, #16
 800a49c:	9309      	str	r3, [sp, #36]	; 0x24
 800a49e:	bf8c      	ite	hi
 800a4a0:	f04f 0904 	movhi.w	r9, #4
 800a4a4:	f04f 0902 	movls.w	r9, #2
 800a4a8:	42a6      	cmp	r6, r4
 800a4aa:	f000 822d 	beq.w	800a908 <GUI_MEMDEV__WriteToActiveOpaque+0x6a8>
 800a4ae:	2d20      	cmp	r5, #32
 800a4b0:	f000 819e 	beq.w	800a7f0 <GUI_MEMDEV__WriteToActiveOpaque+0x590>
 800a4b4:	2d10      	cmp	r5, #16
 800a4b6:	f47f aed8 	bne.w	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a4ba:	fb08 f009 	mul.w	r0, r8, r9
 800a4be:	f7fa fccb 	bl	8004e58 <GUI_ALLOC_AllocNoInit>
 800a4c2:	9010      	str	r0, [sp, #64]	; 0x40
 800a4c4:	2800      	cmp	r0, #0
 800a4c6:	f43f aed0 	beq.w	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a4ca:	f7fa fcd3 	bl	8004e74 <GUI_ALLOC_LockH>
 800a4ce:	901e      	str	r0, [sp, #120]	; 0x78
 800a4d0:	4638      	mov	r0, r7
 800a4d2:	f7fa fccf 	bl	8004e74 <GUI_ALLOC_LockH>
 800a4d6:	901c      	str	r0, [sp, #112]	; 0x70
 800a4d8:	6923      	ldr	r3, [r4, #16]
 800a4da:	f100 0218 	add.w	r2, r0, #24
 800a4de:	920b      	str	r2, [sp, #44]	; 0x2c
 800a4e0:	2b00      	cmp	r3, #0
 800a4e2:	f000 8222 	beq.w	800a92a <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800a4e6:	6973      	ldr	r3, [r6, #20]
 800a4e8:	2b00      	cmp	r3, #0
 800a4ea:	f000 821e 	beq.w	800a92a <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800a4ee:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800a4f2:	0080      	lsls	r0, r0, #2
 800a4f4:	f7fa fcb0 	bl	8004e58 <GUI_ALLOC_AllocNoInit>
 800a4f8:	900f      	str	r0, [sp, #60]	; 0x3c
 800a4fa:	2800      	cmp	r0, #0
 800a4fc:	f040 8269 	bne.w	800a9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x772>
 800a500:	901d      	str	r0, [sp, #116]	; 0x74
 800a502:	980e      	ldr	r0, [sp, #56]	; 0x38
 800a504:	f7fa fcc8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a508:	a81e      	add	r0, sp, #120	; 0x78
 800a50a:	f7fa fcc5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a50e:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a510:	f7fa fe3a 	bl	8005188 <GUI_ALLOC_Free>
 800a514:	e6a9      	b.n	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a516:	2308      	movs	r3, #8
 800a518:	9309      	str	r3, [sp, #36]	; 0x24
 800a51a:	f04f 0901 	mov.w	r9, #1
 800a51e:	e7c3      	b.n	800a4a8 <GUI_MEMDEV__WriteToActiveOpaque+0x248>
 800a520:	930e      	str	r3, [sp, #56]	; 0x38
 800a522:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800a526:	e6f2      	b.n	800a30e <GUI_MEMDEV__WriteToActiveOpaque+0xae>
 800a528:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a52a:	9305      	str	r3, [sp, #20]
 800a52c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a52e:	9303      	str	r3, [sp, #12]
 800a530:	2401      	movs	r4, #1
 800a532:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a534:	9004      	str	r0, [sp, #16]
 800a536:	9302      	str	r3, [sp, #8]
 800a538:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a53a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a53c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a53e:	9401      	str	r4, [sp, #4]
 800a540:	4651      	mov	r1, sl
 800a542:	9400      	str	r4, [sp, #0]
 800a544:	f7fc ff86 	bl	8007454 <LCD_DrawBitmap>
 800a548:	9812      	ldr	r0, [sp, #72]	; 0x48
 800a54a:	f7fa fe1d 	bl	8005188 <GUI_ALLOC_Free>
 800a54e:	e68c      	b.n	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a550:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a552:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a554:	46a1      	mov	r9, r4
 800a556:	fb02 1b03 	mla	fp, r2, r3, r1
 800a55a:	4682      	mov	sl, r0
 800a55c:	f81b 0b01 	ldrb.w	r0, [fp], #1
 800a560:	47a8      	blx	r5
 800a562:	47b0      	blx	r6
 800a564:	f1b9 0901 	subs.w	r9, r9, #1
 800a568:	f84a 0b04 	str.w	r0, [sl], #4
 800a56c:	d1f6      	bne.n	800a55c <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800a56e:	e72a      	b.n	800a3c6 <GUI_MEMDEV__WriteToActiveOpaque+0x166>
 800a570:	2800      	cmp	r0, #0
 800a572:	f43f af53 	beq.w	800a41c <GUI_MEMDEV__WriteToActiveOpaque+0x1bc>
 800a576:	9617      	str	r6, [sp, #92]	; 0x5c
 800a578:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800a57a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800a57c:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 800a580:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 800a584:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44
 800a588:	9513      	str	r5, [sp, #76]	; 0x4c
 800a58a:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 800a58e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800a590:	9605      	str	r6, [sp, #20]
 800a592:	f00e 0007 	and.w	r0, lr, #7
 800a596:	9006      	str	r0, [sp, #24]
 800a598:	eb0a 000e 	add.w	r0, sl, lr
 800a59c:	f1be 0f00 	cmp.w	lr, #0
 800a5a0:	bfb8      	it	lt
 800a5a2:	f10e 0e07 	addlt.w	lr, lr, #7
 800a5a6:	eb05 0eee 	add.w	lr, r5, lr, asr #3
 800a5aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800a5ac:	f8cd e010 	str.w	lr, [sp, #16]
 800a5b0:	4622      	mov	r2, r4
 800a5b2:	2301      	movs	r3, #1
 800a5b4:	4649      	mov	r1, r9
 800a5b6:	9503      	str	r5, [sp, #12]
 800a5b8:	f8cd 8008 	str.w	r8, [sp, #8]
 800a5bc:	f8cd 8004 	str.w	r8, [sp, #4]
 800a5c0:	f8cd 8000 	str.w	r8, [sp]
 800a5c4:	f7fc fe38 	bl	8007238 <LCD__DrawBitmap_1bpp>
 800a5c8:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a5ca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a5cc:	6882      	ldr	r2, [r0, #8]
 800a5ce:	441c      	add	r4, r3
 800a5d0:	4659      	mov	r1, fp
 800a5d2:	6953      	ldr	r3, [r2, #20]
 800a5d4:	941d      	str	r4, [sp, #116]	; 0x74
 800a5d6:	463a      	mov	r2, r7
 800a5d8:	4798      	blx	r3
 800a5da:	4604      	mov	r4, r0
 800a5dc:	2800      	cmp	r0, #0
 800a5de:	d1d4      	bne.n	800a58a <GUI_MEMDEV__WriteToActiveOpaque+0x32a>
 800a5e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800a5e2:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800a5e4:	e71a      	b.n	800a41c <GUI_MEMDEV__WriteToActiveOpaque+0x1bc>
 800a5e6:	9812      	ldr	r0, [sp, #72]	; 0x48
 800a5e8:	f7fa fc44 	bl	8004e74 <GUI_ALLOC_LockH>
 800a5ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a5ee:	901a      	str	r0, [sp, #104]	; 0x68
 800a5f0:	2b08      	cmp	r3, #8
 800a5f2:	4681      	mov	r9, r0
 800a5f4:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800a5f6:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800a5fa:	4604      	mov	r4, r0
 800a5fc:	d929      	bls.n	800a652 <GUI_MEMDEV__WriteToActiveOpaque+0x3f2>
 800a5fe:	f83a 0b02 	ldrh.w	r0, [sl], #2
 800a602:	47a8      	blx	r5
 800a604:	47b0      	blx	r6
 800a606:	3f01      	subs	r7, #1
 800a608:	f844 0b04 	str.w	r0, [r4], #4
 800a60c:	d1f7      	bne.n	800a5fe <GUI_MEMDEV__WriteToActiveOpaque+0x39e>
 800a60e:	9b08      	ldr	r3, [sp, #32]
 800a610:	2b1f      	cmp	r3, #31
 800a612:	d804      	bhi.n	800a61e <GUI_MEMDEV__WriteToActiveOpaque+0x3be>
 800a614:	4648      	mov	r0, r9
 800a616:	461a      	mov	r2, r3
 800a618:	9914      	ldr	r1, [sp, #80]	; 0x50
 800a61a:	f00a f8fd 	bl	8014818 <GUI__CompactPixelIndices>
 800a61e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a620:	9205      	str	r2, [sp, #20]
 800a622:	ab20      	add	r3, sp, #128	; 0x80
 800a624:	461a      	mov	r2, r3
 800a626:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a628:	f852 3d18 	ldr.w	r3, [r2, #-24]!
 800a62c:	9304      	str	r3, [sp, #16]
 800a62e:	4614      	mov	r4, r2
 800a630:	2200      	movs	r2, #0
 800a632:	9203      	str	r2, [sp, #12]
 800a634:	9a08      	ldr	r2, [sp, #32]
 800a636:	9202      	str	r2, [sp, #8]
 800a638:	f8cd 8004 	str.w	r8, [sp, #4]
 800a63c:	f8cd 8000 	str.w	r8, [sp]
 800a640:	2301      	movs	r3, #1
 800a642:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a644:	9910      	ldr	r1, [sp, #64]	; 0x40
 800a646:	f7fc ff05 	bl	8007454 <LCD_DrawBitmap>
 800a64a:	4620      	mov	r0, r4
 800a64c:	f7fa fc24 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a650:	e6e4      	b.n	800a41c <GUI_MEMDEV__WriteToActiveOpaque+0x1bc>
 800a652:	f81a 0b01 	ldrb.w	r0, [sl], #1
 800a656:	47a8      	blx	r5
 800a658:	47b0      	blx	r6
 800a65a:	3f01      	subs	r7, #1
 800a65c:	f844 0b04 	str.w	r0, [r4], #4
 800a660:	d1f7      	bne.n	800a652 <GUI_MEMDEV__WriteToActiveOpaque+0x3f2>
 800a662:	e7d4      	b.n	800a60e <GUI_MEMDEV__WriteToActiveOpaque+0x3ae>
 800a664:	a81c      	add	r0, sp, #112	; 0x70
 800a666:	f7fa fc17 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a66a:	e76d      	b.n	800a548 <GUI_MEMDEV__WriteToActiveOpaque+0x2e8>
 800a66c:	4638      	mov	r0, r7
 800a66e:	f00a ff29 	bl	80154c4 <GUI_MEMDEV_GetDataPtr>
 800a672:	4607      	mov	r7, r0
 800a674:	f1b9 0f00 	cmp.w	r9, #0
 800a678:	f000 80a9 	beq.w	800a7ce <GUI_MEMDEV__WriteToActiveOpaque+0x56e>
 800a67c:	4648      	mov	r0, r9
 800a67e:	f7fa fbf9 	bl	8004e74 <GUI_ALLOC_LockH>
 800a682:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a684:	901c      	str	r0, [sp, #112]	; 0x70
 800a686:	2b00      	cmp	r3, #0
 800a688:	f340 809d 	ble.w	800a7c6 <GUI_MEMDEV__WriteToActiveOpaque+0x566>
 800a68c:	2600      	movs	r6, #0
 800a68e:	ab1d      	add	r3, sp, #116	; 0x74
 800a690:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
 800a694:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 800a698:	46b1      	mov	r9, r6
 800a69a:	2501      	movs	r5, #1
 800a69c:	4698      	mov	r8, r3
 800a69e:	6883      	ldr	r3, [r0, #8]
 800a6a0:	f8cd 9074 	str.w	r9, [sp, #116]	; 0x74
 800a6a4:	695b      	ldr	r3, [r3, #20]
 800a6a6:	4632      	mov	r2, r6
 800a6a8:	4641      	mov	r1, r8
 800a6aa:	4798      	blx	r3
 800a6ac:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a6ae:	4283      	cmp	r3, r0
 800a6b0:	4604      	mov	r4, r0
 800a6b2:	d02d      	beq.n	800a710 <GUI_MEMDEV__WriteToActiveOpaque+0x4b0>
 800a6b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a6b6:	2b01      	cmp	r3, #1
 800a6b8:	d055      	beq.n	800a766 <GUI_MEMDEV__WriteToActiveOpaque+0x506>
 800a6ba:	b308      	cbz	r0, 800a700 <GUI_MEMDEV__WriteToActiveOpaque+0x4a0>
 800a6bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a6be:	eb03 0b06 	add.w	fp, r3, r6
 800a6c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a6c4:	981d      	ldr	r0, [sp, #116]	; 0x74
 800a6c6:	9305      	str	r3, [sp, #20]
 800a6c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a6ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800a6cc:	9203      	str	r2, [sp, #12]
 800a6ce:	fb03 7300 	mla	r3, r3, r0, r7
 800a6d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a6d4:	9202      	str	r2, [sp, #8]
 800a6d6:	9304      	str	r3, [sp, #16]
 800a6d8:	4622      	mov	r2, r4
 800a6da:	4450      	add	r0, sl
 800a6dc:	2301      	movs	r3, #1
 800a6de:	4659      	mov	r1, fp
 800a6e0:	9501      	str	r5, [sp, #4]
 800a6e2:	9500      	str	r5, [sp, #0]
 800a6e4:	f7fc feb6 	bl	8007454 <LCD_DrawBitmap>
 800a6e8:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a6ea:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a6ec:	6882      	ldr	r2, [r0, #8]
 800a6ee:	441c      	add	r4, r3
 800a6f0:	4641      	mov	r1, r8
 800a6f2:	6953      	ldr	r3, [r2, #20]
 800a6f4:	941d      	str	r4, [sp, #116]	; 0x74
 800a6f6:	4632      	mov	r2, r6
 800a6f8:	4798      	blx	r3
 800a6fa:	4604      	mov	r4, r0
 800a6fc:	2800      	cmp	r0, #0
 800a6fe:	d1e0      	bne.n	800a6c2 <GUI_MEMDEV__WriteToActiveOpaque+0x462>
 800a700:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a702:	3601      	adds	r6, #1
 800a704:	441f      	add	r7, r3
 800a706:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a708:	42b3      	cmp	r3, r6
 800a70a:	dd5c      	ble.n	800a7c6 <GUI_MEMDEV__WriteToActiveOpaque+0x566>
 800a70c:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a70e:	e7c6      	b.n	800a69e <GUI_MEMDEV__WriteToActiveOpaque+0x43e>
 800a710:	9708      	str	r7, [sp, #32]
 800a712:	46b3      	mov	fp, r6
 800a714:	461f      	mov	r7, r3
 800a716:	e004      	b.n	800a722 <GUI_MEMDEV__WriteToActiveOpaque+0x4c2>
 800a718:	20000018 	.word	0x20000018
 800a71c:	2001c19c 	.word	0x2001c19c
 800a720:	46a3      	mov	fp, r4
 800a722:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a724:	6883      	ldr	r3, [r0, #8]
 800a726:	f10b 0401 	add.w	r4, fp, #1
 800a72a:	695b      	ldr	r3, [r3, #20]
 800a72c:	4622      	mov	r2, r4
 800a72e:	4641      	mov	r1, r8
 800a730:	4798      	blx	r3
 800a732:	4287      	cmp	r7, r0
 800a734:	d0f4      	beq.n	800a720 <GUI_MEMDEV__WriteToActiveOpaque+0x4c0>
 800a736:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a738:	9102      	str	r1, [sp, #8]
 800a73a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a73c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a73e:	9f08      	ldr	r7, [sp, #32]
 800a740:	9205      	str	r2, [sp, #20]
 800a742:	ebc6 030b 	rsb	r3, r6, fp
 800a746:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800a748:	9704      	str	r7, [sp, #16]
 800a74a:	4431      	add	r1, r6
 800a74c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800a74e:	9203      	str	r2, [sp, #12]
 800a750:	3301      	adds	r3, #1
 800a752:	9501      	str	r5, [sp, #4]
 800a754:	9500      	str	r5, [sp, #0]
 800a756:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a758:	4650      	mov	r0, sl
 800a75a:	fb06 7703 	mla	r7, r6, r3, r7
 800a75e:	4626      	mov	r6, r4
 800a760:	f7fc fe78 	bl	8007454 <LCD_DrawBitmap>
 800a764:	e7cf      	b.n	800a706 <GUI_MEMDEV__WriteToActiveOpaque+0x4a6>
 800a766:	2800      	cmp	r0, #0
 800a768:	d0ca      	beq.n	800a700 <GUI_MEMDEV__WriteToActiveOpaque+0x4a0>
 800a76a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a76c:	9608      	str	r6, [sp, #32]
 800a76e:	eb03 0b06 	add.w	fp, r3, r6
 800a772:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 800a776:	980a      	ldr	r0, [sp, #40]	; 0x28
 800a778:	9005      	str	r0, [sp, #20]
 800a77a:	f00e 0007 	and.w	r0, lr, #7
 800a77e:	9006      	str	r0, [sp, #24]
 800a780:	eb0a 000e 	add.w	r0, sl, lr
 800a784:	f1be 0f00 	cmp.w	lr, #0
 800a788:	bfb8      	it	lt
 800a78a:	f10e 0e07 	addlt.w	lr, lr, #7
 800a78e:	eb07 0eee 	add.w	lr, r7, lr, asr #3
 800a792:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800a794:	f8cd e010 	str.w	lr, [sp, #16]
 800a798:	4622      	mov	r2, r4
 800a79a:	2301      	movs	r3, #1
 800a79c:	4659      	mov	r1, fp
 800a79e:	9603      	str	r6, [sp, #12]
 800a7a0:	9502      	str	r5, [sp, #8]
 800a7a2:	9501      	str	r5, [sp, #4]
 800a7a4:	9500      	str	r5, [sp, #0]
 800a7a6:	f7fc fd47 	bl	8007238 <LCD__DrawBitmap_1bpp>
 800a7aa:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a7ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a7ae:	6882      	ldr	r2, [r0, #8]
 800a7b0:	441c      	add	r4, r3
 800a7b2:	4641      	mov	r1, r8
 800a7b4:	6953      	ldr	r3, [r2, #20]
 800a7b6:	941d      	str	r4, [sp, #116]	; 0x74
 800a7b8:	9a08      	ldr	r2, [sp, #32]
 800a7ba:	4798      	blx	r3
 800a7bc:	4604      	mov	r4, r0
 800a7be:	2800      	cmp	r0, #0
 800a7c0:	d1d7      	bne.n	800a772 <GUI_MEMDEV__WriteToActiveOpaque+0x512>
 800a7c2:	9e08      	ldr	r6, [sp, #32]
 800a7c4:	e79c      	b.n	800a700 <GUI_MEMDEV__WriteToActiveOpaque+0x4a0>
 800a7c6:	a81c      	add	r0, sp, #112	; 0x70
 800a7c8:	f7fa fb66 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a7cc:	e54d      	b.n	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a7ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a7d0:	9305      	str	r3, [sp, #20]
 800a7d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a7d4:	9303      	str	r3, [sp, #12]
 800a7d6:	2401      	movs	r4, #1
 800a7d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a7da:	9004      	str	r0, [sp, #16]
 800a7dc:	9302      	str	r3, [sp, #8]
 800a7de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a7e0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a7e2:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a7e4:	9401      	str	r4, [sp, #4]
 800a7e6:	4651      	mov	r1, sl
 800a7e8:	9400      	str	r4, [sp, #0]
 800a7ea:	f7fc fe33 	bl	8007454 <LCD_DrawBitmap>
 800a7ee:	e53c      	b.n	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a7f0:	fb09 f008 	mul.w	r0, r9, r8
 800a7f4:	f7fa fb30 	bl	8004e58 <GUI_ALLOC_AllocNoInit>
 800a7f8:	900b      	str	r0, [sp, #44]	; 0x2c
 800a7fa:	2800      	cmp	r0, #0
 800a7fc:	f43f ad35 	beq.w	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a800:	f7fa fb38 	bl	8004e74 <GUI_ALLOC_LockH>
 800a804:	901e      	str	r0, [sp, #120]	; 0x78
 800a806:	4638      	mov	r0, r7
 800a808:	f7fa fb34 	bl	8004e74 <GUI_ALLOC_LockH>
 800a80c:	901c      	str	r0, [sp, #112]	; 0x70
 800a80e:	6925      	ldr	r5, [r4, #16]
 800a810:	f100 0718 	add.w	r7, r0, #24
 800a814:	b345      	cbz	r5, 800a868 <GUI_MEMDEV__WriteToActiveOpaque+0x608>
 800a816:	ea4f 0b88 	mov.w	fp, r8, lsl #2
 800a81a:	2601      	movs	r6, #1
 800a81c:	e019      	b.n	800a852 <GUI_MEMDEV__WriteToActiveOpaque+0x5f2>
 800a81e:	f1b9 0f04 	cmp.w	r9, #4
 800a822:	d019      	beq.n	800a858 <GUI_MEMDEV__WriteToActiveOpaque+0x5f8>
 800a824:	f1b9 0f01 	cmp.w	r9, #1
 800a828:	d016      	beq.n	800a858 <GUI_MEMDEV__WriteToActiveOpaque+0x5f8>
 800a82a:	2200      	movs	r2, #0
 800a82c:	991e      	ldr	r1, [sp, #120]	; 0x78
 800a82e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a830:	9002      	str	r0, [sp, #8]
 800a832:	2301      	movs	r3, #1
 800a834:	9205      	str	r2, [sp, #20]
 800a836:	9203      	str	r2, [sp, #12]
 800a838:	9104      	str	r1, [sp, #16]
 800a83a:	9601      	str	r6, [sp, #4]
 800a83c:	4651      	mov	r1, sl
 800a83e:	9600      	str	r6, [sp, #0]
 800a840:	4642      	mov	r2, r8
 800a842:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a844:	449a      	add	sl, r3
 800a846:	f7fc fe05 	bl	8007454 <LCD_DrawBitmap>
 800a84a:	9b08      	ldr	r3, [sp, #32]
 800a84c:	3b01      	subs	r3, #1
 800a84e:	9308      	str	r3, [sp, #32]
 800a850:	d050      	beq.n	800a8f4 <GUI_MEMDEV__WriteToActiveOpaque+0x694>
 800a852:	f1b9 0f02 	cmp.w	r9, #2
 800a856:	d1e2      	bne.n	800a81e <GUI_MEMDEV__WriteToActiveOpaque+0x5be>
 800a858:	4638      	mov	r0, r7
 800a85a:	991e      	ldr	r1, [sp, #120]	; 0x78
 800a85c:	6925      	ldr	r5, [r4, #16]
 800a85e:	464b      	mov	r3, r9
 800a860:	4642      	mov	r2, r8
 800a862:	47a8      	blx	r5
 800a864:	445f      	add	r7, fp
 800a866:	e7e0      	b.n	800a82a <GUI_MEMDEV__WriteToActiveOpaque+0x5ca>
 800a868:	950c      	str	r5, [sp, #48]	; 0x30
 800a86a:	2601      	movs	r6, #1
 800a86c:	9c08      	ldr	r4, [sp, #32]
 800a86e:	e014      	b.n	800a89a <GUI_MEMDEV__WriteToActiveOpaque+0x63a>
 800a870:	f1b9 0f04 	cmp.w	r9, #4
 800a874:	f000 818d 	beq.w	800ab92 <GUI_MEMDEV__WriteToActiveOpaque+0x932>
 800a878:	4599      	cmp	r9, r3
 800a87a:	f000 8135 	beq.w	800aae8 <GUI_MEMDEV__WriteToActiveOpaque+0x888>
 800a87e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800a880:	9505      	str	r5, [sp, #20]
 800a882:	9503      	str	r5, [sp, #12]
 800a884:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800a886:	9502      	str	r5, [sp, #8]
 800a888:	9d1e      	ldr	r5, [sp, #120]	; 0x78
 800a88a:	9601      	str	r6, [sp, #4]
 800a88c:	9600      	str	r6, [sp, #0]
 800a88e:	9504      	str	r5, [sp, #16]
 800a890:	f7fc fde0 	bl	8007454 <LCD_DrawBitmap>
 800a894:	3c01      	subs	r4, #1
 800a896:	d02d      	beq.n	800a8f4 <GUI_MEMDEV__WriteToActiveOpaque+0x694>
 800a898:	46da      	mov	sl, fp
 800a89a:	2301      	movs	r3, #1
 800a89c:	f1b9 0f02 	cmp.w	r9, #2
 800a8a0:	4651      	mov	r1, sl
 800a8a2:	4642      	mov	r2, r8
 800a8a4:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a8a6:	eb0a 0b03 	add.w	fp, sl, r3
 800a8aa:	d1e1      	bne.n	800a870 <GUI_MEMDEV__WriteToActiveOpaque+0x610>
 800a8ac:	9408      	str	r4, [sp, #32]
 800a8ae:	ea4f 0588 	mov.w	r5, r8, lsl #2
 800a8b2:	2401      	movs	r4, #1
 800a8b4:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 800a8b8:	46bb      	mov	fp, r7
 800a8ba:	4646      	mov	r6, r8
 800a8bc:	f85b 0b04 	ldr.w	r0, [fp], #4
 800a8c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a8c2:	4798      	blx	r3
 800a8c4:	3e01      	subs	r6, #1
 800a8c6:	f829 0b02 	strh.w	r0, [r9], #2
 800a8ca:	d1f7      	bne.n	800a8bc <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 800a8cc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800a8ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a8d0:	9202      	str	r2, [sp, #8]
 800a8d2:	9304      	str	r3, [sp, #16]
 800a8d4:	4651      	mov	r1, sl
 800a8d6:	2301      	movs	r3, #1
 800a8d8:	9605      	str	r6, [sp, #20]
 800a8da:	9603      	str	r6, [sp, #12]
 800a8dc:	9401      	str	r4, [sp, #4]
 800a8de:	9400      	str	r4, [sp, #0]
 800a8e0:	4642      	mov	r2, r8
 800a8e2:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a8e4:	449a      	add	sl, r3
 800a8e6:	f7fc fdb5 	bl	8007454 <LCD_DrawBitmap>
 800a8ea:	9b08      	ldr	r3, [sp, #32]
 800a8ec:	3b01      	subs	r3, #1
 800a8ee:	442f      	add	r7, r5
 800a8f0:	9308      	str	r3, [sp, #32]
 800a8f2:	d1df      	bne.n	800a8b4 <GUI_MEMDEV__WriteToActiveOpaque+0x654>
 800a8f4:	980e      	ldr	r0, [sp, #56]	; 0x38
 800a8f6:	f7fa facf 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a8fa:	a81e      	add	r0, sp, #120	; 0x78
 800a8fc:	f7fa facc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800a900:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a902:	f7fa fc41 	bl	8005188 <GUI_ALLOC_Free>
 800a906:	e4b0      	b.n	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a908:	2401      	movs	r4, #1
 800a90a:	3218      	adds	r2, #24
 800a90c:	2600      	movs	r6, #0
 800a90e:	9204      	str	r2, [sp, #16]
 800a910:	f8cd b00c 	str.w	fp, [sp, #12]
 800a914:	9502      	str	r5, [sp, #8]
 800a916:	9b08      	ldr	r3, [sp, #32]
 800a918:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a91a:	9605      	str	r6, [sp, #20]
 800a91c:	4642      	mov	r2, r8
 800a91e:	4651      	mov	r1, sl
 800a920:	9401      	str	r4, [sp, #4]
 800a922:	9400      	str	r4, [sp, #0]
 800a924:	f7fc fd96 	bl	8007454 <LCD_DrawBitmap>
 800a928:	e49f      	b.n	800a26a <GUI_MEMDEV__WriteToActiveOpaque+0xa>
 800a92a:	2500      	movs	r5, #0
 800a92c:	2601      	movs	r6, #1
 800a92e:	9c08      	ldr	r4, [sp, #32]
 800a930:	e016      	b.n	800a960 <GUI_MEMDEV__WriteToActiveOpaque+0x700>
 800a932:	f1b9 0f04 	cmp.w	r9, #4
 800a936:	f000 80fc 	beq.w	800ab32 <GUI_MEMDEV__WriteToActiveOpaque+0x8d2>
 800a93a:	4599      	cmp	r9, r3
 800a93c:	f000 80a4 	beq.w	800aa88 <GUI_MEMDEV__WriteToActiveOpaque+0x828>
 800a940:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800a942:	9708      	str	r7, [sp, #32]
 800a944:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800a946:	9702      	str	r7, [sp, #8]
 800a948:	9f08      	ldr	r7, [sp, #32]
 800a94a:	9505      	str	r5, [sp, #20]
 800a94c:	9503      	str	r5, [sp, #12]
 800a94e:	9601      	str	r6, [sp, #4]
 800a950:	9600      	str	r6, [sp, #0]
 800a952:	9704      	str	r7, [sp, #16]
 800a954:	f7fc fd7e 	bl	8007454 <LCD_DrawBitmap>
 800a958:	3c01      	subs	r4, #1
 800a95a:	f43f add2 	beq.w	800a502 <GUI_MEMDEV__WriteToActiveOpaque+0x2a2>
 800a95e:	46da      	mov	sl, fp
 800a960:	2301      	movs	r3, #1
 800a962:	f1b9 0f02 	cmp.w	r9, #2
 800a966:	4651      	mov	r1, sl
 800a968:	4642      	mov	r2, r8
 800a96a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a96c:	eb0a 0b03 	add.w	fp, sl, r3
 800a970:	d1df      	bne.n	800a932 <GUI_MEMDEV__WriteToActiveOpaque+0x6d2>
 800a972:	ea4f 0648 	mov.w	r6, r8, lsl #1
 800a976:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800a978:	9408      	str	r4, [sp, #32]
 800a97a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800a97c:	960a      	str	r6, [sp, #40]	; 0x28
 800a97e:	2401      	movs	r4, #1
 800a980:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 800a982:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 800a986:	46c1      	mov	r9, r8
 800a988:	f83b 0b02 	ldrh.w	r0, [fp], #2
 800a98c:	47a8      	blx	r5
 800a98e:	47b8      	blx	r7
 800a990:	f1b9 0901 	subs.w	r9, r9, #1
 800a994:	f826 0b02 	strh.w	r0, [r6], #2
 800a998:	d1f6      	bne.n	800a988 <GUI_MEMDEV__WriteToActiveOpaque+0x728>
 800a99a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800a99c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800a99e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a9a0:	9302      	str	r3, [sp, #8]
 800a9a2:	46b6      	mov	lr, r6
 800a9a4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800a9a6:	9204      	str	r2, [sp, #16]
 800a9a8:	2301      	movs	r3, #1
 800a9aa:	4651      	mov	r1, sl
 800a9ac:	44b6      	add	lr, r6
 800a9ae:	f8cd 9014 	str.w	r9, [sp, #20]
 800a9b2:	f8cd 900c 	str.w	r9, [sp, #12]
 800a9b6:	9401      	str	r4, [sp, #4]
 800a9b8:	9400      	str	r4, [sp, #0]
 800a9ba:	4642      	mov	r2, r8
 800a9bc:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a9be:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
 800a9c2:	449a      	add	sl, r3
 800a9c4:	f7fc fd46 	bl	8007454 <LCD_DrawBitmap>
 800a9c8:	9b08      	ldr	r3, [sp, #32]
 800a9ca:	3b01      	subs	r3, #1
 800a9cc:	9308      	str	r3, [sp, #32]
 800a9ce:	d1d7      	bne.n	800a980 <GUI_MEMDEV__WriteToActiveOpaque+0x720>
 800a9d0:	e597      	b.n	800a502 <GUI_MEMDEV__WriteToActiveOpaque+0x2a2>
 800a9d2:	f7fa fa4f 	bl	8004e74 <GUI_ALLOC_LockH>
 800a9d6:	901d      	str	r0, [sp, #116]	; 0x74
 800a9d8:	2800      	cmp	r0, #0
 800a9da:	f43f ad92 	beq.w	800a502 <GUI_MEMDEV__WriteToActiveOpaque+0x2a2>
 800a9de:	ea4f 0348 	mov.w	r3, r8, lsl #1
 800a9e2:	4637      	mov	r7, r6
 800a9e4:	930a      	str	r3, [sp, #40]	; 0x28
 800a9e6:	2501      	movs	r5, #1
 800a9e8:	940c      	str	r4, [sp, #48]	; 0x30
 800a9ea:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800a9ec:	e019      	b.n	800aa22 <GUI_MEMDEV__WriteToActiveOpaque+0x7c2>
 800a9ee:	f1b9 0f04 	cmp.w	r9, #4
 800a9f2:	d030      	beq.n	800aa56 <GUI_MEMDEV__WriteToActiveOpaque+0x7f6>
 800a9f4:	f1b9 0f01 	cmp.w	r9, #1
 800a9f8:	d028      	beq.n	800aa4c <GUI_MEMDEV__WriteToActiveOpaque+0x7ec>
 800a9fa:	2200      	movs	r2, #0
 800a9fc:	991e      	ldr	r1, [sp, #120]	; 0x78
 800a9fe:	9809      	ldr	r0, [sp, #36]	; 0x24
 800aa00:	9002      	str	r0, [sp, #8]
 800aa02:	2301      	movs	r3, #1
 800aa04:	9205      	str	r2, [sp, #20]
 800aa06:	9203      	str	r2, [sp, #12]
 800aa08:	9104      	str	r1, [sp, #16]
 800aa0a:	9501      	str	r5, [sp, #4]
 800aa0c:	4651      	mov	r1, sl
 800aa0e:	9500      	str	r5, [sp, #0]
 800aa10:	4642      	mov	r2, r8
 800aa12:	980d      	ldr	r0, [sp, #52]	; 0x34
 800aa14:	449a      	add	sl, r3
 800aa16:	f7fc fd1d 	bl	8007454 <LCD_DrawBitmap>
 800aa1a:	9b08      	ldr	r3, [sp, #32]
 800aa1c:	3b01      	subs	r3, #1
 800aa1e:	9308      	str	r3, [sp, #32]
 800aa20:	d02b      	beq.n	800aa7a <GUI_MEMDEV__WriteToActiveOpaque+0x81a>
 800aa22:	f1b9 0f02 	cmp.w	r9, #2
 800aa26:	d1e2      	bne.n	800a9ee <GUI_MEMDEV__WriteToActiveOpaque+0x78e>
 800aa28:	f8dd b078 	ldr.w	fp, [sp, #120]	; 0x78
 800aa2c:	991d      	ldr	r1, [sp, #116]	; 0x74
 800aa2e:	464b      	mov	r3, r9
 800aa30:	4642      	mov	r2, r8
 800aa32:	4630      	mov	r0, r6
 800aa34:	697c      	ldr	r4, [r7, #20]
 800aa36:	47a0      	blx	r4
 800aa38:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800aa3a:	981d      	ldr	r0, [sp, #116]	; 0x74
 800aa3c:	4426      	add	r6, r4
 800aa3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800aa40:	4659      	mov	r1, fp
 800aa42:	464b      	mov	r3, r9
 800aa44:	4642      	mov	r2, r8
 800aa46:	6924      	ldr	r4, [r4, #16]
 800aa48:	47a0      	blx	r4
 800aa4a:	e7d6      	b.n	800a9fa <GUI_MEMDEV__WriteToActiveOpaque+0x79a>
 800aa4c:	f8dd b078 	ldr.w	fp, [sp, #120]	; 0x78
 800aa50:	991d      	ldr	r1, [sp, #116]	; 0x74
 800aa52:	2302      	movs	r3, #2
 800aa54:	e7ec      	b.n	800aa30 <GUI_MEMDEV__WriteToActiveOpaque+0x7d0>
 800aa56:	4630      	mov	r0, r6
 800aa58:	991d      	ldr	r1, [sp, #116]	; 0x74
 800aa5a:	697c      	ldr	r4, [r7, #20]
 800aa5c:	f8dd b078 	ldr.w	fp, [sp, #120]	; 0x78
 800aa60:	2302      	movs	r3, #2
 800aa62:	4642      	mov	r2, r8
 800aa64:	47a0      	blx	r4
 800aa66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800aa68:	981d      	ldr	r0, [sp, #116]	; 0x74
 800aa6a:	6924      	ldr	r4, [r4, #16]
 800aa6c:	464b      	mov	r3, r9
 800aa6e:	4659      	mov	r1, fp
 800aa70:	4642      	mov	r2, r8
 800aa72:	47a0      	blx	r4
 800aa74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aa76:	441e      	add	r6, r3
 800aa78:	e7bf      	b.n	800a9fa <GUI_MEMDEV__WriteToActiveOpaque+0x79a>
 800aa7a:	a81d      	add	r0, sp, #116	; 0x74
 800aa7c:	f7fa fa0c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800aa80:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800aa82:	f7fa fb81 	bl	8005188 <GUI_ALLOC_Free>
 800aa86:	e53c      	b.n	800a502 <GUI_MEMDEV__WriteToActiveOpaque+0x2a2>
 800aa88:	fa08 f603 	lsl.w	r6, r8, r3
 800aa8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800aa8e:	9408      	str	r4, [sp, #32]
 800aa90:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800aa92:	960a      	str	r6, [sp, #40]	; 0x28
 800aa94:	464c      	mov	r4, r9
 800aa96:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 800aa98:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 800aa9c:	46c1      	mov	r9, r8
 800aa9e:	f83b 0b02 	ldrh.w	r0, [fp], #2
 800aaa2:	47a8      	blx	r5
 800aaa4:	47b8      	blx	r7
 800aaa6:	f1b9 0901 	subs.w	r9, r9, #1
 800aaaa:	f806 0b01 	strb.w	r0, [r6], #1
 800aaae:	d1f6      	bne.n	800aa9e <GUI_MEMDEV__WriteToActiveOpaque+0x83e>
 800aab0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800aab2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800aab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800aab6:	9302      	str	r3, [sp, #8]
 800aab8:	46b6      	mov	lr, r6
 800aaba:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800aabc:	9204      	str	r2, [sp, #16]
 800aabe:	2301      	movs	r3, #1
 800aac0:	4651      	mov	r1, sl
 800aac2:	44b6      	add	lr, r6
 800aac4:	f8cd 9014 	str.w	r9, [sp, #20]
 800aac8:	f8cd 900c 	str.w	r9, [sp, #12]
 800aacc:	9401      	str	r4, [sp, #4]
 800aace:	9400      	str	r4, [sp, #0]
 800aad0:	4642      	mov	r2, r8
 800aad2:	980d      	ldr	r0, [sp, #52]	; 0x34
 800aad4:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
 800aad8:	449a      	add	sl, r3
 800aada:	f7fc fcbb 	bl	8007454 <LCD_DrawBitmap>
 800aade:	9b08      	ldr	r3, [sp, #32]
 800aae0:	3b01      	subs	r3, #1
 800aae2:	9308      	str	r3, [sp, #32]
 800aae4:	d1d7      	bne.n	800aa96 <GUI_MEMDEV__WriteToActiveOpaque+0x836>
 800aae6:	e50c      	b.n	800a502 <GUI_MEMDEV__WriteToActiveOpaque+0x2a2>
 800aae8:	9408      	str	r4, [sp, #32]
 800aaea:	ea4f 0588 	mov.w	r5, r8, lsl #2
 800aaee:	464c      	mov	r4, r9
 800aaf0:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 800aaf4:	46bb      	mov	fp, r7
 800aaf6:	4646      	mov	r6, r8
 800aaf8:	f85b 0b04 	ldr.w	r0, [fp], #4
 800aafc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aafe:	4798      	blx	r3
 800ab00:	3e01      	subs	r6, #1
 800ab02:	f809 0b01 	strb.w	r0, [r9], #1
 800ab06:	d1f7      	bne.n	800aaf8 <GUI_MEMDEV__WriteToActiveOpaque+0x898>
 800ab08:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800ab0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ab0c:	9202      	str	r2, [sp, #8]
 800ab0e:	9304      	str	r3, [sp, #16]
 800ab10:	4651      	mov	r1, sl
 800ab12:	2301      	movs	r3, #1
 800ab14:	9605      	str	r6, [sp, #20]
 800ab16:	9603      	str	r6, [sp, #12]
 800ab18:	9401      	str	r4, [sp, #4]
 800ab1a:	9400      	str	r4, [sp, #0]
 800ab1c:	4642      	mov	r2, r8
 800ab1e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ab20:	449a      	add	sl, r3
 800ab22:	f7fc fc97 	bl	8007454 <LCD_DrawBitmap>
 800ab26:	9b08      	ldr	r3, [sp, #32]
 800ab28:	3b01      	subs	r3, #1
 800ab2a:	442f      	add	r7, r5
 800ab2c:	9308      	str	r3, [sp, #32]
 800ab2e:	d1df      	bne.n	800aaf0 <GUI_MEMDEV__WriteToActiveOpaque+0x890>
 800ab30:	e6e0      	b.n	800a8f4 <GUI_MEMDEV__WriteToActiveOpaque+0x694>
 800ab32:	ea4f 0648 	mov.w	r6, r8, lsl #1
 800ab36:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ab38:	9408      	str	r4, [sp, #32]
 800ab3a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ab3c:	960a      	str	r6, [sp, #40]	; 0x28
 800ab3e:	2401      	movs	r4, #1
 800ab40:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 800ab42:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 800ab46:	46c1      	mov	r9, r8
 800ab48:	f83b 0b02 	ldrh.w	r0, [fp], #2
 800ab4c:	47a8      	blx	r5
 800ab4e:	47b8      	blx	r7
 800ab50:	f1b9 0901 	subs.w	r9, r9, #1
 800ab54:	f846 0b04 	str.w	r0, [r6], #4
 800ab58:	d1f6      	bne.n	800ab48 <GUI_MEMDEV__WriteToActiveOpaque+0x8e8>
 800ab5a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800ab5c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800ab5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ab60:	9302      	str	r3, [sp, #8]
 800ab62:	46b6      	mov	lr, r6
 800ab64:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800ab66:	9204      	str	r2, [sp, #16]
 800ab68:	2301      	movs	r3, #1
 800ab6a:	4651      	mov	r1, sl
 800ab6c:	44b6      	add	lr, r6
 800ab6e:	f8cd 9014 	str.w	r9, [sp, #20]
 800ab72:	f8cd 900c 	str.w	r9, [sp, #12]
 800ab76:	9401      	str	r4, [sp, #4]
 800ab78:	9400      	str	r4, [sp, #0]
 800ab7a:	4642      	mov	r2, r8
 800ab7c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ab7e:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
 800ab82:	449a      	add	sl, r3
 800ab84:	f7fc fc66 	bl	8007454 <LCD_DrawBitmap>
 800ab88:	9b08      	ldr	r3, [sp, #32]
 800ab8a:	3b01      	subs	r3, #1
 800ab8c:	9308      	str	r3, [sp, #32]
 800ab8e:	d1d7      	bne.n	800ab40 <GUI_MEMDEV__WriteToActiveOpaque+0x8e0>
 800ab90:	e4b7      	b.n	800a502 <GUI_MEMDEV__WriteToActiveOpaque+0x2a2>
 800ab92:	9408      	str	r4, [sp, #32]
 800ab94:	ea4f 0588 	mov.w	r5, r8, lsl #2
 800ab98:	2401      	movs	r4, #1
 800ab9a:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 800ab9e:	46bb      	mov	fp, r7
 800aba0:	4646      	mov	r6, r8
 800aba2:	f85b 0b04 	ldr.w	r0, [fp], #4
 800aba6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aba8:	4798      	blx	r3
 800abaa:	3e01      	subs	r6, #1
 800abac:	f849 0b04 	str.w	r0, [r9], #4
 800abb0:	d1f7      	bne.n	800aba2 <GUI_MEMDEV__WriteToActiveOpaque+0x942>
 800abb2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800abb4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800abb6:	9202      	str	r2, [sp, #8]
 800abb8:	9304      	str	r3, [sp, #16]
 800abba:	4651      	mov	r1, sl
 800abbc:	2301      	movs	r3, #1
 800abbe:	9605      	str	r6, [sp, #20]
 800abc0:	9603      	str	r6, [sp, #12]
 800abc2:	9401      	str	r4, [sp, #4]
 800abc4:	9400      	str	r4, [sp, #0]
 800abc6:	4642      	mov	r2, r8
 800abc8:	980d      	ldr	r0, [sp, #52]	; 0x34
 800abca:	449a      	add	sl, r3
 800abcc:	f7fc fc42 	bl	8007454 <LCD_DrawBitmap>
 800abd0:	9b08      	ldr	r3, [sp, #32]
 800abd2:	3b01      	subs	r3, #1
 800abd4:	442f      	add	r7, r5
 800abd6:	9308      	str	r3, [sp, #32]
 800abd8:	d1df      	bne.n	800ab9a <GUI_MEMDEV__WriteToActiveOpaque+0x93a>
 800abda:	e68b      	b.n	800a8f4 <GUI_MEMDEV__WriteToActiveOpaque+0x694>

0800abdc <_OnExit>:
 800abdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abe0:	4d1a      	ldr	r5, [pc, #104]	; (800ac4c <_OnExit+0x70>)
 800abe2:	4b1b      	ldr	r3, [pc, #108]	; (800ac50 <_OnExit+0x74>)
 800abe4:	f8df e094 	ldr.w	lr, [pc, #148]	; 800ac7c <_OnExit+0xa0>
 800abe8:	f8df c094 	ldr.w	ip, [pc, #148]	; 800ac80 <_OnExit+0xa4>
 800abec:	4919      	ldr	r1, [pc, #100]	; (800ac54 <_OnExit+0x78>)
 800abee:	4a1a      	ldr	r2, [pc, #104]	; (800ac58 <_OnExit+0x7c>)
 800abf0:	4f1a      	ldr	r7, [pc, #104]	; (800ac5c <_OnExit+0x80>)
 800abf2:	4e1b      	ldr	r6, [pc, #108]	; (800ac60 <_OnExit+0x84>)
 800abf4:	2400      	movs	r4, #0
 800abf6:	602c      	str	r4, [r5, #0]
 800abf8:	4d1a      	ldr	r5, [pc, #104]	; (800ac64 <_OnExit+0x88>)
 800abfa:	f8cc 4000 	str.w	r4, [ip]
 800abfe:	f8ce 4000 	str.w	r4, [lr]
 800ac02:	6034      	str	r4, [r6, #0]
 800ac04:	600c      	str	r4, [r1, #0]
 800ac06:	604c      	str	r4, [r1, #4]
 800ac08:	6014      	str	r4, [r2, #0]
 800ac0a:	6054      	str	r4, [r2, #4]
 800ac0c:	4621      	mov	r1, r4
 800ac0e:	f103 000c 	add.w	r0, r3, #12
 800ac12:	603c      	str	r4, [r7, #0]
 800ac14:	682e      	ldr	r6, [r5, #0]
 800ac16:	701c      	strb	r4, [r3, #0]
 800ac18:	2218      	movs	r2, #24
 800ac1a:	605c      	str	r4, [r3, #4]
 800ac1c:	609c      	str	r4, [r3, #8]
 800ac1e:	47b0      	blx	r6
 800ac20:	4b11      	ldr	r3, [pc, #68]	; (800ac68 <_OnExit+0x8c>)
 800ac22:	4a12      	ldr	r2, [pc, #72]	; (800ac6c <_OnExit+0x90>)
 800ac24:	601c      	str	r4, [r3, #0]
 800ac26:	6014      	str	r4, [r2, #0]
 800ac28:	605c      	str	r4, [r3, #4]
 800ac2a:	4621      	mov	r1, r4
 800ac2c:	682b      	ldr	r3, [r5, #0]
 800ac2e:	4810      	ldr	r0, [pc, #64]	; (800ac70 <_OnExit+0x94>)
 800ac30:	2210      	movs	r2, #16
 800ac32:	4798      	blx	r3
 800ac34:	682b      	ldr	r3, [r5, #0]
 800ac36:	480f      	ldr	r0, [pc, #60]	; (800ac74 <_OnExit+0x98>)
 800ac38:	4621      	mov	r1, r4
 800ac3a:	2210      	movs	r2, #16
 800ac3c:	4798      	blx	r3
 800ac3e:	682b      	ldr	r3, [r5, #0]
 800ac40:	480d      	ldr	r0, [pc, #52]	; (800ac78 <_OnExit+0x9c>)
 800ac42:	4621      	mov	r1, r4
 800ac44:	2210      	movs	r2, #16
 800ac46:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ac4a:	4718      	bx	r3
 800ac4c:	2001c1bc 	.word	0x2001c1bc
 800ac50:	20000550 	.word	0x20000550
 800ac54:	2001c1d0 	.word	0x2001c1d0
 800ac58:	2001c204 	.word	0x2001c204
 800ac5c:	2001c1f0 	.word	0x2001c1f0
 800ac60:	2001c200 	.word	0x2001c200
 800ac64:	2000003c 	.word	0x2000003c
 800ac68:	2001c1c0 	.word	0x2001c1c0
 800ac6c:	2001c1cc 	.word	0x2001c1cc
 800ac70:	2001c234 	.word	0x2001c234
 800ac74:	2001c224 	.word	0x2001c224
 800ac78:	2001c214 	.word	0x2001c214
 800ac7c:	2001c210 	.word	0x2001c210
 800ac80:	2001c1fc 	.word	0x2001c1fc

0800ac84 <_Findy1>:
 800ac84:	2800      	cmp	r0, #0
 800ac86:	d064      	beq.n	800ad52 <_Findy1+0xce>
 800ac88:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac8a:	460e      	mov	r6, r1
 800ac8c:	b085      	sub	sp, #20
 800ac8e:	4617      	mov	r7, r2
 800ac90:	4604      	mov	r4, r0
 800ac92:	4620      	mov	r0, r4
 800ac94:	f7fa f8ee 	bl	8004e74 <GUI_ALLOC_LockH>
 800ac98:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac9a:	9001      	str	r0, [sp, #4]
 800ac9c:	07a2      	lsls	r2, r4, #30
 800ac9e:	d524      	bpl.n	800acea <_Findy1+0x66>
 800aca0:	2f00      	cmp	r7, #0
 800aca2:	d040      	beq.n	800ad26 <_Findy1+0xa2>
 800aca4:	ad02      	add	r5, sp, #8
 800aca6:	4601      	mov	r1, r0
 800aca8:	463a      	mov	r2, r7
 800acaa:	4628      	mov	r0, r5
 800acac:	f7fb fedc 	bl	8006a68 <GUI__IntersectRects>
 800acb0:	4629      	mov	r1, r5
 800acb2:	4630      	mov	r0, r6
 800acb4:	f7fa fc38 	bl	8005528 <GUI_RectsIntersect>
 800acb8:	b368      	cbz	r0, 800ad16 <_Findy1+0x92>
 800acba:	07e3      	lsls	r3, r4, #31
 800acbc:	9801      	ldr	r0, [sp, #4]
 800acbe:	d41c      	bmi.n	800acfa <_Findy1+0x76>
 800acc0:	2f00      	cmp	r7, #0
 800acc2:	d043      	beq.n	800ad4c <_Findy1+0xc8>
 800acc4:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800acc8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800accc:	4293      	cmp	r3, r2
 800acce:	bfb8      	it	lt
 800acd0:	4613      	movlt	r3, r2
 800acd2:	f9b6 2002 	ldrsh.w	r2, [r6, #2]
 800acd6:	4293      	cmp	r3, r2
 800acd8:	dd2a      	ble.n	800ad30 <_Findy1+0xac>
 800acda:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800acde:	f9b6 2006 	ldrsh.w	r2, [r6, #6]
 800ace2:	429a      	cmp	r2, r3
 800ace4:	db01      	blt.n	800acea <_Findy1+0x66>
 800ace6:	3b01      	subs	r3, #1
 800ace8:	80f3      	strh	r3, [r6, #6]
 800acea:	6a04      	ldr	r4, [r0, #32]
 800acec:	a801      	add	r0, sp, #4
 800acee:	f7fa f8d3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800acf2:	2c00      	cmp	r4, #0
 800acf4:	d1cd      	bne.n	800ac92 <_Findy1+0xe>
 800acf6:	b005      	add	sp, #20
 800acf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800acfa:	69c4      	ldr	r4, [r0, #28]
 800acfc:	2c00      	cmp	r4, #0
 800acfe:	d0f4      	beq.n	800acea <_Findy1+0x66>
 800ad00:	4620      	mov	r0, r4
 800ad02:	462a      	mov	r2, r5
 800ad04:	4631      	mov	r1, r6
 800ad06:	f7ff ffbd 	bl	800ac84 <_Findy1>
 800ad0a:	4620      	mov	r0, r4
 800ad0c:	f7fa f8a8 	bl	8004e60 <GUI_ALLOC_h2p>
 800ad10:	6a04      	ldr	r4, [r0, #32]
 800ad12:	2c00      	cmp	r4, #0
 800ad14:	d1f4      	bne.n	800ad00 <_Findy1+0x7c>
 800ad16:	9801      	ldr	r0, [sp, #4]
 800ad18:	6a04      	ldr	r4, [r0, #32]
 800ad1a:	a801      	add	r0, sp, #4
 800ad1c:	f7fa f8bc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ad20:	2c00      	cmp	r4, #0
 800ad22:	d1b6      	bne.n	800ac92 <_Findy1+0xe>
 800ad24:	e7e7      	b.n	800acf6 <_Findy1+0x72>
 800ad26:	c803      	ldmia	r0, {r0, r1}
 800ad28:	ad02      	add	r5, sp, #8
 800ad2a:	e885 0003 	stmia.w	r5, {r0, r1}
 800ad2e:	e7bf      	b.n	800acb0 <_Findy1+0x2c>
 800ad30:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ad34:	f9b6 2006 	ldrsh.w	r2, [r6, #6]
 800ad38:	429a      	cmp	r2, r3
 800ad3a:	ddd6      	ble.n	800acea <_Findy1+0x66>
 800ad3c:	6a04      	ldr	r4, [r0, #32]
 800ad3e:	80f3      	strh	r3, [r6, #6]
 800ad40:	a801      	add	r0, sp, #4
 800ad42:	f7fa f8a9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ad46:	2c00      	cmp	r4, #0
 800ad48:	d1a3      	bne.n	800ac92 <_Findy1+0xe>
 800ad4a:	e7d4      	b.n	800acf6 <_Findy1+0x72>
 800ad4c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ad50:	e7bf      	b.n	800acd2 <_Findy1+0x4e>
 800ad52:	4770      	bx	lr

0800ad54 <_Findx0>:
 800ad54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad58:	4604      	mov	r4, r0
 800ad5a:	b084      	sub	sp, #16
 800ad5c:	2800      	cmp	r0, #0
 800ad5e:	d04a      	beq.n	800adf6 <_Findx0+0xa2>
 800ad60:	460f      	mov	r7, r1
 800ad62:	4690      	mov	r8, r2
 800ad64:	2600      	movs	r6, #0
 800ad66:	e00c      	b.n	800ad82 <_Findx0+0x2e>
 800ad68:	07e3      	lsls	r3, r4, #31
 800ad6a:	d430      	bmi.n	800adce <_Findx0+0x7a>
 800ad6c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800ad70:	9801      	ldr	r0, [sp, #4]
 800ad72:	3301      	adds	r3, #1
 800ad74:	803b      	strh	r3, [r7, #0]
 800ad76:	2601      	movs	r6, #1
 800ad78:	6a04      	ldr	r4, [r0, #32]
 800ad7a:	a801      	add	r0, sp, #4
 800ad7c:	f7fa f88c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ad80:	b1e4      	cbz	r4, 800adbc <_Findx0+0x68>
 800ad82:	4620      	mov	r0, r4
 800ad84:	f7fa f876 	bl	8004e74 <GUI_ALLOC_LockH>
 800ad88:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ad8a:	9001      	str	r0, [sp, #4]
 800ad8c:	07a2      	lsls	r2, r4, #30
 800ad8e:	d5f3      	bpl.n	800ad78 <_Findx0+0x24>
 800ad90:	f1b8 0f00 	cmp.w	r8, #0
 800ad94:	d016      	beq.n	800adc4 <_Findx0+0x70>
 800ad96:	ad02      	add	r5, sp, #8
 800ad98:	4601      	mov	r1, r0
 800ad9a:	4642      	mov	r2, r8
 800ad9c:	4628      	mov	r0, r5
 800ad9e:	f7fb fe63 	bl	8006a68 <GUI__IntersectRects>
 800ada2:	4629      	mov	r1, r5
 800ada4:	4638      	mov	r0, r7
 800ada6:	f7fa fbbf 	bl	8005528 <GUI_RectsIntersect>
 800adaa:	2800      	cmp	r0, #0
 800adac:	d1dc      	bne.n	800ad68 <_Findx0+0x14>
 800adae:	9801      	ldr	r0, [sp, #4]
 800adb0:	6a04      	ldr	r4, [r0, #32]
 800adb2:	a801      	add	r0, sp, #4
 800adb4:	f7fa f870 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800adb8:	2c00      	cmp	r4, #0
 800adba:	d1e2      	bne.n	800ad82 <_Findx0+0x2e>
 800adbc:	4630      	mov	r0, r6
 800adbe:	b004      	add	sp, #16
 800adc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800adc4:	c803      	ldmia	r0, {r0, r1}
 800adc6:	ad02      	add	r5, sp, #8
 800adc8:	e885 0003 	stmia.w	r5, {r0, r1}
 800adcc:	e7e9      	b.n	800ada2 <_Findx0+0x4e>
 800adce:	9801      	ldr	r0, [sp, #4]
 800add0:	69c4      	ldr	r4, [r0, #28]
 800add2:	2c00      	cmp	r4, #0
 800add4:	d0d0      	beq.n	800ad78 <_Findx0+0x24>
 800add6:	462a      	mov	r2, r5
 800add8:	4639      	mov	r1, r7
 800adda:	4620      	mov	r0, r4
 800addc:	f7ff ffba 	bl	800ad54 <_Findx0>
 800ade0:	2800      	cmp	r0, #0
 800ade2:	4620      	mov	r0, r4
 800ade4:	bf18      	it	ne
 800ade6:	2601      	movne	r6, #1
 800ade8:	f7fa f83a 	bl	8004e60 <GUI_ALLOC_h2p>
 800adec:	6a04      	ldr	r4, [r0, #32]
 800adee:	2c00      	cmp	r4, #0
 800adf0:	d1f1      	bne.n	800add6 <_Findx0+0x82>
 800adf2:	9801      	ldr	r0, [sp, #4]
 800adf4:	e7dc      	b.n	800adb0 <_Findx0+0x5c>
 800adf6:	4606      	mov	r6, r0
 800adf8:	e7e0      	b.n	800adbc <_Findx0+0x68>
 800adfa:	bf00      	nop

0800adfc <_Findx1>:
 800adfc:	2800      	cmp	r0, #0
 800adfe:	d044      	beq.n	800ae8a <_Findx1+0x8e>
 800ae00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae02:	460e      	mov	r6, r1
 800ae04:	b085      	sub	sp, #20
 800ae06:	4617      	mov	r7, r2
 800ae08:	4604      	mov	r4, r0
 800ae0a:	e00b      	b.n	800ae24 <_Findx1+0x28>
 800ae0c:	07e3      	lsls	r3, r4, #31
 800ae0e:	d42b      	bmi.n	800ae68 <_Findx1+0x6c>
 800ae10:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ae14:	9801      	ldr	r0, [sp, #4]
 800ae16:	3b01      	subs	r3, #1
 800ae18:	80b3      	strh	r3, [r6, #4]
 800ae1a:	6a04      	ldr	r4, [r0, #32]
 800ae1c:	a801      	add	r0, sp, #4
 800ae1e:	f7fa f83b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ae22:	b1d4      	cbz	r4, 800ae5a <_Findx1+0x5e>
 800ae24:	4620      	mov	r0, r4
 800ae26:	f7fa f825 	bl	8004e74 <GUI_ALLOC_LockH>
 800ae2a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae2c:	9001      	str	r0, [sp, #4]
 800ae2e:	07a2      	lsls	r2, r4, #30
 800ae30:	d5f3      	bpl.n	800ae1a <_Findx1+0x1e>
 800ae32:	b1a7      	cbz	r7, 800ae5e <_Findx1+0x62>
 800ae34:	ad02      	add	r5, sp, #8
 800ae36:	4601      	mov	r1, r0
 800ae38:	463a      	mov	r2, r7
 800ae3a:	4628      	mov	r0, r5
 800ae3c:	f7fb fe14 	bl	8006a68 <GUI__IntersectRects>
 800ae40:	4629      	mov	r1, r5
 800ae42:	4630      	mov	r0, r6
 800ae44:	f7fa fb70 	bl	8005528 <GUI_RectsIntersect>
 800ae48:	2800      	cmp	r0, #0
 800ae4a:	d1df      	bne.n	800ae0c <_Findx1+0x10>
 800ae4c:	9801      	ldr	r0, [sp, #4]
 800ae4e:	6a04      	ldr	r4, [r0, #32]
 800ae50:	a801      	add	r0, sp, #4
 800ae52:	f7fa f821 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ae56:	2c00      	cmp	r4, #0
 800ae58:	d1e4      	bne.n	800ae24 <_Findx1+0x28>
 800ae5a:	b005      	add	sp, #20
 800ae5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ae5e:	c803      	ldmia	r0, {r0, r1}
 800ae60:	ad02      	add	r5, sp, #8
 800ae62:	e885 0003 	stmia.w	r5, {r0, r1}
 800ae66:	e7eb      	b.n	800ae40 <_Findx1+0x44>
 800ae68:	9801      	ldr	r0, [sp, #4]
 800ae6a:	69c4      	ldr	r4, [r0, #28]
 800ae6c:	2c00      	cmp	r4, #0
 800ae6e:	d0d4      	beq.n	800ae1a <_Findx1+0x1e>
 800ae70:	4620      	mov	r0, r4
 800ae72:	462a      	mov	r2, r5
 800ae74:	4631      	mov	r1, r6
 800ae76:	f7ff ffc1 	bl	800adfc <_Findx1>
 800ae7a:	4620      	mov	r0, r4
 800ae7c:	f7f9 fff0 	bl	8004e60 <GUI_ALLOC_h2p>
 800ae80:	6a04      	ldr	r4, [r0, #32]
 800ae82:	2c00      	cmp	r4, #0
 800ae84:	d1f4      	bne.n	800ae70 <_Findx1+0x74>
 800ae86:	9801      	ldr	r0, [sp, #4]
 800ae88:	e7e1      	b.n	800ae4e <_Findx1+0x52>
 800ae8a:	4770      	bx	lr

0800ae8c <_Paint1Trans>:
 800ae8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae90:	4d29      	ldr	r5, [pc, #164]	; (800af38 <_Paint1Trans+0xac>)
 800ae92:	682b      	ldr	r3, [r5, #0]
 800ae94:	b083      	sub	sp, #12
 800ae96:	4606      	mov	r6, r0
 800ae98:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800ae9a:	f7f9 ffeb 	bl	8004e74 <GUI_ALLOC_LockH>
 800ae9e:	9000      	str	r0, [sp, #0]
 800aea0:	4630      	mov	r0, r6
 800aea2:	f7f9 ffe7 	bl	8004e74 <GUI_ALLOC_LockH>
 800aea6:	4601      	mov	r1, r0
 800aea8:	9800      	ldr	r0, [sp, #0]
 800aeaa:	9101      	str	r1, [sp, #4]
 800aeac:	3008      	adds	r0, #8
 800aeae:	f7fa fb3b 	bl	8005528 <GUI_RectsIntersect>
 800aeb2:	b950      	cbnz	r0, 800aeca <_Paint1Trans+0x3e>
 800aeb4:	4604      	mov	r4, r0
 800aeb6:	4668      	mov	r0, sp
 800aeb8:	f7f9 ffee 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800aebc:	a801      	add	r0, sp, #4
 800aebe:	f7f9 ffeb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800aec2:	4620      	mov	r0, r4
 800aec4:	b003      	add	sp, #12
 800aec6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aeca:	ac02      	add	r4, sp, #8
 800aecc:	9901      	ldr	r1, [sp, #4]
 800aece:	f854 2d08 	ldr.w	r2, [r4, #-8]!
 800aed2:	682b      	ldr	r3, [r5, #0]
 800aed4:	4f19      	ldr	r7, [pc, #100]	; (800af3c <_Paint1Trans+0xb0>)
 800aed6:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 800aeda:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
 800aede:	3208      	adds	r2, #8
 800aee0:	f101 0008 	add.w	r0, r1, #8
 800aee4:	f7fb fdc0 	bl	8006a68 <GUI__IntersectRects>
 800aee8:	4620      	mov	r0, r4
 800aeea:	f7f9 ffd5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800aeee:	a802      	add	r0, sp, #8
 800aef0:	682b      	ldr	r3, [r5, #0]
 800aef2:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 800aef6:	603e      	str	r6, [r7, #0]
 800aef8:	f9b2 1000 	ldrsh.w	r1, [r2]
 800aefc:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800af00:	651a      	str	r2, [r3, #80]	; 0x50
 800af02:	64d9      	str	r1, [r3, #76]	; 0x4c
 800af04:	f7f9 ffc8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800af08:	4630      	mov	r0, r6
 800af0a:	f7f9 ffa9 	bl	8004e60 <GUI_ALLOC_h2p>
 800af0e:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800af10:	4a0b      	ldr	r2, [pc, #44]	; (800af40 <_Paint1Trans+0xb4>)
 800af12:	4b0c      	ldr	r3, [pc, #48]	; (800af44 <_Paint1Trans+0xb8>)
 800af14:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 800af18:	bf08      	it	eq
 800af1a:	4613      	moveq	r3, r2
 800af1c:	4630      	mov	r0, r6
 800af1e:	4798      	blx	r3
 800af20:	2401      	movs	r4, #1
 800af22:	682b      	ldr	r3, [r5, #0]
 800af24:	2200      	movs	r2, #0
 800af26:	4620      	mov	r0, r4
 800af28:	f8c3 904c 	str.w	r9, [r3, #76]	; 0x4c
 800af2c:	f8c3 8050 	str.w	r8, [r3, #80]	; 0x50
 800af30:	603a      	str	r2, [r7, #0]
 800af32:	b003      	add	sp, #12
 800af34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800af38:	20000018 	.word	0x20000018
 800af3c:	2001c1bc 	.word	0x2001c1bc
 800af40:	0800c971 	.word	0x0800c971
 800af44:	080155bd 	.word	0x080155bd

0800af48 <_PaintTransChildren>:
 800af48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af4c:	b082      	sub	sp, #8
 800af4e:	4605      	mov	r5, r0
 800af50:	f7f9 ff90 	bl	8004e74 <GUI_ALLOC_LockH>
 800af54:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af56:	9001      	str	r0, [sp, #4]
 800af58:	079b      	lsls	r3, r3, #30
 800af5a:	d524      	bpl.n	800afa6 <_PaintTransChildren+0x5e>
 800af5c:	69c6      	ldr	r6, [r0, #28]
 800af5e:	b316      	cbz	r6, 800afa6 <_PaintTransChildren+0x5e>
 800af60:	ac01      	add	r4, sp, #4
 800af62:	e004      	b.n	800af6e <_PaintTransChildren+0x26>
 800af64:	6a1e      	ldr	r6, [r3, #32]
 800af66:	4668      	mov	r0, sp
 800af68:	f7f9 ff96 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800af6c:	b1ae      	cbz	r6, 800af9a <_PaintTransChildren+0x52>
 800af6e:	4630      	mov	r0, r6
 800af70:	f7f9 ff80 	bl	8004e74 <GUI_ALLOC_LockH>
 800af74:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800af76:	9000      	str	r0, [sp, #0]
 800af78:	f002 0203 	and.w	r2, r2, #3
 800af7c:	2a03      	cmp	r2, #3
 800af7e:	4603      	mov	r3, r0
 800af80:	d1f0      	bne.n	800af64 <_PaintTransChildren+0x1c>
 800af82:	9901      	ldr	r1, [sp, #4]
 800af84:	3108      	adds	r1, #8
 800af86:	f7fa facf 	bl	8005528 <GUI_RectsIntersect>
 800af8a:	b998      	cbnz	r0, 800afb4 <_PaintTransChildren+0x6c>
 800af8c:	9b00      	ldr	r3, [sp, #0]
 800af8e:	6a1e      	ldr	r6, [r3, #32]
 800af90:	4668      	mov	r0, sp
 800af92:	f7f9 ff81 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800af96:	2e00      	cmp	r6, #0
 800af98:	d1e9      	bne.n	800af6e <_PaintTransChildren+0x26>
 800af9a:	4620      	mov	r0, r4
 800af9c:	f7f9 ff7c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800afa0:	b002      	add	sp, #8
 800afa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800afa6:	ac01      	add	r4, sp, #4
 800afa8:	4620      	mov	r0, r4
 800afaa:	f7f9 ff75 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800afae:	b002      	add	sp, #8
 800afb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800afb4:	9b01      	ldr	r3, [sp, #4]
 800afb6:	4620      	mov	r0, r4
 800afb8:	f9b3 9008 	ldrsh.w	r9, [r3, #8]
 800afbc:	f9b3 800a 	ldrsh.w	r8, [r3, #10]
 800afc0:	f9b3 700c 	ldrsh.w	r7, [r3, #12]
 800afc4:	f9b3 a00e 	ldrsh.w	sl, [r3, #14]
 800afc8:	f7f9 ff66 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800afcc:	4668      	mov	r0, sp
 800afce:	f7f9 ff63 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800afd2:	4630      	mov	r0, r6
 800afd4:	f7ff ff5a 	bl	800ae8c <_Paint1Trans>
 800afd8:	b988      	cbnz	r0, 800affe <_PaintTransChildren+0xb6>
 800afda:	4628      	mov	r0, r5
 800afdc:	f7f9 ff4a 	bl	8004e74 <GUI_ALLOC_LockH>
 800afe0:	9001      	str	r0, [sp, #4]
 800afe2:	4630      	mov	r0, r6
 800afe4:	f7f9 ff46 	bl	8004e74 <GUI_ALLOC_LockH>
 800afe8:	9a01      	ldr	r2, [sp, #4]
 800afea:	9000      	str	r0, [sp, #0]
 800afec:	4603      	mov	r3, r0
 800afee:	f8a2 9008 	strh.w	r9, [r2, #8]
 800aff2:	f8a2 800a 	strh.w	r8, [r2, #10]
 800aff6:	8197      	strh	r7, [r2, #12]
 800aff8:	f8a2 a00e 	strh.w	sl, [r2, #14]
 800affc:	e7b2      	b.n	800af64 <_PaintTransChildren+0x1c>
 800affe:	4630      	mov	r0, r6
 800b000:	f7f9 ff2e 	bl	8004e60 <GUI_ALLOC_h2p>
 800b004:	9000      	str	r0, [sp, #0]
 800b006:	4630      	mov	r0, r6
 800b008:	f7ff ff9e 	bl	800af48 <_PaintTransChildren>
 800b00c:	4630      	mov	r0, r6
 800b00e:	f7f9 ff27 	bl	8004e60 <GUI_ALLOC_h2p>
 800b012:	9000      	str	r0, [sp, #0]
 800b014:	4628      	mov	r0, r5
 800b016:	f7f9 ff23 	bl	8004e60 <GUI_ALLOC_h2p>
 800b01a:	9001      	str	r0, [sp, #4]
 800b01c:	e7dd      	b.n	800afda <_PaintTransChildren+0x92>
 800b01e:	bf00      	nop

0800b020 <_Findx0.constprop.10>:
 800b020:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b022:	4604      	mov	r4, r0
 800b024:	b085      	sub	sp, #20
 800b026:	2800      	cmp	r0, #0
 800b028:	d03e      	beq.n	800b0a8 <_Findx0.constprop.10+0x88>
 800b02a:	460f      	mov	r7, r1
 800b02c:	2600      	movs	r6, #0
 800b02e:	ad02      	add	r5, sp, #8
 800b030:	e00c      	b.n	800b04c <_Findx0.constprop.10+0x2c>
 800b032:	07e3      	lsls	r3, r4, #31
 800b034:	d424      	bmi.n	800b080 <_Findx0.constprop.10+0x60>
 800b036:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800b03a:	9801      	ldr	r0, [sp, #4]
 800b03c:	3301      	adds	r3, #1
 800b03e:	803b      	strh	r3, [r7, #0]
 800b040:	2601      	movs	r6, #1
 800b042:	6a04      	ldr	r4, [r0, #32]
 800b044:	a801      	add	r0, sp, #4
 800b046:	f7f9 ff27 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b04a:	b1b4      	cbz	r4, 800b07a <_Findx0.constprop.10+0x5a>
 800b04c:	4620      	mov	r0, r4
 800b04e:	f7f9 ff11 	bl	8004e74 <GUI_ALLOC_LockH>
 800b052:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b054:	9001      	str	r0, [sp, #4]
 800b056:	07a2      	lsls	r2, r4, #30
 800b058:	d5f3      	bpl.n	800b042 <_Findx0.constprop.10+0x22>
 800b05a:	c803      	ldmia	r0, {r0, r1}
 800b05c:	e885 0003 	stmia.w	r5, {r0, r1}
 800b060:	4629      	mov	r1, r5
 800b062:	4638      	mov	r0, r7
 800b064:	f7fa fa60 	bl	8005528 <GUI_RectsIntersect>
 800b068:	2800      	cmp	r0, #0
 800b06a:	d1e2      	bne.n	800b032 <_Findx0.constprop.10+0x12>
 800b06c:	9801      	ldr	r0, [sp, #4]
 800b06e:	6a04      	ldr	r4, [r0, #32]
 800b070:	a801      	add	r0, sp, #4
 800b072:	f7f9 ff11 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b076:	2c00      	cmp	r4, #0
 800b078:	d1e8      	bne.n	800b04c <_Findx0.constprop.10+0x2c>
 800b07a:	4630      	mov	r0, r6
 800b07c:	b005      	add	sp, #20
 800b07e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b080:	9801      	ldr	r0, [sp, #4]
 800b082:	69c4      	ldr	r4, [r0, #28]
 800b084:	2c00      	cmp	r4, #0
 800b086:	d0dc      	beq.n	800b042 <_Findx0.constprop.10+0x22>
 800b088:	462a      	mov	r2, r5
 800b08a:	4639      	mov	r1, r7
 800b08c:	4620      	mov	r0, r4
 800b08e:	f7ff fe61 	bl	800ad54 <_Findx0>
 800b092:	2800      	cmp	r0, #0
 800b094:	4620      	mov	r0, r4
 800b096:	bf18      	it	ne
 800b098:	2601      	movne	r6, #1
 800b09a:	f7f9 fee1 	bl	8004e60 <GUI_ALLOC_h2p>
 800b09e:	6a04      	ldr	r4, [r0, #32]
 800b0a0:	2c00      	cmp	r4, #0
 800b0a2:	d1f1      	bne.n	800b088 <_Findx0.constprop.10+0x68>
 800b0a4:	9801      	ldr	r0, [sp, #4]
 800b0a6:	e7e2      	b.n	800b06e <_Findx0.constprop.10+0x4e>
 800b0a8:	4606      	mov	r6, r0
 800b0aa:	e7e6      	b.n	800b07a <_Findx0.constprop.10+0x5a>

0800b0ac <_Findy1.constprop.11>:
 800b0ac:	2800      	cmp	r0, #0
 800b0ae:	d050      	beq.n	800b152 <_Findy1.constprop.11+0xa6>
 800b0b0:	b570      	push	{r4, r5, r6, lr}
 800b0b2:	b084      	sub	sp, #16
 800b0b4:	460e      	mov	r6, r1
 800b0b6:	4604      	mov	r4, r0
 800b0b8:	ad02      	add	r5, sp, #8
 800b0ba:	4620      	mov	r0, r4
 800b0bc:	f7f9 feda 	bl	8004e74 <GUI_ALLOC_LockH>
 800b0c0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b0c2:	9001      	str	r0, [sp, #4]
 800b0c4:	07a2      	lsls	r2, r4, #30
 800b0c6:	d518      	bpl.n	800b0fa <_Findy1.constprop.11+0x4e>
 800b0c8:	c803      	ldmia	r0, {r0, r1}
 800b0ca:	e885 0003 	stmia.w	r5, {r0, r1}
 800b0ce:	4629      	mov	r1, r5
 800b0d0:	4630      	mov	r0, r6
 800b0d2:	f7fa fa29 	bl	8005528 <GUI_RectsIntersect>
 800b0d6:	b330      	cbz	r0, 800b126 <_Findy1.constprop.11+0x7a>
 800b0d8:	07e3      	lsls	r3, r4, #31
 800b0da:	9801      	ldr	r0, [sp, #4]
 800b0dc:	d415      	bmi.n	800b10a <_Findy1.constprop.11+0x5e>
 800b0de:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800b0e2:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b0e6:	429a      	cmp	r2, r3
 800b0e8:	dd25      	ble.n	800b136 <_Findy1.constprop.11+0x8a>
 800b0ea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800b0ee:	f9b6 2006 	ldrsh.w	r2, [r6, #6]
 800b0f2:	429a      	cmp	r2, r3
 800b0f4:	db01      	blt.n	800b0fa <_Findy1.constprop.11+0x4e>
 800b0f6:	3b01      	subs	r3, #1
 800b0f8:	80f3      	strh	r3, [r6, #6]
 800b0fa:	6a04      	ldr	r4, [r0, #32]
 800b0fc:	a801      	add	r0, sp, #4
 800b0fe:	f7f9 fecb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b102:	2c00      	cmp	r4, #0
 800b104:	d1d9      	bne.n	800b0ba <_Findy1.constprop.11+0xe>
 800b106:	b004      	add	sp, #16
 800b108:	bd70      	pop	{r4, r5, r6, pc}
 800b10a:	69c4      	ldr	r4, [r0, #28]
 800b10c:	2c00      	cmp	r4, #0
 800b10e:	d0f4      	beq.n	800b0fa <_Findy1.constprop.11+0x4e>
 800b110:	4620      	mov	r0, r4
 800b112:	462a      	mov	r2, r5
 800b114:	4631      	mov	r1, r6
 800b116:	f7ff fdb5 	bl	800ac84 <_Findy1>
 800b11a:	4620      	mov	r0, r4
 800b11c:	f7f9 fea0 	bl	8004e60 <GUI_ALLOC_h2p>
 800b120:	6a04      	ldr	r4, [r0, #32]
 800b122:	2c00      	cmp	r4, #0
 800b124:	d1f4      	bne.n	800b110 <_Findy1.constprop.11+0x64>
 800b126:	9801      	ldr	r0, [sp, #4]
 800b128:	6a04      	ldr	r4, [r0, #32]
 800b12a:	a801      	add	r0, sp, #4
 800b12c:	f7f9 feb4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b130:	2c00      	cmp	r4, #0
 800b132:	d1c2      	bne.n	800b0ba <_Findy1.constprop.11+0xe>
 800b134:	e7e7      	b.n	800b106 <_Findy1.constprop.11+0x5a>
 800b136:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b13a:	f9b6 2006 	ldrsh.w	r2, [r6, #6]
 800b13e:	429a      	cmp	r2, r3
 800b140:	dddb      	ble.n	800b0fa <_Findy1.constprop.11+0x4e>
 800b142:	6a04      	ldr	r4, [r0, #32]
 800b144:	80f3      	strh	r3, [r6, #6]
 800b146:	a801      	add	r0, sp, #4
 800b148:	f7f9 fea6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b14c:	2c00      	cmp	r4, #0
 800b14e:	d1b4      	bne.n	800b0ba <_Findy1.constprop.11+0xe>
 800b150:	e7d9      	b.n	800b106 <_Findy1.constprop.11+0x5a>
 800b152:	4770      	bx	lr

0800b154 <WM__PaintWinAndOverlays>:
 800b154:	b530      	push	{r4, r5, lr}
 800b156:	b083      	sub	sp, #12
 800b158:	4604      	mov	r4, r0
 800b15a:	f7f9 fe8b 	bl	8004e74 <GUI_ALLOC_LockH>
 800b15e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800b160:	9001      	str	r0, [sp, #4]
 800b162:	f640 0301 	movw	r3, #2049	; 0x801
 800b166:	4013      	ands	r3, r2
 800b168:	2b01      	cmp	r3, #1
 800b16a:	d00e      	beq.n	800b18a <WM__PaintWinAndOverlays+0x36>
 800b16c:	a801      	add	r0, sp, #4
 800b16e:	f7f9 fe93 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b172:	4620      	mov	r0, r4
 800b174:	f7f9 fe74 	bl	8004e60 <GUI_ALLOC_h2p>
 800b178:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800b17a:	4a1b      	ldr	r2, [pc, #108]	; (800b1e8 <WM__PaintWinAndOverlays+0x94>)
 800b17c:	4b1b      	ldr	r3, [pc, #108]	; (800b1ec <WM__PaintWinAndOverlays+0x98>)
 800b17e:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 800b182:	bf08      	it	eq
 800b184:	4613      	moveq	r3, r2
 800b186:	4620      	mov	r0, r4
 800b188:	4798      	blx	r3
 800b18a:	4b19      	ldr	r3, [pc, #100]	; (800b1f0 <WM__PaintWinAndOverlays+0x9c>)
 800b18c:	681b      	ldr	r3, [r3, #0]
 800b18e:	b90b      	cbnz	r3, 800b194 <WM__PaintWinAndOverlays+0x40>
 800b190:	b003      	add	sp, #12
 800b192:	bd30      	pop	{r4, r5, pc}
 800b194:	4620      	mov	r0, r4
 800b196:	f7ff fed7 	bl	800af48 <_PaintTransChildren>
 800b19a:	4620      	mov	r0, r4
 800b19c:	f7f9 fe60 	bl	8004e60 <GUI_ALLOC_h2p>
 800b1a0:	6985      	ldr	r5, [r0, #24]
 800b1a2:	6a04      	ldr	r4, [r0, #32]
 800b1a4:	2d00      	cmp	r5, #0
 800b1a6:	d0f3      	beq.n	800b190 <WM__PaintWinAndOverlays+0x3c>
 800b1a8:	b184      	cbz	r4, 800b1cc <WM__PaintWinAndOverlays+0x78>
 800b1aa:	4620      	mov	r0, r4
 800b1ac:	f7f9 fe58 	bl	8004e60 <GUI_ALLOC_h2p>
 800b1b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b1b2:	f003 0303 	and.w	r3, r3, #3
 800b1b6:	2b03      	cmp	r3, #3
 800b1b8:	d011      	beq.n	800b1de <WM__PaintWinAndOverlays+0x8a>
 800b1ba:	4620      	mov	r0, r4
 800b1bc:	f7ff fec4 	bl	800af48 <_PaintTransChildren>
 800b1c0:	4620      	mov	r0, r4
 800b1c2:	f7f9 fe4d 	bl	8004e60 <GUI_ALLOC_h2p>
 800b1c6:	6a04      	ldr	r4, [r0, #32]
 800b1c8:	2c00      	cmp	r4, #0
 800b1ca:	d1ee      	bne.n	800b1aa <WM__PaintWinAndOverlays+0x56>
 800b1cc:	4628      	mov	r0, r5
 800b1ce:	f7f9 fe47 	bl	8004e60 <GUI_ALLOC_h2p>
 800b1d2:	6985      	ldr	r5, [r0, #24]
 800b1d4:	6a04      	ldr	r4, [r0, #32]
 800b1d6:	2d00      	cmp	r5, #0
 800b1d8:	d1e6      	bne.n	800b1a8 <WM__PaintWinAndOverlays+0x54>
 800b1da:	b003      	add	sp, #12
 800b1dc:	bd30      	pop	{r4, r5, pc}
 800b1de:	4620      	mov	r0, r4
 800b1e0:	f7ff fe54 	bl	800ae8c <_Paint1Trans>
 800b1e4:	e7e9      	b.n	800b1ba <WM__PaintWinAndOverlays+0x66>
 800b1e6:	bf00      	nop
 800b1e8:	0800c971 	.word	0x0800c971
 800b1ec:	080155bd 	.word	0x080155bd
 800b1f0:	2001c210 	.word	0x2001c210

0800b1f4 <_cbPaintMemDev>:
 800b1f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b1f8:	4d19      	ldr	r5, [pc, #100]	; (800b260 <_cbPaintMemDev+0x6c>)
 800b1fa:	682b      	ldr	r3, [r5, #0]
 800b1fc:	b082      	sub	sp, #8
 800b1fe:	4681      	mov	r9, r0
 800b200:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b202:	f7f9 fe37 	bl	8004e74 <GUI_ALLOC_LockH>
 800b206:	682a      	ldr	r2, [r5, #0]
 800b208:	ac02      	add	r4, sp, #8
 800b20a:	3208      	adds	r2, #8
 800b20c:	4603      	mov	r3, r0
 800b20e:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b212:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b216:	f103 0208 	add.w	r2, r3, #8
 800b21a:	f9b3 a008 	ldrsh.w	sl, [r3, #8]
 800b21e:	f9b3 800a 	ldrsh.w	r8, [r3, #10]
 800b222:	f9b3 700c 	ldrsh.w	r7, [r3, #12]
 800b226:	f9b3 600e 	ldrsh.w	r6, [r3, #14]
 800b22a:	e882 0003 	stmia.w	r2, {r0, r1}
 800b22e:	4620      	mov	r0, r4
 800b230:	f7f9 fe32 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b234:	f8d9 0000 	ldr.w	r0, [r9]
 800b238:	f7ff ff8c 	bl	800b154 <WM__PaintWinAndOverlays>
 800b23c:	682b      	ldr	r3, [r5, #0]
 800b23e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b240:	f7f9 fe18 	bl	8004e74 <GUI_ALLOC_LockH>
 800b244:	4603      	mov	r3, r0
 800b246:	4620      	mov	r0, r4
 800b248:	f8a3 a008 	strh.w	sl, [r3, #8]
 800b24c:	f8a3 800a 	strh.w	r8, [r3, #10]
 800b250:	819f      	strh	r7, [r3, #12]
 800b252:	81de      	strh	r6, [r3, #14]
 800b254:	9301      	str	r3, [sp, #4]
 800b256:	f7f9 fe1f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b25a:	b002      	add	sp, #8
 800b25c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b260:	20000018 	.word	0x20000018

0800b264 <_Invalidate1Abs>:
 800b264:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b266:	b085      	sub	sp, #20
 800b268:	4616      	mov	r6, r2
 800b26a:	460c      	mov	r4, r1
 800b26c:	4605      	mov	r5, r0
 800b26e:	f7f9 fdf7 	bl	8004e60 <GUI_ALLOC_h2p>
 800b272:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b274:	9001      	str	r0, [sp, #4]
 800b276:	079a      	lsls	r2, r3, #30
 800b278:	d505      	bpl.n	800b286 <_Invalidate1Abs+0x22>
 800b27a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b27e:	f9b4 2000 	ldrsh.w	r2, [r4]
 800b282:	4291      	cmp	r1, r2
 800b284:	da01      	bge.n	800b28a <_Invalidate1Abs+0x26>
 800b286:	b005      	add	sp, #20
 800b288:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b28a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b28e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b292:	4291      	cmp	r1, r2
 800b294:	dcf7      	bgt.n	800b286 <_Invalidate1Abs+0x22>
 800b296:	f640 0201 	movw	r2, #2049	; 0x801
 800b29a:	401a      	ands	r2, r3
 800b29c:	2a01      	cmp	r2, #1
 800b29e:	d0f2      	beq.n	800b286 <_Invalidate1Abs+0x22>
 800b2a0:	4628      	mov	r0, r5
 800b2a2:	f7f9 fde7 	bl	8004e74 <GUI_ALLOC_LockH>
 800b2a6:	af02      	add	r7, sp, #8
 800b2a8:	4603      	mov	r3, r0
 800b2aa:	4602      	mov	r2, r0
 800b2ac:	4621      	mov	r1, r4
 800b2ae:	4638      	mov	r0, r7
 800b2b0:	9301      	str	r3, [sp, #4]
 800b2b2:	f7fb fbd9 	bl	8006a68 <GUI__IntersectRects>
 800b2b6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800b2ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b2be:	429a      	cmp	r2, r3
 800b2c0:	dc31      	bgt.n	800b326 <_Invalidate1Abs+0xc2>
 800b2c2:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800b2c6:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b2ca:	429a      	cmp	r2, r3
 800b2cc:	dc2b      	bgt.n	800b326 <_Invalidate1Abs+0xc2>
 800b2ce:	9a01      	ldr	r2, [sp, #4]
 800b2d0:	6a94      	ldr	r4, [r2, #40]	; 0x28
 800b2d2:	f244 0320 	movw	r3, #16416	; 0x4020
 800b2d6:	4023      	ands	r3, r4
 800b2d8:	bb53      	cbnz	r3, 800b330 <_Invalidate1Abs+0xcc>
 800b2da:	f8df e070 	ldr.w	lr, [pc, #112]	; 800b34c <_Invalidate1Abs+0xe8>
 800b2de:	e897 0003 	ldmia.w	r7, {r0, r1}
 800b2e2:	f8be 3000 	ldrh.w	r3, [lr]
 800b2e6:	4326      	orrs	r6, r4
 800b2e8:	3301      	adds	r3, #1
 800b2ea:	f102 0408 	add.w	r4, r2, #8
 800b2ee:	e884 0003 	stmia.w	r4, {r0, r1}
 800b2f2:	f8ae 3000 	strh.w	r3, [lr]
 800b2f6:	6296      	str	r6, [r2, #40]	; 0x28
 800b2f8:	e000      	b.n	800b2fc <_Invalidate1Abs+0x98>
 800b2fa:	461d      	mov	r5, r3
 800b2fc:	4628      	mov	r0, r5
 800b2fe:	f7f9 fdaf 	bl	8004e60 <GUI_ALLOC_h2p>
 800b302:	6983      	ldr	r3, [r0, #24]
 800b304:	2b00      	cmp	r3, #0
 800b306:	d1f8      	bne.n	800b2fa <_Invalidate1Abs+0x96>
 800b308:	4b0e      	ldr	r3, [pc, #56]	; (800b344 <_Invalidate1Abs+0xe0>)
 800b30a:	681a      	ldr	r2, [r3, #0]
 800b30c:	4295      	cmp	r5, r2
 800b30e:	d016      	beq.n	800b33e <_Invalidate1Abs+0xda>
 800b310:	685b      	ldr	r3, [r3, #4]
 800b312:	42ab      	cmp	r3, r5
 800b314:	bf0c      	ite	eq
 800b316:	2302      	moveq	r3, #2
 800b318:	2300      	movne	r3, #0
 800b31a:	4a0b      	ldr	r2, [pc, #44]	; (800b348 <_Invalidate1Abs+0xe4>)
 800b31c:	6811      	ldr	r1, [r2, #0]
 800b31e:	430b      	orrs	r3, r1
 800b320:	6013      	str	r3, [r2, #0]
 800b322:	f7fb f85f 	bl	80063e4 <GUI_SignalEvent>
 800b326:	a801      	add	r0, sp, #4
 800b328:	f7f9 fdb6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b32c:	b005      	add	sp, #20
 800b32e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b330:	f102 0108 	add.w	r1, r2, #8
 800b334:	4608      	mov	r0, r1
 800b336:	463a      	mov	r2, r7
 800b338:	f7fa f82c 	bl	8005394 <GUI_MergeRect>
 800b33c:	e7f3      	b.n	800b326 <_Invalidate1Abs+0xc2>
 800b33e:	2301      	movs	r3, #1
 800b340:	e7eb      	b.n	800b31a <_Invalidate1Abs+0xb6>
 800b342:	bf00      	nop
 800b344:	2001c1c0 	.word	0x2001c1c0
 800b348:	2001c1e8 	.word	0x2001c1e8
 800b34c:	2001c1d8 	.word	0x2001c1d8

0800b350 <WM__ActivateClipRect>:
 800b350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b354:	4f45      	ldr	r7, [pc, #276]	; (800b46c <WM__ActivateClipRect+0x11c>)
 800b356:	683b      	ldr	r3, [r7, #0]
 800b358:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800b35c:	b086      	sub	sp, #24
 800b35e:	2a00      	cmp	r2, #0
 800b360:	d139      	bne.n	800b3d6 <WM__ActivateClipRect+0x86>
 800b362:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b364:	f8df 8108 	ldr.w	r8, [pc, #264]	; 800b470 <WM__ActivateClipRect+0x120>
 800b368:	f7f9 fd84 	bl	8004e74 <GUI_ALLOC_LockH>
 800b36c:	4603      	mov	r3, r0
 800b36e:	c803      	ldmia	r0, {r0, r1}
 800b370:	ae02      	add	r6, sp, #8
 800b372:	e886 0003 	stmia.w	r6, {r0, r1}
 800b376:	4668      	mov	r0, sp
 800b378:	9300      	str	r3, [sp, #0]
 800b37a:	f7f9 fd8d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b37e:	f8d8 4000 	ldr.w	r4, [r8]
 800b382:	2c00      	cmp	r4, #0
 800b384:	d14e      	bne.n	800b424 <WM__ActivateClipRect+0xd4>
 800b386:	683c      	ldr	r4, [r7, #0]
 800b388:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b38a:	2b00      	cmp	r3, #0
 800b38c:	d065      	beq.n	800b45a <WM__ActivateClipRect+0x10a>
 800b38e:	6818      	ldr	r0, [r3, #0]
 800b390:	6859      	ldr	r1, [r3, #4]
 800b392:	f8d8 2000 	ldr.w	r2, [r8]
 800b396:	ad04      	add	r5, sp, #16
 800b398:	462b      	mov	r3, r5
 800b39a:	c303      	stmia	r3!, {r0, r1}
 800b39c:	b1ca      	cbz	r2, 800b3d2 <WM__ActivateClipRect+0x82>
 800b39e:	4610      	mov	r0, r2
 800b3a0:	f7f9 fd68 	bl	8004e74 <GUI_ALLOC_LockH>
 800b3a4:	ac06      	add	r4, sp, #24
 800b3a6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b3aa:	f844 0d14 	str.w	r0, [r4, #-20]!
 800b3ae:	f9b0 1000 	ldrsh.w	r1, [r0]
 800b3b2:	4628      	mov	r0, r5
 800b3b4:	f7fa f81c 	bl	80053f0 <GUI_MoveRect>
 800b3b8:	4620      	mov	r0, r4
 800b3ba:	f7f9 fd6d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b3be:	4628      	mov	r0, r5
 800b3c0:	4631      	mov	r1, r6
 800b3c2:	f7fb fb33 	bl	8006a2c <GUI__IntersectRect>
 800b3c6:	4628      	mov	r0, r5
 800b3c8:	f009 fd9e 	bl	8014f08 <LCD_SetClipRectEx>
 800b3cc:	b006      	add	sp, #24
 800b3ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3d2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800b3d4:	e7e3      	b.n	800b39e <WM__ActivateClipRect+0x4e>
 800b3d6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800b3d8:	2a00      	cmp	r2, #0
 800b3da:	d042      	beq.n	800b462 <WM__ActivateClipRect+0x112>
 800b3dc:	4c24      	ldr	r4, [pc, #144]	; (800b470 <WM__ActivateClipRect+0x120>)
 800b3de:	6810      	ldr	r0, [r2, #0]
 800b3e0:	6851      	ldr	r1, [r2, #4]
 800b3e2:	6824      	ldr	r4, [r4, #0]
 800b3e4:	ad04      	add	r5, sp, #16
 800b3e6:	462a      	mov	r2, r5
 800b3e8:	c203      	stmia	r2!, {r0, r1}
 800b3ea:	b1cc      	cbz	r4, 800b420 <WM__ActivateClipRect+0xd0>
 800b3ec:	4620      	mov	r0, r4
 800b3ee:	f7f9 fd41 	bl	8004e74 <GUI_ALLOC_LockH>
 800b3f2:	ac06      	add	r4, sp, #24
 800b3f4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b3f8:	f844 0d10 	str.w	r0, [r4, #-16]!
 800b3fc:	f9b0 1000 	ldrsh.w	r1, [r0]
 800b400:	4628      	mov	r0, r5
 800b402:	f7f9 fff5 	bl	80053f0 <GUI_MoveRect>
 800b406:	4620      	mov	r0, r4
 800b408:	f7f9 fd46 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b40c:	4919      	ldr	r1, [pc, #100]	; (800b474 <WM__ActivateClipRect+0x124>)
 800b40e:	4628      	mov	r0, r5
 800b410:	f7fb fb0c 	bl	8006a2c <GUI__IntersectRect>
 800b414:	4628      	mov	r0, r5
 800b416:	f009 fd77 	bl	8014f08 <LCD_SetClipRectEx>
 800b41a:	b006      	add	sp, #24
 800b41c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b420:	6c9c      	ldr	r4, [r3, #72]	; 0x48
 800b422:	e7e3      	b.n	800b3ec <WM__ActivateClipRect+0x9c>
 800b424:	ad04      	add	r5, sp, #16
 800b426:	e007      	b.n	800b438 <WM__ActivateClipRect+0xe8>
 800b428:	f7fb fb00 	bl	8006a2c <GUI__IntersectRect>
 800b42c:	9b04      	ldr	r3, [sp, #16]
 800b42e:	699c      	ldr	r4, [r3, #24]
 800b430:	4628      	mov	r0, r5
 800b432:	b17c      	cbz	r4, 800b454 <WM__ActivateClipRect+0x104>
 800b434:	f7f9 fd30 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b438:	4620      	mov	r0, r4
 800b43a:	f7f9 fd1b 	bl	8004e74 <GUI_ALLOC_LockH>
 800b43e:	4603      	mov	r3, r0
 800b440:	4601      	mov	r1, r0
 800b442:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800b444:	9304      	str	r3, [sp, #16]
 800b446:	0793      	lsls	r3, r2, #30
 800b448:	4630      	mov	r0, r6
 800b44a:	d4ed      	bmi.n	800b428 <WM__ActivateClipRect+0xd8>
 800b44c:	4628      	mov	r0, r5
 800b44e:	f7f9 fd23 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b452:	e798      	b.n	800b386 <WM__ActivateClipRect+0x36>
 800b454:	f7f9 fd20 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b458:	e795      	b.n	800b386 <WM__ActivateClipRect+0x36>
 800b45a:	4630      	mov	r0, r6
 800b45c:	f009 fd54 	bl	8014f08 <LCD_SetClipRectEx>
 800b460:	e7b4      	b.n	800b3cc <WM__ActivateClipRect+0x7c>
 800b462:	4804      	ldr	r0, [pc, #16]	; (800b474 <WM__ActivateClipRect+0x124>)
 800b464:	f009 fd50 	bl	8014f08 <LCD_SetClipRectEx>
 800b468:	e7b0      	b.n	800b3cc <WM__ActivateClipRect+0x7c>
 800b46a:	bf00      	nop
 800b46c:	20000018 	.word	0x20000018
 800b470:	2001c1bc 	.word	0x2001c1bc
 800b474:	20000564 	.word	0x20000564

0800b478 <WM__InsertWindowIntoList>:
 800b478:	b901      	cbnz	r1, 800b47c <WM__InsertWindowIntoList+0x4>
 800b47a:	4770      	bx	lr
 800b47c:	b570      	push	{r4, r5, r6, lr}
 800b47e:	b084      	sub	sp, #16
 800b480:	460c      	mov	r4, r1
 800b482:	4605      	mov	r5, r0
 800b484:	f7f9 fcf6 	bl	8004e74 <GUI_ALLOC_LockH>
 800b488:	4603      	mov	r3, r0
 800b48a:	2200      	movs	r2, #0
 800b48c:	6184      	str	r4, [r0, #24]
 800b48e:	4620      	mov	r0, r4
 800b490:	621a      	str	r2, [r3, #32]
 800b492:	9301      	str	r3, [sp, #4]
 800b494:	f7f9 fcee 	bl	8004e74 <GUI_ALLOC_LockH>
 800b498:	69c4      	ldr	r4, [r0, #28]
 800b49a:	9002      	str	r0, [sp, #8]
 800b49c:	2c00      	cmp	r4, #0
 800b49e:	d02c      	beq.n	800b4fa <WM__InsertWindowIntoList+0x82>
 800b4a0:	9b01      	ldr	r3, [sp, #4]
 800b4a2:	4620      	mov	r0, r4
 800b4a4:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800b4a6:	f7f9 fce5 	bl	8004e74 <GUI_ALLOC_LockH>
 800b4aa:	f006 0608 	and.w	r6, r6, #8
 800b4ae:	9003      	str	r0, [sp, #12]
 800b4b0:	2e00      	cmp	r6, #0
 800b4b2:	d12b      	bne.n	800b50c <WM__InsertWindowIntoList+0x94>
 800b4b4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b4b6:	071a      	lsls	r2, r3, #28
 800b4b8:	d43d      	bmi.n	800b536 <WM__InsertWindowIntoList+0xbe>
 800b4ba:	a802      	add	r0, sp, #8
 800b4bc:	f7f9 fcec 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b4c0:	a803      	add	r0, sp, #12
 800b4c2:	f7f9 fce9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	f7f9 fcca 	bl	8004e60 <GUI_ALLOC_h2p>
 800b4cc:	6a04      	ldr	r4, [r0, #32]
 800b4ce:	9003      	str	r0, [sp, #12]
 800b4d0:	b924      	cbnz	r4, 800b4dc <WM__InsertWindowIntoList+0x64>
 800b4d2:	e02e      	b.n	800b532 <WM__InsertWindowIntoList+0xba>
 800b4d4:	6a04      	ldr	r4, [r0, #32]
 800b4d6:	9003      	str	r0, [sp, #12]
 800b4d8:	2c00      	cmp	r4, #0
 800b4da:	d02a      	beq.n	800b532 <WM__InsertWindowIntoList+0xba>
 800b4dc:	4620      	mov	r0, r4
 800b4de:	f7f9 fcbf 	bl	8004e60 <GUI_ALLOC_h2p>
 800b4e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b4e4:	071b      	lsls	r3, r3, #28
 800b4e6:	d5f5      	bpl.n	800b4d4 <WM__InsertWindowIntoList+0x5c>
 800b4e8:	9a03      	ldr	r2, [sp, #12]
 800b4ea:	9b01      	ldr	r3, [sp, #4]
 800b4ec:	6215      	str	r5, [r2, #32]
 800b4ee:	621c      	str	r4, [r3, #32]
 800b4f0:	a801      	add	r0, sp, #4
 800b4f2:	f7f9 fcd1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b4f6:	b004      	add	sp, #16
 800b4f8:	bd70      	pop	{r4, r5, r6, pc}
 800b4fa:	61c5      	str	r5, [r0, #28]
 800b4fc:	a801      	add	r0, sp, #4
 800b4fe:	f7f9 fccb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b502:	a802      	add	r0, sp, #8
 800b504:	f7f9 fcc8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b508:	b004      	add	sp, #16
 800b50a:	bd70      	pop	{r4, r5, r6, pc}
 800b50c:	a802      	add	r0, sp, #8
 800b50e:	f7f9 fcc3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b512:	a803      	add	r0, sp, #12
 800b514:	f7f9 fcc0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b518:	4620      	mov	r0, r4
 800b51a:	f7f9 fca1 	bl	8004e60 <GUI_ALLOC_h2p>
 800b51e:	6a02      	ldr	r2, [r0, #32]
 800b520:	9003      	str	r0, [sp, #12]
 800b522:	b132      	cbz	r2, 800b532 <WM__InsertWindowIntoList+0xba>
 800b524:	4610      	mov	r0, r2
 800b526:	f7f9 fc9b 	bl	8004e60 <GUI_ALLOC_h2p>
 800b52a:	6a02      	ldr	r2, [r0, #32]
 800b52c:	9003      	str	r0, [sp, #12]
 800b52e:	2a00      	cmp	r2, #0
 800b530:	d1f8      	bne.n	800b524 <WM__InsertWindowIntoList+0xac>
 800b532:	6205      	str	r5, [r0, #32]
 800b534:	e7dc      	b.n	800b4f0 <WM__InsertWindowIntoList+0x78>
 800b536:	9a01      	ldr	r2, [sp, #4]
 800b538:	9b02      	ldr	r3, [sp, #8]
 800b53a:	6214      	str	r4, [r2, #32]
 800b53c:	a801      	add	r0, sp, #4
 800b53e:	61dd      	str	r5, [r3, #28]
 800b540:	f7f9 fcaa 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b544:	a802      	add	r0, sp, #8
 800b546:	f7f9 fca7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b54a:	a803      	add	r0, sp, #12
 800b54c:	f7f9 fca4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b550:	e7da      	b.n	800b508 <WM__InsertWindowIntoList+0x90>
 800b552:	bf00      	nop

0800b554 <WM__RemoveWindowFromList>:
 800b554:	b570      	push	{r4, r5, r6, lr}
 800b556:	4604      	mov	r4, r0
 800b558:	f7f9 fc82 	bl	8004e60 <GUI_ALLOC_h2p>
 800b55c:	4605      	mov	r5, r0
 800b55e:	6980      	ldr	r0, [r0, #24]
 800b560:	b900      	cbnz	r0, 800b564 <WM__RemoveWindowFromList+0x10>
 800b562:	bd70      	pop	{r4, r5, r6, pc}
 800b564:	f7f9 fc7c 	bl	8004e60 <GUI_ALLOC_h2p>
 800b568:	69c3      	ldr	r3, [r0, #28]
 800b56a:	429c      	cmp	r4, r3
 800b56c:	4606      	mov	r6, r0
 800b56e:	d00c      	beq.n	800b58a <WM__RemoveWindowFromList+0x36>
 800b570:	b913      	cbnz	r3, 800b578 <WM__RemoveWindowFromList+0x24>
 800b572:	e010      	b.n	800b596 <WM__RemoveWindowFromList+0x42>
 800b574:	2b00      	cmp	r3, #0
 800b576:	d0f4      	beq.n	800b562 <WM__RemoveWindowFromList+0xe>
 800b578:	4618      	mov	r0, r3
 800b57a:	f7f9 fc71 	bl	8004e60 <GUI_ALLOC_h2p>
 800b57e:	6a03      	ldr	r3, [r0, #32]
 800b580:	429c      	cmp	r4, r3
 800b582:	d1f7      	bne.n	800b574 <WM__RemoveWindowFromList+0x20>
 800b584:	6a2b      	ldr	r3, [r5, #32]
 800b586:	6203      	str	r3, [r0, #32]
 800b588:	bd70      	pop	{r4, r5, r6, pc}
 800b58a:	4620      	mov	r0, r4
 800b58c:	f7f9 fc68 	bl	8004e60 <GUI_ALLOC_h2p>
 800b590:	6a03      	ldr	r3, [r0, #32]
 800b592:	61f3      	str	r3, [r6, #28]
 800b594:	bd70      	pop	{r4, r5, r6, pc}
 800b596:	bd70      	pop	{r4, r5, r6, pc}

0800b598 <WM__IsWindow>:
 800b598:	4b0a      	ldr	r3, [pc, #40]	; (800b5c4 <WM__IsWindow+0x2c>)
 800b59a:	681b      	ldr	r3, [r3, #0]
 800b59c:	b183      	cbz	r3, 800b5c0 <WM__IsWindow+0x28>
 800b59e:	4283      	cmp	r3, r0
 800b5a0:	b510      	push	{r4, lr}
 800b5a2:	4604      	mov	r4, r0
 800b5a4:	d102      	bne.n	800b5ac <WM__IsWindow+0x14>
 800b5a6:	e009      	b.n	800b5bc <WM__IsWindow+0x24>
 800b5a8:	429c      	cmp	r4, r3
 800b5aa:	d007      	beq.n	800b5bc <WM__IsWindow+0x24>
 800b5ac:	4618      	mov	r0, r3
 800b5ae:	f7f9 fc57 	bl	8004e60 <GUI_ALLOC_h2p>
 800b5b2:	6943      	ldr	r3, [r0, #20]
 800b5b4:	2b00      	cmp	r3, #0
 800b5b6:	d1f7      	bne.n	800b5a8 <WM__IsWindow+0x10>
 800b5b8:	2000      	movs	r0, #0
 800b5ba:	bd10      	pop	{r4, pc}
 800b5bc:	2001      	movs	r0, #1
 800b5be:	bd10      	pop	{r4, pc}
 800b5c0:	2000      	movs	r0, #0
 800b5c2:	4770      	bx	lr
 800b5c4:	2001c1dc 	.word	0x2001c1dc

0800b5c8 <WM__InvalidateDrawAndDescs>:
 800b5c8:	b900      	cbnz	r0, 800b5cc <WM__InvalidateDrawAndDescs+0x4>
 800b5ca:	4770      	bx	lr
 800b5cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5d0:	b08f      	sub	sp, #60	; 0x3c
 800b5d2:	4604      	mov	r4, r0
 800b5d4:	f7f9 fc4e 	bl	8004e74 <GUI_ALLOC_LockH>
 800b5d8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b5da:	9005      	str	r0, [sp, #20]
 800b5dc:	079a      	lsls	r2, r3, #30
 800b5de:	f140 813c 	bpl.w	800b85a <WM__InvalidateDrawAndDescs+0x292>
 800b5e2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b5e4:	b140      	cbz	r0, 800b5f8 <WM__InvalidateDrawAndDescs+0x30>
 800b5e6:	4ba0      	ldr	r3, [pc, #640]	; (800b868 <WM__InvalidateDrawAndDescs+0x2a0>)
 800b5e8:	681b      	ldr	r3, [r3, #0]
 800b5ea:	429c      	cmp	r4, r3
 800b5ec:	d004      	beq.n	800b5f8 <WM__InvalidateDrawAndDescs+0x30>
 800b5ee:	f009 fdf5 	bl	80151dc <GUI_MEMDEV_Delete>
 800b5f2:	9b05      	ldr	r3, [sp, #20]
 800b5f4:	2200      	movs	r2, #0
 800b5f6:	625a      	str	r2, [r3, #36]	; 0x24
 800b5f8:	4620      	mov	r0, r4
 800b5fa:	f001 ff2d 	bl	800d458 <WM_GetFirstChild>
 800b5fe:	9003      	str	r0, [sp, #12]
 800b600:	2800      	cmp	r0, #0
 800b602:	f000 812a 	beq.w	800b85a <WM__InvalidateDrawAndDescs+0x292>
 800b606:	f8df 8260 	ldr.w	r8, [pc, #608]	; 800b868 <WM__InvalidateDrawAndDescs+0x2a0>
 800b60a:	9803      	ldr	r0, [sp, #12]
 800b60c:	f7f9 fc32 	bl	8004e74 <GUI_ALLOC_LockH>
 800b610:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b612:	9006      	str	r0, [sp, #24]
 800b614:	079b      	lsls	r3, r3, #30
 800b616:	f140 8115 	bpl.w	800b844 <WM__InvalidateDrawAndDescs+0x27c>
 800b61a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b61c:	b148      	cbz	r0, 800b632 <WM__InvalidateDrawAndDescs+0x6a>
 800b61e:	f8d8 3000 	ldr.w	r3, [r8]
 800b622:	9a03      	ldr	r2, [sp, #12]
 800b624:	4293      	cmp	r3, r2
 800b626:	d004      	beq.n	800b632 <WM__InvalidateDrawAndDescs+0x6a>
 800b628:	f009 fdd8 	bl	80151dc <GUI_MEMDEV_Delete>
 800b62c:	9b06      	ldr	r3, [sp, #24]
 800b62e:	2200      	movs	r2, #0
 800b630:	625a      	str	r2, [r3, #36]	; 0x24
 800b632:	9803      	ldr	r0, [sp, #12]
 800b634:	f001 ff10 	bl	800d458 <WM_GetFirstChild>
 800b638:	9002      	str	r0, [sp, #8]
 800b63a:	2800      	cmp	r0, #0
 800b63c:	f000 8102 	beq.w	800b844 <WM__InvalidateDrawAndDescs+0x27c>
 800b640:	9802      	ldr	r0, [sp, #8]
 800b642:	f7f9 fc17 	bl	8004e74 <GUI_ALLOC_LockH>
 800b646:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b648:	9007      	str	r0, [sp, #28]
 800b64a:	079f      	lsls	r7, r3, #30
 800b64c:	f140 80ef 	bpl.w	800b82e <WM__InvalidateDrawAndDescs+0x266>
 800b650:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b652:	b148      	cbz	r0, 800b668 <WM__InvalidateDrawAndDescs+0xa0>
 800b654:	f8d8 3000 	ldr.w	r3, [r8]
 800b658:	9a02      	ldr	r2, [sp, #8]
 800b65a:	4293      	cmp	r3, r2
 800b65c:	d004      	beq.n	800b668 <WM__InvalidateDrawAndDescs+0xa0>
 800b65e:	f009 fdbd 	bl	80151dc <GUI_MEMDEV_Delete>
 800b662:	9b07      	ldr	r3, [sp, #28]
 800b664:	2200      	movs	r2, #0
 800b666:	625a      	str	r2, [r3, #36]	; 0x24
 800b668:	9802      	ldr	r0, [sp, #8]
 800b66a:	f001 fef5 	bl	800d458 <WM_GetFirstChild>
 800b66e:	4683      	mov	fp, r0
 800b670:	2800      	cmp	r0, #0
 800b672:	f000 80dc 	beq.w	800b82e <WM__InvalidateDrawAndDescs+0x266>
 800b676:	4658      	mov	r0, fp
 800b678:	f7f9 fbfc 	bl	8004e74 <GUI_ALLOC_LockH>
 800b67c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b67e:	9008      	str	r0, [sp, #32]
 800b680:	079e      	lsls	r6, r3, #30
 800b682:	f140 80c8 	bpl.w	800b816 <WM__InvalidateDrawAndDescs+0x24e>
 800b686:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b688:	b140      	cbz	r0, 800b69c <WM__InvalidateDrawAndDescs+0xd4>
 800b68a:	f8d8 3000 	ldr.w	r3, [r8]
 800b68e:	455b      	cmp	r3, fp
 800b690:	d004      	beq.n	800b69c <WM__InvalidateDrawAndDescs+0xd4>
 800b692:	f009 fda3 	bl	80151dc <GUI_MEMDEV_Delete>
 800b696:	9b08      	ldr	r3, [sp, #32]
 800b698:	2200      	movs	r2, #0
 800b69a:	625a      	str	r2, [r3, #36]	; 0x24
 800b69c:	4658      	mov	r0, fp
 800b69e:	f001 fedb 	bl	800d458 <WM_GetFirstChild>
 800b6a2:	4682      	mov	sl, r0
 800b6a4:	2800      	cmp	r0, #0
 800b6a6:	f000 80b6 	beq.w	800b816 <WM__InvalidateDrawAndDescs+0x24e>
 800b6aa:	4650      	mov	r0, sl
 800b6ac:	f7f9 fbe2 	bl	8004e74 <GUI_ALLOC_LockH>
 800b6b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b6b2:	9009      	str	r0, [sp, #36]	; 0x24
 800b6b4:	079d      	lsls	r5, r3, #30
 800b6b6:	f140 80a2 	bpl.w	800b7fe <WM__InvalidateDrawAndDescs+0x236>
 800b6ba:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b6bc:	b140      	cbz	r0, 800b6d0 <WM__InvalidateDrawAndDescs+0x108>
 800b6be:	f8d8 3000 	ldr.w	r3, [r8]
 800b6c2:	4553      	cmp	r3, sl
 800b6c4:	d004      	beq.n	800b6d0 <WM__InvalidateDrawAndDescs+0x108>
 800b6c6:	f009 fd89 	bl	80151dc <GUI_MEMDEV_Delete>
 800b6ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b6cc:	2200      	movs	r2, #0
 800b6ce:	625a      	str	r2, [r3, #36]	; 0x24
 800b6d0:	4650      	mov	r0, sl
 800b6d2:	f001 fec1 	bl	800d458 <WM_GetFirstChild>
 800b6d6:	9001      	str	r0, [sp, #4]
 800b6d8:	2800      	cmp	r0, #0
 800b6da:	f000 8090 	beq.w	800b7fe <WM__InvalidateDrawAndDescs+0x236>
 800b6de:	9801      	ldr	r0, [sp, #4]
 800b6e0:	f7f9 fbc8 	bl	8004e74 <GUI_ALLOC_LockH>
 800b6e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b6e6:	900a      	str	r0, [sp, #40]	; 0x28
 800b6e8:	079c      	lsls	r4, r3, #30
 800b6ea:	d57d      	bpl.n	800b7e8 <WM__InvalidateDrawAndDescs+0x220>
 800b6ec:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b6ee:	b148      	cbz	r0, 800b704 <WM__InvalidateDrawAndDescs+0x13c>
 800b6f0:	f8d8 3000 	ldr.w	r3, [r8]
 800b6f4:	9a01      	ldr	r2, [sp, #4]
 800b6f6:	4293      	cmp	r3, r2
 800b6f8:	d004      	beq.n	800b704 <WM__InvalidateDrawAndDescs+0x13c>
 800b6fa:	f009 fd6f 	bl	80151dc <GUI_MEMDEV_Delete>
 800b6fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b700:	2200      	movs	r2, #0
 800b702:	625a      	str	r2, [r3, #36]	; 0x24
 800b704:	9801      	ldr	r0, [sp, #4]
 800b706:	f001 fea7 	bl	800d458 <WM_GetFirstChild>
 800b70a:	4606      	mov	r6, r0
 800b70c:	2800      	cmp	r0, #0
 800b70e:	d06b      	beq.n	800b7e8 <WM__InvalidateDrawAndDescs+0x220>
 800b710:	4630      	mov	r0, r6
 800b712:	f7f9 fbaf 	bl	8004e74 <GUI_ALLOC_LockH>
 800b716:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b718:	900b      	str	r0, [sp, #44]	; 0x2c
 800b71a:	0799      	lsls	r1, r3, #30
 800b71c:	d55b      	bpl.n	800b7d6 <WM__InvalidateDrawAndDescs+0x20e>
 800b71e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b720:	b140      	cbz	r0, 800b734 <WM__InvalidateDrawAndDescs+0x16c>
 800b722:	f8d8 3000 	ldr.w	r3, [r8]
 800b726:	42b3      	cmp	r3, r6
 800b728:	d004      	beq.n	800b734 <WM__InvalidateDrawAndDescs+0x16c>
 800b72a:	f009 fd57 	bl	80151dc <GUI_MEMDEV_Delete>
 800b72e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b730:	2200      	movs	r2, #0
 800b732:	625a      	str	r2, [r3, #36]	; 0x24
 800b734:	4630      	mov	r0, r6
 800b736:	f001 fe8f 	bl	800d458 <WM_GetFirstChild>
 800b73a:	4605      	mov	r5, r0
 800b73c:	2800      	cmp	r0, #0
 800b73e:	d04a      	beq.n	800b7d6 <WM__InvalidateDrawAndDescs+0x20e>
 800b740:	4628      	mov	r0, r5
 800b742:	f7f9 fb97 	bl	8004e74 <GUI_ALLOC_LockH>
 800b746:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b748:	900c      	str	r0, [sp, #48]	; 0x30
 800b74a:	079a      	lsls	r2, r3, #30
 800b74c:	d53a      	bpl.n	800b7c4 <WM__InvalidateDrawAndDescs+0x1fc>
 800b74e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b750:	b140      	cbz	r0, 800b764 <WM__InvalidateDrawAndDescs+0x19c>
 800b752:	f8d8 3000 	ldr.w	r3, [r8]
 800b756:	42ab      	cmp	r3, r5
 800b758:	d004      	beq.n	800b764 <WM__InvalidateDrawAndDescs+0x19c>
 800b75a:	f009 fd3f 	bl	80151dc <GUI_MEMDEV_Delete>
 800b75e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b760:	2200      	movs	r2, #0
 800b762:	625a      	str	r2, [r3, #36]	; 0x24
 800b764:	4628      	mov	r0, r5
 800b766:	f001 fe77 	bl	800d458 <WM_GetFirstChild>
 800b76a:	f04f 0900 	mov.w	r9, #0
 800b76e:	4604      	mov	r4, r0
 800b770:	b340      	cbz	r0, 800b7c4 <WM__InvalidateDrawAndDescs+0x1fc>
 800b772:	4620      	mov	r0, r4
 800b774:	f7f9 fb7e 	bl	8004e74 <GUI_ALLOC_LockH>
 800b778:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b77a:	900d      	str	r0, [sp, #52]	; 0x34
 800b77c:	079b      	lsls	r3, r3, #30
 800b77e:	d518      	bpl.n	800b7b2 <WM__InvalidateDrawAndDescs+0x1ea>
 800b780:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b782:	b140      	cbz	r0, 800b796 <WM__InvalidateDrawAndDescs+0x1ce>
 800b784:	f8d8 3000 	ldr.w	r3, [r8]
 800b788:	42a3      	cmp	r3, r4
 800b78a:	d004      	beq.n	800b796 <WM__InvalidateDrawAndDescs+0x1ce>
 800b78c:	f009 fd26 	bl	80151dc <GUI_MEMDEV_Delete>
 800b790:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b792:	f8c3 9024 	str.w	r9, [r3, #36]	; 0x24
 800b796:	4620      	mov	r0, r4
 800b798:	f001 fe5e 	bl	800d458 <WM_GetFirstChild>
 800b79c:	4607      	mov	r7, r0
 800b79e:	b140      	cbz	r0, 800b7b2 <WM__InvalidateDrawAndDescs+0x1ea>
 800b7a0:	4638      	mov	r0, r7
 800b7a2:	f7ff ff11 	bl	800b5c8 <WM__InvalidateDrawAndDescs>
 800b7a6:	4638      	mov	r0, r7
 800b7a8:	f7f9 fb5a 	bl	8004e60 <GUI_ALLOC_h2p>
 800b7ac:	6a07      	ldr	r7, [r0, #32]
 800b7ae:	2f00      	cmp	r7, #0
 800b7b0:	d1f6      	bne.n	800b7a0 <WM__InvalidateDrawAndDescs+0x1d8>
 800b7b2:	a80d      	add	r0, sp, #52	; 0x34
 800b7b4:	f7f9 fb70 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b7b8:	4620      	mov	r0, r4
 800b7ba:	f7f9 fb51 	bl	8004e60 <GUI_ALLOC_h2p>
 800b7be:	6a04      	ldr	r4, [r0, #32]
 800b7c0:	2c00      	cmp	r4, #0
 800b7c2:	d1d6      	bne.n	800b772 <WM__InvalidateDrawAndDescs+0x1aa>
 800b7c4:	a80c      	add	r0, sp, #48	; 0x30
 800b7c6:	f7f9 fb67 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b7ca:	4628      	mov	r0, r5
 800b7cc:	f7f9 fb48 	bl	8004e60 <GUI_ALLOC_h2p>
 800b7d0:	6a05      	ldr	r5, [r0, #32]
 800b7d2:	2d00      	cmp	r5, #0
 800b7d4:	d1b4      	bne.n	800b740 <WM__InvalidateDrawAndDescs+0x178>
 800b7d6:	a80b      	add	r0, sp, #44	; 0x2c
 800b7d8:	f7f9 fb5e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b7dc:	4630      	mov	r0, r6
 800b7de:	f7f9 fb3f 	bl	8004e60 <GUI_ALLOC_h2p>
 800b7e2:	6a06      	ldr	r6, [r0, #32]
 800b7e4:	2e00      	cmp	r6, #0
 800b7e6:	d193      	bne.n	800b710 <WM__InvalidateDrawAndDescs+0x148>
 800b7e8:	a80a      	add	r0, sp, #40	; 0x28
 800b7ea:	f7f9 fb55 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b7ee:	9801      	ldr	r0, [sp, #4]
 800b7f0:	f7f9 fb36 	bl	8004e60 <GUI_ALLOC_h2p>
 800b7f4:	6a03      	ldr	r3, [r0, #32]
 800b7f6:	9301      	str	r3, [sp, #4]
 800b7f8:	2b00      	cmp	r3, #0
 800b7fa:	f47f af70 	bne.w	800b6de <WM__InvalidateDrawAndDescs+0x116>
 800b7fe:	a809      	add	r0, sp, #36	; 0x24
 800b800:	f7f9 fb4a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b804:	4650      	mov	r0, sl
 800b806:	f7f9 fb2b 	bl	8004e60 <GUI_ALLOC_h2p>
 800b80a:	f8d0 a020 	ldr.w	sl, [r0, #32]
 800b80e:	f1ba 0f00 	cmp.w	sl, #0
 800b812:	f47f af4a 	bne.w	800b6aa <WM__InvalidateDrawAndDescs+0xe2>
 800b816:	a808      	add	r0, sp, #32
 800b818:	f7f9 fb3e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b81c:	4658      	mov	r0, fp
 800b81e:	f7f9 fb1f 	bl	8004e60 <GUI_ALLOC_h2p>
 800b822:	f8d0 b020 	ldr.w	fp, [r0, #32]
 800b826:	f1bb 0f00 	cmp.w	fp, #0
 800b82a:	f47f af24 	bne.w	800b676 <WM__InvalidateDrawAndDescs+0xae>
 800b82e:	a807      	add	r0, sp, #28
 800b830:	f7f9 fb32 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b834:	9802      	ldr	r0, [sp, #8]
 800b836:	f7f9 fb13 	bl	8004e60 <GUI_ALLOC_h2p>
 800b83a:	6a03      	ldr	r3, [r0, #32]
 800b83c:	9302      	str	r3, [sp, #8]
 800b83e:	2b00      	cmp	r3, #0
 800b840:	f47f aefe 	bne.w	800b640 <WM__InvalidateDrawAndDescs+0x78>
 800b844:	a806      	add	r0, sp, #24
 800b846:	f7f9 fb27 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b84a:	9803      	ldr	r0, [sp, #12]
 800b84c:	f7f9 fb08 	bl	8004e60 <GUI_ALLOC_h2p>
 800b850:	6a03      	ldr	r3, [r0, #32]
 800b852:	9303      	str	r3, [sp, #12]
 800b854:	2b00      	cmp	r3, #0
 800b856:	f47f aed8 	bne.w	800b60a <WM__InvalidateDrawAndDescs+0x42>
 800b85a:	a805      	add	r0, sp, #20
 800b85c:	f7f9 fb1c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b860:	b00f      	add	sp, #60	; 0x3c
 800b862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b866:	bf00      	nop
 800b868:	2001c20c 	.word	0x2001c20c

0800b86c <WM_InvalidateWindowAndDescsEx>:
 800b86c:	b900      	cbnz	r0, 800b870 <WM_InvalidateWindowAndDescsEx+0x4>
 800b86e:	4770      	bx	lr
 800b870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b874:	b0a1      	sub	sp, #132	; 0x84
 800b876:	4604      	mov	r4, r0
 800b878:	9201      	str	r2, [sp, #4]
 800b87a:	460d      	mov	r5, r1
 800b87c:	f7f9 fafa 	bl	8004e74 <GUI_ALLOC_LockH>
 800b880:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b882:	9005      	str	r0, [sp, #20]
 800b884:	079a      	lsls	r2, r3, #30
 800b886:	f140 8156 	bpl.w	800bb36 <WM_InvalidateWindowAndDescsEx+0x2ca>
 800b88a:	4602      	mov	r2, r0
 800b88c:	4629      	mov	r1, r5
 800b88e:	a80e      	add	r0, sp, #56	; 0x38
 800b890:	f7fb f8ea 	bl	8006a68 <GUI__IntersectRects>
 800b894:	2800      	cmp	r0, #0
 800b896:	f000 814e 	beq.w	800bb36 <WM_InvalidateWindowAndDescsEx+0x2ca>
 800b89a:	a805      	add	r0, sp, #20
 800b89c:	f7f9 fafc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b8a0:	4620      	mov	r0, r4
 800b8a2:	9a01      	ldr	r2, [sp, #4]
 800b8a4:	a90e      	add	r1, sp, #56	; 0x38
 800b8a6:	f7ff fcdd 	bl	800b264 <_Invalidate1Abs>
 800b8aa:	4620      	mov	r0, r4
 800b8ac:	f001 fdd4 	bl	800d458 <WM_GetFirstChild>
 800b8b0:	4604      	mov	r4, r0
 800b8b2:	2800      	cmp	r0, #0
 800b8b4:	f000 8142 	beq.w	800bb3c <WM_InvalidateWindowAndDescsEx+0x2d0>
 800b8b8:	4620      	mov	r0, r4
 800b8ba:	f7f9 fadb 	bl	8004e74 <GUI_ALLOC_LockH>
 800b8be:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b8c0:	9006      	str	r0, [sp, #24]
 800b8c2:	079b      	lsls	r3, r3, #30
 800b8c4:	f140 813d 	bpl.w	800bb42 <WM_InvalidateWindowAndDescsEx+0x2d6>
 800b8c8:	4602      	mov	r2, r0
 800b8ca:	a90e      	add	r1, sp, #56	; 0x38
 800b8cc:	a810      	add	r0, sp, #64	; 0x40
 800b8ce:	f7fb f8cb 	bl	8006a68 <GUI__IntersectRects>
 800b8d2:	2800      	cmp	r0, #0
 800b8d4:	f000 8135 	beq.w	800bb42 <WM_InvalidateWindowAndDescsEx+0x2d6>
 800b8d8:	a806      	add	r0, sp, #24
 800b8da:	f7f9 fadd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b8de:	9a01      	ldr	r2, [sp, #4]
 800b8e0:	a910      	add	r1, sp, #64	; 0x40
 800b8e2:	4620      	mov	r0, r4
 800b8e4:	f7ff fcbe 	bl	800b264 <_Invalidate1Abs>
 800b8e8:	4620      	mov	r0, r4
 800b8ea:	f001 fdb5 	bl	800d458 <WM_GetFirstChild>
 800b8ee:	4605      	mov	r5, r0
 800b8f0:	2800      	cmp	r0, #0
 800b8f2:	f000 8118 	beq.w	800bb26 <WM_InvalidateWindowAndDescsEx+0x2ba>
 800b8f6:	9402      	str	r4, [sp, #8]
 800b8f8:	4628      	mov	r0, r5
 800b8fa:	f7f9 fabb 	bl	8004e74 <GUI_ALLOC_LockH>
 800b8fe:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b900:	9007      	str	r0, [sp, #28]
 800b902:	079f      	lsls	r7, r3, #30
 800b904:	f140 8121 	bpl.w	800bb4a <WM_InvalidateWindowAndDescsEx+0x2de>
 800b908:	4602      	mov	r2, r0
 800b90a:	a910      	add	r1, sp, #64	; 0x40
 800b90c:	a812      	add	r0, sp, #72	; 0x48
 800b90e:	f7fb f8ab 	bl	8006a68 <GUI__IntersectRects>
 800b912:	2800      	cmp	r0, #0
 800b914:	f000 8119 	beq.w	800bb4a <WM_InvalidateWindowAndDescsEx+0x2de>
 800b918:	a807      	add	r0, sp, #28
 800b91a:	f7f9 fabd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b91e:	f8dd a004 	ldr.w	sl, [sp, #4]
 800b922:	4628      	mov	r0, r5
 800b924:	4652      	mov	r2, sl
 800b926:	a912      	add	r1, sp, #72	; 0x48
 800b928:	f7ff fc9c 	bl	800b264 <_Invalidate1Abs>
 800b92c:	4628      	mov	r0, r5
 800b92e:	f001 fd93 	bl	800d458 <WM_GetFirstChild>
 800b932:	2800      	cmp	r0, #0
 800b934:	f000 80ef 	beq.w	800bb16 <WM_InvalidateWindowAndDescsEx+0x2aa>
 800b938:	9503      	str	r5, [sp, #12]
 800b93a:	4605      	mov	r5, r0
 800b93c:	4628      	mov	r0, r5
 800b93e:	f7f9 fa99 	bl	8004e74 <GUI_ALLOC_LockH>
 800b942:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b944:	9008      	str	r0, [sp, #32]
 800b946:	079e      	lsls	r6, r3, #30
 800b948:	f140 8103 	bpl.w	800bb52 <WM_InvalidateWindowAndDescsEx+0x2e6>
 800b94c:	4602      	mov	r2, r0
 800b94e:	a912      	add	r1, sp, #72	; 0x48
 800b950:	a814      	add	r0, sp, #80	; 0x50
 800b952:	f7fb f889 	bl	8006a68 <GUI__IntersectRects>
 800b956:	2800      	cmp	r0, #0
 800b958:	f000 80fb 	beq.w	800bb52 <WM_InvalidateWindowAndDescsEx+0x2e6>
 800b95c:	a808      	add	r0, sp, #32
 800b95e:	f7f9 fa9b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b962:	4628      	mov	r0, r5
 800b964:	4652      	mov	r2, sl
 800b966:	a914      	add	r1, sp, #80	; 0x50
 800b968:	f7ff fc7c 	bl	800b264 <_Invalidate1Abs>
 800b96c:	4628      	mov	r0, r5
 800b96e:	f001 fd73 	bl	800d458 <WM_GetFirstChild>
 800b972:	2800      	cmp	r0, #0
 800b974:	f000 80c7 	beq.w	800bb06 <WM_InvalidateWindowAndDescsEx+0x29a>
 800b978:	46ab      	mov	fp, r5
 800b97a:	4680      	mov	r8, r0
 800b97c:	4640      	mov	r0, r8
 800b97e:	f7f9 fa79 	bl	8004e74 <GUI_ALLOC_LockH>
 800b982:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b984:	9009      	str	r0, [sp, #36]	; 0x24
 800b986:	079d      	lsls	r5, r3, #30
 800b988:	f140 80e7 	bpl.w	800bb5a <WM_InvalidateWindowAndDescsEx+0x2ee>
 800b98c:	4602      	mov	r2, r0
 800b98e:	a914      	add	r1, sp, #80	; 0x50
 800b990:	a816      	add	r0, sp, #88	; 0x58
 800b992:	f7fb f869 	bl	8006a68 <GUI__IntersectRects>
 800b996:	2800      	cmp	r0, #0
 800b998:	f000 80df 	beq.w	800bb5a <WM_InvalidateWindowAndDescsEx+0x2ee>
 800b99c:	a809      	add	r0, sp, #36	; 0x24
 800b99e:	f7f9 fa7b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b9a2:	4640      	mov	r0, r8
 800b9a4:	4652      	mov	r2, sl
 800b9a6:	a916      	add	r1, sp, #88	; 0x58
 800b9a8:	f7ff fc5c 	bl	800b264 <_Invalidate1Abs>
 800b9ac:	4640      	mov	r0, r8
 800b9ae:	f001 fd53 	bl	800d458 <WM_GetFirstChild>
 800b9b2:	2800      	cmp	r0, #0
 800b9b4:	f000 809d 	beq.w	800baf2 <WM_InvalidateWindowAndDescsEx+0x286>
 800b9b8:	4681      	mov	r9, r0
 800b9ba:	4648      	mov	r0, r9
 800b9bc:	f7f9 fa5a 	bl	8004e74 <GUI_ALLOC_LockH>
 800b9c0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b9c2:	900a      	str	r0, [sp, #40]	; 0x28
 800b9c4:	079c      	lsls	r4, r3, #30
 800b9c6:	f140 80d5 	bpl.w	800bb74 <WM_InvalidateWindowAndDescsEx+0x308>
 800b9ca:	4602      	mov	r2, r0
 800b9cc:	a916      	add	r1, sp, #88	; 0x58
 800b9ce:	a818      	add	r0, sp, #96	; 0x60
 800b9d0:	f7fb f84a 	bl	8006a68 <GUI__IntersectRects>
 800b9d4:	2800      	cmp	r0, #0
 800b9d6:	f000 80cd 	beq.w	800bb74 <WM_InvalidateWindowAndDescsEx+0x308>
 800b9da:	a80a      	add	r0, sp, #40	; 0x28
 800b9dc:	f7f9 fa5c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800b9e0:	4652      	mov	r2, sl
 800b9e2:	a918      	add	r1, sp, #96	; 0x60
 800b9e4:	4648      	mov	r0, r9
 800b9e6:	f7ff fc3d 	bl	800b264 <_Invalidate1Abs>
 800b9ea:	4648      	mov	r0, r9
 800b9ec:	f001 fd34 	bl	800d458 <WM_GetFirstChild>
 800b9f0:	4605      	mov	r5, r0
 800b9f2:	2800      	cmp	r0, #0
 800b9f4:	d074      	beq.n	800bae0 <WM_InvalidateWindowAndDescsEx+0x274>
 800b9f6:	4628      	mov	r0, r5
 800b9f8:	f7f9 fa3c 	bl	8004e74 <GUI_ALLOC_LockH>
 800b9fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b9fe:	900b      	str	r0, [sp, #44]	; 0x2c
 800ba00:	0799      	lsls	r1, r3, #30
 800ba02:	f140 80c4 	bpl.w	800bb8e <WM_InvalidateWindowAndDescsEx+0x322>
 800ba06:	4602      	mov	r2, r0
 800ba08:	a918      	add	r1, sp, #96	; 0x60
 800ba0a:	a81a      	add	r0, sp, #104	; 0x68
 800ba0c:	f7fb f82c 	bl	8006a68 <GUI__IntersectRects>
 800ba10:	2800      	cmp	r0, #0
 800ba12:	f000 80bc 	beq.w	800bb8e <WM_InvalidateWindowAndDescsEx+0x322>
 800ba16:	a80b      	add	r0, sp, #44	; 0x2c
 800ba18:	f7f9 fa3e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ba1c:	4652      	mov	r2, sl
 800ba1e:	a91a      	add	r1, sp, #104	; 0x68
 800ba20:	4628      	mov	r0, r5
 800ba22:	f7ff fc1f 	bl	800b264 <_Invalidate1Abs>
 800ba26:	4628      	mov	r0, r5
 800ba28:	f001 fd16 	bl	800d458 <WM_GetFirstChild>
 800ba2c:	4606      	mov	r6, r0
 800ba2e:	2800      	cmp	r0, #0
 800ba30:	d050      	beq.n	800bad4 <WM_InvalidateWindowAndDescsEx+0x268>
 800ba32:	4630      	mov	r0, r6
 800ba34:	f7f9 fa1e 	bl	8004e74 <GUI_ALLOC_LockH>
 800ba38:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ba3a:	900c      	str	r0, [sp, #48]	; 0x30
 800ba3c:	079a      	lsls	r2, r3, #30
 800ba3e:	f140 80b1 	bpl.w	800bba4 <WM_InvalidateWindowAndDescsEx+0x338>
 800ba42:	4602      	mov	r2, r0
 800ba44:	a91a      	add	r1, sp, #104	; 0x68
 800ba46:	a81c      	add	r0, sp, #112	; 0x70
 800ba48:	f7fb f80e 	bl	8006a68 <GUI__IntersectRects>
 800ba4c:	2800      	cmp	r0, #0
 800ba4e:	f000 80a9 	beq.w	800bba4 <WM_InvalidateWindowAndDescsEx+0x338>
 800ba52:	a80c      	add	r0, sp, #48	; 0x30
 800ba54:	f7f9 fa20 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ba58:	4652      	mov	r2, sl
 800ba5a:	a91c      	add	r1, sp, #112	; 0x70
 800ba5c:	4630      	mov	r0, r6
 800ba5e:	f7ff fc01 	bl	800b264 <_Invalidate1Abs>
 800ba62:	4630      	mov	r0, r6
 800ba64:	f001 fcf8 	bl	800d458 <WM_GetFirstChild>
 800ba68:	4607      	mov	r7, r0
 800ba6a:	b368      	cbz	r0, 800bac8 <WM_InvalidateWindowAndDescsEx+0x25c>
 800ba6c:	4638      	mov	r0, r7
 800ba6e:	f7f9 fa01 	bl	8004e74 <GUI_ALLOC_LockH>
 800ba72:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ba74:	900d      	str	r0, [sp, #52]	; 0x34
 800ba76:	079b      	lsls	r3, r3, #30
 800ba78:	f140 809f 	bpl.w	800bbba <WM_InvalidateWindowAndDescsEx+0x34e>
 800ba7c:	4602      	mov	r2, r0
 800ba7e:	a91c      	add	r1, sp, #112	; 0x70
 800ba80:	a81e      	add	r0, sp, #120	; 0x78
 800ba82:	f7fa fff1 	bl	8006a68 <GUI__IntersectRects>
 800ba86:	2800      	cmp	r0, #0
 800ba88:	f000 8097 	beq.w	800bbba <WM_InvalidateWindowAndDescsEx+0x34e>
 800ba8c:	a80d      	add	r0, sp, #52	; 0x34
 800ba8e:	f7f9 fa03 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ba92:	4652      	mov	r2, sl
 800ba94:	a91e      	add	r1, sp, #120	; 0x78
 800ba96:	4638      	mov	r0, r7
 800ba98:	f7ff fbe4 	bl	800b264 <_Invalidate1Abs>
 800ba9c:	4638      	mov	r0, r7
 800ba9e:	f001 fcdb 	bl	800d458 <WM_GetFirstChild>
 800baa2:	4604      	mov	r4, r0
 800baa4:	b150      	cbz	r0, 800babc <WM_InvalidateWindowAndDescsEx+0x250>
 800baa6:	4620      	mov	r0, r4
 800baa8:	4652      	mov	r2, sl
 800baaa:	a91e      	add	r1, sp, #120	; 0x78
 800baac:	f7ff fede 	bl	800b86c <WM_InvalidateWindowAndDescsEx>
 800bab0:	4620      	mov	r0, r4
 800bab2:	f7f9 f9d5 	bl	8004e60 <GUI_ALLOC_h2p>
 800bab6:	6a04      	ldr	r4, [r0, #32]
 800bab8:	2c00      	cmp	r4, #0
 800baba:	d1f4      	bne.n	800baa6 <WM_InvalidateWindowAndDescsEx+0x23a>
 800babc:	4638      	mov	r0, r7
 800babe:	f7f9 f9cf 	bl	8004e60 <GUI_ALLOC_h2p>
 800bac2:	6a07      	ldr	r7, [r0, #32]
 800bac4:	2f00      	cmp	r7, #0
 800bac6:	d1d1      	bne.n	800ba6c <WM_InvalidateWindowAndDescsEx+0x200>
 800bac8:	4630      	mov	r0, r6
 800baca:	f7f9 f9c9 	bl	8004e60 <GUI_ALLOC_h2p>
 800bace:	6a06      	ldr	r6, [r0, #32]
 800bad0:	2e00      	cmp	r6, #0
 800bad2:	d1ae      	bne.n	800ba32 <WM_InvalidateWindowAndDescsEx+0x1c6>
 800bad4:	4628      	mov	r0, r5
 800bad6:	f7f9 f9c3 	bl	8004e60 <GUI_ALLOC_h2p>
 800bada:	6a05      	ldr	r5, [r0, #32]
 800badc:	2d00      	cmp	r5, #0
 800bade:	d18a      	bne.n	800b9f6 <WM_InvalidateWindowAndDescsEx+0x18a>
 800bae0:	4648      	mov	r0, r9
 800bae2:	f7f9 f9bd 	bl	8004e60 <GUI_ALLOC_h2p>
 800bae6:	f8d0 9020 	ldr.w	r9, [r0, #32]
 800baea:	f1b9 0f00 	cmp.w	r9, #0
 800baee:	f47f af64 	bne.w	800b9ba <WM_InvalidateWindowAndDescsEx+0x14e>
 800baf2:	4640      	mov	r0, r8
 800baf4:	f7f9 f9b4 	bl	8004e60 <GUI_ALLOC_h2p>
 800baf8:	f8d0 8020 	ldr.w	r8, [r0, #32]
 800bafc:	f1b8 0f00 	cmp.w	r8, #0
 800bb00:	f47f af3c 	bne.w	800b97c <WM_InvalidateWindowAndDescsEx+0x110>
 800bb04:	465d      	mov	r5, fp
 800bb06:	4628      	mov	r0, r5
 800bb08:	f7f9 f9aa 	bl	8004e60 <GUI_ALLOC_h2p>
 800bb0c:	6a05      	ldr	r5, [r0, #32]
 800bb0e:	2d00      	cmp	r5, #0
 800bb10:	f47f af14 	bne.w	800b93c <WM_InvalidateWindowAndDescsEx+0xd0>
 800bb14:	9d03      	ldr	r5, [sp, #12]
 800bb16:	4628      	mov	r0, r5
 800bb18:	f7f9 f9a2 	bl	8004e60 <GUI_ALLOC_h2p>
 800bb1c:	6a05      	ldr	r5, [r0, #32]
 800bb1e:	2d00      	cmp	r5, #0
 800bb20:	f47f aeea 	bne.w	800b8f8 <WM_InvalidateWindowAndDescsEx+0x8c>
 800bb24:	9c02      	ldr	r4, [sp, #8]
 800bb26:	4620      	mov	r0, r4
 800bb28:	f7f9 f99a 	bl	8004e60 <GUI_ALLOC_h2p>
 800bb2c:	6a04      	ldr	r4, [r0, #32]
 800bb2e:	2c00      	cmp	r4, #0
 800bb30:	f47f aec2 	bne.w	800b8b8 <WM_InvalidateWindowAndDescsEx+0x4c>
 800bb34:	e002      	b.n	800bb3c <WM_InvalidateWindowAndDescsEx+0x2d0>
 800bb36:	a805      	add	r0, sp, #20
 800bb38:	f7f9 f9ae 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bb3c:	b021      	add	sp, #132	; 0x84
 800bb3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb42:	a806      	add	r0, sp, #24
 800bb44:	f7f9 f9a8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bb48:	e7ed      	b.n	800bb26 <WM_InvalidateWindowAndDescsEx+0x2ba>
 800bb4a:	a807      	add	r0, sp, #28
 800bb4c:	f7f9 f9a4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bb50:	e7e1      	b.n	800bb16 <WM_InvalidateWindowAndDescsEx+0x2aa>
 800bb52:	a808      	add	r0, sp, #32
 800bb54:	f7f9 f9a0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bb58:	e7d5      	b.n	800bb06 <WM_InvalidateWindowAndDescsEx+0x29a>
 800bb5a:	a809      	add	r0, sp, #36	; 0x24
 800bb5c:	f7f9 f99c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bb60:	4640      	mov	r0, r8
 800bb62:	f7f9 f97d 	bl	8004e60 <GUI_ALLOC_h2p>
 800bb66:	f8d0 8020 	ldr.w	r8, [r0, #32]
 800bb6a:	f1b8 0f00 	cmp.w	r8, #0
 800bb6e:	f47f af05 	bne.w	800b97c <WM_InvalidateWindowAndDescsEx+0x110>
 800bb72:	e7c7      	b.n	800bb04 <WM_InvalidateWindowAndDescsEx+0x298>
 800bb74:	a80a      	add	r0, sp, #40	; 0x28
 800bb76:	f7f9 f98f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bb7a:	4648      	mov	r0, r9
 800bb7c:	f7f9 f970 	bl	8004e60 <GUI_ALLOC_h2p>
 800bb80:	f8d0 9020 	ldr.w	r9, [r0, #32]
 800bb84:	f1b9 0f00 	cmp.w	r9, #0
 800bb88:	f47f af17 	bne.w	800b9ba <WM_InvalidateWindowAndDescsEx+0x14e>
 800bb8c:	e7b1      	b.n	800baf2 <WM_InvalidateWindowAndDescsEx+0x286>
 800bb8e:	a80b      	add	r0, sp, #44	; 0x2c
 800bb90:	f7f9 f982 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bb94:	4628      	mov	r0, r5
 800bb96:	f7f9 f963 	bl	8004e60 <GUI_ALLOC_h2p>
 800bb9a:	6a05      	ldr	r5, [r0, #32]
 800bb9c:	2d00      	cmp	r5, #0
 800bb9e:	f47f af2a 	bne.w	800b9f6 <WM_InvalidateWindowAndDescsEx+0x18a>
 800bba2:	e79d      	b.n	800bae0 <WM_InvalidateWindowAndDescsEx+0x274>
 800bba4:	a80c      	add	r0, sp, #48	; 0x30
 800bba6:	f7f9 f977 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bbaa:	4630      	mov	r0, r6
 800bbac:	f7f9 f958 	bl	8004e60 <GUI_ALLOC_h2p>
 800bbb0:	6a06      	ldr	r6, [r0, #32]
 800bbb2:	2e00      	cmp	r6, #0
 800bbb4:	f47f af3d 	bne.w	800ba32 <WM_InvalidateWindowAndDescsEx+0x1c6>
 800bbb8:	e78c      	b.n	800bad4 <WM_InvalidateWindowAndDescsEx+0x268>
 800bbba:	a80d      	add	r0, sp, #52	; 0x34
 800bbbc:	f7f9 f96c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bbc0:	4638      	mov	r0, r7
 800bbc2:	f7f9 f94d 	bl	8004e60 <GUI_ALLOC_h2p>
 800bbc6:	6a07      	ldr	r7, [r0, #32]
 800bbc8:	2f00      	cmp	r7, #0
 800bbca:	f47f af4f 	bne.w	800ba6c <WM_InvalidateWindowAndDescsEx+0x200>
 800bbce:	e77b      	b.n	800bac8 <WM_InvalidateWindowAndDescsEx+0x25c>

0800bbd0 <WM__InvalidateRect>:
 800bbd0:	b901      	cbnz	r1, 800bbd4 <WM__InvalidateRect+0x4>
 800bbd2:	4770      	bx	lr
 800bbd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbd8:	4605      	mov	r5, r0
 800bbda:	b086      	sub	sp, #24
 800bbdc:	4608      	mov	r0, r1
 800bbde:	460c      	mov	r4, r1
 800bbe0:	461e      	mov	r6, r3
 800bbe2:	4617      	mov	r7, r2
 800bbe4:	f7f9 f946 	bl	8004e74 <GUI_ALLOC_LockH>
 800bbe8:	f8d0 8028 	ldr.w	r8, [r0, #40]	; 0x28
 800bbec:	9000      	str	r0, [sp, #0]
 800bbee:	f018 0f02 	tst.w	r8, #2
 800bbf2:	d042      	beq.n	800bc7a <WM__InvalidateRect+0xaa>
 800bbf4:	4602      	mov	r2, r0
 800bbf6:	4629      	mov	r1, r5
 800bbf8:	a802      	add	r0, sp, #8
 800bbfa:	f7fa ff35 	bl	8006a68 <GUI__IntersectRects>
 800bbfe:	2800      	cmp	r0, #0
 800bc00:	d03b      	beq.n	800bc7a <WM__InvalidateRect+0xaa>
 800bc02:	f640 0301 	movw	r3, #2049	; 0x801
 800bc06:	ea08 0303 	and.w	r3, r8, r3
 800bc0a:	2b01      	cmp	r3, #1
 800bc0c:	d03f      	beq.n	800bc8e <WM__InvalidateRect+0xbe>
 800bc0e:	4620      	mov	r0, r4
 800bc10:	4632      	mov	r2, r6
 800bc12:	a902      	add	r1, sp, #8
 800bc14:	f7ff fb26 	bl	800b264 <_Invalidate1Abs>
 800bc18:	9b00      	ldr	r3, [sp, #0]
 800bc1a:	69dc      	ldr	r4, [r3, #28]
 800bc1c:	b36c      	cbz	r4, 800bc7a <WM__InvalidateRect+0xaa>
 800bc1e:	42bc      	cmp	r4, r7
 800bc20:	d02b      	beq.n	800bc7a <WM__InvalidateRect+0xaa>
 800bc22:	4620      	mov	r0, r4
 800bc24:	f7f9 f926 	bl	8004e74 <GUI_ALLOC_LockH>
 800bc28:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bc2a:	9001      	str	r0, [sp, #4]
 800bc2c:	079b      	lsls	r3, r3, #30
 800bc2e:	d52a      	bpl.n	800bc86 <WM__InvalidateRect+0xb6>
 800bc30:	4602      	mov	r2, r0
 800bc32:	a902      	add	r1, sp, #8
 800bc34:	a804      	add	r0, sp, #16
 800bc36:	f7fa ff17 	bl	8006a68 <GUI__IntersectRects>
 800bc3a:	b320      	cbz	r0, 800bc86 <WM__InvalidateRect+0xb6>
 800bc3c:	a801      	add	r0, sp, #4
 800bc3e:	f7f9 f92b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bc42:	4632      	mov	r2, r6
 800bc44:	a904      	add	r1, sp, #16
 800bc46:	4620      	mov	r0, r4
 800bc48:	f7ff fb0c 	bl	800b264 <_Invalidate1Abs>
 800bc4c:	4620      	mov	r0, r4
 800bc4e:	f001 fc03 	bl	800d458 <WM_GetFirstChild>
 800bc52:	4605      	mov	r5, r0
 800bc54:	b150      	cbz	r0, 800bc6c <WM__InvalidateRect+0x9c>
 800bc56:	4628      	mov	r0, r5
 800bc58:	4632      	mov	r2, r6
 800bc5a:	a904      	add	r1, sp, #16
 800bc5c:	f7ff fe06 	bl	800b86c <WM_InvalidateWindowAndDescsEx>
 800bc60:	4628      	mov	r0, r5
 800bc62:	f7f9 f8fd 	bl	8004e60 <GUI_ALLOC_h2p>
 800bc66:	6a05      	ldr	r5, [r0, #32]
 800bc68:	2d00      	cmp	r5, #0
 800bc6a:	d1f4      	bne.n	800bc56 <WM__InvalidateRect+0x86>
 800bc6c:	4620      	mov	r0, r4
 800bc6e:	f7f9 f8f7 	bl	8004e60 <GUI_ALLOC_h2p>
 800bc72:	6a04      	ldr	r4, [r0, #32]
 800bc74:	b10c      	cbz	r4, 800bc7a <WM__InvalidateRect+0xaa>
 800bc76:	42a7      	cmp	r7, r4
 800bc78:	d1d3      	bne.n	800bc22 <WM__InvalidateRect+0x52>
 800bc7a:	4668      	mov	r0, sp
 800bc7c:	f7f9 f90c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bc80:	b006      	add	sp, #24
 800bc82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc86:	a801      	add	r0, sp, #4
 800bc88:	f7f9 f906 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bc8c:	e7ee      	b.n	800bc6c <WM__InvalidateRect+0x9c>
 800bc8e:	9900      	ldr	r1, [sp, #0]
 800bc90:	4633      	mov	r3, r6
 800bc92:	6a0a      	ldr	r2, [r1, #32]
 800bc94:	6989      	ldr	r1, [r1, #24]
 800bc96:	a802      	add	r0, sp, #8
 800bc98:	f7ff ff9a 	bl	800bbd0 <WM__InvalidateRect>
 800bc9c:	e7bc      	b.n	800bc18 <WM__InvalidateRect+0x48>
 800bc9e:	bf00      	nop

0800bca0 <WM_InvalidateRect.part.2>:
 800bca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bca4:	b086      	sub	sp, #24
 800bca6:	460c      	mov	r4, r1
 800bca8:	4680      	mov	r8, r0
 800bcaa:	f7f9 f8e3 	bl	8004e74 <GUI_ALLOC_LockH>
 800bcae:	6a87      	ldr	r7, [r0, #40]	; 0x28
 800bcb0:	9000      	str	r0, [sp, #0]
 800bcb2:	07b9      	lsls	r1, r7, #30
 800bcb4:	d52e      	bpl.n	800bd14 <WM_InvalidateRect.part.2+0x74>
 800bcb6:	c803      	ldmia	r0, {r0, r1}
 800bcb8:	ae04      	add	r6, sp, #16
 800bcba:	03fa      	lsls	r2, r7, #15
 800bcbc:	e886 0003 	stmia.w	r6, {r0, r1}
 800bcc0:	d447      	bmi.n	800bd52 <WM_InvalidateRect.part.2+0xb2>
 800bcc2:	b17c      	cbz	r4, 800bce4 <WM_InvalidateRect.part.2+0x44>
 800bcc4:	6820      	ldr	r0, [r4, #0]
 800bcc6:	6861      	ldr	r1, [r4, #4]
 800bcc8:	9c00      	ldr	r4, [sp, #0]
 800bcca:	ab02      	add	r3, sp, #8
 800bccc:	c303      	stmia	r3!, {r0, r1}
 800bcce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800bcd2:	f9b4 1000 	ldrsh.w	r1, [r4]
 800bcd6:	a802      	add	r0, sp, #8
 800bcd8:	f7f9 fb8a 	bl	80053f0 <GUI_MoveRect>
 800bcdc:	a902      	add	r1, sp, #8
 800bcde:	4630      	mov	r0, r6
 800bce0:	f7fa fea4 	bl	8006a2c <GUI__IntersectRect>
 800bce4:	4645      	mov	r5, r8
 800bce6:	e008      	b.n	800bcfa <WM_InvalidateRect.part.2+0x5a>
 800bce8:	f7fa fea0 	bl	8006a2c <GUI__IntersectRect>
 800bcec:	9b01      	ldr	r3, [sp, #4]
 800bcee:	699c      	ldr	r4, [r3, #24]
 800bcf0:	a801      	add	r0, sp, #4
 800bcf2:	b1ac      	cbz	r4, 800bd20 <WM_InvalidateRect.part.2+0x80>
 800bcf4:	f7f9 f8d0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bcf8:	4625      	mov	r5, r4
 800bcfa:	4628      	mov	r0, r5
 800bcfc:	f7f9 f8ba 	bl	8004e74 <GUI_ALLOC_LockH>
 800bd00:	4603      	mov	r3, r0
 800bd02:	9301      	str	r3, [sp, #4]
 800bd04:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800bd06:	0793      	lsls	r3, r2, #30
 800bd08:	4601      	mov	r1, r0
 800bd0a:	4630      	mov	r0, r6
 800bd0c:	d4ec      	bmi.n	800bce8 <WM_InvalidateRect.part.2+0x48>
 800bd0e:	a801      	add	r0, sp, #4
 800bd10:	f7f9 f8c2 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bd14:	4668      	mov	r0, sp
 800bd16:	f7f9 f8bf 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bd1a:	b006      	add	sp, #24
 800bd1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd20:	f7f9 f8ba 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bd24:	4b12      	ldr	r3, [pc, #72]	; (800bd70 <WM_InvalidateRect.part.2+0xd0>)
 800bd26:	681a      	ldr	r2, [r3, #0]
 800bd28:	42aa      	cmp	r2, r5
 800bd2a:	d002      	beq.n	800bd32 <WM_InvalidateRect.part.2+0x92>
 800bd2c:	685b      	ldr	r3, [r3, #4]
 800bd2e:	429d      	cmp	r5, r3
 800bd30:	d1f0      	bne.n	800bd14 <WM_InvalidateRect.part.2+0x74>
 800bd32:	f640 0301 	movw	r3, #2049	; 0x801
 800bd36:	403b      	ands	r3, r7
 800bd38:	2b01      	cmp	r3, #1
 800bd3a:	d010      	beq.n	800bd5e <WM_InvalidateRect.part.2+0xbe>
 800bd3c:	4631      	mov	r1, r6
 800bd3e:	4640      	mov	r0, r8
 800bd40:	2220      	movs	r2, #32
 800bd42:	f7ff fa8f 	bl	800b264 <_Invalidate1Abs>
 800bd46:	4668      	mov	r0, sp
 800bd48:	f7f9 f8a6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bd4c:	b006      	add	sp, #24
 800bd4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd52:	4640      	mov	r0, r8
 800bd54:	f7ff fc38 	bl	800b5c8 <WM__InvalidateDrawAndDescs>
 800bd58:	2c00      	cmp	r4, #0
 800bd5a:	d1b3      	bne.n	800bcc4 <WM_InvalidateRect.part.2+0x24>
 800bd5c:	e7c2      	b.n	800bce4 <WM_InvalidateRect.part.2+0x44>
 800bd5e:	9b00      	ldr	r3, [sp, #0]
 800bd60:	4630      	mov	r0, r6
 800bd62:	6a1a      	ldr	r2, [r3, #32]
 800bd64:	6999      	ldr	r1, [r3, #24]
 800bd66:	2320      	movs	r3, #32
 800bd68:	f7ff ff32 	bl	800bbd0 <WM__InvalidateRect>
 800bd6c:	e7d2      	b.n	800bd14 <WM_InvalidateRect.part.2+0x74>
 800bd6e:	bf00      	nop
 800bd70:	2001c1c0 	.word	0x2001c1c0

0800bd74 <_cbBackWin>:
 800bd74:	6803      	ldr	r3, [r0, #0]
 800bd76:	2b0e      	cmp	r3, #14
 800bd78:	d034      	beq.n	800bde4 <_cbBackWin+0x70>
 800bd7a:	2b0f      	cmp	r3, #15
 800bd7c:	b510      	push	{r4, lr}
 800bd7e:	4604      	mov	r4, r0
 800bd80:	d116      	bne.n	800bdb0 <_cbBackWin+0x3c>
 800bd82:	4a26      	ldr	r2, [pc, #152]	; (800be1c <_cbBackWin+0xa8>)
 800bd84:	6843      	ldr	r3, [r0, #4]
 800bd86:	6811      	ldr	r1, [r2, #0]
 800bd88:	428b      	cmp	r3, r1
 800bd8a:	d045      	beq.n	800be18 <_cbBackWin+0xa4>
 800bd8c:	6852      	ldr	r2, [r2, #4]
 800bd8e:	4293      	cmp	r3, r2
 800bd90:	bf14      	ite	ne
 800bd92:	f04f 33ff 	movne.w	r3, #4294967295
 800bd96:	2301      	moveq	r3, #1
 800bd98:	4a21      	ldr	r2, [pc, #132]	; (800be20 <_cbBackWin+0xac>)
 800bd9a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800bd9e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800bda2:	4298      	cmp	r0, r3
 800bda4:	d01b      	beq.n	800bdde <_cbBackWin+0x6a>
 800bda6:	f7f9 fbfb 	bl	80055a0 <GUI_SetBkColor>
 800bdaa:	f7f9 fced 	bl	8005788 <GUI_Clear>
 800bdae:	6823      	ldr	r3, [r4, #0]
 800bdb0:	6860      	ldr	r0, [r4, #4]
 800bdb2:	3b0e      	subs	r3, #14
 800bdb4:	2b1a      	cmp	r3, #26
 800bdb6:	d812      	bhi.n	800bdde <_cbBackWin+0x6a>
 800bdb8:	e8df f003 	tbb	[pc, r3]
 800bdbc:	11111119 	.word	0x11111119
 800bdc0:	110e1111 	.word	0x110e1111
 800bdc4:	11111e11 	.word	0x11111e11
 800bdc8:	11111111 	.word	0x11111111
 800bdcc:	11111111 	.word	0x11111111
 800bdd0:	11111120 	.word	0x11111120
 800bdd4:	1111      	.short	0x1111
 800bdd6:	24          	.byte	0x24
 800bdd7:	00          	.byte	0x00
 800bdd8:	68e1      	ldr	r1, [r4, #12]
 800bdda:	f002 fd15 	bl	800e808 <WM__GetClientRectEx>
 800bdde:	2300      	movs	r3, #0
 800bde0:	60e3      	str	r3, [r4, #12]
 800bde2:	bd10      	pop	{r4, pc}
 800bde4:	68c3      	ldr	r3, [r0, #12]
 800bde6:	685a      	ldr	r2, [r3, #4]
 800bde8:	2a01      	cmp	r2, #1
 800bdea:	d012      	beq.n	800be12 <_cbBackWin+0x9e>
 800bdec:	4770      	bx	lr
 800bdee:	4621      	mov	r1, r4
 800bdf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdf4:	f001 bcf2 	b.w	800d7dc <WM_SendToParent>
 800bdf8:	60e0      	str	r0, [r4, #12]
 800bdfa:	bd10      	pop	{r4, pc}
 800bdfc:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800be00:	60e3      	str	r3, [r4, #12]
 800be02:	bd10      	pop	{r4, pc}
 800be04:	2800      	cmp	r0, #0
 800be06:	d0ec      	beq.n	800bde2 <_cbBackWin+0x6e>
 800be08:	2100      	movs	r1, #0
 800be0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be0e:	f7ff bf47 	b.w	800bca0 <WM_InvalidateRect.part.2>
 800be12:	6818      	ldr	r0, [r3, #0]
 800be14:	f7fa b976 	b.w	8006104 <GUI_StoreKey>
 800be18:	2300      	movs	r3, #0
 800be1a:	e7bd      	b.n	800bd98 <_cbBackWin+0x24>
 800be1c:	2001c1c0 	.word	0x2001c1c0
 800be20:	2001c1f4 	.word	0x2001c1f4

0800be24 <WM_DeleteWindow.part.3>:
 800be24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800be28:	4e7d      	ldr	r6, [pc, #500]	; (800c020 <WM_DeleteWindow.part.3+0x1fc>)
 800be2a:	6833      	ldr	r3, [r6, #0]
 800be2c:	b086      	sub	sp, #24
 800be2e:	b15b      	cbz	r3, 800be48 <WM_DeleteWindow.part.3+0x24>
 800be30:	4283      	cmp	r3, r0
 800be32:	4604      	mov	r4, r0
 800be34:	d102      	bne.n	800be3c <WM_DeleteWindow.part.3+0x18>
 800be36:	e00a      	b.n	800be4e <WM_DeleteWindow.part.3+0x2a>
 800be38:	429c      	cmp	r4, r3
 800be3a:	d008      	beq.n	800be4e <WM_DeleteWindow.part.3+0x2a>
 800be3c:	4618      	mov	r0, r3
 800be3e:	f7f9 f80f 	bl	8004e60 <GUI_ALLOC_h2p>
 800be42:	6943      	ldr	r3, [r0, #20]
 800be44:	2b00      	cmp	r3, #0
 800be46:	d1f7      	bne.n	800be38 <WM_DeleteWindow.part.3+0x14>
 800be48:	b006      	add	sp, #24
 800be4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800be4e:	4625      	mov	r5, r4
 800be50:	e000      	b.n	800be54 <WM_DeleteWindow.part.3+0x30>
 800be52:	461d      	mov	r5, r3
 800be54:	4628      	mov	r0, r5
 800be56:	f7f9 f803 	bl	8004e60 <GUI_ALLOC_h2p>
 800be5a:	6983      	ldr	r3, [r0, #24]
 800be5c:	2b00      	cmp	r3, #0
 800be5e:	d1f8      	bne.n	800be52 <WM_DeleteWindow.part.3+0x2e>
 800be60:	4f70      	ldr	r7, [pc, #448]	; (800c024 <WM_DeleteWindow.part.3+0x200>)
 800be62:	683a      	ldr	r2, [r7, #0]
 800be64:	4295      	cmp	r5, r2
 800be66:	f000 80d2 	beq.w	800c00e <WM_DeleteWindow.part.3+0x1ea>
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	429d      	cmp	r5, r3
 800be6e:	bf14      	ite	ne
 800be70:	f04f 35ff 	movne.w	r5, #4294967295
 800be74:	2501      	moveq	r5, #1
 800be76:	f10d 0818 	add.w	r8, sp, #24
 800be7a:	230b      	movs	r3, #11
 800be7c:	f848 3d10 	str.w	r3, [r8, #-16]!
 800be80:	4620      	mov	r0, r4
 800be82:	4641      	mov	r1, r8
 800be84:	9403      	str	r4, [sp, #12]
 800be86:	f002 fbc1 	bl	800e60c <WM__SendMessage>
 800be8a:	4620      	mov	r0, r4
 800be8c:	f001 ff14 	bl	800dcb8 <WM__DeleteAssocTimer>
 800be90:	4620      	mov	r0, r4
 800be92:	f7f8 ffef 	bl	8004e74 <GUI_ALLOC_LockH>
 800be96:	9001      	str	r0, [sp, #4]
 800be98:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800be9a:	2800      	cmp	r0, #0
 800be9c:	f040 809b 	bne.w	800bfd6 <WM_DeleteWindow.part.3+0x1b2>
 800bea0:	4b61      	ldr	r3, [pc, #388]	; (800c028 <WM_DeleteWindow.part.3+0x204>)
 800bea2:	4a62      	ldr	r2, [pc, #392]	; (800c02c <WM_DeleteWindow.part.3+0x208>)
 800bea4:	681b      	ldr	r3, [r3, #0]
 800bea6:	4862      	ldr	r0, [pc, #392]	; (800c030 <WM_DeleteWindow.part.3+0x20c>)
 800bea8:	2100      	movs	r1, #0
 800beaa:	6081      	str	r1, [r0, #8]
 800beac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800beb0:	4284      	cmp	r4, r0
 800beb2:	bf08      	it	eq
 800beb4:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800beb8:	4a5e      	ldr	r2, [pc, #376]	; (800c034 <WM_DeleteWindow.part.3+0x210>)
 800beba:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800bebe:	428c      	cmp	r4, r1
 800bec0:	bf04      	itt	eq
 800bec2:	2100      	moveq	r1, #0
 800bec4:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800bec8:	4b5b      	ldr	r3, [pc, #364]	; (800c038 <WM_DeleteWindow.part.3+0x214>)
 800beca:	681b      	ldr	r3, [r3, #0]
 800becc:	2100      	movs	r1, #0
 800bece:	b133      	cbz	r3, 800bede <WM_DeleteWindow.part.3+0xba>
 800bed0:	685a      	ldr	r2, [r3, #4]
 800bed2:	4294      	cmp	r4, r2
 800bed4:	bf08      	it	eq
 800bed6:	6059      	streq	r1, [r3, #4]
 800bed8:	681b      	ldr	r3, [r3, #0]
 800beda:	2b00      	cmp	r3, #0
 800bedc:	d1f8      	bne.n	800bed0 <WM_DeleteWindow.part.3+0xac>
 800bede:	4620      	mov	r0, r4
 800bee0:	2107      	movs	r1, #7
 800bee2:	f001 fc3b 	bl	800d75c <WM_NotifyParent>
 800bee6:	f8dd 9004 	ldr.w	r9, [sp, #4]
 800beea:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800beee:	2800      	cmp	r0, #0
 800bef0:	d157      	bne.n	800bfa2 <WM_DeleteWindow.part.3+0x17e>
 800bef2:	4620      	mov	r0, r4
 800bef4:	f7f8 ffbe 	bl	8004e74 <GUI_ALLOC_LockH>
 800bef8:	6981      	ldr	r1, [r0, #24]
 800befa:	9002      	str	r0, [sp, #8]
 800befc:	2900      	cmp	r1, #0
 800befe:	d15c      	bne.n	800bfba <WM_DeleteWindow.part.3+0x196>
 800bf00:	4640      	mov	r0, r8
 800bf02:	f7f8 ffc9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bf06:	6830      	ldr	r0, [r6, #0]
 800bf08:	b158      	cbz	r0, 800bf22 <WM_DeleteWindow.part.3+0xfe>
 800bf0a:	f7f8 ffa9 	bl	8004e60 <GUI_ALLOC_h2p>
 800bf0e:	4680      	mov	r8, r0
 800bf10:	6940      	ldr	r0, [r0, #20]
 800bf12:	4284      	cmp	r4, r0
 800bf14:	d1f8      	bne.n	800bf08 <WM_DeleteWindow.part.3+0xe4>
 800bf16:	4620      	mov	r0, r4
 800bf18:	f7f8 ffa2 	bl	8004e60 <GUI_ALLOC_h2p>
 800bf1c:	6943      	ldr	r3, [r0, #20]
 800bf1e:	f8c8 3014 	str.w	r3, [r8, #20]
 800bf22:	9b01      	ldr	r3, [sp, #4]
 800bf24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bf26:	07d9      	lsls	r1, r3, #31
 800bf28:	d503      	bpl.n	800bf32 <WM_DeleteWindow.part.3+0x10e>
 800bf2a:	4944      	ldr	r1, [pc, #272]	; (800c03c <WM_DeleteWindow.part.3+0x218>)
 800bf2c:	680a      	ldr	r2, [r1, #0]
 800bf2e:	3a01      	subs	r2, #1
 800bf30:	600a      	str	r2, [r1, #0]
 800bf32:	069a      	lsls	r2, r3, #26
 800bf34:	d43c      	bmi.n	800bfb0 <WM_DeleteWindow.part.3+0x18c>
 800bf36:	a801      	add	r0, sp, #4
 800bf38:	f7f8 ffae 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800bf3c:	4a40      	ldr	r2, [pc, #256]	; (800c040 <WM_DeleteWindow.part.3+0x21c>)
 800bf3e:	8813      	ldrh	r3, [r2, #0]
 800bf40:	4620      	mov	r0, r4
 800bf42:	3b01      	subs	r3, #1
 800bf44:	8013      	strh	r3, [r2, #0]
 800bf46:	f7f9 f91f 	bl	8005188 <GUI_ALLOC_Free>
 800bf4a:	1c6b      	adds	r3, r5, #1
 800bf4c:	f43f af7c 	beq.w	800be48 <WM_DeleteWindow.part.3+0x24>
 800bf50:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 800c048 <WM_DeleteWindow.part.3+0x224>
 800bf54:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 800bf58:	f8d8 3000 	ldr.w	r3, [r8]
 800bf5c:	b905      	cbnz	r5, 800bf60 <WM_DeleteWindow.part.3+0x13c>
 800bf5e:	6835      	ldr	r5, [r6, #0]
 800bf60:	649d      	str	r5, [r3, #72]	; 0x48
 800bf62:	462c      	mov	r4, r5
 800bf64:	e000      	b.n	800bf68 <WM_DeleteWindow.part.3+0x144>
 800bf66:	461c      	mov	r4, r3
 800bf68:	4620      	mov	r0, r4
 800bf6a:	f7f8 ff79 	bl	8004e60 <GUI_ALLOC_h2p>
 800bf6e:	6983      	ldr	r3, [r0, #24]
 800bf70:	2b00      	cmp	r3, #0
 800bf72:	d1f8      	bne.n	800bf66 <WM_DeleteWindow.part.3+0x142>
 800bf74:	6839      	ldr	r1, [r7, #0]
 800bf76:	4a2b      	ldr	r2, [pc, #172]	; (800c024 <WM_DeleteWindow.part.3+0x200>)
 800bf78:	428c      	cmp	r4, r1
 800bf7a:	d04a      	beq.n	800c012 <WM_DeleteWindow.part.3+0x1ee>
 800bf7c:	6853      	ldr	r3, [r2, #4]
 800bf7e:	429c      	cmp	r4, r3
 800bf80:	d04b      	beq.n	800c01a <WM_DeleteWindow.part.3+0x1f6>
 800bf82:	f7fb fbed 	bl	8007760 <LCD_SetClipRectMax>
 800bf86:	4628      	mov	r0, r5
 800bf88:	f7f8 ff6a 	bl	8004e60 <GUI_ALLOC_h2p>
 800bf8c:	f8d8 3000 	ldr.w	r3, [r8]
 800bf90:	f9b0 1000 	ldrsh.w	r1, [r0]
 800bf94:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800bf98:	651a      	str	r2, [r3, #80]	; 0x50
 800bf9a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800bf9c:	b006      	add	sp, #24
 800bf9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bfa2:	f7ff ff3f 	bl	800be24 <WM_DeleteWindow.part.3>
 800bfa6:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800bfaa:	2800      	cmp	r0, #0
 800bfac:	d19f      	bne.n	800beee <WM_DeleteWindow.part.3+0xca>
 800bfae:	e7a0      	b.n	800bef2 <WM_DeleteWindow.part.3+0xce>
 800bfb0:	4a24      	ldr	r2, [pc, #144]	; (800c044 <WM_DeleteWindow.part.3+0x220>)
 800bfb2:	8813      	ldrh	r3, [r2, #0]
 800bfb4:	3b01      	subs	r3, #1
 800bfb6:	8013      	strh	r3, [r2, #0]
 800bfb8:	e7bd      	b.n	800bf36 <WM_DeleteWindow.part.3+0x112>
 800bfba:	6a02      	ldr	r2, [r0, #32]
 800bfbc:	2320      	movs	r3, #32
 800bfbe:	f7ff fe07 	bl	800bbd0 <WM__InvalidateRect>
 800bfc2:	4620      	mov	r0, r4
 800bfc4:	f7f8 ff4c 	bl	8004e60 <GUI_ALLOC_h2p>
 800bfc8:	4681      	mov	r9, r0
 800bfca:	6980      	ldr	r0, [r0, #24]
 800bfcc:	b930      	cbnz	r0, 800bfdc <WM_DeleteWindow.part.3+0x1b8>
 800bfce:	9b02      	ldr	r3, [sp, #8]
 800bfd0:	2200      	movs	r2, #0
 800bfd2:	619a      	str	r2, [r3, #24]
 800bfd4:	e794      	b.n	800bf00 <WM_DeleteWindow.part.3+0xdc>
 800bfd6:	f009 f901 	bl	80151dc <GUI_MEMDEV_Delete>
 800bfda:	e761      	b.n	800bea0 <WM_DeleteWindow.part.3+0x7c>
 800bfdc:	f7f8 ff40 	bl	8004e60 <GUI_ALLOC_h2p>
 800bfe0:	69c3      	ldr	r3, [r0, #28]
 800bfe2:	429c      	cmp	r4, r3
 800bfe4:	4682      	mov	sl, r0
 800bfe6:	d00b      	beq.n	800c000 <WM_DeleteWindow.part.3+0x1dc>
 800bfe8:	2b00      	cmp	r3, #0
 800bfea:	d0f0      	beq.n	800bfce <WM_DeleteWindow.part.3+0x1aa>
 800bfec:	4618      	mov	r0, r3
 800bfee:	f7f8 ff37 	bl	8004e60 <GUI_ALLOC_h2p>
 800bff2:	6a03      	ldr	r3, [r0, #32]
 800bff4:	429c      	cmp	r4, r3
 800bff6:	d1f7      	bne.n	800bfe8 <WM_DeleteWindow.part.3+0x1c4>
 800bff8:	f8d9 3020 	ldr.w	r3, [r9, #32]
 800bffc:	6203      	str	r3, [r0, #32]
 800bffe:	e7e6      	b.n	800bfce <WM_DeleteWindow.part.3+0x1aa>
 800c000:	4620      	mov	r0, r4
 800c002:	f7f8 ff2d 	bl	8004e60 <GUI_ALLOC_h2p>
 800c006:	6a03      	ldr	r3, [r0, #32]
 800c008:	f8ca 301c 	str.w	r3, [sl, #28]
 800c00c:	e7df      	b.n	800bfce <WM_DeleteWindow.part.3+0x1aa>
 800c00e:	461d      	mov	r5, r3
 800c010:	e731      	b.n	800be76 <WM_DeleteWindow.part.3+0x52>
 800c012:	4618      	mov	r0, r3
 800c014:	f7fa f964 	bl	80062e0 <GUI_SelectLayer>
 800c018:	e7b3      	b.n	800bf82 <WM_DeleteWindow.part.3+0x15e>
 800c01a:	2001      	movs	r0, #1
 800c01c:	e7fa      	b.n	800c014 <WM_DeleteWindow.part.3+0x1f0>
 800c01e:	bf00      	nop
 800c020:	2001c1dc 	.word	0x2001c1dc
 800c024:	2001c1c0 	.word	0x2001c1c0
 800c028:	2001c1e0 	.word	0x2001c1e0
 800c02c:	2001c1d0 	.word	0x2001c1d0
 800c030:	20000550 	.word	0x20000550
 800c034:	2001c204 	.word	0x2001c204
 800c038:	2001c1fc 	.word	0x2001c1fc
 800c03c:	2001c210 	.word	0x2001c210
 800c040:	2001c1b8 	.word	0x2001c1b8
 800c044:	2001c1d8 	.word	0x2001c1d8
 800c048:	20000018 	.word	0x20000018

0800c04c <_Exec1Input>:
 800c04c:	b570      	push	{r4, r5, r6, lr}
 800c04e:	4e1d      	ldr	r6, [pc, #116]	; (800c0c4 <_Exec1Input+0x78>)
 800c050:	6873      	ldr	r3, [r6, #4]
 800c052:	b082      	sub	sp, #8
 800c054:	b9cb      	cbnz	r3, 800c08a <_Exec1Input+0x3e>
 800c056:	4b1c      	ldr	r3, [pc, #112]	; (800c0c8 <_Exec1Input+0x7c>)
 800c058:	681b      	ldr	r3, [r3, #0]
 800c05a:	b103      	cbz	r3, 800c05e <_Exec1Input+0x12>
 800c05c:	4798      	blx	r3
 800c05e:	4b1b      	ldr	r3, [pc, #108]	; (800c0cc <_Exec1Input+0x80>)
 800c060:	681b      	ldr	r3, [r3, #0]
 800c062:	b10b      	cbz	r3, 800c068 <_Exec1Input+0x1c>
 800c064:	4798      	blx	r3
 800c066:	b968      	cbnz	r0, 800c084 <_Exec1Input+0x38>
 800c068:	4b19      	ldr	r3, [pc, #100]	; (800c0d0 <_Exec1Input+0x84>)
 800c06a:	681b      	ldr	r3, [r3, #0]
 800c06c:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 800c070:	b908      	cbnz	r0, 800c076 <_Exec1Input+0x2a>
 800c072:	b002      	add	sp, #8
 800c074:	bd70      	pop	{r4, r5, r6, pc}
 800c076:	f7fa f84d 	bl	8006114 <GUI_PollKeyMsg>
 800c07a:	3000      	adds	r0, #0
 800c07c:	bf18      	it	ne
 800c07e:	2001      	movne	r0, #1
 800c080:	b002      	add	sp, #8
 800c082:	bd70      	pop	{r4, r5, r6, pc}
 800c084:	2001      	movs	r0, #1
 800c086:	b002      	add	sp, #8
 800c088:	bd70      	pop	{r4, r5, r6, pc}
 800c08a:	4b12      	ldr	r3, [pc, #72]	; (800c0d4 <_Exec1Input+0x88>)
 800c08c:	681c      	ldr	r4, [r3, #0]
 800c08e:	b18c      	cbz	r4, 800c0b4 <_Exec1Input+0x68>
 800c090:	4620      	mov	r0, r4
 800c092:	f7f8 feef 	bl	8004e74 <GUI_ALLOC_LockH>
 800c096:	4603      	mov	r3, r0
 800c098:	9301      	str	r3, [sp, #4]
 800c09a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c09c:	0412      	lsls	r2, r2, #16
 800c09e:	a801      	add	r0, sp, #4
 800c0a0:	d50b      	bpl.n	800c0ba <_Exec1Input+0x6e>
 800c0a2:	695d      	ldr	r5, [r3, #20]
 800c0a4:	f7f8 fef8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c0a8:	4620      	mov	r0, r4
 800c0aa:	462c      	mov	r4, r5
 800c0ac:	f7ff feba 	bl	800be24 <WM_DeleteWindow.part.3>
 800c0b0:	2c00      	cmp	r4, #0
 800c0b2:	d1ed      	bne.n	800c090 <_Exec1Input+0x44>
 800c0b4:	2300      	movs	r3, #0
 800c0b6:	6073      	str	r3, [r6, #4]
 800c0b8:	e7cd      	b.n	800c056 <_Exec1Input+0xa>
 800c0ba:	a801      	add	r0, sp, #4
 800c0bc:	695c      	ldr	r4, [r3, #20]
 800c0be:	f7f8 feeb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c0c2:	e7e4      	b.n	800c08e <_Exec1Input+0x42>
 800c0c4:	20000550 	.word	0x20000550
 800c0c8:	2001c1c8 	.word	0x2001c1c8
 800c0cc:	2001c1a8 	.word	0x2001c1a8
 800c0d0:	20000018 	.word	0x20000018
 800c0d4:	2001c1dc 	.word	0x2001c1dc

0800c0d8 <WM__InvalidateParent>:
 800c0d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0dc:	4605      	mov	r5, r0
 800c0de:	b086      	sub	sp, #24
 800c0e0:	4608      	mov	r0, r1
 800c0e2:	460c      	mov	r4, r1
 800c0e4:	4617      	mov	r7, r2
 800c0e6:	f7f8 febb 	bl	8004e60 <GUI_ALLOC_h2p>
 800c0ea:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c0ec:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800c0f0:	bf14      	ite	ne
 800c0f2:	f44f 4680 	movne.w	r6, #16384	; 0x4000
 800c0f6:	2620      	moveq	r6, #32
 800c0f8:	b914      	cbnz	r4, 800c100 <WM__InvalidateParent+0x28>
 800c0fa:	b006      	add	sp, #24
 800c0fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c100:	4620      	mov	r0, r4
 800c102:	f7f8 feb7 	bl	8004e74 <GUI_ALLOC_LockH>
 800c106:	f8d0 8028 	ldr.w	r8, [r0, #40]	; 0x28
 800c10a:	9000      	str	r0, [sp, #0]
 800c10c:	f018 0f02 	tst.w	r8, #2
 800c110:	d041      	beq.n	800c196 <WM__InvalidateParent+0xbe>
 800c112:	4602      	mov	r2, r0
 800c114:	4629      	mov	r1, r5
 800c116:	a802      	add	r0, sp, #8
 800c118:	f7fa fca6 	bl	8006a68 <GUI__IntersectRects>
 800c11c:	2800      	cmp	r0, #0
 800c11e:	d03a      	beq.n	800c196 <WM__InvalidateParent+0xbe>
 800c120:	f640 0301 	movw	r3, #2049	; 0x801
 800c124:	ea08 0303 	and.w	r3, r8, r3
 800c128:	2b01      	cmp	r3, #1
 800c12a:	d044      	beq.n	800c1b6 <WM__InvalidateParent+0xde>
 800c12c:	4620      	mov	r0, r4
 800c12e:	4632      	mov	r2, r6
 800c130:	a902      	add	r1, sp, #8
 800c132:	f7ff f897 	bl	800b264 <_Invalidate1Abs>
 800c136:	9b00      	ldr	r3, [sp, #0]
 800c138:	69dc      	ldr	r4, [r3, #28]
 800c13a:	b364      	cbz	r4, 800c196 <WM__InvalidateParent+0xbe>
 800c13c:	42a7      	cmp	r7, r4
 800c13e:	d02a      	beq.n	800c196 <WM__InvalidateParent+0xbe>
 800c140:	4620      	mov	r0, r4
 800c142:	f7f8 fe97 	bl	8004e74 <GUI_ALLOC_LockH>
 800c146:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c148:	9001      	str	r0, [sp, #4]
 800c14a:	079b      	lsls	r3, r3, #30
 800c14c:	d529      	bpl.n	800c1a2 <WM__InvalidateParent+0xca>
 800c14e:	4602      	mov	r2, r0
 800c150:	a902      	add	r1, sp, #8
 800c152:	a804      	add	r0, sp, #16
 800c154:	f7fa fc88 	bl	8006a68 <GUI__IntersectRects>
 800c158:	b318      	cbz	r0, 800c1a2 <WM__InvalidateParent+0xca>
 800c15a:	a801      	add	r0, sp, #4
 800c15c:	f7f8 fe9c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c160:	4632      	mov	r2, r6
 800c162:	a904      	add	r1, sp, #16
 800c164:	4620      	mov	r0, r4
 800c166:	f7ff f87d 	bl	800b264 <_Invalidate1Abs>
 800c16a:	4620      	mov	r0, r4
 800c16c:	f001 f974 	bl	800d458 <WM_GetFirstChild>
 800c170:	4605      	mov	r5, r0
 800c172:	b150      	cbz	r0, 800c18a <WM__InvalidateParent+0xb2>
 800c174:	4628      	mov	r0, r5
 800c176:	4632      	mov	r2, r6
 800c178:	a904      	add	r1, sp, #16
 800c17a:	f7ff fb77 	bl	800b86c <WM_InvalidateWindowAndDescsEx>
 800c17e:	4628      	mov	r0, r5
 800c180:	f7f8 fe6e 	bl	8004e60 <GUI_ALLOC_h2p>
 800c184:	6a05      	ldr	r5, [r0, #32]
 800c186:	2d00      	cmp	r5, #0
 800c188:	d1f4      	bne.n	800c174 <WM__InvalidateParent+0x9c>
 800c18a:	4620      	mov	r0, r4
 800c18c:	f7f8 fe68 	bl	8004e60 <GUI_ALLOC_h2p>
 800c190:	6a04      	ldr	r4, [r0, #32]
 800c192:	2c00      	cmp	r4, #0
 800c194:	d1d2      	bne.n	800c13c <WM__InvalidateParent+0x64>
 800c196:	4668      	mov	r0, sp
 800c198:	f7f8 fe7e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c19c:	b006      	add	sp, #24
 800c19e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c1a2:	a801      	add	r0, sp, #4
 800c1a4:	f7f8 fe78 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c1a8:	4620      	mov	r0, r4
 800c1aa:	f7f8 fe59 	bl	8004e60 <GUI_ALLOC_h2p>
 800c1ae:	6a04      	ldr	r4, [r0, #32]
 800c1b0:	2c00      	cmp	r4, #0
 800c1b2:	d1c3      	bne.n	800c13c <WM__InvalidateParent+0x64>
 800c1b4:	e7ef      	b.n	800c196 <WM__InvalidateParent+0xbe>
 800c1b6:	9900      	ldr	r1, [sp, #0]
 800c1b8:	4633      	mov	r3, r6
 800c1ba:	6a0a      	ldr	r2, [r1, #32]
 800c1bc:	6989      	ldr	r1, [r1, #24]
 800c1be:	a802      	add	r0, sp, #8
 800c1c0:	f7ff fd06 	bl	800bbd0 <WM__InvalidateRect>
 800c1c4:	e7b7      	b.n	800c136 <WM__InvalidateParent+0x5e>
 800c1c6:	bf00      	nop

0800c1c8 <WM__InvalidateRectEx>:
 800c1c8:	b901      	cbnz	r1, 800c1cc <WM__InvalidateRectEx+0x4>
 800c1ca:	4770      	bx	lr
 800c1cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c1ce:	4605      	mov	r5, r0
 800c1d0:	b087      	sub	sp, #28
 800c1d2:	4608      	mov	r0, r1
 800c1d4:	4616      	mov	r6, r2
 800c1d6:	460c      	mov	r4, r1
 800c1d8:	f7f8 fe4c 	bl	8004e74 <GUI_ALLOC_LockH>
 800c1dc:	6a87      	ldr	r7, [r0, #40]	; 0x28
 800c1de:	9000      	str	r0, [sp, #0]
 800c1e0:	07ba      	lsls	r2, r7, #30
 800c1e2:	d540      	bpl.n	800c266 <WM__InvalidateRectEx+0x9e>
 800c1e4:	4602      	mov	r2, r0
 800c1e6:	4629      	mov	r1, r5
 800c1e8:	a802      	add	r0, sp, #8
 800c1ea:	f7fa fc3d 	bl	8006a68 <GUI__IntersectRects>
 800c1ee:	2800      	cmp	r0, #0
 800c1f0:	d039      	beq.n	800c266 <WM__InvalidateRectEx+0x9e>
 800c1f2:	f640 0301 	movw	r3, #2049	; 0x801
 800c1f6:	403b      	ands	r3, r7
 800c1f8:	2b01      	cmp	r3, #1
 800c1fa:	d043      	beq.n	800c284 <WM__InvalidateRectEx+0xbc>
 800c1fc:	4620      	mov	r0, r4
 800c1fe:	2220      	movs	r2, #32
 800c200:	a902      	add	r1, sp, #8
 800c202:	f7ff f82f 	bl	800b264 <_Invalidate1Abs>
 800c206:	9b00      	ldr	r3, [sp, #0]
 800c208:	69dc      	ldr	r4, [r3, #28]
 800c20a:	b364      	cbz	r4, 800c266 <WM__InvalidateRectEx+0x9e>
 800c20c:	42a6      	cmp	r6, r4
 800c20e:	d02a      	beq.n	800c266 <WM__InvalidateRectEx+0x9e>
 800c210:	4620      	mov	r0, r4
 800c212:	f7f8 fe2f 	bl	8004e74 <GUI_ALLOC_LockH>
 800c216:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c218:	9001      	str	r0, [sp, #4]
 800c21a:	079b      	lsls	r3, r3, #30
 800c21c:	d528      	bpl.n	800c270 <WM__InvalidateRectEx+0xa8>
 800c21e:	4602      	mov	r2, r0
 800c220:	a902      	add	r1, sp, #8
 800c222:	a804      	add	r0, sp, #16
 800c224:	f7fa fc20 	bl	8006a68 <GUI__IntersectRects>
 800c228:	b310      	cbz	r0, 800c270 <WM__InvalidateRectEx+0xa8>
 800c22a:	a801      	add	r0, sp, #4
 800c22c:	f7f8 fe34 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c230:	2220      	movs	r2, #32
 800c232:	a904      	add	r1, sp, #16
 800c234:	4620      	mov	r0, r4
 800c236:	f7ff f815 	bl	800b264 <_Invalidate1Abs>
 800c23a:	4620      	mov	r0, r4
 800c23c:	f001 f90c 	bl	800d458 <WM_GetFirstChild>
 800c240:	4605      	mov	r5, r0
 800c242:	b150      	cbz	r0, 800c25a <WM__InvalidateRectEx+0x92>
 800c244:	4628      	mov	r0, r5
 800c246:	2220      	movs	r2, #32
 800c248:	a904      	add	r1, sp, #16
 800c24a:	f7ff fb0f 	bl	800b86c <WM_InvalidateWindowAndDescsEx>
 800c24e:	4628      	mov	r0, r5
 800c250:	f7f8 fe06 	bl	8004e60 <GUI_ALLOC_h2p>
 800c254:	6a05      	ldr	r5, [r0, #32]
 800c256:	2d00      	cmp	r5, #0
 800c258:	d1f4      	bne.n	800c244 <WM__InvalidateRectEx+0x7c>
 800c25a:	4620      	mov	r0, r4
 800c25c:	f7f8 fe00 	bl	8004e60 <GUI_ALLOC_h2p>
 800c260:	6a04      	ldr	r4, [r0, #32]
 800c262:	2c00      	cmp	r4, #0
 800c264:	d1d2      	bne.n	800c20c <WM__InvalidateRectEx+0x44>
 800c266:	4668      	mov	r0, sp
 800c268:	f7f8 fe16 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c26c:	b007      	add	sp, #28
 800c26e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c270:	a801      	add	r0, sp, #4
 800c272:	f7f8 fe11 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c276:	4620      	mov	r0, r4
 800c278:	f7f8 fdf2 	bl	8004e60 <GUI_ALLOC_h2p>
 800c27c:	6a04      	ldr	r4, [r0, #32]
 800c27e:	2c00      	cmp	r4, #0
 800c280:	d1c4      	bne.n	800c20c <WM__InvalidateRectEx+0x44>
 800c282:	e7f0      	b.n	800c266 <WM__InvalidateRectEx+0x9e>
 800c284:	9900      	ldr	r1, [sp, #0]
 800c286:	2320      	movs	r3, #32
 800c288:	6a0a      	ldr	r2, [r1, #32]
 800c28a:	6989      	ldr	r1, [r1, #24]
 800c28c:	a802      	add	r0, sp, #8
 800c28e:	f7ff fc9f 	bl	800bbd0 <WM__InvalidateRect>
 800c292:	e7b8      	b.n	800c206 <WM__InvalidateRectEx+0x3e>

0800c294 <WM_SendMessage>:
 800c294:	b900      	cbnz	r0, 800c298 <WM_SendMessage+0x4>
 800c296:	4770      	bx	lr
 800c298:	f002 b9b8 	b.w	800e60c <WM__SendMessage>

0800c29c <WM__SendMsgNoData>:
 800c29c:	b500      	push	{lr}
 800c29e:	b085      	sub	sp, #20
 800c2a0:	ab04      	add	r3, sp, #16
 800c2a2:	9001      	str	r0, [sp, #4]
 800c2a4:	f843 1d10 	str.w	r1, [r3, #-16]!
 800c2a8:	4619      	mov	r1, r3
 800c2aa:	f002 f9af 	bl	800e60c <WM__SendMessage>
 800c2ae:	b005      	add	sp, #20
 800c2b0:	f85d fb04 	ldr.w	pc, [sp], #4

0800c2b4 <WM__GetClientRectWin>:
 800c2b4:	b430      	push	{r4, r5}
 800c2b6:	2300      	movs	r3, #0
 800c2b8:	800b      	strh	r3, [r1, #0]
 800c2ba:	804b      	strh	r3, [r1, #2]
 800c2bc:	8805      	ldrh	r5, [r0, #0]
 800c2be:	8844      	ldrh	r4, [r0, #2]
 800c2c0:	8882      	ldrh	r2, [r0, #4]
 800c2c2:	88c3      	ldrh	r3, [r0, #6]
 800c2c4:	1b52      	subs	r2, r2, r5
 800c2c6:	1b1b      	subs	r3, r3, r4
 800c2c8:	808a      	strh	r2, [r1, #4]
 800c2ca:	80cb      	strh	r3, [r1, #6]
 800c2cc:	bc30      	pop	{r4, r5}
 800c2ce:	4770      	bx	lr

0800c2d0 <WM_InvalidateWindow>:
 800c2d0:	b900      	cbnz	r0, 800c2d4 <WM_InvalidateWindow+0x4>
 800c2d2:	4770      	bx	lr
 800c2d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c2d8:	b084      	sub	sp, #16
 800c2da:	4607      	mov	r7, r0
 800c2dc:	f7f8 fdca 	bl	8004e74 <GUI_ALLOC_LockH>
 800c2e0:	f8d0 8028 	ldr.w	r8, [r0, #40]	; 0x28
 800c2e4:	9000      	str	r0, [sp, #0]
 800c2e6:	f018 0f02 	tst.w	r8, #2
 800c2ea:	d01e      	beq.n	800c32a <WM_InvalidateWindow+0x5a>
 800c2ec:	c803      	ldmia	r0, {r0, r1}
 800c2ee:	ae02      	add	r6, sp, #8
 800c2f0:	f418 3f80 	tst.w	r8, #65536	; 0x10000
 800c2f4:	e886 0003 	stmia.w	r6, {r0, r1}
 800c2f8:	d11d      	bne.n	800c336 <WM_InvalidateWindow+0x66>
 800c2fa:	463d      	mov	r5, r7
 800c2fc:	e008      	b.n	800c310 <WM_InvalidateWindow+0x40>
 800c2fe:	f7fa fb95 	bl	8006a2c <GUI__IntersectRect>
 800c302:	9b01      	ldr	r3, [sp, #4]
 800c304:	699c      	ldr	r4, [r3, #24]
 800c306:	a801      	add	r0, sp, #4
 800c308:	b1cc      	cbz	r4, 800c33e <WM_InvalidateWindow+0x6e>
 800c30a:	f7f8 fdc5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c30e:	4625      	mov	r5, r4
 800c310:	4628      	mov	r0, r5
 800c312:	f7f8 fdaf 	bl	8004e74 <GUI_ALLOC_LockH>
 800c316:	4603      	mov	r3, r0
 800c318:	9301      	str	r3, [sp, #4]
 800c31a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c31c:	0793      	lsls	r3, r2, #30
 800c31e:	4601      	mov	r1, r0
 800c320:	4630      	mov	r0, r6
 800c322:	d4ec      	bmi.n	800c2fe <WM_InvalidateWindow+0x2e>
 800c324:	a801      	add	r0, sp, #4
 800c326:	f7f8 fdb7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c32a:	4668      	mov	r0, sp
 800c32c:	f7f8 fdb4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c330:	b004      	add	sp, #16
 800c332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c336:	4638      	mov	r0, r7
 800c338:	f7ff f946 	bl	800b5c8 <WM__InvalidateDrawAndDescs>
 800c33c:	e7dd      	b.n	800c2fa <WM_InvalidateWindow+0x2a>
 800c33e:	f7f8 fdab 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c342:	4b0d      	ldr	r3, [pc, #52]	; (800c378 <WM_InvalidateWindow+0xa8>)
 800c344:	681a      	ldr	r2, [r3, #0]
 800c346:	4295      	cmp	r5, r2
 800c348:	d002      	beq.n	800c350 <WM_InvalidateWindow+0x80>
 800c34a:	685b      	ldr	r3, [r3, #4]
 800c34c:	429d      	cmp	r5, r3
 800c34e:	d1ec      	bne.n	800c32a <WM_InvalidateWindow+0x5a>
 800c350:	f640 0301 	movw	r3, #2049	; 0x801
 800c354:	ea08 0303 	and.w	r3, r8, r3
 800c358:	2b01      	cmp	r3, #1
 800c35a:	d005      	beq.n	800c368 <WM_InvalidateWindow+0x98>
 800c35c:	4631      	mov	r1, r6
 800c35e:	4638      	mov	r0, r7
 800c360:	2220      	movs	r2, #32
 800c362:	f7fe ff7f 	bl	800b264 <_Invalidate1Abs>
 800c366:	e7e0      	b.n	800c32a <WM_InvalidateWindow+0x5a>
 800c368:	9b00      	ldr	r3, [sp, #0]
 800c36a:	4630      	mov	r0, r6
 800c36c:	6a1a      	ldr	r2, [r3, #32]
 800c36e:	6999      	ldr	r1, [r3, #24]
 800c370:	2320      	movs	r3, #32
 800c372:	f7ff fc2d 	bl	800bbd0 <WM__InvalidateRect>
 800c376:	e7d8      	b.n	800c32a <WM_InvalidateWindow+0x5a>
 800c378:	2001c1c0 	.word	0x2001c1c0

0800c37c <WM_CreateWindowAsChild>:
 800c37c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c380:	b087      	sub	sp, #28
 800c382:	4c69      	ldr	r4, [pc, #420]	; (800c528 <WM_CreateWindowAsChild+0x1ac>)
 800c384:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800c386:	f8d4 a000 	ldr.w	sl, [r4]
 800c38a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800c38c:	4680      	mov	r8, r0
 800c38e:	4689      	mov	r9, r1
 800c390:	4615      	mov	r5, r2
 800c392:	461e      	mov	r6, r3
 800c394:	b96f      	cbnz	r7, 800c3b2 <WM_CreateWindowAsChild+0x36>
 800c396:	4b65      	ldr	r3, [pc, #404]	; (800c52c <WM_CreateWindowAsChild+0x1b0>)
 800c398:	881b      	ldrh	r3, [r3, #0]
 800c39a:	2b00      	cmp	r3, #0
 800c39c:	d16c      	bne.n	800c478 <WM_CreateWindowAsChild+0xfc>
 800c39e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800c3a2:	f7f8 ff57 	bl	8005254 <GUI_ALLOC_AllocZero>
 800c3a6:	4604      	mov	r4, r0
 800c3a8:	bb18      	cbnz	r0, 800c3f2 <WM_CreateWindowAsChild+0x76>
 800c3aa:	4620      	mov	r0, r4
 800c3ac:	b007      	add	sp, #28
 800c3ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3b2:	1c7b      	adds	r3, r7, #1
 800c3b4:	d06b      	beq.n	800c48e <WM_CreateWindowAsChild+0x112>
 800c3b6:	4638      	mov	r0, r7
 800c3b8:	f7f8 fd5c 	bl	8004e74 <GUI_ALLOC_LockH>
 800c3bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c3c0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c3c4:	9001      	str	r0, [sp, #4]
 800c3c6:	4490      	add	r8, r2
 800c3c8:	4499      	add	r9, r3
 800c3ca:	b91d      	cbnz	r5, 800c3d4 <WM_CreateWindowAsChild+0x58>
 800c3cc:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 800c3d0:	1aad      	subs	r5, r5, r2
 800c3d2:	3501      	adds	r5, #1
 800c3d4:	b91e      	cbnz	r6, 800c3de <WM_CreateWindowAsChild+0x62>
 800c3d6:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 800c3da:	1af6      	subs	r6, r6, r3
 800c3dc:	3601      	adds	r6, #1
 800c3de:	a801      	add	r0, sp, #4
 800c3e0:	f7f8 fd5a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c3e4:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800c3e8:	f7f8 ff34 	bl	8005254 <GUI_ALLOC_AllocZero>
 800c3ec:	4604      	mov	r4, r0
 800c3ee:	2800      	cmp	r0, #0
 800c3f0:	d0db      	beq.n	800c3aa <WM_CreateWindowAsChild+0x2e>
 800c3f2:	4a4e      	ldr	r2, [pc, #312]	; (800c52c <WM_CreateWindowAsChild+0x1b0>)
 800c3f4:	8813      	ldrh	r3, [r2, #0]
 800c3f6:	3301      	adds	r3, #1
 800c3f8:	8013      	strh	r3, [r2, #0]
 800c3fa:	f7f8 fd3b 	bl	8004e74 <GUI_ALLOC_LockH>
 800c3fe:	9911      	ldr	r1, [sp, #68]	; 0x44
 800c400:	4b4b      	ldr	r3, [pc, #300]	; (800c530 <WM_CreateWindowAsChild+0x1b4>)
 800c402:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800c404:	f10d 0b18 	add.w	fp, sp, #24
 800c408:	ea4a 0a01 	orr.w	sl, sl, r1
 800c40c:	f84b 0d18 	str.w	r0, [fp, #-24]!
 800c410:	4445      	add	r5, r8
 800c412:	444e      	add	r6, r9
 800c414:	ea0a 0303 	and.w	r3, sl, r3
 800c418:	4313      	orrs	r3, r2
 800c41a:	3d01      	subs	r5, #1
 800c41c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800c41e:	6283      	str	r3, [r0, #40]	; 0x28
 800c420:	3e01      	subs	r6, #1
 800c422:	8085      	strh	r5, [r0, #4]
 800c424:	80c6      	strh	r6, [r0, #6]
 800c426:	6102      	str	r2, [r0, #16]
 800c428:	f8a0 8000 	strh.w	r8, [r0]
 800c42c:	f8a0 9002 	strh.w	r9, [r0, #2]
 800c430:	4658      	mov	r0, fp
 800c432:	f7f8 fd31 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c436:	4b3f      	ldr	r3, [pc, #252]	; (800c534 <WM_CreateWindowAsChild+0x1b8>)
 800c438:	6818      	ldr	r0, [r3, #0]
 800c43a:	2800      	cmp	r0, #0
 800c43c:	d155      	bne.n	800c4ea <WM_CreateWindowAsChild+0x16e>
 800c43e:	601c      	str	r4, [r3, #0]
 800c440:	4639      	mov	r1, r7
 800c442:	4620      	mov	r0, r4
 800c444:	f7ff f818 	bl	800b478 <WM__InsertWindowIntoList>
 800c448:	f01a 0f20 	tst.w	sl, #32
 800c44c:	d12d      	bne.n	800c4aa <WM_CreateWindowAsChild+0x12e>
 800c44e:	f01a 0f01 	tst.w	sl, #1
 800c452:	d11e      	bne.n	800c492 <WM_CreateWindowAsChild+0x116>
 800c454:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800c458:	d123      	bne.n	800c4a2 <WM_CreateWindowAsChild+0x126>
 800c45a:	f01a 0f02 	tst.w	sl, #2
 800c45e:	d152      	bne.n	800c506 <WM_CreateWindowAsChild+0x18a>
 800c460:	a906      	add	r1, sp, #24
 800c462:	2301      	movs	r3, #1
 800c464:	4620      	mov	r0, r4
 800c466:	f841 3d10 	str.w	r3, [r1, #-16]!
 800c46a:	9403      	str	r4, [sp, #12]
 800c46c:	f002 f8ce 	bl	800e60c <WM__SendMessage>
 800c470:	4620      	mov	r0, r4
 800c472:	b007      	add	sp, #28
 800c474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c478:	4a2f      	ldr	r2, [pc, #188]	; (800c538 <WM_CreateWindowAsChild+0x1bc>)
 800c47a:	4b30      	ldr	r3, [pc, #192]	; (800c53c <WM_CreateWindowAsChild+0x1c0>)
 800c47c:	6812      	ldr	r2, [r2, #0]
 800c47e:	7c52      	ldrb	r2, [r2, #17]
 800c480:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800c484:	1c5a      	adds	r2, r3, #1
 800c486:	2a01      	cmp	r2, #1
 800c488:	d989      	bls.n	800c39e <WM_CreateWindowAsChild+0x22>
 800c48a:	461f      	mov	r7, r3
 800c48c:	e793      	b.n	800c3b6 <WM_CreateWindowAsChild+0x3a>
 800c48e:	2700      	movs	r7, #0
 800c490:	e785      	b.n	800c39e <WM_CreateWindowAsChild+0x22>
 800c492:	4a2b      	ldr	r2, [pc, #172]	; (800c540 <WM_CreateWindowAsChild+0x1c4>)
 800c494:	6813      	ldr	r3, [r2, #0]
 800c496:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800c49a:	f103 0301 	add.w	r3, r3, #1
 800c49e:	6013      	str	r3, [r2, #0]
 800c4a0:	d0db      	beq.n	800c45a <WM_CreateWindowAsChild+0xde>
 800c4a2:	4620      	mov	r0, r4
 800c4a4:	f000 ff7e 	bl	800d3a4 <WM_BringToBottom>
 800c4a8:	e7d7      	b.n	800c45a <WM_CreateWindowAsChild+0xde>
 800c4aa:	4e23      	ldr	r6, [pc, #140]	; (800c538 <WM_CreateWindowAsChild+0x1bc>)
 800c4ac:	6833      	ldr	r3, [r6, #0]
 800c4ae:	4625      	mov	r5, r4
 800c4b0:	649c      	str	r4, [r3, #72]	; 0x48
 800c4b2:	e000      	b.n	800c4b6 <WM_CreateWindowAsChild+0x13a>
 800c4b4:	4605      	mov	r5, r0
 800c4b6:	4628      	mov	r0, r5
 800c4b8:	f7f8 fcd2 	bl	8004e60 <GUI_ALLOC_h2p>
 800c4bc:	6980      	ldr	r0, [r0, #24]
 800c4be:	2800      	cmp	r0, #0
 800c4c0:	d1f8      	bne.n	800c4b4 <WM_CreateWindowAsChild+0x138>
 800c4c2:	4b1e      	ldr	r3, [pc, #120]	; (800c53c <WM_CreateWindowAsChild+0x1c0>)
 800c4c4:	681a      	ldr	r2, [r3, #0]
 800c4c6:	4295      	cmp	r5, r2
 800c4c8:	d01a      	beq.n	800c500 <WM_CreateWindowAsChild+0x184>
 800c4ca:	685b      	ldr	r3, [r3, #4]
 800c4cc:	429d      	cmp	r5, r3
 800c4ce:	d016      	beq.n	800c4fe <WM_CreateWindowAsChild+0x182>
 800c4d0:	f7fb f946 	bl	8007760 <LCD_SetClipRectMax>
 800c4d4:	4620      	mov	r0, r4
 800c4d6:	f7f8 fcc3 	bl	8004e60 <GUI_ALLOC_h2p>
 800c4da:	6833      	ldr	r3, [r6, #0]
 800c4dc:	f9b0 1000 	ldrsh.w	r1, [r0]
 800c4e0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c4e4:	651a      	str	r2, [r3, #80]	; 0x50
 800c4e6:	64d9      	str	r1, [r3, #76]	; 0x4c
 800c4e8:	e7b1      	b.n	800c44e <WM_CreateWindowAsChild+0xd2>
 800c4ea:	f7f8 fcb9 	bl	8004e60 <GUI_ALLOC_h2p>
 800c4ee:	4605      	mov	r5, r0
 800c4f0:	4620      	mov	r0, r4
 800c4f2:	f7f8 fcb5 	bl	8004e60 <GUI_ALLOC_h2p>
 800c4f6:	696b      	ldr	r3, [r5, #20]
 800c4f8:	6143      	str	r3, [r0, #20]
 800c4fa:	616c      	str	r4, [r5, #20]
 800c4fc:	e7a0      	b.n	800c440 <WM_CreateWindowAsChild+0xc4>
 800c4fe:	2001      	movs	r0, #1
 800c500:	f7f9 feee 	bl	80062e0 <GUI_SelectLayer>
 800c504:	e7e4      	b.n	800c4d0 <WM_CreateWindowAsChild+0x154>
 800c506:	4620      	mov	r0, r4
 800c508:	f7f8 fcb4 	bl	8004e74 <GUI_ALLOC_LockH>
 800c50c:	4603      	mov	r3, r0
 800c50e:	4658      	mov	r0, fp
 800c510:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c512:	9300      	str	r3, [sp, #0]
 800c514:	f042 0202 	orr.w	r2, r2, #2
 800c518:	629a      	str	r2, [r3, #40]	; 0x28
 800c51a:	f7f8 fcbd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c51e:	2100      	movs	r1, #0
 800c520:	4620      	mov	r0, r4
 800c522:	f7ff fbbd 	bl	800bca0 <WM_InvalidateRect.part.2>
 800c526:	e79b      	b.n	800c460 <WM_CreateWindowAsChild+0xe4>
 800c528:	2001c1f0 	.word	0x2001c1f0
 800c52c:	2001c1b8 	.word	0x2001c1b8
 800c530:	003f3f9f 	.word	0x003f3f9f
 800c534:	2001c1dc 	.word	0x2001c1dc
 800c538:	20000018 	.word	0x20000018
 800c53c:	2001c1c0 	.word	0x2001c1c0
 800c540:	2001c210 	.word	0x2001c210

0800c544 <WM_DeleteWindow>:
 800c544:	b108      	cbz	r0, 800c54a <WM_DeleteWindow+0x6>
 800c546:	f7ff bc6d 	b.w	800be24 <WM_DeleteWindow.part.3>
 800c54a:	4770      	bx	lr

0800c54c <WM__GetTopLevelLayer>:
 800c54c:	b510      	push	{r4, lr}
 800c54e:	4604      	mov	r4, r0
 800c550:	e000      	b.n	800c554 <WM__GetTopLevelLayer+0x8>
 800c552:	461c      	mov	r4, r3
 800c554:	4620      	mov	r0, r4
 800c556:	f7f8 fc83 	bl	8004e60 <GUI_ALLOC_h2p>
 800c55a:	6983      	ldr	r3, [r0, #24]
 800c55c:	2b00      	cmp	r3, #0
 800c55e:	d1f8      	bne.n	800c552 <WM__GetTopLevelLayer+0x6>
 800c560:	4a06      	ldr	r2, [pc, #24]	; (800c57c <WM__GetTopLevelLayer+0x30>)
 800c562:	6811      	ldr	r1, [r2, #0]
 800c564:	428c      	cmp	r4, r1
 800c566:	d006      	beq.n	800c576 <WM__GetTopLevelLayer+0x2a>
 800c568:	6853      	ldr	r3, [r2, #4]
 800c56a:	429c      	cmp	r4, r3
 800c56c:	bf0c      	ite	eq
 800c56e:	2001      	moveq	r0, #1
 800c570:	f04f 30ff 	movne.w	r0, #4294967295
 800c574:	bd10      	pop	{r4, pc}
 800c576:	4618      	mov	r0, r3
 800c578:	bd10      	pop	{r4, pc}
 800c57a:	bf00      	nop
 800c57c:	2001c1c0 	.word	0x2001c1c0

0800c580 <WM_GetActiveWindow>:
 800c580:	4b01      	ldr	r3, [pc, #4]	; (800c588 <WM_GetActiveWindow+0x8>)
 800c582:	681b      	ldr	r3, [r3, #0]
 800c584:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c586:	4770      	bx	lr
 800c588:	20000018 	.word	0x20000018

0800c58c <WM__GetNextIVR>:
 800c58c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c590:	f8df 8240 	ldr.w	r8, [pc, #576]	; 800c7d4 <WM__GetNextIVR+0x248>
 800c594:	f8d8 3000 	ldr.w	r3, [r8]
 800c598:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 800c59c:	b087      	sub	sp, #28
 800c59e:	b130      	cbz	r0, 800c5ae <WM__GetNextIVR+0x22>
 800c5a0:	4e8b      	ldr	r6, [pc, #556]	; (800c7d0 <WM__GetNextIVR+0x244>)
 800c5a2:	6a33      	ldr	r3, [r6, #32]
 800c5a4:	2b01      	cmp	r3, #1
 800c5a6:	dd05      	ble.n	800c5b4 <WM__GetNextIVR+0x28>
 800c5a8:	3b01      	subs	r3, #1
 800c5aa:	6233      	str	r3, [r6, #32]
 800c5ac:	2000      	movs	r0, #0
 800c5ae:	b007      	add	sp, #28
 800c5b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c5b4:	f106 0714 	add.w	r7, r6, #20
 800c5b8:	69f3      	ldr	r3, [r6, #28]
 800c5ba:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c5be:	ad02      	add	r5, sp, #8
 800c5c0:	3301      	adds	r3, #1
 800c5c2:	e885 0003 	stmia.w	r5, {r0, r1}
 800c5c6:	61f3      	str	r3, [r6, #28]
 800c5c8:	b953      	cbnz	r3, 800c5e0 <WM__GetNextIVR+0x54>
 800c5ca:	68f3      	ldr	r3, [r6, #12]
 800c5cc:	9302      	str	r3, [sp, #8]
 800c5ce:	f9b6 300e 	ldrsh.w	r3, [r6, #14]
 800c5d2:	f9b6 2012 	ldrsh.w	r2, [r6, #18]
 800c5d6:	4c7e      	ldr	r4, [pc, #504]	; (800c7d0 <WM__GetNextIVR+0x244>)
 800c5d8:	429a      	cmp	r2, r3
 800c5da:	da17      	bge.n	800c60c <WM__GetNextIVR+0x80>
 800c5dc:	6a33      	ldr	r3, [r6, #32]
 800c5de:	e7e3      	b.n	800c5a8 <WM__GetNextIVR+0x1c>
 800c5e0:	8b32      	ldrh	r2, [r6, #24]
 800c5e2:	f9b6 1010 	ldrsh.w	r1, [r6, #16]
 800c5e6:	f9b6 3016 	ldrsh.w	r3, [r6, #22]
 800c5ea:	f8ad 300a 	strh.w	r3, [sp, #10]
 800c5ee:	3201      	adds	r2, #1
 800c5f0:	b212      	sxth	r2, r2
 800c5f2:	4291      	cmp	r1, r2
 800c5f4:	f8ad 2008 	strh.w	r2, [sp, #8]
 800c5f8:	daeb      	bge.n	800c5d2 <WM__GetNextIVR+0x46>
 800c5fa:	8b73      	ldrh	r3, [r6, #26]
 800c5fc:	89b2      	ldrh	r2, [r6, #12]
 800c5fe:	f8ad 2008 	strh.w	r2, [sp, #8]
 800c602:	3301      	adds	r3, #1
 800c604:	b21b      	sxth	r3, r3
 800c606:	f8ad 300a 	strh.w	r3, [sp, #10]
 800c60a:	e7e2      	b.n	800c5d2 <WM__GetNextIVR+0x46>
 800c60c:	f8d8 3000 	ldr.w	r3, [r8]
 800c610:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800c7d4 <WM__GetNextIVR+0x248>
 800c614:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c616:	f7f8 fc2d 	bl	8004e74 <GUI_ALLOC_LockH>
 800c61a:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c61e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800c622:	9000      	str	r0, [sp, #0]
 800c624:	4299      	cmp	r1, r3
 800c626:	4602      	mov	r2, r0
 800c628:	f000 80b9 	beq.w	800c79e <WM__GetNextIVR+0x212>
 800c62c:	f8d8 2000 	ldr.w	r2, [r8]
 800c630:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c634:	6c90      	ldr	r0, [r2, #72]	; 0x48
 800c636:	b910      	cbnz	r0, 800c63e <WM__GetNextIVR+0xb2>
 800c638:	e00d      	b.n	800c656 <WM__GetNextIVR+0xca>
 800c63a:	69a0      	ldr	r0, [r4, #24]
 800c63c:	b158      	cbz	r0, 800c656 <WM__GetNextIVR+0xca>
 800c63e:	f7f8 fc0f 	bl	8004e60 <GUI_ALLOC_h2p>
 800c642:	4629      	mov	r1, r5
 800c644:	4604      	mov	r4, r0
 800c646:	6a00      	ldr	r0, [r0, #32]
 800c648:	f7fe fcea 	bl	800b020 <_Findx0.constprop.10>
 800c64c:	2800      	cmp	r0, #0
 800c64e:	d0f4      	beq.n	800c63a <WM__GetNextIVR+0xae>
 800c650:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c654:	e7ea      	b.n	800c62c <WM__GetNextIVR+0xa0>
 800c656:	9b00      	ldr	r3, [sp, #0]
 800c658:	4629      	mov	r1, r5
 800c65a:	69d8      	ldr	r0, [r3, #28]
 800c65c:	f7fe fce0 	bl	800b020 <_Findx0.constprop.10>
 800c660:	2800      	cmp	r0, #0
 800c662:	d1f5      	bne.n	800c650 <WM__GetNextIVR+0xc4>
 800c664:	f9b6 3010 	ldrsh.w	r3, [r6, #16]
 800c668:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800c66c:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c670:	429a      	cmp	r2, r3
 800c672:	f300 808c 	bgt.w	800c78e <WM__GetNextIVR+0x202>
 800c676:	f8d8 3000 	ldr.w	r3, [r8]
 800c67a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800c67c:	f10d 0810 	add.w	r8, sp, #16
 800c680:	b368      	cbz	r0, 800c6de <WM__GetNextIVR+0x152>
 800c682:	f7f8 fbed 	bl	8004e60 <GUI_ALLOC_h2p>
 800c686:	6a04      	ldr	r4, [r0, #32]
 800c688:	4681      	mov	r9, r0
 800c68a:	b96c      	cbnz	r4, 800c6a8 <WM__GetNextIVR+0x11c>
 800c68c:	e023      	b.n	800c6d6 <WM__GetNextIVR+0x14a>
 800c68e:	07e1      	lsls	r1, r4, #31
 800c690:	d44b      	bmi.n	800c72a <WM__GetNextIVR+0x19e>
 800c692:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800c696:	9801      	ldr	r0, [sp, #4]
 800c698:	3b01      	subs	r3, #1
 800c69a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c69e:	6a04      	ldr	r4, [r0, #32]
 800c6a0:	a801      	add	r0, sp, #4
 800c6a2:	f7f8 fbf9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c6a6:	b1b4      	cbz	r4, 800c6d6 <WM__GetNextIVR+0x14a>
 800c6a8:	4620      	mov	r0, r4
 800c6aa:	f7f8 fbe3 	bl	8004e74 <GUI_ALLOC_LockH>
 800c6ae:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c6b0:	9001      	str	r0, [sp, #4]
 800c6b2:	07a3      	lsls	r3, r4, #30
 800c6b4:	d5f3      	bpl.n	800c69e <WM__GetNextIVR+0x112>
 800c6b6:	c803      	ldmia	r0, {r0, r1}
 800c6b8:	e888 0003 	stmia.w	r8, {r0, r1}
 800c6bc:	4641      	mov	r1, r8
 800c6be:	4628      	mov	r0, r5
 800c6c0:	f7f8 ff32 	bl	8005528 <GUI_RectsIntersect>
 800c6c4:	2800      	cmp	r0, #0
 800c6c6:	d1e2      	bne.n	800c68e <WM__GetNextIVR+0x102>
 800c6c8:	9801      	ldr	r0, [sp, #4]
 800c6ca:	6a04      	ldr	r4, [r0, #32]
 800c6cc:	a801      	add	r0, sp, #4
 800c6ce:	f7f8 fbe3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c6d2:	2c00      	cmp	r4, #0
 800c6d4:	d1e8      	bne.n	800c6a8 <WM__GetNextIVR+0x11c>
 800c6d6:	f8d9 0018 	ldr.w	r0, [r9, #24]
 800c6da:	2800      	cmp	r0, #0
 800c6dc:	d1d1      	bne.n	800c682 <WM__GetNextIVR+0xf6>
 800c6de:	9b00      	ldr	r3, [sp, #0]
 800c6e0:	69dc      	ldr	r4, [r3, #28]
 800c6e2:	f10d 0810 	add.w	r8, sp, #16
 800c6e6:	b974      	cbnz	r4, 800c706 <WM__GetNextIVR+0x17a>
 800c6e8:	e040      	b.n	800c76c <WM__GetNextIVR+0x1e0>
 800c6ea:	07e3      	lsls	r3, r4, #31
 800c6ec:	d42e      	bmi.n	800c74c <WM__GetNextIVR+0x1c0>
 800c6ee:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800c6f2:	9801      	ldr	r0, [sp, #4]
 800c6f4:	3b01      	subs	r3, #1
 800c6f6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c6fa:	6a04      	ldr	r4, [r0, #32]
 800c6fc:	a801      	add	r0, sp, #4
 800c6fe:	f7f8 fbcb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c702:	2c00      	cmp	r4, #0
 800c704:	d032      	beq.n	800c76c <WM__GetNextIVR+0x1e0>
 800c706:	4620      	mov	r0, r4
 800c708:	f7f8 fbb4 	bl	8004e74 <GUI_ALLOC_LockH>
 800c70c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c70e:	9001      	str	r0, [sp, #4]
 800c710:	07a2      	lsls	r2, r4, #30
 800c712:	d5f2      	bpl.n	800c6fa <WM__GetNextIVR+0x16e>
 800c714:	c803      	ldmia	r0, {r0, r1}
 800c716:	e888 0003 	stmia.w	r8, {r0, r1}
 800c71a:	4641      	mov	r1, r8
 800c71c:	4628      	mov	r0, r5
 800c71e:	f7f8 ff03 	bl	8005528 <GUI_RectsIntersect>
 800c722:	2800      	cmp	r0, #0
 800c724:	d1e1      	bne.n	800c6ea <WM__GetNextIVR+0x15e>
 800c726:	9801      	ldr	r0, [sp, #4]
 800c728:	e7e7      	b.n	800c6fa <WM__GetNextIVR+0x16e>
 800c72a:	9801      	ldr	r0, [sp, #4]
 800c72c:	69c4      	ldr	r4, [r0, #28]
 800c72e:	2c00      	cmp	r4, #0
 800c730:	d0b5      	beq.n	800c69e <WM__GetNextIVR+0x112>
 800c732:	4620      	mov	r0, r4
 800c734:	4642      	mov	r2, r8
 800c736:	4629      	mov	r1, r5
 800c738:	f7fe fb60 	bl	800adfc <_Findx1>
 800c73c:	4620      	mov	r0, r4
 800c73e:	f7f8 fb8f 	bl	8004e60 <GUI_ALLOC_h2p>
 800c742:	6a04      	ldr	r4, [r0, #32]
 800c744:	2c00      	cmp	r4, #0
 800c746:	d1f4      	bne.n	800c732 <WM__GetNextIVR+0x1a6>
 800c748:	9801      	ldr	r0, [sp, #4]
 800c74a:	e7be      	b.n	800c6ca <WM__GetNextIVR+0x13e>
 800c74c:	9801      	ldr	r0, [sp, #4]
 800c74e:	69c4      	ldr	r4, [r0, #28]
 800c750:	2c00      	cmp	r4, #0
 800c752:	d0d2      	beq.n	800c6fa <WM__GetNextIVR+0x16e>
 800c754:	4620      	mov	r0, r4
 800c756:	4642      	mov	r2, r8
 800c758:	4629      	mov	r1, r5
 800c75a:	f7fe fb4f 	bl	800adfc <_Findx1>
 800c75e:	4620      	mov	r0, r4
 800c760:	f7f8 fb7e 	bl	8004e60 <GUI_ALLOC_h2p>
 800c764:	6a04      	ldr	r4, [r0, #32]
 800c766:	2c00      	cmp	r4, #0
 800c768:	d1f4      	bne.n	800c754 <WM__GetNextIVR+0x1c8>
 800c76a:	e7dc      	b.n	800c726 <WM__GetNextIVR+0x19a>
 800c76c:	4668      	mov	r0, sp
 800c76e:	f7f8 fb93 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c772:	69f2      	ldr	r2, [r6, #28]
 800c774:	f644 6320 	movw	r3, #20000	; 0x4e20
 800c778:	429a      	cmp	r2, r3
 800c77a:	f73f af2f 	bgt.w	800c5dc <WM__GetNextIVR+0x50>
 800c77e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c782:	e887 0003 	stmia.w	r7, {r0, r1}
 800c786:	f7fe fde3 	bl	800b350 <WM__ActivateClipRect>
 800c78a:	2001      	movs	r0, #1
 800c78c:	e70f      	b.n	800c5ae <WM__GetNextIVR+0x22>
 800c78e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c792:	e887 0003 	stmia.w	r7, {r0, r1}
 800c796:	4668      	mov	r0, sp
 800c798:	f7f8 fb7e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c79c:	e72d      	b.n	800c5fa <WM__GetNextIVR+0x6e>
 800c79e:	f8d9 1000 	ldr.w	r1, [r9]
 800c7a2:	6923      	ldr	r3, [r4, #16]
 800c7a4:	6c88      	ldr	r0, [r1, #72]	; 0x48
 800c7a6:	9303      	str	r3, [sp, #12]
 800c7a8:	b150      	cbz	r0, 800c7c0 <WM__GetNextIVR+0x234>
 800c7aa:	f7f8 fb59 	bl	8004e60 <GUI_ALLOC_h2p>
 800c7ae:	4604      	mov	r4, r0
 800c7b0:	4629      	mov	r1, r5
 800c7b2:	6a00      	ldr	r0, [r0, #32]
 800c7b4:	f7fe fc7a 	bl	800b0ac <_Findy1.constprop.11>
 800c7b8:	69a0      	ldr	r0, [r4, #24]
 800c7ba:	2800      	cmp	r0, #0
 800c7bc:	d1f5      	bne.n	800c7aa <WM__GetNextIVR+0x21e>
 800c7be:	9a00      	ldr	r2, [sp, #0]
 800c7c0:	69d0      	ldr	r0, [r2, #28]
 800c7c2:	4629      	mov	r1, r5
 800c7c4:	f7fe fc72 	bl	800b0ac <_Findy1.constprop.11>
 800c7c8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c7cc:	e72e      	b.n	800c62c <WM__GetNextIVR+0xa0>
 800c7ce:	bf00      	nop
 800c7d0:	20000550 	.word	0x20000550
 800c7d4:	20000018 	.word	0x20000018

0800c7d8 <WM__InitIVRSearch>:
 800c7d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c7dc:	4c5e      	ldr	r4, [pc, #376]	; (800c958 <WM__InitIVRSearch+0x180>)
 800c7de:	6822      	ldr	r2, [r4, #0]
 800c7e0:	f892 3054 	ldrb.w	r3, [r2, #84]	; 0x54
 800c7e4:	b089      	sub	sp, #36	; 0x24
 800c7e6:	b14b      	cbz	r3, 800c7fc <WM__InitIVRSearch+0x24>
 800c7e8:	4d5c      	ldr	r5, [pc, #368]	; (800c95c <WM__InitIVRSearch+0x184>)
 800c7ea:	6a2b      	ldr	r3, [r5, #32]
 800c7ec:	3301      	adds	r3, #1
 800c7ee:	2b01      	cmp	r3, #1
 800c7f0:	622b      	str	r3, [r5, #32]
 800c7f2:	dd09      	ble.n	800c808 <WM__InitIVRSearch+0x30>
 800c7f4:	2001      	movs	r0, #1
 800c7f6:	b009      	add	sp, #36	; 0x24
 800c7f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c7fc:	f7fe fda8 	bl	800b350 <WM__ActivateClipRect>
 800c800:	2001      	movs	r0, #1
 800c802:	b009      	add	sp, #36	; 0x24
 800c804:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c808:	4607      	mov	r7, r0
 800c80a:	6c90      	ldr	r0, [r2, #72]	; 0x48
 800c80c:	f7f8 fb32 	bl	8004e74 <GUI_ALLOC_LockH>
 800c810:	4b53      	ldr	r3, [pc, #332]	; (800c960 <WM__InitIVRSearch+0x188>)
 800c812:	9001      	str	r0, [sp, #4]
 800c814:	781b      	ldrb	r3, [r3, #0]
 800c816:	f04f 32ff 	mov.w	r2, #4294967295
 800c81a:	61ea      	str	r2, [r5, #28]
 800c81c:	2b00      	cmp	r3, #0
 800c81e:	d061      	beq.n	800c8e4 <WM__InitIVRSearch+0x10c>
 800c820:	3008      	adds	r0, #8
 800c822:	c803      	ldmia	r0, {r0, r1}
 800c824:	ae04      	add	r6, sp, #16
 800c826:	e886 0003 	stmia.w	r6, {r0, r1}
 800c82a:	b11f      	cbz	r7, 800c834 <WM__InitIVRSearch+0x5c>
 800c82c:	4639      	mov	r1, r7
 800c82e:	4630      	mov	r0, r6
 800c830:	f7fa f8fc 	bl	8006a2c <GUI__IntersectRect>
 800c834:	6823      	ldr	r3, [r4, #0]
 800c836:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c838:	2b00      	cmp	r3, #0
 800c83a:	f000 8087 	beq.w	800c94c <WM__InitIVRSearch+0x174>
 800c83e:	4f49      	ldr	r7, [pc, #292]	; (800c964 <WM__InitIVRSearch+0x18c>)
 800c840:	6818      	ldr	r0, [r3, #0]
 800c842:	6859      	ldr	r1, [r3, #4]
 800c844:	683a      	ldr	r2, [r7, #0]
 800c846:	ab06      	add	r3, sp, #24
 800c848:	c303      	stmia	r3!, {r0, r1}
 800c84a:	9801      	ldr	r0, [sp, #4]
 800c84c:	9002      	str	r0, [sp, #8]
 800c84e:	f10d 0808 	add.w	r8, sp, #8
 800c852:	2a00      	cmp	r2, #0
 800c854:	d160      	bne.n	800c918 <WM__InitIVRSearch+0x140>
 800c856:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c85a:	f9b0 1000 	ldrsh.w	r1, [r0]
 800c85e:	a806      	add	r0, sp, #24
 800c860:	f7f8 fdc6 	bl	80053f0 <GUI_MoveRect>
 800c864:	4630      	mov	r0, r6
 800c866:	a906      	add	r1, sp, #24
 800c868:	f7fa f8e0 	bl	8006a2c <GUI__IntersectRect>
 800c86c:	4640      	mov	r0, r8
 800c86e:	f7f8 fb13 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c872:	f8d7 9000 	ldr.w	r9, [r7]
 800c876:	f10d 080c 	add.w	r8, sp, #12
 800c87a:	f1b9 0f00 	cmp.w	r9, #0
 800c87e:	d126      	bne.n	800c8ce <WM__InitIVRSearch+0xf6>
 800c880:	6823      	ldr	r3, [r4, #0]
 800c882:	6c9f      	ldr	r7, [r3, #72]	; 0x48
 800c884:	e008      	b.n	800c898 <WM__InitIVRSearch+0xc0>
 800c886:	f7fa f8d1 	bl	8006a2c <GUI__IntersectRect>
 800c88a:	9b03      	ldr	r3, [sp, #12]
 800c88c:	699c      	ldr	r4, [r3, #24]
 800c88e:	4640      	mov	r0, r8
 800c890:	b38c      	cbz	r4, 800c8f6 <WM__InitIVRSearch+0x11e>
 800c892:	f7f8 fb01 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c896:	4627      	mov	r7, r4
 800c898:	4638      	mov	r0, r7
 800c89a:	f7f8 faeb 	bl	8004e74 <GUI_ALLOC_LockH>
 800c89e:	4603      	mov	r3, r0
 800c8a0:	4601      	mov	r1, r0
 800c8a2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c8a4:	9303      	str	r3, [sp, #12]
 800c8a6:	0793      	lsls	r3, r2, #30
 800c8a8:	4630      	mov	r0, r6
 800c8aa:	d4ec      	bmi.n	800c886 <WM__InitIVRSearch+0xae>
 800c8ac:	4640      	mov	r0, r8
 800c8ae:	f7f8 faf3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c8b2:	6a2b      	ldr	r3, [r5, #32]
 800c8b4:	3b01      	subs	r3, #1
 800c8b6:	622b      	str	r3, [r5, #32]
 800c8b8:	2000      	movs	r0, #0
 800c8ba:	e79c      	b.n	800c7f6 <WM__InitIVRSearch+0x1e>
 800c8bc:	f7fa f8b6 	bl	8006a2c <GUI__IntersectRect>
 800c8c0:	9b03      	ldr	r3, [sp, #12]
 800c8c2:	699f      	ldr	r7, [r3, #24]
 800c8c4:	4640      	mov	r0, r8
 800c8c6:	b37f      	cbz	r7, 800c928 <WM__InitIVRSearch+0x150>
 800c8c8:	f7f8 fae6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c8cc:	46b9      	mov	r9, r7
 800c8ce:	4648      	mov	r0, r9
 800c8d0:	f7f8 fad0 	bl	8004e74 <GUI_ALLOC_LockH>
 800c8d4:	4603      	mov	r3, r0
 800c8d6:	4601      	mov	r1, r0
 800c8d8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c8da:	9303      	str	r3, [sp, #12]
 800c8dc:	0792      	lsls	r2, r2, #30
 800c8de:	4630      	mov	r0, r6
 800c8e0:	d5e4      	bpl.n	800c8ac <WM__InitIVRSearch+0xd4>
 800c8e2:	e7eb      	b.n	800c8bc <WM__InitIVRSearch+0xe4>
 800c8e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c8e6:	f013 0602 	ands.w	r6, r3, #2
 800c8ea:	d027      	beq.n	800c93c <WM__InitIVRSearch+0x164>
 800c8ec:	c803      	ldmia	r0, {r0, r1}
 800c8ee:	ae04      	add	r6, sp, #16
 800c8f0:	e886 0003 	stmia.w	r6, {r0, r1}
 800c8f4:	e799      	b.n	800c82a <WM__InitIVRSearch+0x52>
 800c8f6:	f7f8 facf 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c8fa:	4b1b      	ldr	r3, [pc, #108]	; (800c968 <WM__InitIVRSearch+0x190>)
 800c8fc:	681a      	ldr	r2, [r3, #0]
 800c8fe:	4297      	cmp	r7, r2
 800c900:	d002      	beq.n	800c908 <WM__InitIVRSearch+0x130>
 800c902:	685b      	ldr	r3, [r3, #4]
 800c904:	429f      	cmp	r7, r3
 800c906:	d1d4      	bne.n	800c8b2 <WM__InitIVRSearch+0xda>
 800c908:	e896 0003 	ldmia.w	r6, {r0, r1}
 800c90c:	4b17      	ldr	r3, [pc, #92]	; (800c96c <WM__InitIVRSearch+0x194>)
 800c90e:	e883 0003 	stmia.w	r3, {r0, r1}
 800c912:	f7ff fe3b 	bl	800c58c <WM__GetNextIVR>
 800c916:	e76e      	b.n	800c7f6 <WM__InitIVRSearch+0x1e>
 800c918:	4640      	mov	r0, r8
 800c91a:	f7f8 fabd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c91e:	6838      	ldr	r0, [r7, #0]
 800c920:	f7f8 faa8 	bl	8004e74 <GUI_ALLOC_LockH>
 800c924:	9002      	str	r0, [sp, #8]
 800c926:	e796      	b.n	800c856 <WM__InitIVRSearch+0x7e>
 800c928:	f7f8 fab6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c92c:	4b0e      	ldr	r3, [pc, #56]	; (800c968 <WM__InitIVRSearch+0x190>)
 800c92e:	681a      	ldr	r2, [r3, #0]
 800c930:	4591      	cmp	r9, r2
 800c932:	d0a5      	beq.n	800c880 <WM__InitIVRSearch+0xa8>
 800c934:	685b      	ldr	r3, [r3, #4]
 800c936:	4599      	cmp	r9, r3
 800c938:	d0a2      	beq.n	800c880 <WM__InitIVRSearch+0xa8>
 800c93a:	e7ba      	b.n	800c8b2 <WM__InitIVRSearch+0xda>
 800c93c:	6a2b      	ldr	r3, [r5, #32]
 800c93e:	a801      	add	r0, sp, #4
 800c940:	3b01      	subs	r3, #1
 800c942:	622b      	str	r3, [r5, #32]
 800c944:	f7f8 faa8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c948:	4630      	mov	r0, r6
 800c94a:	e754      	b.n	800c7f6 <WM__InitIVRSearch+0x1e>
 800c94c:	a801      	add	r0, sp, #4
 800c94e:	f7f8 faa3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c952:	4f04      	ldr	r7, [pc, #16]	; (800c964 <WM__InitIVRSearch+0x18c>)
 800c954:	e78d      	b.n	800c872 <WM__InitIVRSearch+0x9a>
 800c956:	bf00      	nop
 800c958:	20000018 	.word	0x20000018
 800c95c:	20000550 	.word	0x20000550
 800c960:	2001c1ec 	.word	0x2001c1ec
 800c964:	2001c1bc 	.word	0x2001c1bc
 800c968:	2001c1c0 	.word	0x2001c1c0
 800c96c:	2000055c 	.word	0x2000055c

0800c970 <WM__Paint1>:
 800c970:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c974:	b089      	sub	sp, #36	; 0x24
 800c976:	4606      	mov	r6, r0
 800c978:	f7f8 fa7c 	bl	8004e74 <GUI_ALLOC_LockH>
 800c97c:	f100 0208 	add.w	r2, r0, #8
 800c980:	4603      	mov	r3, r0
 800c982:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c986:	ac02      	add	r4, sp, #8
 800c988:	691f      	ldr	r7, [r3, #16]
 800c98a:	9301      	str	r3, [sp, #4]
 800c98c:	e884 0003 	stmia.w	r4, {r0, r1}
 800c990:	a801      	add	r0, sp, #4
 800c992:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c994:	f7f8 fa80 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800c998:	b10f      	cbz	r7, 800c99e <WM__Paint1+0x2e>
 800c99a:	07ab      	lsls	r3, r5, #30
 800c99c:	d402      	bmi.n	800c9a4 <WM__Paint1+0x34>
 800c99e:	b009      	add	sp, #36	; 0x24
 800c9a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9a4:	4f1e      	ldr	r7, [pc, #120]	; (800ca20 <WM__Paint1+0xb0>)
 800c9a6:	212e      	movs	r1, #46	; 0x2e
 800c9a8:	4630      	mov	r0, r6
 800c9aa:	f000 ff15 	bl	800d7d8 <WM_SendMessageNoPara>
 800c9ae:	783b      	ldrb	r3, [r7, #0]
 800c9b0:	f415 5580 	ands.w	r5, r5, #4096	; 0x1000
 800c9b4:	f103 0301 	add.w	r3, r3, #1
 800c9b8:	703b      	strb	r3, [r7, #0]
 800c9ba:	d119      	bne.n	800c9f0 <WM__Paint1+0x80>
 800c9bc:	4620      	mov	r0, r4
 800c9be:	f7ff ff0b 	bl	800c7d8 <WM__InitIVRSearch>
 800c9c2:	b318      	cbz	r0, 800ca0c <WM__Paint1+0x9c>
 800c9c4:	f8df 905c 	ldr.w	r9, [pc, #92]	; 800ca24 <WM__Paint1+0xb4>
 800c9c8:	f04f 080f 	mov.w	r8, #15
 800c9cc:	9605      	str	r6, [sp, #20]
 800c9ce:	f8cd 8010 	str.w	r8, [sp, #16]
 800c9d2:	9407      	str	r4, [sp, #28]
 800c9d4:	f7f8 fde8 	bl	80055a8 <GL_SetDefault>
 800c9d8:	f8d9 3000 	ldr.w	r3, [r9]
 800c9dc:	a904      	add	r1, sp, #16
 800c9de:	645d      	str	r5, [r3, #68]	; 0x44
 800c9e0:	4630      	mov	r0, r6
 800c9e2:	f001 fe13 	bl	800e60c <WM__SendMessage>
 800c9e6:	f7ff fdd1 	bl	800c58c <WM__GetNextIVR>
 800c9ea:	2800      	cmp	r0, #0
 800c9ec:	d1ee      	bne.n	800c9cc <WM__Paint1+0x5c>
 800c9ee:	e00d      	b.n	800ca0c <WM__Paint1+0x9c>
 800c9f0:	230f      	movs	r3, #15
 800c9f2:	9304      	str	r3, [sp, #16]
 800c9f4:	9605      	str	r6, [sp, #20]
 800c9f6:	9407      	str	r4, [sp, #28]
 800c9f8:	f7f8 fdd6 	bl	80055a8 <GL_SetDefault>
 800c9fc:	4b09      	ldr	r3, [pc, #36]	; (800ca24 <WM__Paint1+0xb4>)
 800c9fe:	681b      	ldr	r3, [r3, #0]
 800ca00:	2200      	movs	r2, #0
 800ca02:	645a      	str	r2, [r3, #68]	; 0x44
 800ca04:	a904      	add	r1, sp, #16
 800ca06:	4630      	mov	r0, r6
 800ca08:	f001 fe00 	bl	800e60c <WM__SendMessage>
 800ca0c:	783b      	ldrb	r3, [r7, #0]
 800ca0e:	4630      	mov	r0, r6
 800ca10:	3b01      	subs	r3, #1
 800ca12:	212f      	movs	r1, #47	; 0x2f
 800ca14:	703b      	strb	r3, [r7, #0]
 800ca16:	f000 fedf 	bl	800d7d8 <WM_SendMessageNoPara>
 800ca1a:	b009      	add	sp, #36	; 0x24
 800ca1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ca20:	2001c1ec 	.word	0x2001c1ec
 800ca24:	20000018 	.word	0x20000018

0800ca28 <WM__DeleteSecure>:
 800ca28:	b508      	push	{r3, lr}
 800ca2a:	f7f8 fa19 	bl	8004e60 <GUI_ALLOC_h2p>
 800ca2e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ca30:	4a03      	ldr	r2, [pc, #12]	; (800ca40 <WM__DeleteSecure+0x18>)
 800ca32:	2101      	movs	r1, #1
 800ca34:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800ca38:	6283      	str	r3, [r0, #40]	; 0x28
 800ca3a:	6051      	str	r1, [r2, #4]
 800ca3c:	bd08      	pop	{r3, pc}
 800ca3e:	bf00      	nop
 800ca40:	20000550 	.word	0x20000550

0800ca44 <WM_Exec>:
 800ca44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca48:	4b96      	ldr	r3, [pc, #600]	; (800cca4 <WM_Exec+0x260>)
 800ca4a:	681b      	ldr	r3, [r3, #0]
 800ca4c:	b0ab      	sub	sp, #172	; 0xac
 800ca4e:	b103      	cbz	r3, 800ca52 <WM_Exec+0xe>
 800ca50:	4798      	blx	r3
 800ca52:	2300      	movs	r3, #0
 800ca54:	461c      	mov	r4, r3
 800ca56:	e000      	b.n	800ca5a <WM_Exec+0x16>
 800ca58:	2401      	movs	r4, #1
 800ca5a:	f7ff faf7 	bl	800c04c <_Exec1Input>
 800ca5e:	2800      	cmp	r0, #0
 800ca60:	d1fa      	bne.n	800ca58 <WM_Exec+0x14>
 800ca62:	f8df b25c 	ldr.w	fp, [pc, #604]	; 800ccc0 <WM_Exec+0x27c>
 800ca66:	9406      	str	r4, [sp, #24]
 800ca68:	f8db 3000 	ldr.w	r3, [fp]
 800ca6c:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	d04d      	beq.n	800cb10 <WM_Exec+0xcc>
 800ca74:	f8df 924c 	ldr.w	r9, [pc, #588]	; 800ccc4 <WM_Exec+0x280>
 800ca78:	f8b9 2000 	ldrh.w	r2, [r9]
 800ca7c:	2a00      	cmp	r2, #0
 800ca7e:	d053      	beq.n	800cb28 <WM_Exec+0xe4>
 800ca80:	4b89      	ldr	r3, [pc, #548]	; (800cca8 <WM_Exec+0x264>)
 800ca82:	681b      	ldr	r3, [r3, #0]
 800ca84:	2b00      	cmp	r3, #0
 800ca86:	d047      	beq.n	800cb18 <WM_Exec+0xd4>
 800ca88:	681b      	ldr	r3, [r3, #0]
 800ca8a:	4798      	blx	r3
 800ca8c:	f8db 3000 	ldr.w	r3, [fp]
 800ca90:	2201      	movs	r2, #1
 800ca92:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800ca96:	9207      	str	r2, [sp, #28]
 800ca98:	f8df a21c 	ldr.w	sl, [pc, #540]	; 800ccb8 <WM_Exec+0x274>
 800ca9c:	2b00      	cmp	r3, #0
 800ca9e:	d02b      	beq.n	800caf8 <WM_Exec+0xb4>
 800caa0:	f8b9 3000 	ldrh.w	r3, [r9]
 800caa4:	b343      	cbz	r3, 800caf8 <WM_Exec+0xb4>
 800caa6:	4b81      	ldr	r3, [pc, #516]	; (800ccac <WM_Exec+0x268>)
 800caa8:	689e      	ldr	r6, [r3, #8]
 800caaa:	2e00      	cmp	r6, #0
 800caac:	d13e      	bne.n	800cb2c <WM_Exec+0xe8>
 800caae:	aa0d      	add	r2, sp, #52	; 0x34
 800cab0:	4b7f      	ldr	r3, [pc, #508]	; (800ccb0 <WM_Exec+0x26c>)
 800cab2:	9205      	str	r2, [sp, #20]
 800cab4:	4610      	mov	r0, r2
 800cab6:	681e      	ldr	r6, [r3, #0]
 800cab8:	f7f8 fd54 	bl	8005564 <GUI_SaveContext_W>
 800cabc:	f8db 3000 	ldr.w	r3, [fp]
 800cac0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cac2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cac4:	9203      	str	r2, [sp, #12]
 800cac6:	9304      	str	r3, [sp, #16]
 800cac8:	2e00      	cmp	r6, #0
 800caca:	d13a      	bne.n	800cb42 <WM_Exec+0xfe>
 800cacc:	4b77      	ldr	r3, [pc, #476]	; (800ccac <WM_Exec+0x268>)
 800cace:	9803      	ldr	r0, [sp, #12]
 800cad0:	609e      	str	r6, [r3, #8]
 800cad2:	f7f8 fd67 	bl	80055a4 <GUI_SetColor>
 800cad6:	9804      	ldr	r0, [sp, #16]
 800cad8:	f7f8 fd62 	bl	80055a0 <GUI_SetBkColor>
 800cadc:	9805      	ldr	r0, [sp, #20]
 800cade:	f7f8 fd4b 	bl	8005578 <GUI_RestoreContext>
 800cae2:	f8b9 3000 	ldrh.w	r3, [r9]
 800cae6:	b13b      	cbz	r3, 800caf8 <WM_Exec+0xb4>
 800cae8:	f8db 3000 	ldr.w	r3, [fp]
 800caec:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800caf0:	2201      	movs	r2, #1
 800caf2:	9206      	str	r2, [sp, #24]
 800caf4:	2b00      	cmp	r3, #0
 800caf6:	d1d3      	bne.n	800caa0 <WM_Exec+0x5c>
 800caf8:	9b07      	ldr	r3, [sp, #28]
 800cafa:	b14b      	cbz	r3, 800cb10 <WM_Exec+0xcc>
 800cafc:	4b6a      	ldr	r3, [pc, #424]	; (800cca8 <WM_Exec+0x264>)
 800cafe:	6818      	ldr	r0, [r3, #0]
 800cb00:	2800      	cmp	r0, #0
 800cb02:	f000 80c8 	beq.w	800cc96 <WM_Exec+0x252>
 800cb06:	6843      	ldr	r3, [r0, #4]
 800cb08:	4798      	blx	r3
 800cb0a:	4b6a      	ldr	r3, [pc, #424]	; (800ccb4 <WM_Exec+0x270>)
 800cb0c:	2200      	movs	r2, #0
 800cb0e:	601a      	str	r2, [r3, #0]
 800cb10:	9806      	ldr	r0, [sp, #24]
 800cb12:	b02b      	add	sp, #172	; 0xac
 800cb14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb18:	2001      	movs	r0, #1
 800cb1a:	f008 f94f 	bl	8014dbc <GUI__ManageCache>
 800cb1e:	f8db 3000 	ldr.w	r3, [fp]
 800cb22:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800cb26:	2201      	movs	r2, #1
 800cb28:	9207      	str	r2, [sp, #28]
 800cb2a:	e7b5      	b.n	800ca98 <WM_Exec+0x54>
 800cb2c:	ab0d      	add	r3, sp, #52	; 0x34
 800cb2e:	4618      	mov	r0, r3
 800cb30:	9305      	str	r3, [sp, #20]
 800cb32:	f7f8 fd17 	bl	8005564 <GUI_SaveContext_W>
 800cb36:	f8db 3000 	ldr.w	r3, [fp]
 800cb3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cb3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cb3e:	9203      	str	r2, [sp, #12]
 800cb40:	9304      	str	r3, [sp, #16]
 800cb42:	ad0b      	add	r5, sp, #44	; 0x2c
 800cb44:	4630      	mov	r0, r6
 800cb46:	9608      	str	r6, [sp, #32]
 800cb48:	f7f8 f994 	bl	8004e74 <GUI_ALLOC_LockH>
 800cb4c:	f100 0208 	add.w	r2, r0, #8
 800cb50:	4603      	mov	r3, r0
 800cb52:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cb56:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800cb58:	9309      	str	r3, [sp, #36]	; 0x24
 800cb5a:	e885 0003 	stmia.w	r5, {r0, r1}
 800cb5e:	a809      	add	r0, sp, #36	; 0x24
 800cb60:	4617      	mov	r7, r2
 800cb62:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800cb66:	691c      	ldr	r4, [r3, #16]
 800cb68:	9202      	str	r2, [sp, #8]
 800cb6a:	f7f8 f995 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800cb6e:	f244 0320 	movw	r3, #16416	; 0x4020
 800cb72:	403b      	ands	r3, r7
 800cb74:	2b00      	cmp	r3, #0
 800cb76:	d037      	beq.n	800cbe8 <WM_Exec+0x1a4>
 800cb78:	b1d4      	cbz	r4, 800cbb0 <WM_Exec+0x16c>
 800cb7a:	9c08      	ldr	r4, [sp, #32]
 800cb7c:	e009      	b.n	800cb92 <WM_Exec+0x14e>
 800cb7e:	f7f9 ff55 	bl	8006a2c <GUI__IntersectRect>
 800cb82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cb84:	699f      	ldr	r7, [r3, #24]
 800cb86:	a80a      	add	r0, sp, #40	; 0x28
 800cb88:	2f00      	cmp	r7, #0
 800cb8a:	d034      	beq.n	800cbf6 <WM_Exec+0x1b2>
 800cb8c:	f7f8 f984 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800cb90:	463c      	mov	r4, r7
 800cb92:	4620      	mov	r0, r4
 800cb94:	f7f8 f96e 	bl	8004e74 <GUI_ALLOC_LockH>
 800cb98:	4603      	mov	r3, r0
 800cb9a:	4601      	mov	r1, r0
 800cb9c:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 800cb9e:	930a      	str	r3, [sp, #40]	; 0x28
 800cba0:	f017 0702 	ands.w	r7, r7, #2
 800cba4:	4628      	mov	r0, r5
 800cba6:	d1ea      	bne.n	800cb7e <WM_Exec+0x13a>
 800cba8:	a80a      	add	r0, sp, #40	; 0x28
 800cbaa:	f7f8 f975 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800cbae:	463c      	mov	r4, r7
 800cbb0:	9808      	ldr	r0, [sp, #32]
 800cbb2:	f7f8 f95f 	bl	8004e74 <GUI_ALLOC_LockH>
 800cbb6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800cbb8:	9009      	str	r0, [sp, #36]	; 0x24
 800cbba:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 800cbbe:	f023 0320 	bic.w	r3, r3, #32
 800cbc2:	0492      	lsls	r2, r2, #18
 800cbc4:	bf48      	it	mi
 800cbc6:	f043 0304 	orrmi.w	r3, r3, #4
 800cbca:	6283      	str	r3, [r0, #40]	; 0x28
 800cbcc:	a809      	add	r0, sp, #36	; 0x24
 800cbce:	f7f8 f963 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800cbd2:	f8b9 3000 	ldrh.w	r3, [r9]
 800cbd6:	3b01      	subs	r3, #1
 800cbd8:	f8a9 3000 	strh.w	r3, [r9]
 800cbdc:	b124      	cbz	r4, 800cbe8 <WM_Exec+0x1a4>
 800cbde:	4630      	mov	r0, r6
 800cbe0:	f7f8 f93e 	bl	8004e60 <GUI_ALLOC_h2p>
 800cbe4:	6946      	ldr	r6, [r0, #20]
 800cbe6:	e771      	b.n	800cacc <WM_Exec+0x88>
 800cbe8:	4630      	mov	r0, r6
 800cbea:	f7f8 f939 	bl	8004e60 <GUI_ALLOC_h2p>
 800cbee:	6946      	ldr	r6, [r0, #20]
 800cbf0:	2e00      	cmp	r6, #0
 800cbf2:	d1a7      	bne.n	800cb44 <WM_Exec+0x100>
 800cbf4:	e76a      	b.n	800cacc <WM_Exec+0x88>
 800cbf6:	f7f8 f94f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800cbfa:	f8da 2000 	ldr.w	r2, [sl]
 800cbfe:	42a2      	cmp	r2, r4
 800cc00:	d005      	beq.n	800cc0e <WM_Exec+0x1ca>
 800cc02:	4b2d      	ldr	r3, [pc, #180]	; (800ccb8 <WM_Exec+0x274>)
 800cc04:	685a      	ldr	r2, [r3, #4]
 800cc06:	4294      	cmp	r4, r2
 800cc08:	d001      	beq.n	800cc0e <WM_Exec+0x1ca>
 800cc0a:	2400      	movs	r4, #0
 800cc0c:	e7d0      	b.n	800cbb0 <WM_Exec+0x16c>
 800cc0e:	9c08      	ldr	r4, [sp, #32]
 800cc10:	f8db 3000 	ldr.w	r3, [fp]
 800cc14:	b90c      	cbnz	r4, 800cc1a <WM_Exec+0x1d6>
 800cc16:	4a26      	ldr	r2, [pc, #152]	; (800ccb0 <WM_Exec+0x26c>)
 800cc18:	6814      	ldr	r4, [r2, #0]
 800cc1a:	649c      	str	r4, [r3, #72]	; 0x48
 800cc1c:	4627      	mov	r7, r4
 800cc1e:	e000      	b.n	800cc22 <WM_Exec+0x1de>
 800cc20:	461f      	mov	r7, r3
 800cc22:	4638      	mov	r0, r7
 800cc24:	f7f8 f91c 	bl	8004e60 <GUI_ALLOC_h2p>
 800cc28:	6983      	ldr	r3, [r0, #24]
 800cc2a:	2b00      	cmp	r3, #0
 800cc2c:	d1f8      	bne.n	800cc20 <WM_Exec+0x1dc>
 800cc2e:	f8da 1000 	ldr.w	r1, [sl]
 800cc32:	42b9      	cmp	r1, r7
 800cc34:	d02d      	beq.n	800cc92 <WM_Exec+0x24e>
 800cc36:	f8da 3004 	ldr.w	r3, [sl, #4]
 800cc3a:	42bb      	cmp	r3, r7
 800cc3c:	d025      	beq.n	800cc8a <WM_Exec+0x246>
 800cc3e:	f7fa fd8f 	bl	8007760 <LCD_SetClipRectMax>
 800cc42:	4620      	mov	r0, r4
 800cc44:	f7f8 f90c 	bl	8004e60 <GUI_ALLOC_h2p>
 800cc48:	f8db 3000 	ldr.w	r3, [fp]
 800cc4c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cc50:	f9b0 1000 	ldrsh.w	r1, [r0]
 800cc54:	651a      	str	r2, [r3, #80]	; 0x50
 800cc56:	9a02      	ldr	r2, [sp, #8]
 800cc58:	64d9      	str	r1, [r3, #76]	; 0x4c
 800cc5a:	0751      	lsls	r1, r2, #29
 800cc5c:	d510      	bpl.n	800cc80 <WM_Exec+0x23c>
 800cc5e:	f1b8 0f00 	cmp.w	r8, #0
 800cc62:	d00b      	beq.n	800cc7c <WM_Exec+0x238>
 800cc64:	f002 0301 	and.w	r3, r2, #1
 800cc68:	f083 0301 	eor.w	r3, r3, #1
 800cc6c:	9300      	str	r3, [sp, #0]
 800cc6e:	aa08      	add	r2, sp, #32
 800cc70:	2300      	movs	r3, #0
 800cc72:	4912      	ldr	r1, [pc, #72]	; (800ccbc <WM_Exec+0x278>)
 800cc74:	4628      	mov	r0, r5
 800cc76:	f008 fb4d 	bl	8015314 <GUI_MEMDEV_Draw>
 800cc7a:	e7c6      	b.n	800cc0a <WM_Exec+0x1c6>
 800cc7c:	2301      	movs	r3, #1
 800cc7e:	e7f5      	b.n	800cc6c <WM_Exec+0x228>
 800cc80:	9808      	ldr	r0, [sp, #32]
 800cc82:	f7fe fa67 	bl	800b154 <WM__PaintWinAndOverlays>
 800cc86:	2401      	movs	r4, #1
 800cc88:	e792      	b.n	800cbb0 <WM_Exec+0x16c>
 800cc8a:	2001      	movs	r0, #1
 800cc8c:	f7f9 fb28 	bl	80062e0 <GUI_SelectLayer>
 800cc90:	e7d5      	b.n	800cc3e <WM_Exec+0x1fa>
 800cc92:	4618      	mov	r0, r3
 800cc94:	e7fa      	b.n	800cc8c <WM_Exec+0x248>
 800cc96:	f008 f891 	bl	8014dbc <GUI__ManageCache>
 800cc9a:	9806      	ldr	r0, [sp, #24]
 800cc9c:	b02b      	add	sp, #172	; 0xac
 800cc9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cca2:	bf00      	nop
 800cca4:	2001c1cc 	.word	0x2001c1cc
 800cca8:	2001c200 	.word	0x2001c200
 800ccac:	20000550 	.word	0x20000550
 800ccb0:	2001c1dc 	.word	0x2001c1dc
 800ccb4:	2001c1e8 	.word	0x2001c1e8
 800ccb8:	2001c1c0 	.word	0x2001c1c0
 800ccbc:	0800b1f5 	.word	0x0800b1f5
 800ccc0:	20000018 	.word	0x20000018
 800ccc4:	2001c1d8 	.word	0x2001c1d8

0800ccc8 <WM_Activate>:
 800ccc8:	4b02      	ldr	r3, [pc, #8]	; (800ccd4 <WM_Activate+0xc>)
 800ccca:	681b      	ldr	r3, [r3, #0]
 800cccc:	2201      	movs	r2, #1
 800ccce:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800ccd2:	4770      	bx	lr
 800ccd4:	20000018 	.word	0x20000018

0800ccd8 <WM_Deactivate>:
 800ccd8:	4b03      	ldr	r3, [pc, #12]	; (800cce8 <WM_Deactivate+0x10>)
 800ccda:	681b      	ldr	r3, [r3, #0]
 800ccdc:	2200      	movs	r2, #0
 800ccde:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800cce2:	f7fa bd3d 	b.w	8007760 <LCD_SetClipRectMax>
 800cce6:	bf00      	nop
 800cce8:	20000018 	.word	0x20000018

0800ccec <WM_DefaultProc>:
 800ccec:	6803      	ldr	r3, [r0, #0]
 800ccee:	3b0e      	subs	r3, #14
 800ccf0:	b510      	push	{r4, lr}
 800ccf2:	4604      	mov	r4, r0
 800ccf4:	6840      	ldr	r0, [r0, #4]
 800ccf6:	2b1a      	cmp	r3, #26
 800ccf8:	d812      	bhi.n	800cd20 <WM_DefaultProc+0x34>
 800ccfa:	e8df f003 	tbb	[pc, r3]
 800ccfe:	111b      	.short	0x111b
 800cd00:	11111111 	.word	0x11111111
 800cd04:	2011110e 	.word	0x2011110e
 800cd08:	11111111 	.word	0x11111111
 800cd0c:	11111111 	.word	0x11111111
 800cd10:	11221111 	.word	0x11221111
 800cd14:	11111111 	.word	0x11111111
 800cd18:	14          	.byte	0x14
 800cd19:	00          	.byte	0x00
 800cd1a:	68e1      	ldr	r1, [r4, #12]
 800cd1c:	f001 fd74 	bl	800e808 <WM__GetClientRectEx>
 800cd20:	2300      	movs	r3, #0
 800cd22:	60e3      	str	r3, [r4, #12]
 800cd24:	bd10      	pop	{r4, pc}
 800cd26:	2800      	cmp	r0, #0
 800cd28:	d0fc      	beq.n	800cd24 <WM_DefaultProc+0x38>
 800cd2a:	2100      	movs	r1, #0
 800cd2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd30:	f7fe bfb6 	b.w	800bca0 <WM_InvalidateRect.part.2>
 800cd34:	4621      	mov	r1, r4
 800cd36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd3a:	f000 bd4f 	b.w	800d7dc <WM_SendToParent>
 800cd3e:	60e0      	str	r0, [r4, #12]
 800cd40:	bd10      	pop	{r4, pc}
 800cd42:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800cd46:	60e3      	str	r3, [r4, #12]
 800cd48:	bd10      	pop	{r4, pc}
 800cd4a:	bf00      	nop

0800cd4c <WM_Init>:
 800cd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd50:	4d43      	ldr	r5, [pc, #268]	; (800ce60 <WM_Init+0x114>)
 800cd52:	782b      	ldrb	r3, [r5, #0]
 800cd54:	b085      	sub	sp, #20
 800cd56:	2b00      	cmp	r3, #0
 800cd58:	d176      	bne.n	800ce48 <WM_Init+0xfc>
 800cd5a:	4f42      	ldr	r7, [pc, #264]	; (800ce64 <WM_Init+0x118>)
 800cd5c:	f8df 9138 	ldr.w	r9, [pc, #312]	; 800ce98 <WM_Init+0x14c>
 800cd60:	6838      	ldr	r0, [r7, #0]
 800cd62:	4941      	ldr	r1, [pc, #260]	; (800ce68 <WM_Init+0x11c>)
 800cd64:	4a41      	ldr	r2, [pc, #260]	; (800ce6c <WM_Init+0x120>)
 800cd66:	f8df 8124 	ldr.w	r8, [pc, #292]	; 800ce8c <WM_Init+0x140>
 800cd6a:	f8df a130 	ldr.w	sl, [pc, #304]	; 800ce9c <WM_Init+0x150>
 800cd6e:	4e40      	ldr	r6, [pc, #256]	; (800ce70 <WM_Init+0x124>)
 800cd70:	60ab      	str	r3, [r5, #8]
 800cd72:	6443      	str	r3, [r0, #68]	; 0x44
 800cd74:	461c      	mov	r4, r3
 800cd76:	f8c9 3000 	str.w	r3, [r9]
 800cd7a:	800b      	strh	r3, [r1, #0]
 800cd7c:	8013      	strh	r3, [r2, #0]
 800cd7e:	469b      	mov	fp, r3
 800cd80:	4620      	mov	r0, r4
 800cd82:	f7f8 fe09 	bl	8005998 <GUI_DEVICE__GetpDriver>
 800cd86:	f643 73ff 	movw	r3, #16383	; 0x3fff
 800cd8a:	2100      	movs	r1, #0
 800cd8c:	f04f 0c02 	mov.w	ip, #2
 800cd90:	f04f 3eff 	mov.w	lr, #4294967295
 800cd94:	461a      	mov	r2, r3
 800cd96:	b190      	cbz	r0, 800cdbe <WM_Init+0x72>
 800cd98:	f8cd b00c 	str.w	fp, [sp, #12]
 800cd9c:	f8cd a008 	str.w	sl, [sp, #8]
 800cda0:	f8cd c004 	str.w	ip, [sp, #4]
 800cda4:	f8cd e000 	str.w	lr, [sp]
 800cda8:	4608      	mov	r0, r1
 800cdaa:	f7ff fae7 	bl	800c37c <WM_CreateWindowAsChild>
 800cdae:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800cdb2:	f848 0024 	str.w	r0, [r8, r4, lsl #2]
 800cdb6:	f846 2024 	str.w	r2, [r6, r4, lsl #2]
 800cdba:	2800      	cmp	r0, #0
 800cdbc:	d14b      	bne.n	800ce56 <WM_Init+0x10a>
 800cdbe:	3401      	adds	r4, #1
 800cdc0:	2c02      	cmp	r4, #2
 800cdc2:	d1dd      	bne.n	800cd80 <WM_Init+0x34>
 800cdc4:	482b      	ldr	r0, [pc, #172]	; (800ce74 <WM_Init+0x128>)
 800cdc6:	f001 fcf7 	bl	800e7b8 <WM__AddCriticalHandle>
 800cdca:	482b      	ldr	r0, [pc, #172]	; (800ce78 <WM_Init+0x12c>)
 800cdcc:	f001 fcf4 	bl	800e7b8 <WM__AddCriticalHandle>
 800cdd0:	482a      	ldr	r0, [pc, #168]	; (800ce7c <WM_Init+0x130>)
 800cdd2:	f001 fcf1 	bl	800e7b8 <WM__AddCriticalHandle>
 800cdd6:	482a      	ldr	r0, [pc, #168]	; (800ce80 <WM_Init+0x134>)
 800cdd8:	f001 fcee 	bl	800e7b8 <WM__AddCriticalHandle>
 800cddc:	4829      	ldr	r0, [pc, #164]	; (800ce84 <WM_Init+0x138>)
 800cdde:	f001 fceb 	bl	800e7b8 <WM__AddCriticalHandle>
 800cde2:	4829      	ldr	r0, [pc, #164]	; (800ce88 <WM_Init+0x13c>)
 800cde4:	f001 fce8 	bl	800e7b8 <WM__AddCriticalHandle>
 800cde8:	f8d8 6000 	ldr.w	r6, [r8]
 800cdec:	683b      	ldr	r3, [r7, #0]
 800cdee:	b90e      	cbnz	r6, 800cdf4 <WM_Init+0xa8>
 800cdf0:	f8d9 6000 	ldr.w	r6, [r9]
 800cdf4:	649e      	str	r6, [r3, #72]	; 0x48
 800cdf6:	4634      	mov	r4, r6
 800cdf8:	e000      	b.n	800cdfc <WM_Init+0xb0>
 800cdfa:	4604      	mov	r4, r0
 800cdfc:	4620      	mov	r0, r4
 800cdfe:	f7f8 f82f 	bl	8004e60 <GUI_ALLOC_h2p>
 800ce02:	6980      	ldr	r0, [r0, #24]
 800ce04:	2800      	cmp	r0, #0
 800ce06:	d1f8      	bne.n	800cdfa <WM_Init+0xae>
 800ce08:	f8d8 3000 	ldr.w	r3, [r8]
 800ce0c:	4a1f      	ldr	r2, [pc, #124]	; (800ce8c <WM_Init+0x140>)
 800ce0e:	429c      	cmp	r4, r3
 800ce10:	d01e      	beq.n	800ce50 <WM_Init+0x104>
 800ce12:	6853      	ldr	r3, [r2, #4]
 800ce14:	429c      	cmp	r4, r3
 800ce16:	d01a      	beq.n	800ce4e <WM_Init+0x102>
 800ce18:	f7fa fca2 	bl	8007760 <LCD_SetClipRectMax>
 800ce1c:	4630      	mov	r0, r6
 800ce1e:	f7f8 f81f 	bl	8004e60 <GUI_ALLOC_h2p>
 800ce22:	683b      	ldr	r3, [r7, #0]
 800ce24:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ce28:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ce2c:	64da      	str	r2, [r3, #76]	; 0x4c
 800ce2e:	2201      	movs	r2, #1
 800ce30:	6519      	str	r1, [r3, #80]	; 0x50
 800ce32:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800ce36:	4816      	ldr	r0, [pc, #88]	; (800ce90 <WM_Init+0x144>)
 800ce38:	4b16      	ldr	r3, [pc, #88]	; (800ce94 <WM_Init+0x148>)
 800ce3a:	702a      	strb	r2, [r5, #0]
 800ce3c:	626b      	str	r3, [r5, #36]	; 0x24
 800ce3e:	b005      	add	sp, #20
 800ce40:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce44:	f7f8 bd94 	b.w	8005970 <GUI__RegisterExit>
 800ce48:	b005      	add	sp, #20
 800ce4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce4e:	2001      	movs	r0, #1
 800ce50:	f7f9 fa46 	bl	80062e0 <GUI_SelectLayer>
 800ce54:	e7e0      	b.n	800ce18 <WM_Init+0xcc>
 800ce56:	2100      	movs	r1, #0
 800ce58:	f7fe ff22 	bl	800bca0 <WM_InvalidateRect.part.2>
 800ce5c:	e7af      	b.n	800cdbe <WM_Init+0x72>
 800ce5e:	bf00      	nop
 800ce60:	20000550 	.word	0x20000550
 800ce64:	20000018 	.word	0x20000018
 800ce68:	2001c1d8 	.word	0x2001c1d8
 800ce6c:	2001c1b8 	.word	0x2001c1b8
 800ce70:	2001c1f4 	.word	0x2001c1f4
 800ce74:	2001c234 	.word	0x2001c234
 800ce78:	2001c224 	.word	0x2001c224
 800ce7c:	2001c214 	.word	0x2001c214
 800ce80:	2001c23c 	.word	0x2001c23c
 800ce84:	2001c22c 	.word	0x2001c22c
 800ce88:	2001c21c 	.word	0x2001c21c
 800ce8c:	2001c1c0 	.word	0x2001c1c0
 800ce90:	20000574 	.word	0x20000574
 800ce94:	0800abdd 	.word	0x0800abdd
 800ce98:	2001c1dc 	.word	0x2001c1dc
 800ce9c:	0800bd75 	.word	0x0800bd75

0800cea0 <WM_ResizeWindow.part.11>:
 800cea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cea4:	b08a      	sub	sp, #40	; 0x28
 800cea6:	4688      	mov	r8, r1
 800cea8:	4617      	mov	r7, r2
 800ceaa:	4606      	mov	r6, r0
 800ceac:	f7f7 ffe2 	bl	8004e74 <GUI_ALLOC_LockH>
 800ceb0:	4603      	mov	r3, r0
 800ceb2:	c803      	ldmia	r0, {r0, r1}
 800ceb4:	ac04      	add	r4, sp, #16
 800ceb6:	ad06      	add	r5, sp, #24
 800ceb8:	e884 0003 	stmia.w	r4, {r0, r1}
 800cebc:	9303      	str	r3, [sp, #12]
 800cebe:	e885 0003 	stmia.w	r5, {r0, r1}
 800cec2:	f1b8 0f00 	cmp.w	r8, #0
 800cec6:	d009      	beq.n	800cedc <WM_ResizeWindow.part.11+0x3c>
 800cec8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800ceca:	f402 7220 	and.w	r2, r2, #640	; 0x280
 800cece:	2a80      	cmp	r2, #128	; 0x80
 800ced0:	d055      	beq.n	800cf7e <WM_ResizeWindow.part.11+0xde>
 800ced2:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800ced6:	4490      	add	r8, r2
 800ced8:	f8ad 801c 	strh.w	r8, [sp, #28]
 800cedc:	b157      	cbz	r7, 800cef4 <WM_ResizeWindow.part.11+0x54>
 800cede:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800cee0:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 800cee4:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800cee8:	d050      	beq.n	800cf8c <WM_ResizeWindow.part.11+0xec>
 800ceea:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ceee:	4417      	add	r7, r2
 800cef0:	f8ad 701e 	strh.w	r7, [sp, #30]
 800cef4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800cef6:	03d1      	lsls	r1, r2, #15
 800cef8:	d43b      	bmi.n	800cf72 <WM_ResizeWindow.part.11+0xd2>
 800cefa:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cefe:	0792      	lsls	r2, r2, #30
 800cf00:	e883 0003 	stmia.w	r3, {r0, r1}
 800cf04:	d50b      	bpl.n	800cf1e <WM_ResizeWindow.part.11+0x7e>
 800cf06:	462a      	mov	r2, r5
 800cf08:	4621      	mov	r1, r4
 800cf0a:	a808      	add	r0, sp, #32
 800cf0c:	f7f8 fa42 	bl	8005394 <GUI_MergeRect>
 800cf10:	9b03      	ldr	r3, [sp, #12]
 800cf12:	a808      	add	r0, sp, #32
 800cf14:	6a1a      	ldr	r2, [r3, #32]
 800cf16:	6999      	ldr	r1, [r3, #24]
 800cf18:	f7ff f956 	bl	800c1c8 <WM__InvalidateRectEx>
 800cf1c:	9b03      	ldr	r3, [sp, #12]
 800cf1e:	f9bd 001e 	ldrsh.w	r0, [sp, #30]
 800cf22:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800cf26:	f9bd c01c 	ldrsh.w	ip, [sp, #28]
 800cf2a:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 800cf2e:	f9bd 701a 	ldrsh.w	r7, [sp, #26]
 800cf32:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800cf36:	f9bd 5018 	ldrsh.w	r5, [sp, #24]
 800cf3a:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800cf3e:	1b04      	subs	r4, r0, r4
 800cf40:	9400      	str	r4, [sp, #0]
 800cf42:	ac0a      	add	r4, sp, #40	; 0x28
 800cf44:	1aba      	subs	r2, r7, r2
 800cf46:	4618      	mov	r0, r3
 800cf48:	1a69      	subs	r1, r5, r1
 800cf4a:	ebce 030c 	rsb	r3, lr, ip
 800cf4e:	f001 fbb3 	bl	800e6b8 <WM__UpdateChildPositions>
 800cf52:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 800cf56:	f101 0008 	add.w	r0, r1, #8
 800cf5a:	f7f9 fd67 	bl	8006a2c <GUI__IntersectRect>
 800cf5e:	4630      	mov	r0, r6
 800cf60:	2105      	movs	r1, #5
 800cf62:	f7ff f99b 	bl	800c29c <WM__SendMsgNoData>
 800cf66:	4620      	mov	r0, r4
 800cf68:	f7f7 ff96 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800cf6c:	b00a      	add	sp, #40	; 0x28
 800cf6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf72:	4630      	mov	r0, r6
 800cf74:	f7fe fb28 	bl	800b5c8 <WM__InvalidateDrawAndDescs>
 800cf78:	9b03      	ldr	r3, [sp, #12]
 800cf7a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800cf7c:	e7bd      	b.n	800cefa <WM_ResizeWindow.part.11+0x5a>
 800cf7e:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800cf82:	ebc8 0802 	rsb	r8, r8, r2
 800cf86:	f8ad 8018 	strh.w	r8, [sp, #24]
 800cf8a:	e7a7      	b.n	800cedc <WM_ResizeWindow.part.11+0x3c>
 800cf8c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800cf90:	1bd7      	subs	r7, r2, r7
 800cf92:	f8ad 701a 	strh.w	r7, [sp, #26]
 800cf96:	e7ad      	b.n	800cef4 <WM_ResizeWindow.part.11+0x54>

0800cf98 <WM_InvalidateWindowAndDescs.part.14>:
 800cf98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf9c:	4604      	mov	r4, r0
 800cf9e:	f7ff f997 	bl	800c2d0 <WM_InvalidateWindow>
 800cfa2:	b90c      	cbnz	r4, 800cfa8 <WM_InvalidateWindowAndDescs.part.14+0x10>
 800cfa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfa8:	4620      	mov	r0, r4
 800cfaa:	f7f7 ff59 	bl	8004e60 <GUI_ALLOC_h2p>
 800cfae:	f8d0 801c 	ldr.w	r8, [r0, #28]
 800cfb2:	f1b8 0f00 	cmp.w	r8, #0
 800cfb6:	d0f5      	beq.n	800cfa4 <WM_InvalidateWindowAndDescs.part.14+0xc>
 800cfb8:	4640      	mov	r0, r8
 800cfba:	f7ff f989 	bl	800c2d0 <WM_InvalidateWindow>
 800cfbe:	4640      	mov	r0, r8
 800cfc0:	f7f7 ff4e 	bl	8004e60 <GUI_ALLOC_h2p>
 800cfc4:	69c7      	ldr	r7, [r0, #28]
 800cfc6:	2f00      	cmp	r7, #0
 800cfc8:	d032      	beq.n	800d030 <WM_InvalidateWindowAndDescs.part.14+0x98>
 800cfca:	4638      	mov	r0, r7
 800cfcc:	f7ff f980 	bl	800c2d0 <WM_InvalidateWindow>
 800cfd0:	4638      	mov	r0, r7
 800cfd2:	f7f7 ff45 	bl	8004e60 <GUI_ALLOC_h2p>
 800cfd6:	69c6      	ldr	r6, [r0, #28]
 800cfd8:	b326      	cbz	r6, 800d024 <WM_InvalidateWindowAndDescs.part.14+0x8c>
 800cfda:	4630      	mov	r0, r6
 800cfdc:	f7ff f978 	bl	800c2d0 <WM_InvalidateWindow>
 800cfe0:	4630      	mov	r0, r6
 800cfe2:	f7f7 ff3d 	bl	8004e60 <GUI_ALLOC_h2p>
 800cfe6:	69c5      	ldr	r5, [r0, #28]
 800cfe8:	b1b5      	cbz	r5, 800d018 <WM_InvalidateWindowAndDescs.part.14+0x80>
 800cfea:	4628      	mov	r0, r5
 800cfec:	f7ff f970 	bl	800c2d0 <WM_InvalidateWindow>
 800cff0:	4628      	mov	r0, r5
 800cff2:	f7f7 ff35 	bl	8004e60 <GUI_ALLOC_h2p>
 800cff6:	69c4      	ldr	r4, [r0, #28]
 800cff8:	b144      	cbz	r4, 800d00c <WM_InvalidateWindowAndDescs.part.14+0x74>
 800cffa:	4620      	mov	r0, r4
 800cffc:	f7ff ffcc 	bl	800cf98 <WM_InvalidateWindowAndDescs.part.14>
 800d000:	4620      	mov	r0, r4
 800d002:	f7f7 ff2d 	bl	8004e60 <GUI_ALLOC_h2p>
 800d006:	6a04      	ldr	r4, [r0, #32]
 800d008:	2c00      	cmp	r4, #0
 800d00a:	d1f6      	bne.n	800cffa <WM_InvalidateWindowAndDescs.part.14+0x62>
 800d00c:	4628      	mov	r0, r5
 800d00e:	f7f7 ff27 	bl	8004e60 <GUI_ALLOC_h2p>
 800d012:	6a05      	ldr	r5, [r0, #32]
 800d014:	2d00      	cmp	r5, #0
 800d016:	d1e8      	bne.n	800cfea <WM_InvalidateWindowAndDescs.part.14+0x52>
 800d018:	4630      	mov	r0, r6
 800d01a:	f7f7 ff21 	bl	8004e60 <GUI_ALLOC_h2p>
 800d01e:	6a06      	ldr	r6, [r0, #32]
 800d020:	2e00      	cmp	r6, #0
 800d022:	d1da      	bne.n	800cfda <WM_InvalidateWindowAndDescs.part.14+0x42>
 800d024:	4638      	mov	r0, r7
 800d026:	f7f7 ff1b 	bl	8004e60 <GUI_ALLOC_h2p>
 800d02a:	6a07      	ldr	r7, [r0, #32]
 800d02c:	2f00      	cmp	r7, #0
 800d02e:	d1cc      	bne.n	800cfca <WM_InvalidateWindowAndDescs.part.14+0x32>
 800d030:	4640      	mov	r0, r8
 800d032:	f7f7 ff15 	bl	8004e60 <GUI_ALLOC_h2p>
 800d036:	f8d0 8020 	ldr.w	r8, [r0, #32]
 800d03a:	f1b8 0f00 	cmp.w	r8, #0
 800d03e:	d1bb      	bne.n	800cfb8 <WM_InvalidateWindowAndDescs.part.14+0x20>
 800d040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d044 <_GetDialogItem.part.5>:
 800d044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d048:	b087      	sub	sp, #28
 800d04a:	460d      	mov	r5, r1
 800d04c:	f7f7 ff08 	bl	8004e60 <GUI_ALLOC_h2p>
 800d050:	69c3      	ldr	r3, [r0, #28]
 800d052:	9301      	str	r3, [sp, #4]
 800d054:	2b00      	cmp	r3, #0
 800d056:	d04f      	beq.n	800d0f8 <_GetDialogItem.part.5+0xb4>
 800d058:	2400      	movs	r4, #0
 800d05a:	9801      	ldr	r0, [sp, #4]
 800d05c:	f7f7 ff00 	bl	8004e60 <GUI_ALLOC_h2p>
 800d060:	69c6      	ldr	r6, [r0, #28]
 800d062:	2e00      	cmp	r6, #0
 800d064:	d04d      	beq.n	800d102 <_GetDialogItem.part.5+0xbe>
 800d066:	f10d 0a08 	add.w	sl, sp, #8
 800d06a:	2715      	movs	r7, #21
 800d06c:	e004      	b.n	800d078 <_GetDialogItem.part.5+0x34>
 800d06e:	f7f7 fef7 	bl	8004e60 <GUI_ALLOC_h2p>
 800d072:	6a06      	ldr	r6, [r0, #32]
 800d074:	2e00      	cmp	r6, #0
 800d076:	d044      	beq.n	800d102 <_GetDialogItem.part.5+0xbe>
 800d078:	4630      	mov	r0, r6
 800d07a:	4651      	mov	r1, sl
 800d07c:	f8ca 4000 	str.w	r4, [sl]
 800d080:	f8ca 4004 	str.w	r4, [sl, #4]
 800d084:	f8ca 4008 	str.w	r4, [sl, #8]
 800d088:	f8ca 400c 	str.w	r4, [sl, #12]
 800d08c:	9702      	str	r7, [sp, #8]
 800d08e:	f7ff f901 	bl	800c294 <WM_SendMessage>
 800d092:	9b05      	ldr	r3, [sp, #20]
 800d094:	429d      	cmp	r5, r3
 800d096:	4630      	mov	r0, r6
 800d098:	d1e9      	bne.n	800d06e <_GetDialogItem.part.5+0x2a>
 800d09a:	e02e      	b.n	800d0fa <_GetDialogItem.part.5+0xb6>
 800d09c:	4629      	mov	r1, r5
 800d09e:	4650      	mov	r0, sl
 800d0a0:	f7ff ffd0 	bl	800d044 <_GetDialogItem.part.5>
 800d0a4:	2800      	cmp	r0, #0
 800d0a6:	d179      	bne.n	800d19c <_GetDialogItem.part.5+0x158>
 800d0a8:	4650      	mov	r0, sl
 800d0aa:	f7f7 fed9 	bl	8004e60 <GUI_ALLOC_h2p>
 800d0ae:	f8d0 a020 	ldr.w	sl, [r0, #32]
 800d0b2:	f1ba 0f00 	cmp.w	sl, #0
 800d0b6:	f040 80a3 	bne.w	800d200 <_GetDialogItem.part.5+0x1bc>
 800d0ba:	4640      	mov	r0, r8
 800d0bc:	f7f7 fed0 	bl	8004e60 <GUI_ALLOC_h2p>
 800d0c0:	f8d0 8020 	ldr.w	r8, [r0, #32]
 800d0c4:	f1b8 0f00 	cmp.w	r8, #0
 800d0c8:	d172      	bne.n	800d1b0 <_GetDialogItem.part.5+0x16c>
 800d0ca:	4648      	mov	r0, r9
 800d0cc:	f7f7 fec8 	bl	8004e60 <GUI_ALLOC_h2p>
 800d0d0:	f8d0 9020 	ldr.w	r9, [r0, #32]
 800d0d4:	f1b9 0f00 	cmp.w	r9, #0
 800d0d8:	d141      	bne.n	800d15e <_GetDialogItem.part.5+0x11a>
 800d0da:	4658      	mov	r0, fp
 800d0dc:	f7f7 fec0 	bl	8004e60 <GUI_ALLOC_h2p>
 800d0e0:	f8d0 b020 	ldr.w	fp, [r0, #32]
 800d0e4:	f1bb 0f00 	cmp.w	fp, #0
 800d0e8:	d113      	bne.n	800d112 <_GetDialogItem.part.5+0xce>
 800d0ea:	9801      	ldr	r0, [sp, #4]
 800d0ec:	f7f7 feb8 	bl	8004e60 <GUI_ALLOC_h2p>
 800d0f0:	6a03      	ldr	r3, [r0, #32]
 800d0f2:	9301      	str	r3, [sp, #4]
 800d0f4:	2b00      	cmp	r3, #0
 800d0f6:	d1b0      	bne.n	800d05a <_GetDialogItem.part.5+0x16>
 800d0f8:	2600      	movs	r6, #0
 800d0fa:	4630      	mov	r0, r6
 800d0fc:	b007      	add	sp, #28
 800d0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d102:	9801      	ldr	r0, [sp, #4]
 800d104:	f7f7 feac 	bl	8004e60 <GUI_ALLOC_h2p>
 800d108:	f8d0 b01c 	ldr.w	fp, [r0, #28]
 800d10c:	f1bb 0f00 	cmp.w	fp, #0
 800d110:	d0eb      	beq.n	800d0ea <_GetDialogItem.part.5+0xa6>
 800d112:	4658      	mov	r0, fp
 800d114:	f7f7 fea4 	bl	8004e60 <GUI_ALLOC_h2p>
 800d118:	69c6      	ldr	r6, [r0, #28]
 800d11a:	b1c6      	cbz	r6, 800d14e <_GetDialogItem.part.5+0x10a>
 800d11c:	f10d 0a08 	add.w	sl, sp, #8
 800d120:	2715      	movs	r7, #21
 800d122:	4630      	mov	r0, r6
 800d124:	4651      	mov	r1, sl
 800d126:	f8ca 4000 	str.w	r4, [sl]
 800d12a:	f8ca 4004 	str.w	r4, [sl, #4]
 800d12e:	f8ca 4008 	str.w	r4, [sl, #8]
 800d132:	f8ca 400c 	str.w	r4, [sl, #12]
 800d136:	9702      	str	r7, [sp, #8]
 800d138:	f7ff f8ac 	bl	800c294 <WM_SendMessage>
 800d13c:	9b05      	ldr	r3, [sp, #20]
 800d13e:	429d      	cmp	r5, r3
 800d140:	4630      	mov	r0, r6
 800d142:	d0da      	beq.n	800d0fa <_GetDialogItem.part.5+0xb6>
 800d144:	f7f7 fe8c 	bl	8004e60 <GUI_ALLOC_h2p>
 800d148:	6a06      	ldr	r6, [r0, #32]
 800d14a:	2e00      	cmp	r6, #0
 800d14c:	d1e9      	bne.n	800d122 <_GetDialogItem.part.5+0xde>
 800d14e:	4658      	mov	r0, fp
 800d150:	f7f7 fe86 	bl	8004e60 <GUI_ALLOC_h2p>
 800d154:	f8d0 901c 	ldr.w	r9, [r0, #28]
 800d158:	f1b9 0f00 	cmp.w	r9, #0
 800d15c:	d0bd      	beq.n	800d0da <_GetDialogItem.part.5+0x96>
 800d15e:	4648      	mov	r0, r9
 800d160:	f7f7 fe7e 	bl	8004e60 <GUI_ALLOC_h2p>
 800d164:	69c6      	ldr	r6, [r0, #28]
 800d166:	b1de      	cbz	r6, 800d1a0 <_GetDialogItem.part.5+0x15c>
 800d168:	f10d 0a08 	add.w	sl, sp, #8
 800d16c:	2715      	movs	r7, #21
 800d16e:	e003      	b.n	800d178 <_GetDialogItem.part.5+0x134>
 800d170:	f7f7 fe76 	bl	8004e60 <GUI_ALLOC_h2p>
 800d174:	6a06      	ldr	r6, [r0, #32]
 800d176:	b19e      	cbz	r6, 800d1a0 <_GetDialogItem.part.5+0x15c>
 800d178:	4630      	mov	r0, r6
 800d17a:	4651      	mov	r1, sl
 800d17c:	f8ca 4000 	str.w	r4, [sl]
 800d180:	f8ca 4004 	str.w	r4, [sl, #4]
 800d184:	f8ca 4008 	str.w	r4, [sl, #8]
 800d188:	f8ca 400c 	str.w	r4, [sl, #12]
 800d18c:	9702      	str	r7, [sp, #8]
 800d18e:	f7ff f881 	bl	800c294 <WM_SendMessage>
 800d192:	9b05      	ldr	r3, [sp, #20]
 800d194:	429d      	cmp	r5, r3
 800d196:	4630      	mov	r0, r6
 800d198:	d1ea      	bne.n	800d170 <_GetDialogItem.part.5+0x12c>
 800d19a:	4630      	mov	r0, r6
 800d19c:	4606      	mov	r6, r0
 800d19e:	e7ac      	b.n	800d0fa <_GetDialogItem.part.5+0xb6>
 800d1a0:	4648      	mov	r0, r9
 800d1a2:	f7f7 fe5d 	bl	8004e60 <GUI_ALLOC_h2p>
 800d1a6:	f8d0 801c 	ldr.w	r8, [r0, #28]
 800d1aa:	f1b8 0f00 	cmp.w	r8, #0
 800d1ae:	d08c      	beq.n	800d0ca <_GetDialogItem.part.5+0x86>
 800d1b0:	4640      	mov	r0, r8
 800d1b2:	f7f7 fe55 	bl	8004e60 <GUI_ALLOC_h2p>
 800d1b6:	69c6      	ldr	r6, [r0, #28]
 800d1b8:	b1ce      	cbz	r6, 800d1ee <_GetDialogItem.part.5+0x1aa>
 800d1ba:	f10d 0a08 	add.w	sl, sp, #8
 800d1be:	2715      	movs	r7, #21
 800d1c0:	e003      	b.n	800d1ca <_GetDialogItem.part.5+0x186>
 800d1c2:	f7f7 fe4d 	bl	8004e60 <GUI_ALLOC_h2p>
 800d1c6:	6a06      	ldr	r6, [r0, #32]
 800d1c8:	b18e      	cbz	r6, 800d1ee <_GetDialogItem.part.5+0x1aa>
 800d1ca:	4630      	mov	r0, r6
 800d1cc:	4651      	mov	r1, sl
 800d1ce:	f8ca 4000 	str.w	r4, [sl]
 800d1d2:	f8ca 4004 	str.w	r4, [sl, #4]
 800d1d6:	f8ca 4008 	str.w	r4, [sl, #8]
 800d1da:	f8ca 400c 	str.w	r4, [sl, #12]
 800d1de:	9702      	str	r7, [sp, #8]
 800d1e0:	f7ff f858 	bl	800c294 <WM_SendMessage>
 800d1e4:	9b05      	ldr	r3, [sp, #20]
 800d1e6:	429d      	cmp	r5, r3
 800d1e8:	4630      	mov	r0, r6
 800d1ea:	d1ea      	bne.n	800d1c2 <_GetDialogItem.part.5+0x17e>
 800d1ec:	e7d5      	b.n	800d19a <_GetDialogItem.part.5+0x156>
 800d1ee:	4640      	mov	r0, r8
 800d1f0:	f7f7 fe36 	bl	8004e60 <GUI_ALLOC_h2p>
 800d1f4:	f8d0 a01c 	ldr.w	sl, [r0, #28]
 800d1f8:	f1ba 0f00 	cmp.w	sl, #0
 800d1fc:	f43f af5d 	beq.w	800d0ba <_GetDialogItem.part.5+0x76>
 800d200:	4650      	mov	r0, sl
 800d202:	f7f7 fe2d 	bl	8004e60 <GUI_ALLOC_h2p>
 800d206:	69c7      	ldr	r7, [r0, #28]
 800d208:	2615      	movs	r6, #21
 800d20a:	b937      	cbnz	r7, 800d21a <_GetDialogItem.part.5+0x1d6>
 800d20c:	e746      	b.n	800d09c <_GetDialogItem.part.5+0x58>
 800d20e:	f7f7 fe27 	bl	8004e60 <GUI_ALLOC_h2p>
 800d212:	6a07      	ldr	r7, [r0, #32]
 800d214:	2f00      	cmp	r7, #0
 800d216:	f43f af41 	beq.w	800d09c <_GetDialogItem.part.5+0x58>
 800d21a:	4638      	mov	r0, r7
 800d21c:	a902      	add	r1, sp, #8
 800d21e:	9403      	str	r4, [sp, #12]
 800d220:	9404      	str	r4, [sp, #16]
 800d222:	9405      	str	r4, [sp, #20]
 800d224:	9602      	str	r6, [sp, #8]
 800d226:	f7ff f835 	bl	800c294 <WM_SendMessage>
 800d22a:	9a05      	ldr	r2, [sp, #20]
 800d22c:	4295      	cmp	r5, r2
 800d22e:	4638      	mov	r0, r7
 800d230:	d1ed      	bne.n	800d20e <_GetDialogItem.part.5+0x1ca>
 800d232:	4638      	mov	r0, r7
 800d234:	4606      	mov	r6, r0
 800d236:	e760      	b.n	800d0fa <_GetDialogItem.part.5+0xb6>

0800d238 <_GetDialogItem>:
 800d238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d23c:	b084      	sub	sp, #16
 800d23e:	460e      	mov	r6, r1
 800d240:	4680      	mov	r8, r0
 800d242:	f7f7 fe0d 	bl	8004e60 <GUI_ALLOC_h2p>
 800d246:	69c4      	ldr	r4, [r0, #28]
 800d248:	b1b4      	cbz	r4, 800d278 <_GetDialogItem+0x40>
 800d24a:	2500      	movs	r5, #0
 800d24c:	2715      	movs	r7, #21
 800d24e:	e003      	b.n	800d258 <_GetDialogItem+0x20>
 800d250:	f7f7 fe06 	bl	8004e60 <GUI_ALLOC_h2p>
 800d254:	6a04      	ldr	r4, [r0, #32]
 800d256:	b17c      	cbz	r4, 800d278 <_GetDialogItem+0x40>
 800d258:	4620      	mov	r0, r4
 800d25a:	4669      	mov	r1, sp
 800d25c:	9501      	str	r5, [sp, #4]
 800d25e:	9502      	str	r5, [sp, #8]
 800d260:	9503      	str	r5, [sp, #12]
 800d262:	9700      	str	r7, [sp, #0]
 800d264:	f7ff f816 	bl	800c294 <WM_SendMessage>
 800d268:	9b03      	ldr	r3, [sp, #12]
 800d26a:	429e      	cmp	r6, r3
 800d26c:	4620      	mov	r0, r4
 800d26e:	d1ef      	bne.n	800d250 <_GetDialogItem+0x18>
 800d270:	4620      	mov	r0, r4
 800d272:	b004      	add	sp, #16
 800d274:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d278:	4631      	mov	r1, r6
 800d27a:	4640      	mov	r0, r8
 800d27c:	f7ff fee2 	bl	800d044 <_GetDialogItem.part.5>
 800d280:	b004      	add	sp, #16
 800d282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d286:	bf00      	nop

0800d288 <__GetDialogItem>:
 800d288:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d28c:	b087      	sub	sp, #28
 800d28e:	460f      	mov	r7, r1
 800d290:	f7f7 fdf0 	bl	8004e74 <GUI_ALLOC_LockH>
 800d294:	ab06      	add	r3, sp, #24
 800d296:	f8d0 901c 	ldr.w	r9, [r0, #28]
 800d29a:	f843 0d14 	str.w	r0, [r3, #-20]!
 800d29e:	4618      	mov	r0, r3
 800d2a0:	f7f7 fdfa 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d2a4:	f1b9 0f00 	cmp.w	r9, #0
 800d2a8:	d042      	beq.n	800d330 <__GetDialogItem+0xa8>
 800d2aa:	2500      	movs	r5, #0
 800d2ac:	f04f 0815 	mov.w	r8, #21
 800d2b0:	4648      	mov	r0, r9
 800d2b2:	a902      	add	r1, sp, #8
 800d2b4:	9503      	str	r5, [sp, #12]
 800d2b6:	9504      	str	r5, [sp, #16]
 800d2b8:	9505      	str	r5, [sp, #20]
 800d2ba:	f8cd 8008 	str.w	r8, [sp, #8]
 800d2be:	f7fe ffe9 	bl	800c294 <WM_SendMessage>
 800d2c2:	9b05      	ldr	r3, [sp, #20]
 800d2c4:	429f      	cmp	r7, r3
 800d2c6:	4648      	mov	r0, r9
 800d2c8:	d016      	beq.n	800d2f8 <__GetDialogItem+0x70>
 800d2ca:	f7f7 fdc9 	bl	8004e60 <GUI_ALLOC_h2p>
 800d2ce:	69c4      	ldr	r4, [r0, #28]
 800d2d0:	b924      	cbnz	r4, 800d2dc <__GetDialogItem+0x54>
 800d2d2:	e014      	b.n	800d2fe <__GetDialogItem+0x76>
 800d2d4:	f7f7 fdc4 	bl	8004e60 <GUI_ALLOC_h2p>
 800d2d8:	6a04      	ldr	r4, [r0, #32]
 800d2da:	b184      	cbz	r4, 800d2fe <__GetDialogItem+0x76>
 800d2dc:	4620      	mov	r0, r4
 800d2de:	a902      	add	r1, sp, #8
 800d2e0:	9503      	str	r5, [sp, #12]
 800d2e2:	9504      	str	r5, [sp, #16]
 800d2e4:	9505      	str	r5, [sp, #20]
 800d2e6:	f8cd 8008 	str.w	r8, [sp, #8]
 800d2ea:	f7fe ffd3 	bl	800c294 <WM_SendMessage>
 800d2ee:	9b05      	ldr	r3, [sp, #20]
 800d2f0:	429f      	cmp	r7, r3
 800d2f2:	4620      	mov	r0, r4
 800d2f4:	d1ee      	bne.n	800d2d4 <__GetDialogItem+0x4c>
 800d2f6:	4620      	mov	r0, r4
 800d2f8:	b007      	add	sp, #28
 800d2fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d2fe:	4648      	mov	r0, r9
 800d300:	f7f7 fdae 	bl	8004e60 <GUI_ALLOC_h2p>
 800d304:	69c6      	ldr	r6, [r0, #28]
 800d306:	b15e      	cbz	r6, 800d320 <__GetDialogItem+0x98>
 800d308:	4639      	mov	r1, r7
 800d30a:	4630      	mov	r0, r6
 800d30c:	f7ff ff94 	bl	800d238 <_GetDialogItem>
 800d310:	2800      	cmp	r0, #0
 800d312:	d1f1      	bne.n	800d2f8 <__GetDialogItem+0x70>
 800d314:	4630      	mov	r0, r6
 800d316:	f7f7 fda3 	bl	8004e60 <GUI_ALLOC_h2p>
 800d31a:	6a06      	ldr	r6, [r0, #32]
 800d31c:	2e00      	cmp	r6, #0
 800d31e:	d1f3      	bne.n	800d308 <__GetDialogItem+0x80>
 800d320:	4648      	mov	r0, r9
 800d322:	f7f7 fd9d 	bl	8004e60 <GUI_ALLOC_h2p>
 800d326:	f8d0 9020 	ldr.w	r9, [r0, #32]
 800d32a:	f1b9 0f00 	cmp.w	r9, #0
 800d32e:	d1bf      	bne.n	800d2b0 <__GetDialogItem+0x28>
 800d330:	2000      	movs	r0, #0
 800d332:	b007      	add	sp, #28
 800d334:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800d338 <WM_ForEachDesc>:
 800d338:	f001 b82e 	b.w	800e398 <WM__ForEachDesc>

0800d33c <WM_GetClientRectEx>:
 800d33c:	f001 ba64 	b.w	800e808 <WM__GetClientRectEx>

0800d340 <WM_GetClientRect>:
 800d340:	4b04      	ldr	r3, [pc, #16]	; (800d354 <WM_GetClientRect+0x14>)
 800d342:	681b      	ldr	r3, [r3, #0]
 800d344:	4601      	mov	r1, r0
 800d346:	b913      	cbnz	r3, 800d34e <WM_GetClientRect+0xe>
 800d348:	4b03      	ldr	r3, [pc, #12]	; (800d358 <WM_GetClientRect+0x18>)
 800d34a:	681b      	ldr	r3, [r3, #0]
 800d34c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d34e:	4618      	mov	r0, r3
 800d350:	f001 ba5a 	b.w	800e808 <WM__GetClientRectEx>
 800d354:	2001c1bc 	.word	0x2001c1bc
 800d358:	20000018 	.word	0x20000018

0800d35c <WM_GetClientWindow>:
 800d35c:	b500      	push	{lr}
 800d35e:	b085      	sub	sp, #20
 800d360:	a904      	add	r1, sp, #16
 800d362:	2317      	movs	r3, #23
 800d364:	f841 3d10 	str.w	r3, [r1, #-16]!
 800d368:	2300      	movs	r3, #0
 800d36a:	9303      	str	r3, [sp, #12]
 800d36c:	f7fe ff92 	bl	800c294 <WM_SendMessage>
 800d370:	9803      	ldr	r0, [sp, #12]
 800d372:	b005      	add	sp, #20
 800d374:	f85d fb04 	ldr.w	pc, [sp], #4

0800d378 <WM_GetDesktopWindow>:
 800d378:	4a03      	ldr	r2, [pc, #12]	; (800d388 <WM_GetDesktopWindow+0x10>)
 800d37a:	4b04      	ldr	r3, [pc, #16]	; (800d38c <WM_GetDesktopWindow+0x14>)
 800d37c:	6812      	ldr	r2, [r2, #0]
 800d37e:	7c52      	ldrb	r2, [r2, #17]
 800d380:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800d384:	4770      	bx	lr
 800d386:	bf00      	nop
 800d388:	20000018 	.word	0x20000018
 800d38c:	2001c1c0 	.word	0x2001c1c0

0800d390 <WM_GetDesktopWindowEx>:
 800d390:	2801      	cmp	r0, #1
 800d392:	bf9a      	itte	ls
 800d394:	4b02      	ldrls	r3, [pc, #8]	; (800d3a0 <WM_GetDesktopWindowEx+0x10>)
 800d396:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800d39a:	2000      	movhi	r0, #0
 800d39c:	4770      	bx	lr
 800d39e:	bf00      	nop
 800d3a0:	2001c1c0 	.word	0x2001c1c0

0800d3a4 <WM_BringToBottom>:
 800d3a4:	b900      	cbnz	r0, 800d3a8 <WM_BringToBottom+0x4>
 800d3a6:	4770      	bx	lr
 800d3a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d3ac:	b087      	sub	sp, #28
 800d3ae:	4604      	mov	r4, r0
 800d3b0:	f7f7 fd60 	bl	8004e74 <GUI_ALLOC_LockH>
 800d3b4:	4603      	mov	r3, r0
 800d3b6:	c803      	ldmia	r0, {r0, r1}
 800d3b8:	ad04      	add	r5, sp, #16
 800d3ba:	e885 0003 	stmia.w	r5, {r0, r1}
 800d3be:	a801      	add	r0, sp, #4
 800d3c0:	9301      	str	r3, [sp, #4]
 800d3c2:	6a1f      	ldr	r7, [r3, #32]
 800d3c4:	f8d3 8028 	ldr.w	r8, [r3, #40]	; 0x28
 800d3c8:	f7f7 fd66 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d3cc:	4620      	mov	r0, r4
 800d3ce:	f001 f8c5 	bl	800e55c <WM__GetPrevSibling>
 800d3d2:	4606      	mov	r6, r0
 800d3d4:	b318      	cbz	r0, 800d41e <WM_BringToBottom+0x7a>
 800d3d6:	4620      	mov	r0, r4
 800d3d8:	f7f7 fd42 	bl	8004e60 <GUI_ALLOC_h2p>
 800d3dc:	f018 0f02 	tst.w	r8, #2
 800d3e0:	f8d0 9018 	ldr.w	r9, [r0, #24]
 800d3e4:	d11e      	bne.n	800d424 <WM_BringToBottom+0x80>
 800d3e6:	4620      	mov	r0, r4
 800d3e8:	f7f7 fd44 	bl	8004e74 <GUI_ALLOC_LockH>
 800d3ec:	9001      	str	r0, [sp, #4]
 800d3ee:	4648      	mov	r0, r9
 800d3f0:	f7f7 fd40 	bl	8004e74 <GUI_ALLOC_LockH>
 800d3f4:	9003      	str	r0, [sp, #12]
 800d3f6:	4630      	mov	r0, r6
 800d3f8:	f7f7 fd3c 	bl	8004e74 <GUI_ALLOC_LockH>
 800d3fc:	9a03      	ldr	r2, [sp, #12]
 800d3fe:	9901      	ldr	r1, [sp, #4]
 800d400:	69d5      	ldr	r5, [r2, #28]
 800d402:	6207      	str	r7, [r0, #32]
 800d404:	4603      	mov	r3, r0
 800d406:	620d      	str	r5, [r1, #32]
 800d408:	a801      	add	r0, sp, #4
 800d40a:	61d4      	str	r4, [r2, #28]
 800d40c:	9302      	str	r3, [sp, #8]
 800d40e:	f7f7 fd43 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d412:	a803      	add	r0, sp, #12
 800d414:	f7f7 fd40 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d418:	a802      	add	r0, sp, #8
 800d41a:	f7f7 fd3d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d41e:	b007      	add	sp, #28
 800d420:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d424:	4628      	mov	r0, r5
 800d426:	463a      	mov	r2, r7
 800d428:	4649      	mov	r1, r9
 800d42a:	f7fe fecd 	bl	800c1c8 <WM__InvalidateRectEx>
 800d42e:	e7da      	b.n	800d3e6 <WM_BringToBottom+0x42>

0800d430 <WM_CheckScrollBounds>:
 800d430:	6803      	ldr	r3, [r0, #0]
 800d432:	6881      	ldr	r1, [r0, #8]
 800d434:	6842      	ldr	r2, [r0, #4]
 800d436:	1a5b      	subs	r3, r3, r1
 800d438:	2a00      	cmp	r2, #0
 800d43a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d43e:	db03      	blt.n	800d448 <WM_CheckScrollBounds+0x18>
 800d440:	429a      	cmp	r2, r3
 800d442:	bfc8      	it	gt
 800d444:	6043      	strgt	r3, [r0, #4]
 800d446:	4770      	bx	lr
 800d448:	2300      	movs	r3, #0
 800d44a:	6043      	str	r3, [r0, #4]
 800d44c:	4770      	bx	lr
 800d44e:	bf00      	nop

0800d450 <WM_GetDialogItem>:
 800d450:	b900      	cbnz	r0, 800d454 <WM_GetDialogItem+0x4>
 800d452:	4770      	bx	lr
 800d454:	f7ff bf18 	b.w	800d288 <__GetDialogItem>

0800d458 <WM_GetFirstChild>:
 800d458:	b508      	push	{r3, lr}
 800d45a:	b910      	cbnz	r0, 800d462 <WM_GetFirstChild+0xa>
 800d45c:	4603      	mov	r3, r0
 800d45e:	4618      	mov	r0, r3
 800d460:	bd08      	pop	{r3, pc}
 800d462:	f7f7 fcfd 	bl	8004e60 <GUI_ALLOC_h2p>
 800d466:	69c3      	ldr	r3, [r0, #28]
 800d468:	4618      	mov	r0, r3
 800d46a:	bd08      	pop	{r3, pc}

0800d46c <WM_GetFocusedWindow>:
 800d46c:	4a02      	ldr	r2, [pc, #8]	; (800d478 <WM_GetFocusedWindow+0xc>)
 800d46e:	4b03      	ldr	r3, [pc, #12]	; (800d47c <WM_GetFocusedWindow+0x10>)
 800d470:	6812      	ldr	r2, [r2, #0]
 800d472:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800d476:	4770      	bx	lr
 800d478:	2001c1e0 	.word	0x2001c1e0
 800d47c:	2001c1d0 	.word	0x2001c1d0

0800d480 <WM_GetId>:
 800d480:	b500      	push	{lr}
 800d482:	b085      	sub	sp, #20
 800d484:	2300      	movs	r3, #0
 800d486:	2215      	movs	r2, #21
 800d488:	4669      	mov	r1, sp
 800d48a:	9301      	str	r3, [sp, #4]
 800d48c:	9302      	str	r3, [sp, #8]
 800d48e:	9303      	str	r3, [sp, #12]
 800d490:	9200      	str	r2, [sp, #0]
 800d492:	f7fe feff 	bl	800c294 <WM_SendMessage>
 800d496:	9803      	ldr	r0, [sp, #12]
 800d498:	b005      	add	sp, #20
 800d49a:	f85d fb04 	ldr.w	pc, [sp], #4
 800d49e:	bf00      	nop

0800d4a0 <WM_GetInsideRectEx>:
 800d4a0:	b500      	push	{lr}
 800d4a2:	b085      	sub	sp, #20
 800d4a4:	ab04      	add	r3, sp, #16
 800d4a6:	2214      	movs	r2, #20
 800d4a8:	f843 2d10 	str.w	r2, [r3, #-16]!
 800d4ac:	9103      	str	r1, [sp, #12]
 800d4ae:	4619      	mov	r1, r3
 800d4b0:	f7fe fef0 	bl	800c294 <WM_SendMessage>
 800d4b4:	b005      	add	sp, #20
 800d4b6:	f85d fb04 	ldr.w	pc, [sp], #4
 800d4ba:	bf00      	nop

0800d4bc <WM_GetInsideRectExScrollbar>:
 800d4bc:	2800      	cmp	r0, #0
 800d4be:	d068      	beq.n	800d592 <WM_GetInsideRectExScrollbar+0xd6>
 800d4c0:	2900      	cmp	r1, #0
 800d4c2:	d066      	beq.n	800d592 <WM_GetInsideRectExScrollbar+0xd6>
 800d4c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4c8:	460d      	mov	r5, r1
 800d4ca:	b086      	sub	sp, #24
 800d4cc:	21ff      	movs	r1, #255	; 0xff
 800d4ce:	4606      	mov	r6, r0
 800d4d0:	f7ff feda 	bl	800d288 <__GetDialogItem>
 800d4d4:	21fe      	movs	r1, #254	; 0xfe
 800d4d6:	4682      	mov	sl, r0
 800d4d8:	4630      	mov	r0, r6
 800d4da:	f7ff fed5 	bl	800d288 <__GetDialogItem>
 800d4de:	4681      	mov	r9, r0
 800d4e0:	4630      	mov	r0, r6
 800d4e2:	f7f7 fcbd 	bl	8004e60 <GUI_ALLOC_h2p>
 800d4e6:	ac06      	add	r4, sp, #24
 800d4e8:	2314      	movs	r3, #20
 800d4ea:	f9b0 7000 	ldrsh.w	r7, [r0]
 800d4ee:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800d4f2:	f844 3d10 	str.w	r3, [r4, #-16]!
 800d4f6:	4630      	mov	r0, r6
 800d4f8:	4621      	mov	r1, r4
 800d4fa:	f8cd d014 	str.w	sp, [sp, #20]
 800d4fe:	f7fe fec9 	bl	800c294 <WM_SendMessage>
 800d502:	f1b9 0f00 	cmp.w	r9, #0
 800d506:	d125      	bne.n	800d554 <WM_GetInsideRectExScrollbar+0x98>
 800d508:	f1ba 0f00 	cmp.w	sl, #0
 800d50c:	d01b      	beq.n	800d546 <WM_GetInsideRectExScrollbar+0x8a>
 800d50e:	427f      	negs	r7, r7
 800d510:	f1c8 0800 	rsb	r8, r8, #0
 800d514:	4650      	mov	r0, sl
 800d516:	f7f7 fca3 	bl	8004e60 <GUI_ALLOC_h2p>
 800d51a:	c803      	ldmia	r0, {r0, r1}
 800d51c:	4642      	mov	r2, r8
 800d51e:	e884 0003 	stmia.w	r4, {r0, r1}
 800d522:	4639      	mov	r1, r7
 800d524:	4620      	mov	r0, r4
 800d526:	f7f7 ff63 	bl	80053f0 <GUI_MoveRect>
 800d52a:	4650      	mov	r0, sl
 800d52c:	f7f7 fc98 	bl	8004e60 <GUI_ALLOC_h2p>
 800d530:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d532:	f403 7381 	and.w	r3, r3, #258	; 0x102
 800d536:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
 800d53a:	d104      	bne.n	800d546 <WM_GetInsideRectExScrollbar+0x8a>
 800d53c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d540:	3b01      	subs	r3, #1
 800d542:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d546:	466b      	mov	r3, sp
 800d548:	cb03      	ldmia	r3!, {r0, r1}
 800d54a:	6028      	str	r0, [r5, #0]
 800d54c:	6069      	str	r1, [r5, #4]
 800d54e:	b006      	add	sp, #24
 800d550:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d554:	4648      	mov	r0, r9
 800d556:	f7f7 fc83 	bl	8004e60 <GUI_ALLOC_h2p>
 800d55a:	c803      	ldmia	r0, {r0, r1}
 800d55c:	427f      	negs	r7, r7
 800d55e:	f1c8 0800 	rsb	r8, r8, #0
 800d562:	e884 0003 	stmia.w	r4, {r0, r1}
 800d566:	4642      	mov	r2, r8
 800d568:	4639      	mov	r1, r7
 800d56a:	4620      	mov	r0, r4
 800d56c:	f7f7 ff40 	bl	80053f0 <GUI_MoveRect>
 800d570:	4648      	mov	r0, r9
 800d572:	f7f7 fc75 	bl	8004e60 <GUI_ALLOC_h2p>
 800d576:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d578:	f003 0382 	and.w	r3, r3, #130	; 0x82
 800d57c:	2b82      	cmp	r3, #130	; 0x82
 800d57e:	d104      	bne.n	800d58a <WM_GetInsideRectExScrollbar+0xce>
 800d580:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d584:	3b01      	subs	r3, #1
 800d586:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d58a:	f1ba 0f00 	cmp.w	sl, #0
 800d58e:	d0da      	beq.n	800d546 <WM_GetInsideRectExScrollbar+0x8a>
 800d590:	e7c0      	b.n	800d514 <WM_GetInsideRectExScrollbar+0x58>
 800d592:	4770      	bx	lr

0800d594 <WM_GetWindowOrgX>:
 800d594:	b508      	push	{r3, lr}
 800d596:	b900      	cbnz	r0, 800d59a <WM_GetWindowOrgX+0x6>
 800d598:	bd08      	pop	{r3, pc}
 800d59a:	f7f7 fc61 	bl	8004e60 <GUI_ALLOC_h2p>
 800d59e:	f9b0 0000 	ldrsh.w	r0, [r0]
 800d5a2:	bd08      	pop	{r3, pc}

0800d5a4 <WM_GetOrgX>:
 800d5a4:	b508      	push	{r3, lr}
 800d5a6:	4b04      	ldr	r3, [pc, #16]	; (800d5b8 <WM_GetOrgX+0x14>)
 800d5a8:	681b      	ldr	r3, [r3, #0]
 800d5aa:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d5ac:	b118      	cbz	r0, 800d5b6 <WM_GetOrgX+0x12>
 800d5ae:	f7f7 fc57 	bl	8004e60 <GUI_ALLOC_h2p>
 800d5b2:	f9b0 0000 	ldrsh.w	r0, [r0]
 800d5b6:	bd08      	pop	{r3, pc}
 800d5b8:	20000018 	.word	0x20000018

0800d5bc <WM_GetOrgY>:
 800d5bc:	b508      	push	{r3, lr}
 800d5be:	4b04      	ldr	r3, [pc, #16]	; (800d5d0 <WM_GetOrgY+0x14>)
 800d5c0:	681b      	ldr	r3, [r3, #0]
 800d5c2:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800d5c4:	b118      	cbz	r0, 800d5ce <WM_GetOrgY+0x12>
 800d5c6:	f7f7 fc4b 	bl	8004e60 <GUI_ALLOC_h2p>
 800d5ca:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800d5ce:	bd08      	pop	{r3, pc}
 800d5d0:	20000018 	.word	0x20000018

0800d5d4 <WM_GetParent>:
 800d5d4:	b508      	push	{r3, lr}
 800d5d6:	b910      	cbnz	r0, 800d5de <WM_GetParent+0xa>
 800d5d8:	4603      	mov	r3, r0
 800d5da:	4618      	mov	r0, r3
 800d5dc:	bd08      	pop	{r3, pc}
 800d5de:	f7f7 fc3f 	bl	8004e60 <GUI_ALLOC_h2p>
 800d5e2:	6983      	ldr	r3, [r0, #24]
 800d5e4:	4618      	mov	r0, r3
 800d5e6:	bd08      	pop	{r3, pc}

0800d5e8 <WM_GetScrollbarH>:
 800d5e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5ea:	4604      	mov	r4, r0
 800d5ec:	b085      	sub	sp, #20
 800d5ee:	b910      	cbnz	r0, 800d5f6 <WM_GetScrollbarH+0xe>
 800d5f0:	4620      	mov	r0, r4
 800d5f2:	b005      	add	sp, #20
 800d5f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d5f6:	4607      	mov	r7, r0
 800d5f8:	f7f7 fc32 	bl	8004e60 <GUI_ALLOC_h2p>
 800d5fc:	69c4      	ldr	r4, [r0, #28]
 800d5fe:	b194      	cbz	r4, 800d626 <WM_GetScrollbarH+0x3e>
 800d600:	2500      	movs	r5, #0
 800d602:	2615      	movs	r6, #21
 800d604:	4620      	mov	r0, r4
 800d606:	4669      	mov	r1, sp
 800d608:	9501      	str	r5, [sp, #4]
 800d60a:	9502      	str	r5, [sp, #8]
 800d60c:	9503      	str	r5, [sp, #12]
 800d60e:	9600      	str	r6, [sp, #0]
 800d610:	f7fe fe40 	bl	800c294 <WM_SendMessage>
 800d614:	9b03      	ldr	r3, [sp, #12]
 800d616:	2bff      	cmp	r3, #255	; 0xff
 800d618:	4620      	mov	r0, r4
 800d61a:	d0e9      	beq.n	800d5f0 <WM_GetScrollbarH+0x8>
 800d61c:	f7f7 fc20 	bl	8004e60 <GUI_ALLOC_h2p>
 800d620:	6a04      	ldr	r4, [r0, #32]
 800d622:	2c00      	cmp	r4, #0
 800d624:	d1ee      	bne.n	800d604 <WM_GetScrollbarH+0x1c>
 800d626:	4638      	mov	r0, r7
 800d628:	21ff      	movs	r1, #255	; 0xff
 800d62a:	f7ff fd0b 	bl	800d044 <_GetDialogItem.part.5>
 800d62e:	4604      	mov	r4, r0
 800d630:	4620      	mov	r0, r4
 800d632:	b005      	add	sp, #20
 800d634:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d636:	bf00      	nop

0800d638 <WM_GetScrollbarV>:
 800d638:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d63a:	4604      	mov	r4, r0
 800d63c:	b085      	sub	sp, #20
 800d63e:	b910      	cbnz	r0, 800d646 <WM_GetScrollbarV+0xe>
 800d640:	4620      	mov	r0, r4
 800d642:	b005      	add	sp, #20
 800d644:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d646:	4607      	mov	r7, r0
 800d648:	f7f7 fc0a 	bl	8004e60 <GUI_ALLOC_h2p>
 800d64c:	69c4      	ldr	r4, [r0, #28]
 800d64e:	b194      	cbz	r4, 800d676 <WM_GetScrollbarV+0x3e>
 800d650:	2500      	movs	r5, #0
 800d652:	2615      	movs	r6, #21
 800d654:	4620      	mov	r0, r4
 800d656:	4669      	mov	r1, sp
 800d658:	9501      	str	r5, [sp, #4]
 800d65a:	9502      	str	r5, [sp, #8]
 800d65c:	9503      	str	r5, [sp, #12]
 800d65e:	9600      	str	r6, [sp, #0]
 800d660:	f7fe fe18 	bl	800c294 <WM_SendMessage>
 800d664:	9b03      	ldr	r3, [sp, #12]
 800d666:	2bfe      	cmp	r3, #254	; 0xfe
 800d668:	4620      	mov	r0, r4
 800d66a:	d0e9      	beq.n	800d640 <WM_GetScrollbarV+0x8>
 800d66c:	f7f7 fbf8 	bl	8004e60 <GUI_ALLOC_h2p>
 800d670:	6a04      	ldr	r4, [r0, #32]
 800d672:	2c00      	cmp	r4, #0
 800d674:	d1ee      	bne.n	800d654 <WM_GetScrollbarV+0x1c>
 800d676:	4638      	mov	r0, r7
 800d678:	21fe      	movs	r1, #254	; 0xfe
 800d67a:	f7ff fce3 	bl	800d044 <_GetDialogItem.part.5>
 800d67e:	4604      	mov	r4, r0
 800d680:	4620      	mov	r0, r4
 800d682:	b005      	add	sp, #20
 800d684:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d686:	bf00      	nop

0800d688 <WM_GetScrollPartner>:
 800d688:	b530      	push	{r4, r5, lr}
 800d68a:	b085      	sub	sp, #20
 800d68c:	2300      	movs	r3, #0
 800d68e:	2215      	movs	r2, #21
 800d690:	4669      	mov	r1, sp
 800d692:	9301      	str	r3, [sp, #4]
 800d694:	9302      	str	r3, [sp, #8]
 800d696:	9303      	str	r3, [sp, #12]
 800d698:	9200      	str	r2, [sp, #0]
 800d69a:	4605      	mov	r5, r0
 800d69c:	f7fe fdfa 	bl	800c294 <WM_SendMessage>
 800d6a0:	9c03      	ldr	r4, [sp, #12]
 800d6a2:	2cff      	cmp	r4, #255	; 0xff
 800d6a4:	d011      	beq.n	800d6ca <WM_GetScrollPartner+0x42>
 800d6a6:	2cfe      	cmp	r4, #254	; 0xfe
 800d6a8:	bf08      	it	eq
 800d6aa:	24ff      	moveq	r4, #255	; 0xff
 800d6ac:	b915      	cbnz	r5, 800d6b4 <WM_GetScrollPartner+0x2c>
 800d6ae:	2000      	movs	r0, #0
 800d6b0:	b005      	add	sp, #20
 800d6b2:	bd30      	pop	{r4, r5, pc}
 800d6b4:	4628      	mov	r0, r5
 800d6b6:	f7f7 fbd3 	bl	8004e60 <GUI_ALLOC_h2p>
 800d6ba:	6980      	ldr	r0, [r0, #24]
 800d6bc:	2800      	cmp	r0, #0
 800d6be:	d0f6      	beq.n	800d6ae <WM_GetScrollPartner+0x26>
 800d6c0:	4621      	mov	r1, r4
 800d6c2:	f7ff fde1 	bl	800d288 <__GetDialogItem>
 800d6c6:	b005      	add	sp, #20
 800d6c8:	bd30      	pop	{r4, r5, pc}
 800d6ca:	24fe      	movs	r4, #254	; 0xfe
 800d6cc:	e7ee      	b.n	800d6ac <WM_GetScrollPartner+0x24>
 800d6ce:	bf00      	nop

0800d6d0 <WM_GetWindowRectEx>:
 800d6d0:	b148      	cbz	r0, 800d6e6 <WM_GetWindowRectEx+0x16>
 800d6d2:	b141      	cbz	r1, 800d6e6 <WM_GetWindowRectEx+0x16>
 800d6d4:	b510      	push	{r4, lr}
 800d6d6:	460c      	mov	r4, r1
 800d6d8:	f7f7 fbc2 	bl	8004e60 <GUI_ALLOC_h2p>
 800d6dc:	4603      	mov	r3, r0
 800d6de:	cb03      	ldmia	r3!, {r0, r1}
 800d6e0:	6020      	str	r0, [r4, #0]
 800d6e2:	6061      	str	r1, [r4, #4]
 800d6e4:	bd10      	pop	{r4, pc}
 800d6e6:	4770      	bx	lr

0800d6e8 <WM_HasCaptured>:
 800d6e8:	4a04      	ldr	r2, [pc, #16]	; (800d6fc <WM_HasCaptured+0x14>)
 800d6ea:	4b05      	ldr	r3, [pc, #20]	; (800d700 <WM_HasCaptured+0x18>)
 800d6ec:	6812      	ldr	r2, [r2, #0]
 800d6ee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d6f2:	1a18      	subs	r0, r3, r0
 800d6f4:	fab0 f080 	clz	r0, r0
 800d6f8:	0940      	lsrs	r0, r0, #5
 800d6fa:	4770      	bx	lr
 800d6fc:	2001c1e0 	.word	0x2001c1e0
 800d700:	2001c204 	.word	0x2001c204

0800d704 <WM_HasFocus>:
 800d704:	4a04      	ldr	r2, [pc, #16]	; (800d718 <WM_HasFocus+0x14>)
 800d706:	4b05      	ldr	r3, [pc, #20]	; (800d71c <WM_HasFocus+0x18>)
 800d708:	6812      	ldr	r2, [r2, #0]
 800d70a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d70e:	1a18      	subs	r0, r3, r0
 800d710:	fab0 f080 	clz	r0, r0
 800d714:	0940      	lsrs	r0, r0, #5
 800d716:	4770      	bx	lr
 800d718:	2001c1e0 	.word	0x2001c1e0
 800d71c:	2001c1d0 	.word	0x2001c1d0

0800d720 <WM_IsFocusable>:
 800d720:	b908      	cbnz	r0, 800d726 <WM_IsFocusable+0x6>
 800d722:	2000      	movs	r0, #0
 800d724:	4770      	bx	lr
 800d726:	b510      	push	{r4, lr}
 800d728:	b084      	sub	sp, #16
 800d72a:	4604      	mov	r4, r0
 800d72c:	f7f7 fb98 	bl	8004e60 <GUI_ALLOC_h2p>
 800d730:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d732:	079a      	lsls	r2, r3, #30
 800d734:	d502      	bpl.n	800d73c <WM_IsFocusable+0x1c>
 800d736:	f013 0310 	ands.w	r3, r3, #16
 800d73a:	d002      	beq.n	800d742 <WM_IsFocusable+0x22>
 800d73c:	2000      	movs	r0, #0
 800d73e:	b004      	add	sp, #16
 800d740:	bd10      	pop	{r4, pc}
 800d742:	a904      	add	r1, sp, #16
 800d744:	221f      	movs	r2, #31
 800d746:	4620      	mov	r0, r4
 800d748:	f841 2d10 	str.w	r2, [r1, #-16]!
 800d74c:	9303      	str	r3, [sp, #12]
 800d74e:	f7fe fda1 	bl	800c294 <WM_SendMessage>
 800d752:	9803      	ldr	r0, [sp, #12]
 800d754:	e7f3      	b.n	800d73e <WM_IsFocusable+0x1e>
 800d756:	bf00      	nop

0800d758 <WM_IsWindow>:
 800d758:	f7fd bf1e 	b.w	800b598 <WM__IsWindow>

0800d75c <WM_NotifyParent>:
 800d75c:	b510      	push	{r4, lr}
 800d75e:	b084      	sub	sp, #16
 800d760:	2326      	movs	r3, #38	; 0x26
 800d762:	9103      	str	r1, [sp, #12]
 800d764:	9300      	str	r3, [sp, #0]
 800d766:	b908      	cbnz	r0, 800d76c <WM_NotifyParent+0x10>
 800d768:	b004      	add	sp, #16
 800d76a:	bd10      	pop	{r4, pc}
 800d76c:	4604      	mov	r4, r0
 800d76e:	f7f7 fb77 	bl	8004e60 <GUI_ALLOC_h2p>
 800d772:	6980      	ldr	r0, [r0, #24]
 800d774:	2800      	cmp	r0, #0
 800d776:	d0f7      	beq.n	800d768 <WM_NotifyParent+0xc>
 800d778:	4669      	mov	r1, sp
 800d77a:	9402      	str	r4, [sp, #8]
 800d77c:	f000 ff46 	bl	800e60c <WM__SendMessage>
 800d780:	b004      	add	sp, #16
 800d782:	bd10      	pop	{r4, pc}

0800d784 <WM_OnKey>:
 800d784:	4a0c      	ldr	r2, [pc, #48]	; (800d7b8 <WM_OnKey+0x34>)
 800d786:	4b0d      	ldr	r3, [pc, #52]	; (800d7bc <WM_OnKey+0x38>)
 800d788:	6812      	ldr	r2, [r2, #0]
 800d78a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d78e:	b90b      	cbnz	r3, 800d794 <WM_OnKey+0x10>
 800d790:	4618      	mov	r0, r3
 800d792:	4770      	bx	lr
 800d794:	b510      	push	{r4, lr}
 800d796:	b086      	sub	sp, #24
 800d798:	460a      	mov	r2, r1
 800d79a:	4604      	mov	r4, r0
 800d79c:	a902      	add	r1, sp, #8
 800d79e:	4618      	mov	r0, r3
 800d7a0:	230e      	movs	r3, #14
 800d7a2:	9400      	str	r4, [sp, #0]
 800d7a4:	9201      	str	r2, [sp, #4]
 800d7a6:	9302      	str	r3, [sp, #8]
 800d7a8:	f8cd d014 	str.w	sp, [sp, #20]
 800d7ac:	f000 ff2e 	bl	800e60c <WM__SendMessage>
 800d7b0:	2001      	movs	r0, #1
 800d7b2:	b006      	add	sp, #24
 800d7b4:	bd10      	pop	{r4, pc}
 800d7b6:	bf00      	nop
 800d7b8:	2001c1e0 	.word	0x2001c1e0
 800d7bc:	2001c1d0 	.word	0x2001c1d0

0800d7c0 <WM_ResizeWindow>:
 800d7c0:	b500      	push	{lr}
 800d7c2:	ea51 0e02 	orrs.w	lr, r1, r2
 800d7c6:	d000      	beq.n	800d7ca <WM_ResizeWindow+0xa>
 800d7c8:	b908      	cbnz	r0, 800d7ce <WM_ResizeWindow+0xe>
 800d7ca:	f85d fb04 	ldr.w	pc, [sp], #4
 800d7ce:	f85d eb04 	ldr.w	lr, [sp], #4
 800d7d2:	f7ff bb65 	b.w	800cea0 <WM_ResizeWindow.part.11>
 800d7d6:	bf00      	nop

0800d7d8 <WM_SendMessageNoPara>:
 800d7d8:	f000 bf5a 	b.w	800e690 <WM__SendMessageNoPara>

0800d7dc <WM_SendToParent>:
 800d7dc:	b179      	cbz	r1, 800d7fe <WM_SendToParent+0x22>
 800d7de:	b538      	push	{r3, r4, r5, lr}
 800d7e0:	b900      	cbnz	r0, 800d7e4 <WM_SendToParent+0x8>
 800d7e2:	bd38      	pop	{r3, r4, r5, pc}
 800d7e4:	460c      	mov	r4, r1
 800d7e6:	4605      	mov	r5, r0
 800d7e8:	f7f7 fb3a 	bl	8004e60 <GUI_ALLOC_h2p>
 800d7ec:	6980      	ldr	r0, [r0, #24]
 800d7ee:	2800      	cmp	r0, #0
 800d7f0:	d0f7      	beq.n	800d7e2 <WM_SendToParent+0x6>
 800d7f2:	60a5      	str	r5, [r4, #8]
 800d7f4:	4621      	mov	r1, r4
 800d7f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d7fa:	f000 bf07 	b.w	800e60c <WM__SendMessage>
 800d7fe:	4770      	bx	lr

0800d800 <WM_SetFocus>:
 800d800:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d802:	b087      	sub	sp, #28
 800d804:	2300      	movs	r3, #0
 800d806:	9303      	str	r3, [sp, #12]
 800d808:	9304      	str	r3, [sp, #16]
 800d80a:	9305      	str	r3, [sp, #20]
 800d80c:	2800      	cmp	r0, #0
 800d80e:	d03d      	beq.n	800d88c <WM_SetFocus+0x8c>
 800d810:	4d22      	ldr	r5, [pc, #136]	; (800d89c <WM_SetFocus+0x9c>)
 800d812:	4f23      	ldr	r7, [pc, #140]	; (800d8a0 <WM_SetFocus+0xa0>)
 800d814:	682b      	ldr	r3, [r5, #0]
 800d816:	4604      	mov	r4, r0
 800d818:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800d81c:	4284      	cmp	r4, r0
 800d81e:	d035      	beq.n	800d88c <WM_SetFocus+0x8c>
 800d820:	231e      	movs	r3, #30
 800d822:	e88d 0011 	stmia.w	sp, {r0, r4}
 800d826:	9302      	str	r3, [sp, #8]
 800d828:	2800      	cmp	r0, #0
 800d82a:	d133      	bne.n	800d894 <WM_SetFocus+0x94>
 800d82c:	2301      	movs	r3, #1
 800d82e:	a902      	add	r1, sp, #8
 800d830:	4620      	mov	r0, r4
 800d832:	9305      	str	r3, [sp, #20]
 800d834:	f000 feea 	bl	800e60c <WM__SendMessage>
 800d838:	9e05      	ldr	r6, [sp, #20]
 800d83a:	bb46      	cbnz	r6, 800d88e <WM_SetFocus+0x8e>
 800d83c:	682b      	ldr	r3, [r5, #0]
 800d83e:	2520      	movs	r5, #32
 800d840:	f847 4023 	str.w	r4, [r7, r3, lsl #2]
 800d844:	e004      	b.n	800d850 <WM_SetFocus+0x50>
 800d846:	9502      	str	r5, [sp, #8]
 800d848:	f8cd d014 	str.w	sp, [sp, #20]
 800d84c:	f000 fede 	bl	800e60c <WM__SendMessage>
 800d850:	4620      	mov	r0, r4
 800d852:	f7f7 fb05 	bl	8004e60 <GUI_ALLOC_h2p>
 800d856:	6984      	ldr	r4, [r0, #24]
 800d858:	a902      	add	r1, sp, #8
 800d85a:	4620      	mov	r0, r4
 800d85c:	2c00      	cmp	r4, #0
 800d85e:	d1f2      	bne.n	800d846 <WM_SetFocus+0x46>
 800d860:	9c00      	ldr	r4, [sp, #0]
 800d862:	4620      	mov	r0, r4
 800d864:	f7fd fe98 	bl	800b598 <WM__IsWindow>
 800d868:	b188      	cbz	r0, 800d88e <WM_SetFocus+0x8e>
 800d86a:	b184      	cbz	r4, 800d88e <WM_SetFocus+0x8e>
 800d86c:	2520      	movs	r5, #32
 800d86e:	e004      	b.n	800d87a <WM_SetFocus+0x7a>
 800d870:	9502      	str	r5, [sp, #8]
 800d872:	f8cd d014 	str.w	sp, [sp, #20]
 800d876:	f000 fec9 	bl	800e60c <WM__SendMessage>
 800d87a:	4620      	mov	r0, r4
 800d87c:	f7f7 faf0 	bl	8004e60 <GUI_ALLOC_h2p>
 800d880:	6984      	ldr	r4, [r0, #24]
 800d882:	a902      	add	r1, sp, #8
 800d884:	4620      	mov	r0, r4
 800d886:	2c00      	cmp	r4, #0
 800d888:	d1f2      	bne.n	800d870 <WM_SetFocus+0x70>
 800d88a:	e000      	b.n	800d88e <WM_SetFocus+0x8e>
 800d88c:	2601      	movs	r6, #1
 800d88e:	4630      	mov	r0, r6
 800d890:	b007      	add	sp, #28
 800d892:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d894:	a902      	add	r1, sp, #8
 800d896:	f000 feb9 	bl	800e60c <WM__SendMessage>
 800d89a:	e7c7      	b.n	800d82c <WM_SetFocus+0x2c>
 800d89c:	2001c1e0 	.word	0x2001c1e0
 800d8a0:	2001c1d0 	.word	0x2001c1d0

0800d8a4 <WM_SetScrollState>:
 800d8a4:	b160      	cbz	r0, 800d8c0 <WM_SetScrollState+0x1c>
 800d8a6:	b159      	cbz	r1, 800d8c0 <WM_SetScrollState+0x1c>
 800d8a8:	b500      	push	{lr}
 800d8aa:	b085      	sub	sp, #20
 800d8ac:	460b      	mov	r3, r1
 800d8ae:	2224      	movs	r2, #36	; 0x24
 800d8b0:	4669      	mov	r1, sp
 800d8b2:	9303      	str	r3, [sp, #12]
 800d8b4:	9200      	str	r2, [sp, #0]
 800d8b6:	f7fe fced 	bl	800c294 <WM_SendMessage>
 800d8ba:	b005      	add	sp, #20
 800d8bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800d8c0:	4770      	bx	lr
 800d8c2:	bf00      	nop

0800d8c4 <WM_SetSize>:
 800d8c4:	b900      	cbnz	r0, 800d8c8 <WM_SetSize+0x4>
 800d8c6:	4770      	bx	lr
 800d8c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8cc:	b083      	sub	sp, #12
 800d8ce:	4690      	mov	r8, r2
 800d8d0:	4689      	mov	r9, r1
 800d8d2:	4607      	mov	r7, r0
 800d8d4:	f7f7 face 	bl	8004e74 <GUI_ALLOC_LockH>
 800d8d8:	4606      	mov	r6, r0
 800d8da:	a802      	add	r0, sp, #8
 800d8dc:	f9b6 1000 	ldrsh.w	r1, [r6]
 800d8e0:	f9b6 4006 	ldrsh.w	r4, [r6, #6]
 800d8e4:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800d8e8:	f9b6 5004 	ldrsh.w	r5, [r6, #4]
 800d8ec:	f840 6d04 	str.w	r6, [r0, #-4]!
 800d8f0:	1a6d      	subs	r5, r5, r1
 800d8f2:	1ae3      	subs	r3, r4, r3
 800d8f4:	3301      	adds	r3, #1
 800d8f6:	1c6c      	adds	r4, r5, #1
 800d8f8:	ebc4 0409 	rsb	r4, r4, r9
 800d8fc:	ebc3 0508 	rsb	r5, r3, r8
 800d900:	f7f7 faca 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d904:	ea54 0305 	orrs.w	r3, r4, r5
 800d908:	d004      	beq.n	800d914 <WM_SetSize+0x50>
 800d90a:	462a      	mov	r2, r5
 800d90c:	4621      	mov	r1, r4
 800d90e:	4638      	mov	r0, r7
 800d910:	f7ff fac6 	bl	800cea0 <WM_ResizeWindow.part.11>
 800d914:	b003      	add	sp, #12
 800d916:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d91a:	bf00      	nop

0800d91c <WM_SetUserClipRect>:
 800d91c:	4b04      	ldr	r3, [pc, #16]	; (800d930 <WM_SetUserClipRect+0x14>)
 800d91e:	b510      	push	{r4, lr}
 800d920:	681b      	ldr	r3, [r3, #0]
 800d922:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 800d924:	6458      	str	r0, [r3, #68]	; 0x44
 800d926:	f7fd fd13 	bl	800b350 <WM__ActivateClipRect>
 800d92a:	4620      	mov	r0, r4
 800d92c:	bd10      	pop	{r4, pc}
 800d92e:	bf00      	nop
 800d930:	20000018 	.word	0x20000018

0800d934 <WM_ShowWindow>:
 800d934:	b900      	cbnz	r0, 800d938 <WM_ShowWindow+0x4>
 800d936:	4770      	bx	lr
 800d938:	b510      	push	{r4, lr}
 800d93a:	b082      	sub	sp, #8
 800d93c:	4604      	mov	r4, r0
 800d93e:	f7f7 fa99 	bl	8004e74 <GUI_ALLOC_LockH>
 800d942:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d944:	9001      	str	r0, [sp, #4]
 800d946:	079a      	lsls	r2, r3, #30
 800d948:	d405      	bmi.n	800d956 <WM_ShowWindow+0x22>
 800d94a:	f043 0302 	orr.w	r3, r3, #2
 800d94e:	6283      	str	r3, [r0, #40]	; 0x28
 800d950:	4620      	mov	r0, r4
 800d952:	f7ff fb21 	bl	800cf98 <WM_InvalidateWindowAndDescs.part.14>
 800d956:	a801      	add	r0, sp, #4
 800d958:	f7f7 fa9e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d95c:	b002      	add	sp, #8
 800d95e:	bd10      	pop	{r4, pc}

0800d960 <WM_ValidateWindow>:
 800d960:	b900      	cbnz	r0, 800d964 <WM_ValidateWindow+0x4>
 800d962:	4770      	bx	lr
 800d964:	b500      	push	{lr}
 800d966:	b083      	sub	sp, #12
 800d968:	f7f7 fa84 	bl	8004e74 <GUI_ALLOC_LockH>
 800d96c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800d96e:	9001      	str	r0, [sp, #4]
 800d970:	069a      	lsls	r2, r3, #26
 800d972:	d506      	bpl.n	800d982 <WM_ValidateWindow+0x22>
 800d974:	4906      	ldr	r1, [pc, #24]	; (800d990 <WM_ValidateWindow+0x30>)
 800d976:	880a      	ldrh	r2, [r1, #0]
 800d978:	f023 0320 	bic.w	r3, r3, #32
 800d97c:	3a01      	subs	r2, #1
 800d97e:	6283      	str	r3, [r0, #40]	; 0x28
 800d980:	800a      	strh	r2, [r1, #0]
 800d982:	a801      	add	r0, sp, #4
 800d984:	f7f7 fa88 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d988:	b003      	add	sp, #12
 800d98a:	f85d fb04 	ldr.w	pc, [sp], #4
 800d98e:	bf00      	nop
 800d990:	2001c1d8 	.word	0x2001c1d8

0800d994 <_MoveDescendents>:
 800d994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d998:	b0b5      	sub	sp, #212	; 0xd4
 800d99a:	2300      	movs	r3, #0
 800d99c:	931d      	str	r3, [sp, #116]	; 0x74
 800d99e:	931c      	str	r3, [sp, #112]	; 0x70
 800d9a0:	931e      	str	r3, [sp, #120]	; 0x78
 800d9a2:	931f      	str	r3, [sp, #124]	; 0x7c
 800d9a4:	9006      	str	r0, [sp, #24]
 800d9a6:	2800      	cmp	r0, #0
 800d9a8:	f000 8117 	beq.w	800dbda <_MoveDescendents+0x246>
 800d9ac:	468a      	mov	sl, r1
 800d9ae:	4691      	mov	r9, r2
 800d9b0:	f04f 0b03 	mov.w	fp, #3
 800d9b4:	9806      	ldr	r0, [sp, #24]
 800d9b6:	f7f7 fa5d 	bl	8004e74 <GUI_ALLOC_LockH>
 800d9ba:	464a      	mov	r2, r9
 800d9bc:	4651      	mov	r1, sl
 800d9be:	900a      	str	r0, [sp, #40]	; 0x28
 800d9c0:	f7f7 fd16 	bl	80053f0 <GUI_MoveRect>
 800d9c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d9c6:	464a      	mov	r2, r9
 800d9c8:	3008      	adds	r0, #8
 800d9ca:	4651      	mov	r1, sl
 800d9cc:	f7f7 fd10 	bl	80053f0 <GUI_MoveRect>
 800d9d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d9d2:	69da      	ldr	r2, [r3, #28]
 800d9d4:	6a1b      	ldr	r3, [r3, #32]
 800d9d6:	9307      	str	r3, [sp, #28]
 800d9d8:	a80a      	add	r0, sp, #40	; 0x28
 800d9da:	4614      	mov	r4, r2
 800d9dc:	9205      	str	r2, [sp, #20]
 800d9de:	f7f7 fa5b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800d9e2:	2300      	movs	r3, #0
 800d9e4:	9320      	str	r3, [sp, #128]	; 0x80
 800d9e6:	9321      	str	r3, [sp, #132]	; 0x84
 800d9e8:	9322      	str	r3, [sp, #136]	; 0x88
 800d9ea:	9323      	str	r3, [sp, #140]	; 0x8c
 800d9ec:	2c00      	cmp	r4, #0
 800d9ee:	f000 80e3 	beq.w	800dbb8 <_MoveDescendents+0x224>
 800d9f2:	9805      	ldr	r0, [sp, #20]
 800d9f4:	f7f7 fa3e 	bl	8004e74 <GUI_ALLOC_LockH>
 800d9f8:	464a      	mov	r2, r9
 800d9fa:	4651      	mov	r1, sl
 800d9fc:	900b      	str	r0, [sp, #44]	; 0x2c
 800d9fe:	f7f7 fcf7 	bl	80053f0 <GUI_MoveRect>
 800da02:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800da04:	464a      	mov	r2, r9
 800da06:	3008      	adds	r0, #8
 800da08:	4651      	mov	r1, sl
 800da0a:	f7f7 fcf1 	bl	80053f0 <GUI_MoveRect>
 800da0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800da10:	69da      	ldr	r2, [r3, #28]
 800da12:	6a1b      	ldr	r3, [r3, #32]
 800da14:	9308      	str	r3, [sp, #32]
 800da16:	a80b      	add	r0, sp, #44	; 0x2c
 800da18:	4614      	mov	r4, r2
 800da1a:	9204      	str	r2, [sp, #16]
 800da1c:	f7f7 fa3c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800da20:	2300      	movs	r3, #0
 800da22:	9324      	str	r3, [sp, #144]	; 0x90
 800da24:	9325      	str	r3, [sp, #148]	; 0x94
 800da26:	9326      	str	r3, [sp, #152]	; 0x98
 800da28:	9327      	str	r3, [sp, #156]	; 0x9c
 800da2a:	2c00      	cmp	r4, #0
 800da2c:	f000 80b3 	beq.w	800db96 <_MoveDescendents+0x202>
 800da30:	9804      	ldr	r0, [sp, #16]
 800da32:	f7f7 fa1f 	bl	8004e74 <GUI_ALLOC_LockH>
 800da36:	464a      	mov	r2, r9
 800da38:	4651      	mov	r1, sl
 800da3a:	900c      	str	r0, [sp, #48]	; 0x30
 800da3c:	f7f7 fcd8 	bl	80053f0 <GUI_MoveRect>
 800da40:	980c      	ldr	r0, [sp, #48]	; 0x30
 800da42:	464a      	mov	r2, r9
 800da44:	3008      	adds	r0, #8
 800da46:	4651      	mov	r1, sl
 800da48:	f7f7 fcd2 	bl	80053f0 <GUI_MoveRect>
 800da4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800da4e:	69da      	ldr	r2, [r3, #28]
 800da50:	6a1b      	ldr	r3, [r3, #32]
 800da52:	9309      	str	r3, [sp, #36]	; 0x24
 800da54:	a80c      	add	r0, sp, #48	; 0x30
 800da56:	4614      	mov	r4, r2
 800da58:	9202      	str	r2, [sp, #8]
 800da5a:	f7f7 fa1d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800da5e:	2300      	movs	r3, #0
 800da60:	9328      	str	r3, [sp, #160]	; 0xa0
 800da62:	9329      	str	r3, [sp, #164]	; 0xa4
 800da64:	932a      	str	r3, [sp, #168]	; 0xa8
 800da66:	932b      	str	r3, [sp, #172]	; 0xac
 800da68:	2c00      	cmp	r4, #0
 800da6a:	f000 8083 	beq.w	800db74 <_MoveDescendents+0x1e0>
 800da6e:	4654      	mov	r4, sl
 800da70:	464d      	mov	r5, r9
 800da72:	9802      	ldr	r0, [sp, #8]
 800da74:	f7f7 f9fe 	bl	8004e74 <GUI_ALLOC_LockH>
 800da78:	462a      	mov	r2, r5
 800da7a:	4621      	mov	r1, r4
 800da7c:	900d      	str	r0, [sp, #52]	; 0x34
 800da7e:	f7f7 fcb7 	bl	80053f0 <GUI_MoveRect>
 800da82:	980d      	ldr	r0, [sp, #52]	; 0x34
 800da84:	462a      	mov	r2, r5
 800da86:	3008      	adds	r0, #8
 800da88:	4621      	mov	r1, r4
 800da8a:	f7f7 fcb1 	bl	80053f0 <GUI_MoveRect>
 800da8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800da90:	a80d      	add	r0, sp, #52	; 0x34
 800da92:	f8d3 901c 	ldr.w	r9, [r3, #28]
 800da96:	6a1b      	ldr	r3, [r3, #32]
 800da98:	9303      	str	r3, [sp, #12]
 800da9a:	f7f7 f9fd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800da9e:	2300      	movs	r3, #0
 800daa0:	932c      	str	r3, [sp, #176]	; 0xb0
 800daa2:	932d      	str	r3, [sp, #180]	; 0xb4
 800daa4:	932e      	str	r3, [sp, #184]	; 0xb8
 800daa6:	932f      	str	r3, [sp, #188]	; 0xbc
 800daa8:	f1b9 0f00 	cmp.w	r9, #0
 800daac:	d052      	beq.n	800db54 <_MoveDescendents+0x1c0>
 800daae:	9301      	str	r3, [sp, #4]
 800dab0:	4648      	mov	r0, r9
 800dab2:	f7f7 f9df 	bl	8004e74 <GUI_ALLOC_LockH>
 800dab6:	462a      	mov	r2, r5
 800dab8:	4621      	mov	r1, r4
 800daba:	900e      	str	r0, [sp, #56]	; 0x38
 800dabc:	f7f7 fc98 	bl	80053f0 <GUI_MoveRect>
 800dac0:	980e      	ldr	r0, [sp, #56]	; 0x38
 800dac2:	462a      	mov	r2, r5
 800dac4:	3008      	adds	r0, #8
 800dac6:	4621      	mov	r1, r4
 800dac8:	f7f7 fc92 	bl	80053f0 <GUI_MoveRect>
 800dacc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800dace:	a80e      	add	r0, sp, #56	; 0x38
 800dad0:	69de      	ldr	r6, [r3, #28]
 800dad2:	6a1b      	ldr	r3, [r3, #32]
 800dad4:	9300      	str	r3, [sp, #0]
 800dad6:	f7f7 f9df 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800dada:	9b01      	ldr	r3, [sp, #4]
 800dadc:	9330      	str	r3, [sp, #192]	; 0xc0
 800dade:	9331      	str	r3, [sp, #196]	; 0xc4
 800dae0:	9332      	str	r3, [sp, #200]	; 0xc8
 800dae2:	9333      	str	r3, [sp, #204]	; 0xcc
 800dae4:	af1a      	add	r7, sp, #104	; 0x68
 800dae6:	b336      	cbz	r6, 800db36 <_MoveDescendents+0x1a2>
 800dae8:	4630      	mov	r0, r6
 800daea:	f7f7 f9c3 	bl	8004e74 <GUI_ALLOC_LockH>
 800daee:	462a      	mov	r2, r5
 800daf0:	4621      	mov	r1, r4
 800daf2:	900f      	str	r0, [sp, #60]	; 0x3c
 800daf4:	f7f7 fc7c 	bl	80053f0 <GUI_MoveRect>
 800daf8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800dafa:	462a      	mov	r2, r5
 800dafc:	4621      	mov	r1, r4
 800dafe:	3008      	adds	r0, #8
 800db00:	f7f7 fc76 	bl	80053f0 <GUI_MoveRect>
 800db04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800db06:	f8d3 a01c 	ldr.w	sl, [r3, #28]
 800db0a:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800db0e:	a80f      	add	r0, sp, #60	; 0x3c
 800db10:	f7f7 f9c2 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800db14:	4621      	mov	r1, r4
 800db16:	4650      	mov	r0, sl
 800db18:	462a      	mov	r2, r5
 800db1a:	f7ff ff3b 	bl	800d994 <_MoveDescendents>
 800db1e:	4630      	mov	r0, r6
 800db20:	a930      	add	r1, sp, #192	; 0xc0
 800db22:	4646      	mov	r6, r8
 800db24:	f8cd b0c0 	str.w	fp, [sp, #192]	; 0xc0
 800db28:	9733      	str	r7, [sp, #204]	; 0xcc
 800db2a:	941a      	str	r4, [sp, #104]	; 0x68
 800db2c:	951b      	str	r5, [sp, #108]	; 0x6c
 800db2e:	f000 fd6d 	bl	800e60c <WM__SendMessage>
 800db32:	2e00      	cmp	r6, #0
 800db34:	d1d8      	bne.n	800dae8 <_MoveDescendents+0x154>
 800db36:	4648      	mov	r0, r9
 800db38:	ab18      	add	r3, sp, #96	; 0x60
 800db3a:	a92c      	add	r1, sp, #176	; 0xb0
 800db3c:	f8cd b0b0 	str.w	fp, [sp, #176]	; 0xb0
 800db40:	932f      	str	r3, [sp, #188]	; 0xbc
 800db42:	9418      	str	r4, [sp, #96]	; 0x60
 800db44:	9519      	str	r5, [sp, #100]	; 0x64
 800db46:	f000 fd61 	bl	800e60c <WM__SendMessage>
 800db4a:	f8dd 9000 	ldr.w	r9, [sp]
 800db4e:	f1b9 0f00 	cmp.w	r9, #0
 800db52:	d1ad      	bne.n	800dab0 <_MoveDescendents+0x11c>
 800db54:	ab16      	add	r3, sp, #88	; 0x58
 800db56:	9802      	ldr	r0, [sp, #8]
 800db58:	932b      	str	r3, [sp, #172]	; 0xac
 800db5a:	a928      	add	r1, sp, #160	; 0xa0
 800db5c:	f8cd b0a0 	str.w	fp, [sp, #160]	; 0xa0
 800db60:	9416      	str	r4, [sp, #88]	; 0x58
 800db62:	9517      	str	r5, [sp, #92]	; 0x5c
 800db64:	f000 fd52 	bl	800e60c <WM__SendMessage>
 800db68:	9b03      	ldr	r3, [sp, #12]
 800db6a:	9302      	str	r3, [sp, #8]
 800db6c:	2b00      	cmp	r3, #0
 800db6e:	d180      	bne.n	800da72 <_MoveDescendents+0xde>
 800db70:	46a2      	mov	sl, r4
 800db72:	46a9      	mov	r9, r5
 800db74:	ab14      	add	r3, sp, #80	; 0x50
 800db76:	9804      	ldr	r0, [sp, #16]
 800db78:	9327      	str	r3, [sp, #156]	; 0x9c
 800db7a:	a924      	add	r1, sp, #144	; 0x90
 800db7c:	f8cd b090 	str.w	fp, [sp, #144]	; 0x90
 800db80:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
 800db84:	f8cd 9054 	str.w	r9, [sp, #84]	; 0x54
 800db88:	f000 fd40 	bl	800e60c <WM__SendMessage>
 800db8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800db8e:	9304      	str	r3, [sp, #16]
 800db90:	2b00      	cmp	r3, #0
 800db92:	f47f af4d 	bne.w	800da30 <_MoveDescendents+0x9c>
 800db96:	ab12      	add	r3, sp, #72	; 0x48
 800db98:	9805      	ldr	r0, [sp, #20]
 800db9a:	9323      	str	r3, [sp, #140]	; 0x8c
 800db9c:	a920      	add	r1, sp, #128	; 0x80
 800db9e:	f8cd b080 	str.w	fp, [sp, #128]	; 0x80
 800dba2:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
 800dba6:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 800dbaa:	f000 fd2f 	bl	800e60c <WM__SendMessage>
 800dbae:	9b08      	ldr	r3, [sp, #32]
 800dbb0:	9305      	str	r3, [sp, #20]
 800dbb2:	2b00      	cmp	r3, #0
 800dbb4:	f47f af1d 	bne.w	800d9f2 <_MoveDescendents+0x5e>
 800dbb8:	2303      	movs	r3, #3
 800dbba:	931c      	str	r3, [sp, #112]	; 0x70
 800dbbc:	9806      	ldr	r0, [sp, #24]
 800dbbe:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 800dbc2:	ab10      	add	r3, sp, #64	; 0x40
 800dbc4:	a91c      	add	r1, sp, #112	; 0x70
 800dbc6:	931f      	str	r3, [sp, #124]	; 0x7c
 800dbc8:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
 800dbcc:	f000 fd1e 	bl	800e60c <WM__SendMessage>
 800dbd0:	9b07      	ldr	r3, [sp, #28]
 800dbd2:	9306      	str	r3, [sp, #24]
 800dbd4:	2b00      	cmp	r3, #0
 800dbd6:	f47f aeed 	bne.w	800d9b4 <_MoveDescendents+0x20>
 800dbda:	b035      	add	sp, #212	; 0xd4
 800dbdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dbe0 <WM_MoveWindow>:
 800dbe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dbe4:	b08b      	sub	sp, #44	; 0x2c
 800dbe6:	2300      	movs	r3, #0
 800dbe8:	9307      	str	r3, [sp, #28]
 800dbea:	9306      	str	r3, [sp, #24]
 800dbec:	9308      	str	r3, [sp, #32]
 800dbee:	9309      	str	r3, [sp, #36]	; 0x24
 800dbf0:	2800      	cmp	r0, #0
 800dbf2:	d03c      	beq.n	800dc6e <WM_MoveWindow+0x8e>
 800dbf4:	b909      	cbnz	r1, 800dbfa <WM_MoveWindow+0x1a>
 800dbf6:	2a00      	cmp	r2, #0
 800dbf8:	d039      	beq.n	800dc6e <WM_MoveWindow+0x8e>
 800dbfa:	460c      	mov	r4, r1
 800dbfc:	4617      	mov	r7, r2
 800dbfe:	4606      	mov	r6, r0
 800dc00:	f7f7 f938 	bl	8004e74 <GUI_ALLOC_LockH>
 800dc04:	4603      	mov	r3, r0
 800dc06:	c803      	ldmia	r0, {r0, r1}
 800dc08:	f10d 0808 	add.w	r8, sp, #8
 800dc0c:	e888 0003 	stmia.w	r8, {r0, r1}
 800dc10:	463a      	mov	r2, r7
 800dc12:	4618      	mov	r0, r3
 800dc14:	4621      	mov	r1, r4
 800dc16:	9301      	str	r3, [sp, #4]
 800dc18:	f7f7 fbea 	bl	80053f0 <GUI_MoveRect>
 800dc1c:	9801      	ldr	r0, [sp, #4]
 800dc1e:	ad0a      	add	r5, sp, #40	; 0x28
 800dc20:	463a      	mov	r2, r7
 800dc22:	4621      	mov	r1, r4
 800dc24:	3008      	adds	r0, #8
 800dc26:	f7f7 fbe3 	bl	80053f0 <GUI_MoveRect>
 800dc2a:	f855 3d24 	ldr.w	r3, [r5, #-36]!
 800dc2e:	f8d3 901c 	ldr.w	r9, [r3, #28]
 800dc32:	4628      	mov	r0, r5
 800dc34:	f7f7 f930 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800dc38:	463a      	mov	r2, r7
 800dc3a:	4621      	mov	r1, r4
 800dc3c:	4648      	mov	r0, r9
 800dc3e:	f7ff fea9 	bl	800d994 <_MoveDescendents>
 800dc42:	4630      	mov	r0, r6
 800dc44:	f7f7 f916 	bl	8004e74 <GUI_ALLOC_LockH>
 800dc48:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800dc4a:	9001      	str	r0, [sp, #4]
 800dc4c:	0792      	lsls	r2, r2, #30
 800dc4e:	d501      	bpl.n	800dc54 <WM_MoveWindow+0x74>
 800dc50:	6981      	ldr	r1, [r0, #24]
 800dc52:	b979      	cbnz	r1, 800dc74 <WM_MoveWindow+0x94>
 800dc54:	4628      	mov	r0, r5
 800dc56:	f7f7 f91f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800dc5a:	2203      	movs	r2, #3
 800dc5c:	ab04      	add	r3, sp, #16
 800dc5e:	a906      	add	r1, sp, #24
 800dc60:	4630      	mov	r0, r6
 800dc62:	9404      	str	r4, [sp, #16]
 800dc64:	9705      	str	r7, [sp, #20]
 800dc66:	9206      	str	r2, [sp, #24]
 800dc68:	9309      	str	r3, [sp, #36]	; 0x24
 800dc6a:	f000 fccf 	bl	800e60c <WM__SendMessage>
 800dc6e:	b00b      	add	sp, #44	; 0x2c
 800dc70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc74:	6a02      	ldr	r2, [r0, #32]
 800dc76:	f7fe fa2f 	bl	800c0d8 <WM__InvalidateParent>
 800dc7a:	9b01      	ldr	r3, [sp, #4]
 800dc7c:	4640      	mov	r0, r8
 800dc7e:	6a1a      	ldr	r2, [r3, #32]
 800dc80:	6999      	ldr	r1, [r3, #24]
 800dc82:	f7fe fa29 	bl	800c0d8 <WM__InvalidateParent>
 800dc86:	e7e5      	b.n	800dc54 <WM_MoveWindow+0x74>

0800dc88 <_cbTimer>:
 800dc88:	b510      	push	{r4, lr}
 800dc8a:	6842      	ldr	r2, [r0, #4]
 800dc8c:	b084      	sub	sp, #16
 800dc8e:	2300      	movs	r3, #0
 800dc90:	9301      	str	r3, [sp, #4]
 800dc92:	9300      	str	r3, [sp, #0]
 800dc94:	9302      	str	r3, [sp, #8]
 800dc96:	9303      	str	r3, [sp, #12]
 800dc98:	b162      	cbz	r2, 800dcb4 <_cbTimer+0x2c>
 800dc9a:	4604      	mov	r4, r0
 800dc9c:	4610      	mov	r0, r2
 800dc9e:	f7f7 f8df 	bl	8004e60 <GUI_ALLOC_h2p>
 800dca2:	6863      	ldr	r3, [r4, #4]
 800dca4:	6840      	ldr	r0, [r0, #4]
 800dca6:	9303      	str	r3, [sp, #12]
 800dca8:	4669      	mov	r1, sp
 800dcaa:	f240 1313 	movw	r3, #275	; 0x113
 800dcae:	9300      	str	r3, [sp, #0]
 800dcb0:	f7fe faf0 	bl	800c294 <WM_SendMessage>
 800dcb4:	b004      	add	sp, #16
 800dcb6:	bd10      	pop	{r4, pc}

0800dcb8 <WM__DeleteAssocTimer>:
 800dcb8:	b570      	push	{r4, r5, r6, lr}
 800dcba:	b082      	sub	sp, #8
 800dcbc:	4605      	mov	r5, r0
 800dcbe:	4668      	mov	r0, sp
 800dcc0:	f006 fc60 	bl	8014584 <GUI_TIMER__GetFirstTimer>
 800dcc4:	b170      	cbz	r0, 800dce4 <WM__DeleteAssocTimer+0x2c>
 800dcc6:	4604      	mov	r4, r0
 800dcc8:	2101      	movs	r1, #1
 800dcca:	4620      	mov	r0, r4
 800dccc:	f006 fd8c 	bl	80147e8 <GUI_TIMER_GetFlag>
 800dcd0:	9b00      	ldr	r3, [sp, #0]
 800dcd2:	b103      	cbz	r3, 800dcd6 <WM__DeleteAssocTimer+0x1e>
 800dcd4:	b940      	cbnz	r0, 800dce8 <WM__DeleteAssocTimer+0x30>
 800dcd6:	4620      	mov	r0, r4
 800dcd8:	4669      	mov	r1, sp
 800dcda:	f006 fc6b 	bl	80145b4 <GUI_TIMER__GetNextTimerLin>
 800dcde:	4604      	mov	r4, r0
 800dce0:	2c00      	cmp	r4, #0
 800dce2:	d1f1      	bne.n	800dcc8 <WM__DeleteAssocTimer+0x10>
 800dce4:	b002      	add	sp, #8
 800dce6:	bd70      	pop	{r4, r5, r6, pc}
 800dce8:	4618      	mov	r0, r3
 800dcea:	f7f7 f8b9 	bl	8004e60 <GUI_ALLOC_h2p>
 800dcee:	6843      	ldr	r3, [r0, #4]
 800dcf0:	42ab      	cmp	r3, r5
 800dcf2:	4669      	mov	r1, sp
 800dcf4:	4620      	mov	r0, r4
 800dcf6:	d1f0      	bne.n	800dcda <WM__DeleteAssocTimer+0x22>
 800dcf8:	9e00      	ldr	r6, [sp, #0]
 800dcfa:	f006 fc5b 	bl	80145b4 <GUI_TIMER__GetNextTimerLin>
 800dcfe:	4604      	mov	r4, r0
 800dd00:	2e00      	cmp	r6, #0
 800dd02:	d0ed      	beq.n	800dce0 <WM__DeleteAssocTimer+0x28>
 800dd04:	4630      	mov	r0, r6
 800dd06:	f7f7 f8b5 	bl	8004e74 <GUI_ALLOC_LockH>
 800dd0a:	9001      	str	r0, [sp, #4]
 800dd0c:	6800      	ldr	r0, [r0, #0]
 800dd0e:	f006 fcbb 	bl	8014688 <GUI_TIMER_Delete>
 800dd12:	a801      	add	r0, sp, #4
 800dd14:	f7f7 f8c0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800dd18:	4630      	mov	r0, r6
 800dd1a:	f7f7 fa35 	bl	8005188 <GUI_ALLOC_Free>
 800dd1e:	2c00      	cmp	r4, #0
 800dd20:	d1d2      	bne.n	800dcc8 <WM__DeleteAssocTimer+0x10>
 800dd22:	e7df      	b.n	800dce4 <WM__DeleteAssocTimer+0x2c>

0800dd24 <WM_DeleteTimer>:
 800dd24:	b900      	cbnz	r0, 800dd28 <WM_DeleteTimer+0x4>
 800dd26:	4770      	bx	lr
 800dd28:	b530      	push	{r4, r5, lr}
 800dd2a:	b083      	sub	sp, #12
 800dd2c:	4604      	mov	r4, r0
 800dd2e:	f7f7 f8a1 	bl	8004e74 <GUI_ALLOC_LockH>
 800dd32:	ad02      	add	r5, sp, #8
 800dd34:	4603      	mov	r3, r0
 800dd36:	6800      	ldr	r0, [r0, #0]
 800dd38:	f845 3d04 	str.w	r3, [r5, #-4]!
 800dd3c:	f006 fca4 	bl	8014688 <GUI_TIMER_Delete>
 800dd40:	4628      	mov	r0, r5
 800dd42:	f7f7 f8a9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800dd46:	4620      	mov	r0, r4
 800dd48:	f7f7 fa1e 	bl	8005188 <GUI_ALLOC_Free>
 800dd4c:	b003      	add	sp, #12
 800dd4e:	bd30      	pop	{r4, r5, pc}

0800dd50 <WM_CreateTimer>:
 800dd50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd54:	4680      	mov	r8, r0
 800dd56:	b082      	sub	sp, #8
 800dd58:	200c      	movs	r0, #12
 800dd5a:	460f      	mov	r7, r1
 800dd5c:	4615      	mov	r5, r2
 800dd5e:	f7f7 fa79 	bl	8005254 <GUI_ALLOC_AllocZero>
 800dd62:	4604      	mov	r4, r0
 800dd64:	b918      	cbnz	r0, 800dd6e <WM_CreateTimer+0x1e>
 800dd66:	4620      	mov	r0, r4
 800dd68:	b002      	add	sp, #8
 800dd6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd6e:	f7f8 fad3 	bl	8006318 <GUI_GetTime>
 800dd72:	2301      	movs	r3, #1
 800dd74:	1941      	adds	r1, r0, r5
 800dd76:	4622      	mov	r2, r4
 800dd78:	4810      	ldr	r0, [pc, #64]	; (800ddbc <WM_CreateTimer+0x6c>)
 800dd7a:	f006 fc3b 	bl	80145f4 <GUI_TIMER_Create>
 800dd7e:	4606      	mov	r6, r0
 800dd80:	4620      	mov	r0, r4
 800dd82:	b936      	cbnz	r6, 800dd92 <WM_CreateTimer+0x42>
 800dd84:	f7f7 fa00 	bl	8005188 <GUI_ALLOC_Free>
 800dd88:	4634      	mov	r4, r6
 800dd8a:	4620      	mov	r0, r4
 800dd8c:	b002      	add	sp, #8
 800dd8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd92:	f7f7 f86f 	bl	8004e74 <GUI_ALLOC_LockH>
 800dd96:	4603      	mov	r3, r0
 800dd98:	a802      	add	r0, sp, #8
 800dd9a:	f8c3 8004 	str.w	r8, [r3, #4]
 800dd9e:	f840 3d04 	str.w	r3, [r0, #-4]!
 800dda2:	609f      	str	r7, [r3, #8]
 800dda4:	601e      	str	r6, [r3, #0]
 800dda6:	f7f7 f877 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ddaa:	4630      	mov	r0, r6
 800ddac:	4629      	mov	r1, r5
 800ddae:	f006 fccd 	bl	801474c <GUI_TIMER_SetPeriod>
 800ddb2:	4620      	mov	r0, r4
 800ddb4:	b002      	add	sp, #8
 800ddb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ddba:	bf00      	nop
 800ddbc:	0800dc89 	.word	0x0800dc89

0800ddc0 <WM_RestartTimer>:
 800ddc0:	b900      	cbnz	r0, 800ddc4 <WM_RestartTimer+0x4>
 800ddc2:	4770      	bx	lr
 800ddc4:	b510      	push	{r4, lr}
 800ddc6:	b082      	sub	sp, #8
 800ddc8:	460c      	mov	r4, r1
 800ddca:	f7f7 f853 	bl	8004e74 <GUI_ALLOC_LockH>
 800ddce:	9001      	str	r0, [sp, #4]
 800ddd0:	b93c      	cbnz	r4, 800dde2 <WM_RestartTimer+0x22>
 800ddd2:	6800      	ldr	r0, [r0, #0]
 800ddd4:	f006 fcca 	bl	801476c <GUI_TIMER_Restart>
 800ddd8:	a801      	add	r0, sp, #4
 800ddda:	f7f7 f85d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ddde:	b002      	add	sp, #8
 800dde0:	bd10      	pop	{r4, pc}
 800dde2:	6800      	ldr	r0, [r0, #0]
 800dde4:	4621      	mov	r1, r4
 800dde6:	f006 fcb1 	bl	801474c <GUI_TIMER_SetPeriod>
 800ddea:	9801      	ldr	r0, [sp, #4]
 800ddec:	e7f1      	b.n	800ddd2 <WM_RestartTimer+0x12>
 800ddee:	bf00      	nop

0800ddf0 <WM__SendTouchMessage>:
 800ddf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddf2:	68cc      	ldr	r4, [r1, #12]
 800ddf4:	b087      	sub	sp, #28
 800ddf6:	460d      	mov	r5, r1
 800ddf8:	4607      	mov	r7, r0
 800ddfa:	b194      	cbz	r4, 800de22 <WM__SendTouchMessage+0x32>
 800ddfc:	f7f7 f83a 	bl	8004e74 <GUI_ALLOC_LockH>
 800de00:	aa06      	add	r2, sp, #24
 800de02:	f9b0 e000 	ldrsh.w	lr, [r0]
 800de06:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800de0a:	6821      	ldr	r1, [r4, #0]
 800de0c:	6863      	ldr	r3, [r4, #4]
 800de0e:	f842 0d14 	str.w	r0, [r2, #-20]!
 800de12:	ebce 0101 	rsb	r1, lr, r1
 800de16:	1b9b      	subs	r3, r3, r6
 800de18:	6021      	str	r1, [r4, #0]
 800de1a:	4610      	mov	r0, r2
 800de1c:	6063      	str	r3, [r4, #4]
 800de1e:	f7f7 f83b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800de22:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800de26:	ae02      	add	r6, sp, #8
 800de28:	f04f 0e0d 	mov.w	lr, #13
 800de2c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 800de30:	463c      	mov	r4, r7
 800de32:	9704      	str	r7, [sp, #16]
 800de34:	f8cd e008 	str.w	lr, [sp, #8]
 800de38:	4620      	mov	r0, r4
 800de3a:	f7ff fc8d 	bl	800d758 <WM_IsWindow>
 800de3e:	b170      	cbz	r0, 800de5e <WM__SendTouchMessage+0x6e>
 800de40:	4620      	mov	r0, r4
 800de42:	f7ff fbc7 	bl	800d5d4 <WM_GetParent>
 800de46:	4604      	mov	r4, r0
 800de48:	2800      	cmp	r0, #0
 800de4a:	d0f5      	beq.n	800de38 <WM__SendTouchMessage+0x48>
 800de4c:	4631      	mov	r1, r6
 800de4e:	9505      	str	r5, [sp, #20]
 800de50:	f000 fbfa 	bl	800e648 <WM__SendMessageIfEnabled>
 800de54:	4620      	mov	r0, r4
 800de56:	f7ff fc7f 	bl	800d758 <WM_IsWindow>
 800de5a:	2800      	cmp	r0, #0
 800de5c:	d1f0      	bne.n	800de40 <WM__SendTouchMessage+0x50>
 800de5e:	4629      	mov	r1, r5
 800de60:	4638      	mov	r0, r7
 800de62:	f000 fbf1 	bl	800e648 <WM__SendMessageIfEnabled>
 800de66:	b007      	add	sp, #28
 800de68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de6a:	bf00      	nop

0800de6c <WM_HandlePID>:
 800de6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de70:	b099      	sub	sp, #100	; 0x64
 800de72:	ac08      	add	r4, sp, #32
 800de74:	2300      	movs	r3, #0
 800de76:	6063      	str	r3, [r4, #4]
 800de78:	9308      	str	r3, [sp, #32]
 800de7a:	60a3      	str	r3, [r4, #8]
 800de7c:	f7f8 fa12 	bl	80062a4 <GUI_PID_IsEmpty>
 800de80:	b118      	cbz	r0, 800de8a <WM_HandlePID+0x1e>
 800de82:	2000      	movs	r0, #0
 800de84:	b019      	add	sp, #100	; 0x64
 800de86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de8a:	ae0b      	add	r6, sp, #44	; 0x2c
 800de8c:	4630      	mov	r0, r6
 800de8e:	f7f8 f965 	bl	800615c <GUI_PID_GetState>
 800de92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800de94:	1c5a      	adds	r2, r3, #1
 800de96:	f000 8156 	beq.w	800e146 <WM_HandlePID+0x2da>
 800de9a:	2b00      	cmp	r3, #0
 800de9c:	f2c0 816e 	blt.w	800e17c <WM_HandlePID+0x310>
 800dea0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800dea2:	2a00      	cmp	r2, #0
 800dea4:	f2c0 816a 	blt.w	800e17c <WM_HandlePID+0x310>
 800dea8:	48b9      	ldr	r0, [pc, #740]	; (800e190 <WM_HandlePID+0x324>)
 800deaa:	49ba      	ldr	r1, [pc, #744]	; (800e194 <WM_HandlePID+0x328>)
 800deac:	f9b0 0000 	ldrsh.w	r0, [r0]
 800deb0:	f9b1 1000 	ldrsh.w	r1, [r1]
 800deb4:	4db8      	ldr	r5, [pc, #736]	; (800e198 <WM_HandlePID+0x32c>)
 800deb6:	4403      	add	r3, r0
 800deb8:	440a      	add	r2, r1
 800deba:	930b      	str	r3, [sp, #44]	; 0x2c
 800debc:	920c      	str	r2, [sp, #48]	; 0x30
 800debe:	f89d 0035 	ldrb.w	r0, [sp, #53]	; 0x35
 800dec2:	2801      	cmp	r0, #1
 800dec4:	bf8c      	ite	hi
 800dec6:	6828      	ldrhi	r0, [r5, #0]
 800dec8:	6028      	strls	r0, [r5, #0]
 800deca:	f7f7 fd65 	bl	8005998 <GUI_DEVICE__GetpDriver>
 800dece:	2800      	cmp	r0, #0
 800ded0:	d0d7      	beq.n	800de82 <WM_HandlePID+0x16>
 800ded2:	aa04      	add	r2, sp, #16
 800ded4:	a903      	add	r1, sp, #12
 800ded6:	6828      	ldr	r0, [r5, #0]
 800ded8:	4fb0      	ldr	r7, [pc, #704]	; (800e19c <WM_HandlePID+0x330>)
 800deda:	f7f8 f9f7 	bl	80062cc <GUI_GetLayerPosEx>
 800dede:	a806      	add	r0, sp, #24
 800dee0:	f000 fc6a 	bl	800e7b8 <WM__AddCriticalHandle>
 800dee4:	682b      	ldr	r3, [r5, #0]
 800dee6:	9803      	ldr	r0, [sp, #12]
 800dee8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800deea:	9904      	ldr	r1, [sp, #16]
 800deec:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
 800def0:	eb07 0e8e 	add.w	lr, r7, lr, lsl #2
 800def4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800def6:	1a18      	subs	r0, r3, r0
 800def8:	f8de 3010 	ldr.w	r3, [lr, #16]
 800defc:	900b      	str	r0, [sp, #44]	; 0x2c
 800defe:	1a51      	subs	r1, r2, r1
 800df00:	4298      	cmp	r0, r3
 800df02:	910c      	str	r1, [sp, #48]	; 0x30
 800df04:	f000 80f9 	beq.w	800e0fa <WM_HandlePID+0x28e>
 800df08:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800df0c:	f004 fcae 	bl	801286c <GUI_CURSOR_SetPositionEx>
 800df10:	683b      	ldr	r3, [r7, #0]
 800df12:	b113      	cbz	r3, 800df1a <WM_HandlePID+0xae>
 800df14:	2100      	movs	r1, #0
 800df16:	4630      	mov	r0, r6
 800df18:	4798      	blx	r3
 800df1a:	4ba1      	ldr	r3, [pc, #644]	; (800e1a0 <WM_HandlePID+0x334>)
 800df1c:	682a      	ldr	r2, [r5, #0]
 800df1e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800df22:	2800      	cmp	r0, #0
 800df24:	f000 8125 	beq.w	800e172 <WM_HandlePID+0x306>
 800df28:	687b      	ldr	r3, [r7, #4]
 800df2a:	9007      	str	r0, [sp, #28]
 800df2c:	b113      	cbz	r3, 800df34 <WM_HandlePID+0xc8>
 800df2e:	9907      	ldr	r1, [sp, #28]
 800df30:	4630      	mov	r0, r6
 800df32:	4798      	blx	r3
 800df34:	682b      	ldr	r3, [r5, #0]
 800df36:	f8df 8274 	ldr.w	r8, [pc, #628]	; 800e1ac <WM_HandlePID+0x340>
 800df3a:	f8df 925c 	ldr.w	r9, [pc, #604]	; 800e198 <WM_HandlePID+0x32c>
 800df3e:	00db      	lsls	r3, r3, #3
 800df40:	eb08 0103 	add.w	r1, r8, r3
 800df44:	684a      	ldr	r2, [r1, #4]
 800df46:	9807      	ldr	r0, [sp, #28]
 800df48:	2a00      	cmp	r2, #0
 800df4a:	d042      	beq.n	800dfd2 <WM_HandlePID+0x166>
 800df4c:	4282      	cmp	r2, r0
 800df4e:	d040      	beq.n	800dfd2 <WM_HandlePID+0x166>
 800df50:	f8d1 a004 	ldr.w	sl, [r1, #4]
 800df54:	f1ba 0f00 	cmp.w	sl, #0
 800df58:	d03b      	beq.n	800dfd2 <WM_HandlePID+0x166>
 800df5a:	4a92      	ldr	r2, [pc, #584]	; (800e1a4 <WM_HandlePID+0x338>)
 800df5c:	6812      	ldr	r2, [r2, #0]
 800df5e:	2a00      	cmp	r2, #0
 800df60:	db09      	blt.n	800df76 <WM_HandlePID+0x10a>
 800df62:	4b91      	ldr	r3, [pc, #580]	; (800e1a8 <WM_HandlePID+0x33c>)
 800df64:	4650      	mov	r0, sl
 800df66:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800df6a:	f000 fb13 	bl	800e594 <WM__IsAncestor>
 800df6e:	b380      	cbz	r0, 800dfd2 <WM_HandlePID+0x166>
 800df70:	f8d9 3000 	ldr.w	r3, [r9]
 800df74:	00db      	lsls	r3, r3, #3
 800df76:	f8df 9238 	ldr.w	r9, [pc, #568]	; 800e1b0 <WM_HandlePID+0x344>
 800df7a:	444b      	add	r3, r9
 800df7c:	4650      	mov	r0, sl
 800df7e:	6859      	ldr	r1, [r3, #4]
 800df80:	f000 fb08 	bl	800e594 <WM__IsAncestor>
 800df84:	682b      	ldr	r3, [r5, #0]
 800df86:	00db      	lsls	r3, r3, #3
 800df88:	4499      	add	r9, r3
 800df8a:	f8d9 2004 	ldr.w	r2, [r9, #4]
 800df8e:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800df92:	b112      	cbz	r2, 800df9a <WM_HandlePID+0x12e>
 800df94:	b908      	cbnz	r0, 800df9a <WM_HandlePID+0x12e>
 800df96:	458a      	cmp	sl, r1
 800df98:	d11b      	bne.n	800dfd2 <WM_HandlePID+0x166>
 800df9a:	4443      	add	r3, r8
 800df9c:	f8df 920c 	ldr.w	r9, [pc, #524]	; 800e1ac <WM_HandlePID+0x340>
 800dfa0:	6858      	ldr	r0, [r3, #4]
 800dfa2:	f000 fb1f 	bl	800e5e4 <WM__IsEnabled>
 800dfa6:	b1a0      	cbz	r0, 800dfd2 <WM_HandlePID+0x166>
 800dfa8:	682b      	ldr	r3, [r5, #0]
 800dfaa:	9417      	str	r4, [sp, #92]	; 0x5c
 800dfac:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800dfb0:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
 800dfb4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800dfb8:	f8d3 e004 	ldr.w	lr, [r3, #4]
 800dfbc:	a914      	add	r1, sp, #80	; 0x50
 800dfbe:	2312      	movs	r3, #18
 800dfc0:	4670      	mov	r0, lr
 800dfc2:	9314      	str	r3, [sp, #80]	; 0x50
 800dfc4:	f7ff ff14 	bl	800ddf0 <WM__SendTouchMessage>
 800dfc8:	682b      	ldr	r3, [r5, #0]
 800dfca:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
 800dfce:	2200      	movs	r2, #0
 800dfd0:	605a      	str	r2, [r3, #4]
 800dfd2:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800dfd6:	f1b9 0f00 	cmp.w	r9, #0
 800dfda:	f000 809c 	beq.w	800e116 <WM_HandlePID+0x2aa>
 800dfde:	4b71      	ldr	r3, [pc, #452]	; (800e1a4 <WM_HandlePID+0x338>)
 800dfe0:	681b      	ldr	r3, [r3, #0]
 800dfe2:	2b00      	cmp	r3, #0
 800dfe4:	db08      	blt.n	800dff8 <WM_HandlePID+0x18c>
 800dfe6:	4a70      	ldr	r2, [pc, #448]	; (800e1a8 <WM_HandlePID+0x33c>)
 800dfe8:	4648      	mov	r0, r9
 800dfea:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800dfee:	f000 fad1 	bl	800e594 <WM__IsAncestor>
 800dff2:	2800      	cmp	r0, #0
 800dff4:	f000 808f 	beq.w	800e116 <WM_HandlePID+0x2aa>
 800dff8:	682b      	ldr	r3, [r5, #0]
 800dffa:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800e1b0 <WM_HandlePID+0x344>
 800dffe:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 800e002:	4648      	mov	r0, r9
 800e004:	6859      	ldr	r1, [r3, #4]
 800e006:	f000 fac5 	bl	800e594 <WM__IsAncestor>
 800e00a:	f8d5 e000 	ldr.w	lr, [r5]
 800e00e:	ea4f 0cce 	mov.w	ip, lr, lsl #3
 800e012:	44e2      	add	sl, ip
 800e014:	f8da 3004 	ldr.w	r3, [sl, #4]
 800e018:	f8da 2004 	ldr.w	r2, [sl, #4]
 800e01c:	b113      	cbz	r3, 800e024 <WM_HandlePID+0x1b8>
 800e01e:	b908      	cbnz	r0, 800e024 <WM_HandlePID+0x1b8>
 800e020:	4591      	cmp	r9, r2
 800e022:	d17a      	bne.n	800e11a <WM_HandlePID+0x2ae>
 800e024:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e028:	eb03 020e 	add.w	r2, r3, lr
 800e02c:	eb07 0282 	add.w	r2, r7, r2, lsl #2
 800e030:	44c4      	add	ip, r8
 800e032:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e036:	f892 8018 	ldrb.w	r8, [r2, #24]
 800e03a:	9a07      	ldr	r2, [sp, #28]
 800e03c:	f8cc 2004 	str.w	r2, [ip, #4]
 800e040:	45c8      	cmp	r8, r9
 800e042:	f8df a158 	ldr.w	sl, [pc, #344]	; 800e19c <WM_HandlePID+0x330>
 800e046:	d003      	beq.n	800e050 <WM_HandlePID+0x1e4>
 800e048:	9a07      	ldr	r2, [sp, #28]
 800e04a:	2a00      	cmp	r2, #0
 800e04c:	f040 80b4 	bne.w	800e1b8 <WM_HandlePID+0x34c>
 800e050:	ea58 0809 	orrs.w	r8, r8, r9
 800e054:	f000 8094 	beq.w	800e180 <WM_HandlePID+0x314>
 800e058:	f8df 8158 	ldr.w	r8, [pc, #344]	; 800e1b4 <WM_HandlePID+0x348>
 800e05c:	ea4f 0cce 	mov.w	ip, lr, lsl #3
 800e060:	eb08 020c 	add.w	r2, r8, ip
 800e064:	f44f 7a10 	mov.w	sl, #576	; 0x240
 800e068:	6850      	ldr	r0, [r2, #4]
 800e06a:	9907      	ldr	r1, [sp, #28]
 800e06c:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
 800e070:	4288      	cmp	r0, r1
 800e072:	d022      	beq.n	800e0ba <WM_HandlePID+0x24e>
 800e074:	6852      	ldr	r2, [r2, #4]
 800e076:	b302      	cbz	r2, 800e0ba <WM_HandlePID+0x24e>
 800e078:	f1b9 0f00 	cmp.w	r9, #0
 800e07c:	f040 813b 	bne.w	800e2f6 <WM_HandlePID+0x48a>
 800e080:	4473      	add	r3, lr
 800e082:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800e086:	f88d 9028 	strb.w	r9, [sp, #40]	; 0x28
 800e08a:	691a      	ldr	r2, [r3, #16]
 800e08c:	695b      	ldr	r3, [r3, #20]
 800e08e:	9309      	str	r3, [sp, #36]	; 0x24
 800e090:	9208      	str	r2, [sp, #32]
 800e092:	4623      	mov	r3, r4
 800e094:	44c4      	add	ip, r8
 800e096:	a914      	add	r1, sp, #80	; 0x50
 800e098:	f8dc 0004 	ldr.w	r0, [ip, #4]
 800e09c:	9317      	str	r3, [sp, #92]	; 0x5c
 800e09e:	f7ff fea7 	bl	800ddf0 <WM__SendTouchMessage>
 800e0a2:	f8d5 e000 	ldr.w	lr, [r5]
 800e0a6:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e0aa:	ea4f 0cce 	mov.w	ip, lr, lsl #3
 800e0ae:	eb08 030c 	add.w	r3, r8, ip
 800e0b2:	2200      	movs	r2, #0
 800e0b4:	605a      	str	r2, [r3, #4]
 800e0b6:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e0ba:	eb03 020e 	add.w	r2, r3, lr
 800e0be:	eb07 0282 	add.w	r2, r7, r2, lsl #2
 800e0c2:	9907      	ldr	r1, [sp, #28]
 800e0c4:	f882 9018 	strb.w	r9, [r2, #24]
 800e0c8:	2900      	cmp	r1, #0
 800e0ca:	d05f      	beq.n	800e18c <WM_HandlePID+0x320>
 800e0cc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800e0d0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e0d4:	f1b9 0f00 	cmp.w	r9, #0
 800e0d8:	f000 80eb 	beq.w	800e2b2 <WM_HandlePID+0x446>
 800e0dc:	44e0      	add	r8, ip
 800e0de:	9b07      	ldr	r3, [sp, #28]
 800e0e0:	f8c8 3004 	str.w	r3, [r8, #4]
 800e0e4:	9807      	ldr	r0, [sp, #28]
 800e0e6:	9417      	str	r4, [sp, #92]	; 0x5c
 800e0e8:	a914      	add	r1, sp, #80	; 0x50
 800e0ea:	f7ff fe81 	bl	800ddf0 <WM__SendTouchMessage>
 800e0ee:	f8d5 e000 	ldr.w	lr, [r5]
 800e0f2:	2401      	movs	r4, #1
 800e0f4:	fa0e f304 	lsl.w	r3, lr, r4
 800e0f8:	e012      	b.n	800e120 <WM_HandlePID+0x2b4>
 800e0fa:	f8de 3014 	ldr.w	r3, [lr, #20]
 800e0fe:	4299      	cmp	r1, r3
 800e100:	f47f af02 	bne.w	800df08 <WM_HandlePID+0x9c>
 800e104:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800e108:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 800e10c:	429a      	cmp	r2, r3
 800e10e:	f47f aefb 	bne.w	800df08 <WM_HandlePID+0x9c>
 800e112:	2400      	movs	r4, #0
 800e114:	e010      	b.n	800e138 <WM_HandlePID+0x2cc>
 800e116:	f8d5 e000 	ldr.w	lr, [r5]
 800e11a:	2400      	movs	r4, #0
 800e11c:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e120:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800e124:	4473      	add	r3, lr
 800e126:	eb07 0783 	add.w	r7, r7, r3, lsl #2
 800e12a:	3710      	adds	r7, #16
 800e12c:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 800e130:	4671      	mov	r1, lr
 800e132:	4630      	mov	r0, r6
 800e134:	f007 fc94 	bl	8015a60 <WM_PID__SetPrevState>
 800e138:	a806      	add	r0, sp, #24
 800e13a:	f000 fb45 	bl	800e7c8 <WM__RemoveCriticalHandle>
 800e13e:	4620      	mov	r0, r4
 800e140:	b019      	add	sp, #100	; 0x64
 800e142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e146:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e148:	4d13      	ldr	r5, [pc, #76]	; (800e198 <WM_HandlePID+0x32c>)
 800e14a:	3301      	adds	r3, #1
 800e14c:	f47f aeb7 	bne.w	800debe <WM_HandlePID+0x52>
 800e150:	682b      	ldr	r3, [r5, #0]
 800e152:	4a12      	ldr	r2, [pc, #72]	; (800e19c <WM_HandlePID+0x330>)
 800e154:	f89d 1034 	ldrb.w	r1, [sp, #52]	; 0x34
 800e158:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800e15c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e160:	7e1a      	ldrb	r2, [r3, #24]
 800e162:	428a      	cmp	r2, r1
 800e164:	f43f ae8d 	beq.w	800de82 <WM_HandlePID+0x16>
 800e168:	691a      	ldr	r2, [r3, #16]
 800e16a:	695b      	ldr	r3, [r3, #20]
 800e16c:	920b      	str	r2, [sp, #44]	; 0x2c
 800e16e:	930c      	str	r3, [sp, #48]	; 0x30
 800e170:	e6a5      	b.n	800debe <WM_HandlePID+0x52>
 800e172:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e174:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e176:	f007 feb9 	bl	8015eec <WM_Screen2hWin>
 800e17a:	e6d5      	b.n	800df28 <WM_HandlePID+0xbc>
 800e17c:	4d06      	ldr	r5, [pc, #24]	; (800e198 <WM_HandlePID+0x32c>)
 800e17e:	e69e      	b.n	800debe <WM_HandlePID+0x52>
 800e180:	9807      	ldr	r0, [sp, #28]
 800e182:	2800      	cmp	r0, #0
 800e184:	f040 808a 	bne.w	800e29c <WM_HandlePID+0x430>
 800e188:	4604      	mov	r4, r0
 800e18a:	e7c9      	b.n	800e120 <WM_HandlePID+0x2b4>
 800e18c:	2401      	movs	r4, #1
 800e18e:	e7c7      	b.n	800e120 <WM_HandlePID+0x2b4>
 800e190:	2001c174 	.word	0x2001c174
 800e194:	2001c164 	.word	0x2001c164
 800e198:	2001c1e0 	.word	0x2001c1e0
 800e19c:	20000580 	.word	0x20000580
 800e1a0:	2001c204 	.word	0x2001c204
 800e1a4:	20000050 	.word	0x20000050
 800e1a8:	2001c1c0 	.word	0x2001c1c0
 800e1ac:	2001c214 	.word	0x2001c214
 800e1b0:	2001c234 	.word	0x2001c234
 800e1b4:	2001c224 	.word	0x2001c224
 800e1b8:	9807      	ldr	r0, [sp, #28]
 800e1ba:	f8df b1d0 	ldr.w	fp, [pc, #464]	; 800e38c <WM_HandlePID+0x520>
 800e1be:	f7f6 fe59 	bl	8004e74 <GUI_ALLOC_LockH>
 800e1c2:	682b      	ldr	r3, [r5, #0]
 800e1c4:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800e1c8:	f88d 204c 	strb.w	r2, [sp, #76]	; 0x4c
 800e1cc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800e1d0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 800e1d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e1d6:	7e1b      	ldrb	r3, [r3, #24]
 800e1d8:	f88d 304d 	strb.w	r3, [sp, #77]	; 0x4d
 800e1dc:	f9b0 e000 	ldrsh.w	lr, [r0]
 800e1e0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800e1e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e1e6:	9005      	str	r0, [sp, #20]
 800e1e8:	ebce 0202 	rsb	r2, lr, r2
 800e1ec:	1a5b      	subs	r3, r3, r1
 800e1ee:	a805      	add	r0, sp, #20
 800e1f0:	9211      	str	r2, [sp, #68]	; 0x44
 800e1f2:	9312      	str	r3, [sp, #72]	; 0x48
 800e1f4:	f7f6 fe50 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e1f8:	f8d5 e000 	ldr.w	lr, [r5]
 800e1fc:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 800e200:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 800e204:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 800e208:	f103 0210 	add.w	r2, r3, #16
 800e20c:	ca07      	ldmia	r2, {r0, r1, r2}
 800e20e:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 800e212:	f883 c018 	strb.w	ip, [r3, #24]
 800e216:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800e21a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 800e21e:	a911      	add	r1, sp, #68	; 0x44
 800e220:	2211      	movs	r2, #17
 800e222:	9117      	str	r1, [sp, #92]	; 0x5c
 800e224:	9214      	str	r2, [sp, #80]	; 0x50
 800e226:	2b00      	cmp	r3, #0
 800e228:	d04c      	beq.n	800e2c4 <WM_HandlePID+0x458>
 800e22a:	f8df 8164 	ldr.w	r8, [pc, #356]	; 800e390 <WM_HandlePID+0x524>
 800e22e:	eb08 0ece 	add.w	lr, r8, lr, lsl #3
 800e232:	a914      	add	r1, sp, #80	; 0x50
 800e234:	f8de a004 	ldr.w	sl, [lr, #4]
 800e238:	9b07      	ldr	r3, [sp, #28]
 800e23a:	f8ce 3004 	str.w	r3, [lr, #4]
 800e23e:	f8de 3004 	ldr.w	r3, [lr, #4]
 800e242:	9807      	ldr	r0, [sp, #28]
 800e244:	9300      	str	r3, [sp, #0]
 800e246:	f000 f9ff 	bl	800e648 <WM__SendMessageIfEnabled>
 800e24a:	f8db e000 	ldr.w	lr, [fp]
 800e24e:	9b00      	ldr	r3, [sp, #0]
 800e250:	ea4f 0cce 	mov.w	ip, lr, lsl #3
 800e254:	eb08 020c 	add.w	r2, r8, ip
 800e258:	6852      	ldr	r2, [r2, #4]
 800e25a:	4293      	cmp	r3, r2
 800e25c:	d003      	beq.n	800e266 <WM_HandlePID+0x3fa>
 800e25e:	44c4      	add	ip, r8
 800e260:	f8dc 3004 	ldr.w	r3, [ip, #4]
 800e264:	9307      	str	r3, [sp, #28]
 800e266:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800e26a:	eb0e 034e 	add.w	r3, lr, lr, lsl #1
 800e26e:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800e272:	3310      	adds	r3, #16
 800e274:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800e278:	f8df b118 	ldr.w	fp, [pc, #280]	; 800e394 <WM_HandlePID+0x528>
 800e27c:	f1ba 0f00 	cmp.w	sl, #0
 800e280:	d13b      	bne.n	800e2fa <WM_HandlePID+0x48e>
 800e282:	f8d5 e000 	ldr.w	lr, [r5]
 800e286:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e28a:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e28e:	eb03 020e 	add.w	r2, r3, lr
 800e292:	eb0b 0282 	add.w	r2, fp, r2, lsl #2
 800e296:	f892 8018 	ldrb.w	r8, [r2, #24]
 800e29a:	e6d9      	b.n	800e050 <WM_HandlePID+0x1e4>
 800e29c:	9807      	ldr	r0, [sp, #28]
 800e29e:	f000 f9a1 	bl	800e5e4 <WM__IsEnabled>
 800e2a2:	2800      	cmp	r0, #0
 800e2a4:	d13a      	bne.n	800e31c <WM_HandlePID+0x4b0>
 800e2a6:	f8d5 e000 	ldr.w	lr, [r5]
 800e2aa:	4604      	mov	r4, r0
 800e2ac:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e2b0:	e736      	b.n	800e120 <WM_HandlePID+0x2b4>
 800e2b2:	4b35      	ldr	r3, [pc, #212]	; (800e388 <WM_HandlePID+0x51c>)
 800e2b4:	781b      	ldrb	r3, [r3, #0]
 800e2b6:	2b00      	cmp	r3, #0
 800e2b8:	d143      	bne.n	800e342 <WM_HandlePID+0x4d6>
 800e2ba:	44e0      	add	r8, ip
 800e2bc:	2300      	movs	r3, #0
 800e2be:	f8c8 3004 	str.w	r3, [r8, #4]
 800e2c2:	e70f      	b.n	800e0e4 <WM_HandlePID+0x278>
 800e2c4:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800e390 <WM_HandlePID+0x524>
 800e2c8:	9301      	str	r3, [sp, #4]
 800e2ca:	eb08 0ece 	add.w	lr, r8, lr, lsl #3
 800e2ce:	a914      	add	r1, sp, #80	; 0x50
 800e2d0:	f8de 2004 	ldr.w	r2, [lr, #4]
 800e2d4:	9807      	ldr	r0, [sp, #28]
 800e2d6:	9200      	str	r2, [sp, #0]
 800e2d8:	f000 f9b6 	bl	800e648 <WM__SendMessageIfEnabled>
 800e2dc:	f8db e000 	ldr.w	lr, [fp]
 800e2e0:	9a00      	ldr	r2, [sp, #0]
 800e2e2:	9b01      	ldr	r3, [sp, #4]
 800e2e4:	ea4f 0cce 	mov.w	ip, lr, lsl #3
 800e2e8:	eb08 010c 	add.w	r1, r8, ip
 800e2ec:	6849      	ldr	r1, [r1, #4]
 800e2ee:	428a      	cmp	r2, r1
 800e2f0:	d039      	beq.n	800e366 <WM_HandlePID+0x4fa>
 800e2f2:	469a      	mov	sl, r3
 800e2f4:	e7b3      	b.n	800e25e <WM_HandlePID+0x3f2>
 800e2f6:	2300      	movs	r3, #0
 800e2f8:	e6cc      	b.n	800e094 <WM_HandlePID+0x228>
 800e2fa:	4650      	mov	r0, sl
 800e2fc:	f7ff fa2c 	bl	800d758 <WM_IsWindow>
 800e300:	f8d5 e000 	ldr.w	lr, [r5]
 800e304:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e308:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e30c:	bb00      	cbnz	r0, 800e350 <WM_HandlePID+0x4e4>
 800e30e:	eb03 020e 	add.w	r2, r3, lr
 800e312:	eb0b 0282 	add.w	r2, fp, r2, lsl #2
 800e316:	f892 8018 	ldrb.w	r8, [r2, #24]
 800e31a:	e699      	b.n	800e050 <WM_HandlePID+0x1e4>
 800e31c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800e320:	f8dd e01c 	ldr.w	lr, [sp, #28]
 800e324:	9417      	str	r4, [sp, #92]	; 0x5c
 800e326:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e32a:	2310      	movs	r3, #16
 800e32c:	4670      	mov	r0, lr
 800e32e:	a914      	add	r1, sp, #80	; 0x50
 800e330:	9314      	str	r3, [sp, #80]	; 0x50
 800e332:	f7ff fd5d 	bl	800ddf0 <WM__SendTouchMessage>
 800e336:	f8d5 e000 	ldr.w	lr, [r5]
 800e33a:	4644      	mov	r4, r8
 800e33c:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e340:	e6ee      	b.n	800e120 <WM_HandlePID+0x2b4>
 800e342:	f007 fe39 	bl	8015fb8 <WM_ReleaseCapture>
 800e346:	f8d5 e000 	ldr.w	lr, [r5]
 800e34a:	ea4f 0cce 	mov.w	ip, lr, lsl #3
 800e34e:	e7b4      	b.n	800e2ba <WM_HandlePID+0x44e>
 800e350:	eb08 08ce 	add.w	r8, r8, lr, lsl #3
 800e354:	eb03 020e 	add.w	r2, r3, lr
 800e358:	eb0b 0282 	add.w	r2, fp, r2, lsl #2
 800e35c:	f8c8 a004 	str.w	sl, [r8, #4]
 800e360:	f892 8018 	ldrb.w	r8, [r2, #24]
 800e364:	e674      	b.n	800e050 <WM_HandlePID+0x1e4>
 800e366:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800e36a:	ea4f 034e 	mov.w	r3, lr, lsl #1
 800e36e:	eb03 0c0e 	add.w	ip, r3, lr
 800e372:	eb0a 0a8c 	add.w	sl, sl, ip, lsl #2
 800e376:	f10a 0c10 	add.w	ip, sl, #16
 800e37a:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800e37e:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e382:	f89a 8018 	ldrb.w	r8, [sl, #24]
 800e386:	e663      	b.n	800e050 <WM_HandlePID+0x1e4>
 800e388:	2001c1e4 	.word	0x2001c1e4
 800e38c:	2001c1e0 	.word	0x2001c1e0
 800e390:	2001c224 	.word	0x2001c224
 800e394:	20000580 	.word	0x20000580

0800e398 <WM__ForEachDesc>:
 800e398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e39c:	b085      	sub	sp, #20
 800e39e:	460d      	mov	r5, r1
 800e3a0:	4614      	mov	r4, r2
 800e3a2:	f7f6 fd5d 	bl	8004e60 <GUI_ALLOC_h2p>
 800e3a6:	69c3      	ldr	r3, [r0, #28]
 800e3a8:	9302      	str	r3, [sp, #8]
 800e3aa:	2b00      	cmp	r3, #0
 800e3ac:	f000 809e 	beq.w	800e4ec <WM__ForEachDesc+0x154>
 800e3b0:	9e02      	ldr	r6, [sp, #8]
 800e3b2:	4621      	mov	r1, r4
 800e3b4:	4630      	mov	r0, r6
 800e3b6:	47a8      	blx	r5
 800e3b8:	4630      	mov	r0, r6
 800e3ba:	f7f6 fd51 	bl	8004e60 <GUI_ALLOC_h2p>
 800e3be:	69c3      	ldr	r3, [r0, #28]
 800e3c0:	9303      	str	r3, [sp, #12]
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	f000 808a 	beq.w	800e4dc <WM__ForEachDesc+0x144>
 800e3c8:	9e03      	ldr	r6, [sp, #12]
 800e3ca:	4621      	mov	r1, r4
 800e3cc:	4630      	mov	r0, r6
 800e3ce:	47a8      	blx	r5
 800e3d0:	4630      	mov	r0, r6
 800e3d2:	f7f6 fd45 	bl	8004e60 <GUI_ALLOC_h2p>
 800e3d6:	f8d0 801c 	ldr.w	r8, [r0, #28]
 800e3da:	f1b8 0f00 	cmp.w	r8, #0
 800e3de:	d075      	beq.n	800e4cc <WM__ForEachDesc+0x134>
 800e3e0:	4621      	mov	r1, r4
 800e3e2:	4640      	mov	r0, r8
 800e3e4:	47a8      	blx	r5
 800e3e6:	4640      	mov	r0, r8
 800e3e8:	f7f6 fd3a 	bl	8004e60 <GUI_ALLOC_h2p>
 800e3ec:	f8d0 901c 	ldr.w	r9, [r0, #28]
 800e3f0:	f1b9 0f00 	cmp.w	r9, #0
 800e3f4:	d062      	beq.n	800e4bc <WM__ForEachDesc+0x124>
 800e3f6:	4621      	mov	r1, r4
 800e3f8:	4648      	mov	r0, r9
 800e3fa:	47a8      	blx	r5
 800e3fc:	4648      	mov	r0, r9
 800e3fe:	f7f6 fd2f 	bl	8004e60 <GUI_ALLOC_h2p>
 800e402:	f8d0 a01c 	ldr.w	sl, [r0, #28]
 800e406:	f1ba 0f00 	cmp.w	sl, #0
 800e40a:	d04f      	beq.n	800e4ac <WM__ForEachDesc+0x114>
 800e40c:	4621      	mov	r1, r4
 800e40e:	4650      	mov	r0, sl
 800e410:	47a8      	blx	r5
 800e412:	4650      	mov	r0, sl
 800e414:	f7f6 fd24 	bl	8004e60 <GUI_ALLOC_h2p>
 800e418:	f8d0 b01c 	ldr.w	fp, [r0, #28]
 800e41c:	f1bb 0f00 	cmp.w	fp, #0
 800e420:	d03c      	beq.n	800e49c <WM__ForEachDesc+0x104>
 800e422:	4621      	mov	r1, r4
 800e424:	4658      	mov	r0, fp
 800e426:	47a8      	blx	r5
 800e428:	4658      	mov	r0, fp
 800e42a:	f7f6 fd19 	bl	8004e60 <GUI_ALLOC_h2p>
 800e42e:	69c3      	ldr	r3, [r0, #28]
 800e430:	9301      	str	r3, [sp, #4]
 800e432:	b35b      	cbz	r3, 800e48c <WM__ForEachDesc+0xf4>
 800e434:	9e01      	ldr	r6, [sp, #4]
 800e436:	4621      	mov	r1, r4
 800e438:	4630      	mov	r0, r6
 800e43a:	47a8      	blx	r5
 800e43c:	4630      	mov	r0, r6
 800e43e:	f7f6 fd0f 	bl	8004e60 <GUI_ALLOC_h2p>
 800e442:	69c6      	ldr	r6, [r0, #28]
 800e444:	b1de      	cbz	r6, 800e47e <WM__ForEachDesc+0xe6>
 800e446:	4621      	mov	r1, r4
 800e448:	4630      	mov	r0, r6
 800e44a:	47a8      	blx	r5
 800e44c:	4630      	mov	r0, r6
 800e44e:	f7f6 fd07 	bl	8004e60 <GUI_ALLOC_h2p>
 800e452:	69c7      	ldr	r7, [r0, #28]
 800e454:	b16f      	cbz	r7, 800e472 <WM__ForEachDesc+0xda>
 800e456:	4638      	mov	r0, r7
 800e458:	4621      	mov	r1, r4
 800e45a:	47a8      	blx	r5
 800e45c:	4638      	mov	r0, r7
 800e45e:	4622      	mov	r2, r4
 800e460:	4629      	mov	r1, r5
 800e462:	f7ff ff99 	bl	800e398 <WM__ForEachDesc>
 800e466:	4638      	mov	r0, r7
 800e468:	f7f6 fcfa 	bl	8004e60 <GUI_ALLOC_h2p>
 800e46c:	6a07      	ldr	r7, [r0, #32]
 800e46e:	2f00      	cmp	r7, #0
 800e470:	d1f1      	bne.n	800e456 <WM__ForEachDesc+0xbe>
 800e472:	4630      	mov	r0, r6
 800e474:	f7f6 fcf4 	bl	8004e60 <GUI_ALLOC_h2p>
 800e478:	6a06      	ldr	r6, [r0, #32]
 800e47a:	2e00      	cmp	r6, #0
 800e47c:	d1e3      	bne.n	800e446 <WM__ForEachDesc+0xae>
 800e47e:	9801      	ldr	r0, [sp, #4]
 800e480:	f7f6 fcee 	bl	8004e60 <GUI_ALLOC_h2p>
 800e484:	6a03      	ldr	r3, [r0, #32]
 800e486:	9301      	str	r3, [sp, #4]
 800e488:	2b00      	cmp	r3, #0
 800e48a:	d1d3      	bne.n	800e434 <WM__ForEachDesc+0x9c>
 800e48c:	4658      	mov	r0, fp
 800e48e:	f7f6 fce7 	bl	8004e60 <GUI_ALLOC_h2p>
 800e492:	f8d0 b020 	ldr.w	fp, [r0, #32]
 800e496:	f1bb 0f00 	cmp.w	fp, #0
 800e49a:	d1c2      	bne.n	800e422 <WM__ForEachDesc+0x8a>
 800e49c:	4650      	mov	r0, sl
 800e49e:	f7f6 fcdf 	bl	8004e60 <GUI_ALLOC_h2p>
 800e4a2:	f8d0 a020 	ldr.w	sl, [r0, #32]
 800e4a6:	f1ba 0f00 	cmp.w	sl, #0
 800e4aa:	d1af      	bne.n	800e40c <WM__ForEachDesc+0x74>
 800e4ac:	4648      	mov	r0, r9
 800e4ae:	f7f6 fcd7 	bl	8004e60 <GUI_ALLOC_h2p>
 800e4b2:	f8d0 9020 	ldr.w	r9, [r0, #32]
 800e4b6:	f1b9 0f00 	cmp.w	r9, #0
 800e4ba:	d19c      	bne.n	800e3f6 <WM__ForEachDesc+0x5e>
 800e4bc:	4640      	mov	r0, r8
 800e4be:	f7f6 fccf 	bl	8004e60 <GUI_ALLOC_h2p>
 800e4c2:	f8d0 8020 	ldr.w	r8, [r0, #32]
 800e4c6:	f1b8 0f00 	cmp.w	r8, #0
 800e4ca:	d189      	bne.n	800e3e0 <WM__ForEachDesc+0x48>
 800e4cc:	9803      	ldr	r0, [sp, #12]
 800e4ce:	f7f6 fcc7 	bl	8004e60 <GUI_ALLOC_h2p>
 800e4d2:	6a03      	ldr	r3, [r0, #32]
 800e4d4:	9303      	str	r3, [sp, #12]
 800e4d6:	2b00      	cmp	r3, #0
 800e4d8:	f47f af76 	bne.w	800e3c8 <WM__ForEachDesc+0x30>
 800e4dc:	9802      	ldr	r0, [sp, #8]
 800e4de:	f7f6 fcbf 	bl	8004e60 <GUI_ALLOC_h2p>
 800e4e2:	6a03      	ldr	r3, [r0, #32]
 800e4e4:	9302      	str	r3, [sp, #8]
 800e4e6:	2b00      	cmp	r3, #0
 800e4e8:	f47f af62 	bne.w	800e3b0 <WM__ForEachDesc+0x18>
 800e4ec:	b005      	add	sp, #20
 800e4ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4f2:	bf00      	nop

0800e4f4 <WM__GetFocusedChild>:
 800e4f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e4f6:	4e10      	ldr	r6, [pc, #64]	; (800e538 <WM__GetFocusedChild+0x44>)
 800e4f8:	4d10      	ldr	r5, [pc, #64]	; (800e53c <WM__GetFocusedChild+0x48>)
 800e4fa:	6833      	ldr	r3, [r6, #0]
 800e4fc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800e500:	b083      	sub	sp, #12
 800e502:	b913      	cbnz	r3, 800e50a <WM__GetFocusedChild+0x16>
 800e504:	2000      	movs	r0, #0
 800e506:	b003      	add	sp, #12
 800e508:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e50a:	4607      	mov	r7, r0
 800e50c:	4618      	mov	r0, r3
 800e50e:	f7f6 fcb1 	bl	8004e74 <GUI_ALLOC_LockH>
 800e512:	4604      	mov	r4, r0
 800e514:	9001      	str	r0, [sp, #4]
 800e516:	b150      	cbz	r0, 800e52e <WM__GetFocusedChild+0x3a>
 800e518:	6984      	ldr	r4, [r0, #24]
 800e51a:	a801      	add	r0, sp, #4
 800e51c:	f7f6 fcbc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e520:	42a7      	cmp	r7, r4
 800e522:	d1ef      	bne.n	800e504 <WM__GetFocusedChild+0x10>
 800e524:	6833      	ldr	r3, [r6, #0]
 800e526:	f855 0023 	ldr.w	r0, [r5, r3, lsl #2]
 800e52a:	b003      	add	sp, #12
 800e52c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e52e:	a801      	add	r0, sp, #4
 800e530:	f7f6 fcb2 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e534:	4620      	mov	r0, r4
 800e536:	e7e6      	b.n	800e506 <WM__GetFocusedChild+0x12>
 800e538:	2001c1e0 	.word	0x2001c1e0
 800e53c:	2001c1d0 	.word	0x2001c1d0

0800e540 <WM__GetLastSibling>:
 800e540:	b510      	push	{r4, lr}
 800e542:	4604      	mov	r4, r0
 800e544:	b908      	cbnz	r0, 800e54a <WM__GetLastSibling+0xa>
 800e546:	e006      	b.n	800e556 <WM__GetLastSibling+0x16>
 800e548:	461c      	mov	r4, r3
 800e54a:	4620      	mov	r0, r4
 800e54c:	f7f6 fc88 	bl	8004e60 <GUI_ALLOC_h2p>
 800e550:	6a03      	ldr	r3, [r0, #32]
 800e552:	2b00      	cmp	r3, #0
 800e554:	d1f8      	bne.n	800e548 <WM__GetLastSibling+0x8>
 800e556:	4620      	mov	r0, r4
 800e558:	bd10      	pop	{r4, pc}
 800e55a:	bf00      	nop

0800e55c <WM__GetPrevSibling>:
 800e55c:	b538      	push	{r3, r4, r5, lr}
 800e55e:	4605      	mov	r5, r0
 800e560:	f7ff f838 	bl	800d5d4 <WM_GetParent>
 800e564:	b910      	cbnz	r0, 800e56c <WM__GetPrevSibling+0x10>
 800e566:	2400      	movs	r4, #0
 800e568:	4620      	mov	r0, r4
 800e56a:	bd38      	pop	{r3, r4, r5, pc}
 800e56c:	f7f6 fc78 	bl	8004e60 <GUI_ALLOC_h2p>
 800e570:	69c4      	ldr	r4, [r0, #28]
 800e572:	2c00      	cmp	r4, #0
 800e574:	d0f7      	beq.n	800e566 <WM__GetPrevSibling+0xa>
 800e576:	42a5      	cmp	r5, r4
 800e578:	d103      	bne.n	800e582 <WM__GetPrevSibling+0x26>
 800e57a:	e7f4      	b.n	800e566 <WM__GetPrevSibling+0xa>
 800e57c:	461c      	mov	r4, r3
 800e57e:	2b00      	cmp	r3, #0
 800e580:	d0f1      	beq.n	800e566 <WM__GetPrevSibling+0xa>
 800e582:	4620      	mov	r0, r4
 800e584:	f7f6 fc6c 	bl	8004e60 <GUI_ALLOC_h2p>
 800e588:	6a03      	ldr	r3, [r0, #32]
 800e58a:	429d      	cmp	r5, r3
 800e58c:	d1f6      	bne.n	800e57c <WM__GetPrevSibling+0x20>
 800e58e:	4620      	mov	r0, r4
 800e590:	bd38      	pop	{r3, r4, r5, pc}
 800e592:	bf00      	nop

0800e594 <WM__IsAncestor>:
 800e594:	b158      	cbz	r0, 800e5ae <WM__IsAncestor+0x1a>
 800e596:	b510      	push	{r4, lr}
 800e598:	460c      	mov	r4, r1
 800e59a:	b131      	cbz	r1, 800e5aa <WM__IsAncestor+0x16>
 800e59c:	f7f6 fc60 	bl	8004e60 <GUI_ALLOC_h2p>
 800e5a0:	6980      	ldr	r0, [r0, #24]
 800e5a2:	4284      	cmp	r4, r0
 800e5a4:	d005      	beq.n	800e5b2 <WM__IsAncestor+0x1e>
 800e5a6:	2800      	cmp	r0, #0
 800e5a8:	d1f8      	bne.n	800e59c <WM__IsAncestor+0x8>
 800e5aa:	2000      	movs	r0, #0
 800e5ac:	bd10      	pop	{r4, pc}
 800e5ae:	2000      	movs	r0, #0
 800e5b0:	4770      	bx	lr
 800e5b2:	2001      	movs	r0, #1
 800e5b4:	bd10      	pop	{r4, pc}
 800e5b6:	bf00      	nop

0800e5b8 <WM__IsAncestorOrSelf>:
 800e5b8:	4288      	cmp	r0, r1
 800e5ba:	d010      	beq.n	800e5de <WM__IsAncestorOrSelf+0x26>
 800e5bc:	b120      	cbz	r0, 800e5c8 <WM__IsAncestorOrSelf+0x10>
 800e5be:	b510      	push	{r4, lr}
 800e5c0:	460c      	mov	r4, r1
 800e5c2:	b929      	cbnz	r1, 800e5d0 <WM__IsAncestorOrSelf+0x18>
 800e5c4:	2000      	movs	r0, #0
 800e5c6:	bd10      	pop	{r4, pc}
 800e5c8:	2000      	movs	r0, #0
 800e5ca:	4770      	bx	lr
 800e5cc:	2800      	cmp	r0, #0
 800e5ce:	d0f9      	beq.n	800e5c4 <WM__IsAncestorOrSelf+0xc>
 800e5d0:	f7f6 fc46 	bl	8004e60 <GUI_ALLOC_h2p>
 800e5d4:	6980      	ldr	r0, [r0, #24]
 800e5d6:	4284      	cmp	r4, r0
 800e5d8:	d1f8      	bne.n	800e5cc <WM__IsAncestorOrSelf+0x14>
 800e5da:	2001      	movs	r0, #1
 800e5dc:	bd10      	pop	{r4, pc}
 800e5de:	2001      	movs	r0, #1
 800e5e0:	4770      	bx	lr
 800e5e2:	bf00      	nop

0800e5e4 <WM__IsEnabled>:
 800e5e4:	b508      	push	{r3, lr}
 800e5e6:	f7f6 fc3b 	bl	8004e60 <GUI_ALLOC_h2p>
 800e5ea:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e5ec:	f080 0010 	eor.w	r0, r0, #16
 800e5f0:	f3c0 1000 	ubfx	r0, r0, #4, #1
 800e5f4:	bd08      	pop	{r3, pc}
 800e5f6:	bf00      	nop

0800e5f8 <WM__Screen2Client>:
 800e5f8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e5fc:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e600:	4252      	negs	r2, r2
 800e602:	4608      	mov	r0, r1
 800e604:	4259      	negs	r1, r3
 800e606:	f7f6 bef3 	b.w	80053f0 <GUI_MoveRect>
 800e60a:	bf00      	nop

0800e60c <WM__SendMessage>:
 800e60c:	b570      	push	{r4, r5, r6, lr}
 800e60e:	4c0d      	ldr	r4, [pc, #52]	; (800e644 <WM__SendMessage+0x38>)
 800e610:	6822      	ldr	r2, [r4, #0]
 800e612:	2a13      	cmp	r2, #19
 800e614:	dd00      	ble.n	800e618 <WM__SendMessage+0xc>
 800e616:	bd70      	pop	{r4, r5, r6, pc}
 800e618:	4606      	mov	r6, r0
 800e61a:	460d      	mov	r5, r1
 800e61c:	f7f6 fc20 	bl	8004e60 <GUI_ALLOC_h2p>
 800e620:	6902      	ldr	r2, [r0, #16]
 800e622:	606e      	str	r6, [r5, #4]
 800e624:	b142      	cbz	r2, 800e638 <WM__SendMessage+0x2c>
 800e626:	6823      	ldr	r3, [r4, #0]
 800e628:	4628      	mov	r0, r5
 800e62a:	3301      	adds	r3, #1
 800e62c:	6023      	str	r3, [r4, #0]
 800e62e:	4790      	blx	r2
 800e630:	6823      	ldr	r3, [r4, #0]
 800e632:	3b01      	subs	r3, #1
 800e634:	6023      	str	r3, [r4, #0]
 800e636:	bd70      	pop	{r4, r5, r6, pc}
 800e638:	4628      	mov	r0, r5
 800e63a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e63e:	f7fe bb55 	b.w	800ccec <WM_DefaultProc>
 800e642:	bf00      	nop
 800e644:	200005a8 	.word	0x200005a8

0800e648 <WM__SendMessageIfEnabled>:
 800e648:	b570      	push	{r4, r5, r6, lr}
 800e64a:	460e      	mov	r6, r1
 800e64c:	4605      	mov	r5, r0
 800e64e:	f7f6 fc07 	bl	8004e60 <GUI_ALLOC_h2p>
 800e652:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e654:	06db      	lsls	r3, r3, #27
 800e656:	d403      	bmi.n	800e660 <WM__SendMessageIfEnabled+0x18>
 800e658:	4c0c      	ldr	r4, [pc, #48]	; (800e68c <WM__SendMessageIfEnabled+0x44>)
 800e65a:	6823      	ldr	r3, [r4, #0]
 800e65c:	2b13      	cmp	r3, #19
 800e65e:	dd00      	ble.n	800e662 <WM__SendMessageIfEnabled+0x1a>
 800e660:	bd70      	pop	{r4, r5, r6, pc}
 800e662:	4628      	mov	r0, r5
 800e664:	f7f6 fbfc 	bl	8004e60 <GUI_ALLOC_h2p>
 800e668:	6902      	ldr	r2, [r0, #16]
 800e66a:	6075      	str	r5, [r6, #4]
 800e66c:	b142      	cbz	r2, 800e680 <WM__SendMessageIfEnabled+0x38>
 800e66e:	6823      	ldr	r3, [r4, #0]
 800e670:	4630      	mov	r0, r6
 800e672:	3301      	adds	r3, #1
 800e674:	6023      	str	r3, [r4, #0]
 800e676:	4790      	blx	r2
 800e678:	6823      	ldr	r3, [r4, #0]
 800e67a:	3b01      	subs	r3, #1
 800e67c:	6023      	str	r3, [r4, #0]
 800e67e:	bd70      	pop	{r4, r5, r6, pc}
 800e680:	4630      	mov	r0, r6
 800e682:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e686:	f7fe bb31 	b.w	800ccec <WM_DefaultProc>
 800e68a:	bf00      	nop
 800e68c:	200005a8 	.word	0x200005a8

0800e690 <WM__SendMessageNoPara>:
 800e690:	b530      	push	{r4, r5, lr}
 800e692:	b085      	sub	sp, #20
 800e694:	2300      	movs	r3, #0
 800e696:	9301      	str	r3, [sp, #4]
 800e698:	9300      	str	r3, [sp, #0]
 800e69a:	9302      	str	r3, [sp, #8]
 800e69c:	9303      	str	r3, [sp, #12]
 800e69e:	460c      	mov	r4, r1
 800e6a0:	4605      	mov	r5, r0
 800e6a2:	f7f6 fbdd 	bl	8004e60 <GUI_ALLOC_h2p>
 800e6a6:	6903      	ldr	r3, [r0, #16]
 800e6a8:	b11b      	cbz	r3, 800e6b2 <WM__SendMessageNoPara+0x22>
 800e6aa:	e88d 0030 	stmia.w	sp, {r4, r5}
 800e6ae:	4668      	mov	r0, sp
 800e6b0:	4798      	blx	r3
 800e6b2:	b005      	add	sp, #20
 800e6b4:	bd30      	pop	{r4, r5, pc}
 800e6b6:	bf00      	nop

0800e6b8 <WM__UpdateChildPositions>:
 800e6b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e6bc:	f8d0 b01c 	ldr.w	fp, [r0, #28]
 800e6c0:	b08b      	sub	sp, #44	; 0x2c
 800e6c2:	f1bb 0f00 	cmp.w	fp, #0
 800e6c6:	d074      	beq.n	800e7b2 <WM__UpdateChildPositions+0xfa>
 800e6c8:	9307      	str	r3, [sp, #28]
 800e6ca:	b29b      	uxth	r3, r3
 800e6cc:	9303      	str	r3, [sp, #12]
 800e6ce:	b28b      	uxth	r3, r1
 800e6d0:	9304      	str	r3, [sp, #16]
 800e6d2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800e6d6:	9202      	str	r2, [sp, #8]
 800e6d8:	9106      	str	r1, [sp, #24]
 800e6da:	9305      	str	r3, [sp, #20]
 800e6dc:	e039      	b.n	800e752 <WM__UpdateChildPositions+0x9a>
 800e6de:	9906      	ldr	r1, [sp, #24]
 800e6e0:	eb0a 0601 	add.w	r6, sl, r1
 800e6e4:	9907      	ldr	r1, [sp, #28]
 800e6e6:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 800e6ea:	eb08 0401 	add.w	r4, r8, r1
 800e6ee:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800e6f2:	b236      	sxth	r6, r6
 800e6f4:	b224      	sxth	r4, r4
 800e6f6:	d04c      	beq.n	800e792 <WM__UpdateChildPositions+0xda>
 800e6f8:	f5b2 6fa0 	cmp.w	r2, #1280	; 0x500
 800e6fc:	d150      	bne.n	800e7a0 <WM__UpdateChildPositions+0xe8>
 800e6fe:	9a02      	ldr	r2, [sp, #8]
 800e700:	189f      	adds	r7, r3, r2
 800e702:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e704:	eb09 0502 	add.w	r5, r9, r2
 800e708:	b23f      	sxth	r7, r7
 800e70a:	b22d      	sxth	r5, r5
 800e70c:	ebb6 010a 	subs.w	r1, r6, sl
 800e710:	eba7 0203 	sub.w	r2, r7, r3
 800e714:	d100      	bne.n	800e718 <WM__UpdateChildPositions+0x60>
 800e716:	b122      	cbz	r2, 800e722 <WM__UpdateChildPositions+0x6a>
 800e718:	4658      	mov	r0, fp
 800e71a:	9301      	str	r3, [sp, #4]
 800e71c:	f7ff fa60 	bl	800dbe0 <WM_MoveWindow>
 800e720:	9b01      	ldr	r3, [sp, #4]
 800e722:	1ba4      	subs	r4, r4, r6
 800e724:	ebca 0808 	rsb	r8, sl, r8
 800e728:	1bed      	subs	r5, r5, r7
 800e72a:	ebc3 0909 	rsb	r9, r3, r9
 800e72e:	ebb4 0108 	subs.w	r1, r4, r8
 800e732:	ebc9 0205 	rsb	r2, r9, r5
 800e736:	d100      	bne.n	800e73a <WM__UpdateChildPositions+0x82>
 800e738:	b112      	cbz	r2, 800e740 <WM__UpdateChildPositions+0x88>
 800e73a:	4658      	mov	r0, fp
 800e73c:	f7ff f840 	bl	800d7c0 <WM_ResizeWindow>
 800e740:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e742:	f8d3 b020 	ldr.w	fp, [r3, #32]
 800e746:	a809      	add	r0, sp, #36	; 0x24
 800e748:	f7f6 fba6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e74c:	f1bb 0f00 	cmp.w	fp, #0
 800e750:	d02f      	beq.n	800e7b2 <WM__UpdateChildPositions+0xfa>
 800e752:	4658      	mov	r0, fp
 800e754:	f7f6 fb8e 	bl	8004e74 <GUI_ALLOC_LockH>
 800e758:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800e75a:	9009      	str	r0, [sp, #36]	; 0x24
 800e75c:	f402 7120 	and.w	r1, r2, #640	; 0x280
 800e760:	2980      	cmp	r1, #128	; 0x80
 800e762:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e766:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e76a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e76e:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 800e772:	d01c      	beq.n	800e7ae <WM__UpdateChildPositions+0xf6>
 800e774:	f5b1 7f20 	cmp.w	r1, #640	; 0x280
 800e778:	d0b1      	beq.n	800e6de <WM__UpdateChildPositions+0x26>
 800e77a:	9804      	ldr	r0, [sp, #16]
 800e77c:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 800e780:	eb00 060a 	add.w	r6, r0, sl
 800e784:	eb00 0408 	add.w	r4, r0, r8
 800e788:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800e78c:	b236      	sxth	r6, r6
 800e78e:	b224      	sxth	r4, r4
 800e790:	d1b2      	bne.n	800e6f8 <WM__UpdateChildPositions+0x40>
 800e792:	9a05      	ldr	r2, [sp, #20]
 800e794:	18d7      	adds	r7, r2, r3
 800e796:	eb02 0509 	add.w	r5, r2, r9
 800e79a:	b23f      	sxth	r7, r7
 800e79c:	b22d      	sxth	r5, r5
 800e79e:	e7b5      	b.n	800e70c <WM__UpdateChildPositions+0x54>
 800e7a0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800e7a4:	18cf      	adds	r7, r1, r3
 800e7a6:	4449      	add	r1, r9
 800e7a8:	b23f      	sxth	r7, r7
 800e7aa:	b20d      	sxth	r5, r1
 800e7ac:	e7ae      	b.n	800e70c <WM__UpdateChildPositions+0x54>
 800e7ae:	9803      	ldr	r0, [sp, #12]
 800e7b0:	e7e4      	b.n	800e77c <WM__UpdateChildPositions+0xc4>
 800e7b2:	b00b      	add	sp, #44	; 0x2c
 800e7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e7b8 <WM__AddCriticalHandle>:
 800e7b8:	4b02      	ldr	r3, [pc, #8]	; (800e7c4 <WM__AddCriticalHandle+0xc>)
 800e7ba:	681a      	ldr	r2, [r3, #0]
 800e7bc:	6002      	str	r2, [r0, #0]
 800e7be:	6018      	str	r0, [r3, #0]
 800e7c0:	4770      	bx	lr
 800e7c2:	bf00      	nop
 800e7c4:	2001c1fc 	.word	0x2001c1fc

0800e7c8 <WM__RemoveCriticalHandle>:
 800e7c8:	b410      	push	{r4}
 800e7ca:	4c0e      	ldr	r4, [pc, #56]	; (800e804 <WM__RemoveCriticalHandle+0x3c>)
 800e7cc:	6821      	ldr	r1, [r4, #0]
 800e7ce:	b159      	cbz	r1, 800e7e8 <WM__RemoveCriticalHandle+0x20>
 800e7d0:	4281      	cmp	r1, r0
 800e7d2:	d012      	beq.n	800e7fa <WM__RemoveCriticalHandle+0x32>
 800e7d4:	680b      	ldr	r3, [r1, #0]
 800e7d6:	b90b      	cbnz	r3, 800e7dc <WM__RemoveCriticalHandle+0x14>
 800e7d8:	e006      	b.n	800e7e8 <WM__RemoveCriticalHandle+0x20>
 800e7da:	4613      	mov	r3, r2
 800e7dc:	4298      	cmp	r0, r3
 800e7de:	d006      	beq.n	800e7ee <WM__RemoveCriticalHandle+0x26>
 800e7e0:	681a      	ldr	r2, [r3, #0]
 800e7e2:	4619      	mov	r1, r3
 800e7e4:	2a00      	cmp	r2, #0
 800e7e6:	d1f8      	bne.n	800e7da <WM__RemoveCriticalHandle+0x12>
 800e7e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e7ec:	4770      	bx	lr
 800e7ee:	b129      	cbz	r1, 800e7fc <WM__RemoveCriticalHandle+0x34>
 800e7f0:	6803      	ldr	r3, [r0, #0]
 800e7f2:	600b      	str	r3, [r1, #0]
 800e7f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e7f8:	4770      	bx	lr
 800e7fa:	460b      	mov	r3, r1
 800e7fc:	681b      	ldr	r3, [r3, #0]
 800e7fe:	6023      	str	r3, [r4, #0]
 800e800:	e7f2      	b.n	800e7e8 <WM__RemoveCriticalHandle+0x20>
 800e802:	bf00      	nop
 800e804:	2001c1fc 	.word	0x2001c1fc

0800e808 <WM__GetClientRectEx>:
 800e808:	b180      	cbz	r0, 800e82c <WM__GetClientRectEx+0x24>
 800e80a:	b179      	cbz	r1, 800e82c <WM__GetClientRectEx+0x24>
 800e80c:	b530      	push	{r4, r5, lr}
 800e80e:	b083      	sub	sp, #12
 800e810:	460c      	mov	r4, r1
 800e812:	f7f6 fb2f 	bl	8004e74 <GUI_ALLOC_LockH>
 800e816:	ad02      	add	r5, sp, #8
 800e818:	4621      	mov	r1, r4
 800e81a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e81e:	f7fd fd49 	bl	800c2b4 <WM__GetClientRectWin>
 800e822:	4628      	mov	r0, r5
 800e824:	f7f6 fb38 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e828:	b003      	add	sp, #12
 800e82a:	bd30      	pop	{r4, r5, pc}
 800e82c:	4770      	bx	lr
 800e82e:	bf00      	nop

0800e830 <_OnTouchDefault>:
 800e830:	b570      	push	{r4, r5, r6, lr}
 800e832:	b082      	sub	sp, #8
 800e834:	460c      	mov	r4, r1
 800e836:	4606      	mov	r6, r0
 800e838:	f7f6 fb1c 	bl	8004e74 <GUI_ALLOC_LockH>
 800e83c:	ab02      	add	r3, sp, #8
 800e83e:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 800e840:	f843 0d08 	str.w	r0, [r3, #-8]!
 800e844:	4618      	mov	r0, r3
 800e846:	f7f6 fb27 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e84a:	68e3      	ldr	r3, [r4, #12]
 800e84c:	2b00      	cmp	r3, #0
 800e84e:	d037      	beq.n	800e8c0 <_OnTouchDefault+0x90>
 800e850:	7a1b      	ldrb	r3, [r3, #8]
 800e852:	b91b      	cbnz	r3, 800e85c <_OnTouchDefault+0x2c>
 800e854:	05e9      	lsls	r1, r5, #23
 800e856:	d419      	bmi.n	800e88c <_OnTouchDefault+0x5c>
 800e858:	b002      	add	sp, #8
 800e85a:	bd70      	pop	{r4, r5, r6, pc}
 800e85c:	05ec      	lsls	r4, r5, #23
 800e85e:	d4fb      	bmi.n	800e858 <_OnTouchDefault+0x28>
 800e860:	f44f 7180 	mov.w	r1, #256	; 0x100
 800e864:	4630      	mov	r0, r6
 800e866:	f003 f999 	bl	8011b9c <WIDGET_OrState>
 800e86a:	4630      	mov	r0, r6
 800e86c:	f7f6 fb02 	bl	8004e74 <GUI_ALLOC_LockH>
 800e870:	ab02      	add	r3, sp, #8
 800e872:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e874:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e878:	4618      	mov	r0, r3
 800e87a:	f7f6 fb0d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e87e:	07a0      	lsls	r0, r4, #30
 800e880:	d5ea      	bpl.n	800e858 <_OnTouchDefault+0x28>
 800e882:	4630      	mov	r0, r6
 800e884:	2101      	movs	r1, #1
 800e886:	f7fe ff69 	bl	800d75c <WM_NotifyParent>
 800e88a:	e7e5      	b.n	800e858 <_OnTouchDefault+0x28>
 800e88c:	f44f 7180 	mov.w	r1, #256	; 0x100
 800e890:	4630      	mov	r0, r6
 800e892:	f003 f99b 	bl	8011bcc <WIDGET_AndState>
 800e896:	4630      	mov	r0, r6
 800e898:	f7f6 faec 	bl	8004e74 <GUI_ALLOC_LockH>
 800e89c:	ab02      	add	r3, sp, #8
 800e89e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e8a0:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e8a4:	8e05      	ldrh	r5, [r0, #48]	; 0x30
 800e8a6:	4618      	mov	r0, r3
 800e8a8:	f7f6 faf6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e8ac:	4628      	mov	r0, r5
 800e8ae:	f7f7 fc29 	bl	8006104 <GUI_StoreKey>
 800e8b2:	07a2      	lsls	r2, r4, #30
 800e8b4:	d5d0      	bpl.n	800e858 <_OnTouchDefault+0x28>
 800e8b6:	4630      	mov	r0, r6
 800e8b8:	2102      	movs	r1, #2
 800e8ba:	f7fe ff4f 	bl	800d75c <WM_NotifyParent>
 800e8be:	e7cb      	b.n	800e858 <_OnTouchDefault+0x28>
 800e8c0:	f44f 7180 	mov.w	r1, #256	; 0x100
 800e8c4:	4630      	mov	r0, r6
 800e8c6:	f003 f981 	bl	8011bcc <WIDGET_AndState>
 800e8ca:	4630      	mov	r0, r6
 800e8cc:	f7f6 fad2 	bl	8004e74 <GUI_ALLOC_LockH>
 800e8d0:	ab02      	add	r3, sp, #8
 800e8d2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e8d4:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e8d8:	4618      	mov	r0, r3
 800e8da:	f7f6 fadd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e8de:	07a3      	lsls	r3, r4, #30
 800e8e0:	d5ba      	bpl.n	800e858 <_OnTouchDefault+0x28>
 800e8e2:	4630      	mov	r0, r6
 800e8e4:	2103      	movs	r1, #3
 800e8e6:	f7fe ff39 	bl	800d75c <WM_NotifyParent>
 800e8ea:	e7b5      	b.n	800e858 <_OnTouchDefault+0x28>

0800e8ec <BUTTON_Callback>:
 800e8ec:	b570      	push	{r4, r5, r6, lr}
 800e8ee:	6845      	ldr	r5, [r0, #4]
 800e8f0:	b082      	sub	sp, #8
 800e8f2:	4604      	mov	r4, r0
 800e8f4:	4601      	mov	r1, r0
 800e8f6:	4628      	mov	r0, r5
 800e8f8:	f003 f980 	bl	8011bfc <WIDGET_HandleActive>
 800e8fc:	b168      	cbz	r0, 800e91a <BUTTON_Callback+0x2e>
 800e8fe:	6823      	ldr	r3, [r4, #0]
 800e900:	2b0f      	cmp	r3, #15
 800e902:	d059      	beq.n	800e9b8 <BUTTON_Callback+0xcc>
 800e904:	dd0b      	ble.n	800e91e <BUTTON_Callback+0x32>
 800e906:	2b28      	cmp	r3, #40	; 0x28
 800e908:	d045      	beq.n	800e996 <BUTTON_Callback+0xaa>
 800e90a:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800e90e:	d03c      	beq.n	800e98a <BUTTON_Callback+0x9e>
 800e910:	2b11      	cmp	r3, #17
 800e912:	d049      	beq.n	800e9a8 <BUTTON_Callback+0xbc>
 800e914:	4620      	mov	r0, r4
 800e916:	f7fe f9e9 	bl	800ccec <WM_DefaultProc>
 800e91a:	b002      	add	sp, #8
 800e91c:	bd70      	pop	{r4, r5, r6, pc}
 800e91e:	2b0b      	cmp	r3, #11
 800e920:	d020      	beq.n	800e964 <BUTTON_Callback+0x78>
 800e922:	2b0e      	cmp	r3, #14
 800e924:	d1f6      	bne.n	800e914 <BUTTON_Callback+0x28>
 800e926:	68e3      	ldr	r3, [r4, #12]
 800e928:	681a      	ldr	r2, [r3, #0]
 800e92a:	6859      	ldr	r1, [r3, #4]
 800e92c:	2a0d      	cmp	r2, #13
 800e92e:	d053      	beq.n	800e9d8 <BUTTON_Callback+0xec>
 800e930:	2a20      	cmp	r2, #32
 800e932:	d131      	bne.n	800e998 <BUTTON_Callback+0xac>
 800e934:	2900      	cmp	r1, #0
 800e936:	4628      	mov	r0, r5
 800e938:	f44f 7180 	mov.w	r1, #256	; 0x100
 800e93c:	dd7d      	ble.n	800ea3a <BUTTON_Callback+0x14e>
 800e93e:	f003 f92d 	bl	8011b9c <WIDGET_OrState>
 800e942:	4628      	mov	r0, r5
 800e944:	f7f6 fa96 	bl	8004e74 <GUI_ALLOC_LockH>
 800e948:	ab02      	add	r3, sp, #8
 800e94a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e94c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e950:	4618      	mov	r0, r3
 800e952:	f7f6 faa1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e956:	07a2      	lsls	r2, r4, #30
 800e958:	d5df      	bpl.n	800e91a <BUTTON_Callback+0x2e>
 800e95a:	4628      	mov	r0, r5
 800e95c:	2101      	movs	r1, #1
 800e95e:	f7fe fefd 	bl	800d75c <WM_NotifyParent>
 800e962:	e7da      	b.n	800e91a <BUTTON_Callback+0x2e>
 800e964:	4628      	mov	r0, r5
 800e966:	f7f6 fa85 	bl	8004e74 <GUI_ALLOC_LockH>
 800e96a:	ad02      	add	r5, sp, #8
 800e96c:	4603      	mov	r3, r0
 800e96e:	3068      	adds	r0, #104	; 0x68
 800e970:	9301      	str	r3, [sp, #4]
 800e972:	f7f6 fc23 	bl	80051bc <GUI_ALLOC_FreePtr>
 800e976:	f855 0d04 	ldr.w	r0, [r5, #-4]!
 800e97a:	2103      	movs	r1, #3
 800e97c:	306c      	adds	r0, #108	; 0x6c
 800e97e:	f7f6 fc39 	bl	80051f4 <GUI_ALLOC_FreePtrArray>
 800e982:	4628      	mov	r0, r5
 800e984:	f7f6 fa88 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e988:	e7c4      	b.n	800e914 <BUTTON_Callback+0x28>
 800e98a:	4b32      	ldr	r3, [pc, #200]	; (800ea54 <BUTTON_Callback+0x168>)
 800e98c:	4621      	mov	r1, r4
 800e98e:	4628      	mov	r0, r5
 800e990:	681b      	ldr	r3, [r3, #0]
 800e992:	4798      	blx	r3
 800e994:	e7c1      	b.n	800e91a <BUTTON_Callback+0x2e>
 800e996:	68e3      	ldr	r3, [r4, #12]
 800e998:	2b00      	cmp	r3, #0
 800e99a:	d1bb      	bne.n	800e914 <BUTTON_Callback+0x28>
 800e99c:	4628      	mov	r0, r5
 800e99e:	f44f 7180 	mov.w	r1, #256	; 0x100
 800e9a2:	f003 f913 	bl	8011bcc <WIDGET_AndState>
 800e9a6:	e7b5      	b.n	800e914 <BUTTON_Callback+0x28>
 800e9a8:	4b2b      	ldr	r3, [pc, #172]	; (800ea58 <BUTTON_Callback+0x16c>)
 800e9aa:	681b      	ldr	r3, [r3, #0]
 800e9ac:	2b00      	cmp	r3, #0
 800e9ae:	d0b4      	beq.n	800e91a <BUTTON_Callback+0x2e>
 800e9b0:	4621      	mov	r1, r4
 800e9b2:	4628      	mov	r0, r5
 800e9b4:	4798      	blx	r3
 800e9b6:	e7b0      	b.n	800e91a <BUTTON_Callback+0x2e>
 800e9b8:	4628      	mov	r0, r5
 800e9ba:	f7f6 fa5b 	bl	8004e74 <GUI_ALLOC_LockH>
 800e9be:	ab02      	add	r3, sp, #8
 800e9c0:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e9c4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800e9c6:	6814      	ldr	r4, [r2, #0]
 800e9c8:	4618      	mov	r0, r3
 800e9ca:	f7f6 fa65 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e9ce:	2c00      	cmp	r4, #0
 800e9d0:	d0a3      	beq.n	800e91a <BUTTON_Callback+0x2e>
 800e9d2:	4628      	mov	r0, r5
 800e9d4:	47a0      	blx	r4
 800e9d6:	e7a0      	b.n	800e91a <BUTTON_Callback+0x2e>
 800e9d8:	2900      	cmp	r1, #0
 800e9da:	dddd      	ble.n	800e998 <BUTTON_Callback+0xac>
 800e9dc:	f44f 7180 	mov.w	r1, #256	; 0x100
 800e9e0:	4628      	mov	r0, r5
 800e9e2:	f003 f8db 	bl	8011b9c <WIDGET_OrState>
 800e9e6:	4628      	mov	r0, r5
 800e9e8:	f7f6 fa44 	bl	8004e74 <GUI_ALLOC_LockH>
 800e9ec:	ac02      	add	r4, sp, #8
 800e9ee:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800e9f0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800e9f4:	4620      	mov	r0, r4
 800e9f6:	f7f6 fa4f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800e9fa:	07b1      	lsls	r1, r6, #30
 800e9fc:	d503      	bpl.n	800ea06 <BUTTON_Callback+0x11a>
 800e9fe:	2101      	movs	r1, #1
 800ea00:	4628      	mov	r0, r5
 800ea02:	f7fe feab 	bl	800d75c <WM_NotifyParent>
 800ea06:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ea0a:	4628      	mov	r0, r5
 800ea0c:	f003 f8de 	bl	8011bcc <WIDGET_AndState>
 800ea10:	4628      	mov	r0, r5
 800ea12:	f7f6 fa2f 	bl	8004e74 <GUI_ALLOC_LockH>
 800ea16:	4603      	mov	r3, r0
 800ea18:	4620      	mov	r0, r4
 800ea1a:	8e1e      	ldrh	r6, [r3, #48]	; 0x30
 800ea1c:	6a9c      	ldr	r4, [r3, #40]	; 0x28
 800ea1e:	9301      	str	r3, [sp, #4]
 800ea20:	f7f6 fa3a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ea24:	4630      	mov	r0, r6
 800ea26:	f7f7 fb6d 	bl	8006104 <GUI_StoreKey>
 800ea2a:	07a3      	lsls	r3, r4, #30
 800ea2c:	f57f af75 	bpl.w	800e91a <BUTTON_Callback+0x2e>
 800ea30:	4628      	mov	r0, r5
 800ea32:	2102      	movs	r1, #2
 800ea34:	f7fe fe92 	bl	800d75c <WM_NotifyParent>
 800ea38:	e76f      	b.n	800e91a <BUTTON_Callback+0x2e>
 800ea3a:	f003 f8c7 	bl	8011bcc <WIDGET_AndState>
 800ea3e:	4628      	mov	r0, r5
 800ea40:	f7f6 fa18 	bl	8004e74 <GUI_ALLOC_LockH>
 800ea44:	ab02      	add	r3, sp, #8
 800ea46:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ea48:	f843 0d04 	str.w	r0, [r3, #-4]!
 800ea4c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800ea4e:	4618      	mov	r0, r3
 800ea50:	e7e6      	b.n	800ea20 <BUTTON_Callback+0x134>
 800ea52:	bf00      	nop
 800ea54:	20000054 	.word	0x20000054
 800ea58:	200005ac 	.word	0x200005ac

0800ea5c <BUTTON_CreateIndirect>:
 800ea5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ea60:	4604      	mov	r4, r0
 800ea62:	b087      	sub	sp, #28
 800ea64:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800ea68:	69a5      	ldr	r5, [r4, #24]
 800ea6a:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 800ea6e:	4f2f      	ldr	r7, [pc, #188]	; (800eb2c <BUTTON_CreateIndirect+0xd0>)
 800ea70:	9100      	str	r1, [sp, #0]
 800ea72:	f9b4 e010 	ldrsh.w	lr, [r4, #16]
 800ea76:	9702      	str	r7, [sp, #8]
 800ea78:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 800ea7c:	18f1      	adds	r1, r6, r3
 800ea7e:	354c      	adds	r5, #76	; 0x4c
 800ea80:	2600      	movs	r6, #0
 800ea82:	4410      	add	r0, r2
 800ea84:	9503      	str	r5, [sp, #12]
 800ea86:	9601      	str	r6, [sp, #4]
 800ea88:	4673      	mov	r3, lr
 800ea8a:	463a      	mov	r2, r7
 800ea8c:	f9b4 5008 	ldrsh.w	r5, [r4, #8]
 800ea90:	f7fd fc74 	bl	800c37c <WM_CreateWindowAsChild>
 800ea94:	4680      	mov	r8, r0
 800ea96:	b918      	cbnz	r0, 800eaa0 <BUTTON_CreateIndirect+0x44>
 800ea98:	4640      	mov	r0, r8
 800ea9a:	b007      	add	sp, #28
 800ea9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eaa0:	f7f6 f9e8 	bl	8004e74 <GUI_ALLOC_LockH>
 800eaa4:	4f22      	ldr	r7, [pc, #136]	; (800eb30 <BUTTON_CreateIndirect+0xd4>)
 800eaa6:	9005      	str	r0, [sp, #20]
 800eaa8:	4629      	mov	r1, r5
 800eaaa:	2210      	movs	r2, #16
 800eaac:	1d3e      	adds	r6, r7, #4
 800eaae:	f003 f86d 	bl	8011b8c <WIDGET__Init>
 800eab2:	f10d 0918 	add.w	r9, sp, #24
 800eab6:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800eab8:	f859 ed04 	ldr.w	lr, [r9, #-4]!
 800eabc:	f10e 0534 	add.w	r5, lr, #52	; 0x34
 800eac0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800eac2:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800eac4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800eac6:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800eaca:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800eace:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ead0:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 800ead4:	4648      	mov	r0, r9
 800ead6:	f7f6 f9df 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800eada:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800eadc:	4640      	mov	r0, r8
 800eade:	685b      	ldr	r3, [r3, #4]
 800eae0:	4798      	blx	r3
 800eae2:	4640      	mov	r0, r8
 800eae4:	6865      	ldr	r5, [r4, #4]
 800eae6:	f7f6 f9c5 	bl	8004e74 <GUI_ALLOC_LockH>
 800eaea:	6e84      	ldr	r4, [r0, #104]	; 0x68
 800eaec:	9004      	str	r0, [sp, #16]
 800eaee:	a804      	add	r0, sp, #16
 800eaf0:	9405      	str	r4, [sp, #20]
 800eaf2:	f7f6 f9d1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800eaf6:	4629      	mov	r1, r5
 800eaf8:	4648      	mov	r0, r9
 800eafa:	f7f8 f867 	bl	8006bcc <GUI__SetText>
 800eafe:	2800      	cmp	r0, #0
 800eb00:	d0ca      	beq.n	800ea98 <BUTTON_CreateIndirect+0x3c>
 800eb02:	9b05      	ldr	r3, [sp, #20]
 800eb04:	429c      	cmp	r4, r3
 800eb06:	d009      	beq.n	800eb1c <BUTTON_CreateIndirect+0xc0>
 800eb08:	4640      	mov	r0, r8
 800eb0a:	f7f6 f9b3 	bl	8004e74 <GUI_ALLOC_LockH>
 800eb0e:	9a05      	ldr	r2, [sp, #20]
 800eb10:	6682      	str	r2, [r0, #104]	; 0x68
 800eb12:	4603      	mov	r3, r0
 800eb14:	a804      	add	r0, sp, #16
 800eb16:	9304      	str	r3, [sp, #16]
 800eb18:	f7f6 f9be 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800eb1c:	4640      	mov	r0, r8
 800eb1e:	f7fd fbd7 	bl	800c2d0 <WM_InvalidateWindow>
 800eb22:	4640      	mov	r0, r8
 800eb24:	b007      	add	sp, #28
 800eb26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb2a:	bf00      	nop
 800eb2c:	0800e8ed 	.word	0x0800e8ed
 800eb30:	20000054 	.word	0x20000054

0800eb34 <_Create>:
 800eb34:	b530      	push	{r4, r5, lr}
 800eb36:	b08b      	sub	sp, #44	; 0x2c
 800eb38:	2100      	movs	r1, #0
 800eb3a:	4604      	mov	r4, r0
 800eb3c:	2224      	movs	r2, #36	; 0x24
 800eb3e:	a801      	add	r0, sp, #4
 800eb40:	f008 fc6f 	bl	8017422 <memset>
 800eb44:	4620      	mov	r0, r4
 800eb46:	f7f6 f995 	bl	8004e74 <GUI_ALLOC_LockH>
 800eb4a:	ab0a      	add	r3, sp, #40	; 0x28
 800eb4c:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800eb4e:	f843 0d28 	str.w	r0, [r3, #-40]!
 800eb52:	6895      	ldr	r5, [r2, #8]
 800eb54:	4618      	mov	r0, r3
 800eb56:	f7f6 f99f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800eb5a:	2200      	movs	r2, #0
 800eb5c:	682b      	ldr	r3, [r5, #0]
 800eb5e:	9401      	str	r4, [sp, #4]
 800eb60:	9202      	str	r2, [sp, #8]
 800eb62:	a801      	add	r0, sp, #4
 800eb64:	4798      	blx	r3
 800eb66:	b00b      	add	sp, #44	; 0x2c
 800eb68:	bd30      	pop	{r4, r5, pc}
 800eb6a:	bf00      	nop

0800eb6c <_Paint>:
 800eb6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb70:	b08a      	sub	sp, #40	; 0x28
 800eb72:	4606      	mov	r6, r0
 800eb74:	f7f6 f97e 	bl	8004e74 <GUI_ALLOC_LockH>
 800eb78:	4603      	mov	r3, r0
 800eb7a:	a80a      	add	r0, sp, #40	; 0x28
 800eb7c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800eb7e:	f840 3d28 	str.w	r3, [r0, #-40]!
 800eb82:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 800eb84:	f8b3 8032 	ldrh.w	r8, [r3, #50]	; 0x32
 800eb88:	f7f6 f986 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800eb8c:	4630      	mov	r0, r6
 800eb8e:	f006 ff3b 	bl	8015a08 <WM_GetWindowSizeX>
 800eb92:	4607      	mov	r7, r0
 800eb94:	4630      	mov	r0, r6
 800eb96:	f006 ff4d 	bl	8015a34 <WM_GetWindowSizeY>
 800eb9a:	3f01      	subs	r7, #1
 800eb9c:	2300      	movs	r3, #0
 800eb9e:	3801      	subs	r0, #1
 800eba0:	f015 0510 	ands.w	r5, r5, #16
 800eba4:	9008      	str	r0, [sp, #32]
 800eba6:	9707      	str	r7, [sp, #28]
 800eba8:	9601      	str	r6, [sp, #4]
 800ebaa:	9306      	str	r3, [sp, #24]
 800ebac:	9305      	str	r3, [sp, #20]
 800ebae:	d11d      	bne.n	800ebec <_Paint+0x80>
 800ebb0:	f418 7f80 	tst.w	r8, #256	; 0x100
 800ebb4:	d118      	bne.n	800ebe8 <_Paint+0x7c>
 800ebb6:	f018 0f01 	tst.w	r8, #1
 800ebba:	bf14      	ite	ne
 800ebbc:	2301      	movne	r3, #1
 800ebbe:	2302      	moveq	r3, #2
 800ebc0:	9303      	str	r3, [sp, #12]
 800ebc2:	2305      	movs	r3, #5
 800ebc4:	9302      	str	r3, [sp, #8]
 800ebc6:	a801      	add	r0, sp, #4
 800ebc8:	47a0      	blx	r4
 800ebca:	2306      	movs	r3, #6
 800ebcc:	9302      	str	r3, [sp, #8]
 800ebce:	a801      	add	r0, sp, #4
 800ebd0:	47a0      	blx	r4
 800ebd2:	2312      	movs	r3, #18
 800ebd4:	9302      	str	r3, [sp, #8]
 800ebd6:	a801      	add	r0, sp, #4
 800ebd8:	47a0      	blx	r4
 800ebda:	230a      	movs	r3, #10
 800ebdc:	a801      	add	r0, sp, #4
 800ebde:	9302      	str	r3, [sp, #8]
 800ebe0:	47a0      	blx	r4
 800ebe2:	b00a      	add	sp, #40	; 0x28
 800ebe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ebe8:	9503      	str	r5, [sp, #12]
 800ebea:	e7ea      	b.n	800ebc2 <_Paint+0x56>
 800ebec:	2303      	movs	r3, #3
 800ebee:	9303      	str	r3, [sp, #12]
 800ebf0:	e7e7      	b.n	800ebc2 <_Paint+0x56>
 800ebf2:	bf00      	nop

0800ebf4 <BUTTON_DrawSkinFlex>:
 800ebf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ebf6:	4a95      	ldr	r2, [pc, #596]	; (800ee4c <BUTTON_DrawSkinFlex+0x258>)
 800ebf8:	6881      	ldr	r1, [r0, #8]
 800ebfa:	6843      	ldr	r3, [r0, #4]
 800ebfc:	f852 6021 	ldr.w	r6, [r2, r1, lsl #2]
 800ec00:	b089      	sub	sp, #36	; 0x24
 800ec02:	4604      	mov	r4, r0
 800ec04:	2b12      	cmp	r3, #18
 800ec06:	d83f      	bhi.n	800ec88 <BUTTON_DrawSkinFlex+0x94>
 800ec08:	e8df f003 	tbb	[pc, r3]
 800ec0c:	3e3e3eae 	.word	0x3e3e3eae
 800ec10:	3e960a3e 	.word	0x3e960a3e
 800ec14:	3e3e3e3e 	.word	0x3e3e3e3e
 800ec18:	3e3e3e3e 	.word	0x3e3e3e3e
 800ec1c:	3e3e      	.short	0x3e3e
 800ec1e:	41          	.byte	0x41
 800ec1f:	00          	.byte	0x00
 800ec20:	69f5      	ldr	r5, [r6, #28]
 800ec22:	2d00      	cmp	r5, #0
 800ec24:	f040 80b2 	bne.w	800ed8c <BUTTON_DrawSkinFlex+0x198>
 800ec28:	1f37      	subs	r7, r6, #4
 800ec2a:	f857 0f04 	ldr.w	r0, [r7, #4]!
 800ec2e:	f7f6 fcb9 	bl	80055a4 <GUI_SetColor>
 800ec32:	f104 0010 	add.w	r0, r4, #16
 800ec36:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 800ec38:	1b5b      	subs	r3, r3, r5
 800ec3a:	1b52      	subs	r2, r2, r5
 800ec3c:	4429      	add	r1, r5
 800ec3e:	4428      	add	r0, r5
 800ec40:	3501      	adds	r5, #1
 800ec42:	f003 fb01 	bl	8012248 <GUI_DrawRect>
 800ec46:	2d02      	cmp	r5, #2
 800ec48:	d1ef      	bne.n	800ec2a <BUTTON_DrawSkinFlex+0x36>
 800ec4a:	6932      	ldr	r2, [r6, #16]
 800ec4c:	6961      	ldr	r1, [r4, #20]
 800ec4e:	69e3      	ldr	r3, [r4, #28]
 800ec50:	9201      	str	r2, [sp, #4]
 800ec52:	69a2      	ldr	r2, [r4, #24]
 800ec54:	6920      	ldr	r0, [r4, #16]
 800ec56:	68f7      	ldr	r7, [r6, #12]
 800ec58:	9700      	str	r7, [sp, #0]
 800ec5a:	440b      	add	r3, r1
 800ec5c:	105b      	asrs	r3, r3, #1
 800ec5e:	3102      	adds	r1, #2
 800ec60:	1b52      	subs	r2, r2, r5
 800ec62:	4428      	add	r0, r5
 800ec64:	f003 febc 	bl	80129e0 <GUI_DrawGradientV>
 800ec68:	69e3      	ldr	r3, [r4, #28]
 800ec6a:	6961      	ldr	r1, [r4, #20]
 800ec6c:	69b2      	ldr	r2, [r6, #24]
 800ec6e:	9201      	str	r2, [sp, #4]
 800ec70:	69a2      	ldr	r2, [r4, #24]
 800ec72:	6920      	ldr	r0, [r4, #16]
 800ec74:	6974      	ldr	r4, [r6, #20]
 800ec76:	9400      	str	r4, [sp, #0]
 800ec78:	4419      	add	r1, r3
 800ec7a:	1049      	asrs	r1, r1, #1
 800ec7c:	3101      	adds	r1, #1
 800ec7e:	3b02      	subs	r3, #2
 800ec80:	1b52      	subs	r2, r2, r5
 800ec82:	4428      	add	r0, r5
 800ec84:	f003 feac 	bl	80129e0 <GUI_DrawGradientV>
 800ec88:	2000      	movs	r0, #0
 800ec8a:	b009      	add	sp, #36	; 0x24
 800ec8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec8e:	6800      	ldr	r0, [r0, #0]
 800ec90:	f7f6 f8f0 	bl	8004e74 <GUI_ALLOC_LockH>
 800ec94:	6e85      	ldr	r5, [r0, #104]	; 0x68
 800ec96:	9004      	str	r0, [sp, #16]
 800ec98:	2d00      	cmp	r5, #0
 800ec9a:	f000 80cf 	beq.w	800ee3c <BUTTON_DrawSkinFlex+0x248>
 800ec9e:	68a3      	ldr	r3, [r4, #8]
 800eca0:	f9b0 705c 	ldrsh.w	r7, [r0, #92]	; 0x5c
 800eca4:	2b00      	cmp	r3, #0
 800eca6:	f000 80c7 	beq.w	800ee38 <BUTTON_DrawSkinFlex+0x244>
 800ecaa:	2b03      	cmp	r3, #3
 800ecac:	bf14      	ite	ne
 800ecae:	2300      	movne	r3, #0
 800ecb0:	2302      	moveq	r3, #2
 800ecb2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800ecb6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ecb8:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 800ecba:	f7f6 fc99 	bl	80055f0 <GUI_SetFont>
 800ecbe:	4620      	mov	r0, r4
 800ecc0:	f7f6 fc70 	bl	80055a4 <GUI_SetColor>
 800ecc4:	ac08      	add	r4, sp, #32
 800ecc6:	a806      	add	r0, sp, #24
 800ecc8:	f7f6 fb24 	bl	8005314 <GUI_GetClientRect>
 800eccc:	f8b6 e01c 	ldrh.w	lr, [r6, #28]
 800ecd0:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800ecd4:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800ecd8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 800ecdc:	f854 6d10 	ldr.w	r6, [r4, #-16]!
 800ece0:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800ece4:	4471      	add	r1, lr
 800ece6:	ebce 0202 	rsb	r2, lr, r2
 800ecea:	3002      	adds	r0, #2
 800ecec:	3b02      	subs	r3, #2
 800ecee:	f8ad 1018 	strh.w	r1, [sp, #24]
 800ecf2:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ecf6:	f9b6 105e 	ldrsh.w	r1, [r6, #94]	; 0x5e
 800ecfa:	f9b6 2060 	ldrsh.w	r2, [r6, #96]	; 0x60
 800ecfe:	f8ad 001a 	strh.w	r0, [sp, #26]
 800ed02:	a806      	add	r0, sp, #24
 800ed04:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ed08:	f7f6 fb72 	bl	80053f0 <GUI_MoveRect>
 800ed0c:	4620      	mov	r0, r4
 800ed0e:	f7f6 f8c3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ed12:	2002      	movs	r0, #2
 800ed14:	f7f6 fc9a 	bl	800564c <GUI_SetTextMode>
 800ed18:	4628      	mov	r0, r5
 800ed1a:	f7f6 f8ab 	bl	8004e74 <GUI_ALLOC_LockH>
 800ed1e:	ac08      	add	r4, sp, #32
 800ed20:	a906      	add	r1, sp, #24
 800ed22:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800ed26:	463a      	mov	r2, r7
 800ed28:	f7f7 f9a4 	bl	8006074 <GUI_DispStringInRect>
 800ed2c:	4620      	mov	r0, r4
 800ed2e:	f7f6 f8b3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ed32:	2000      	movs	r0, #0
 800ed34:	b009      	add	sp, #36	; 0x24
 800ed36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed38:	6800      	ldr	r0, [r0, #0]
 800ed3a:	f7f6 f89b 	bl	8004e74 <GUI_ALLOC_LockH>
 800ed3e:	9004      	str	r0, [sp, #16]
 800ed40:	6820      	ldr	r0, [r4, #0]
 800ed42:	f7ff fc4f 	bl	800e5e4 <WM__IsEnabled>
 800ed46:	b9a8      	cbnz	r0, 800ed74 <BUTTON_DrawSkinFlex+0x180>
 800ed48:	9b04      	ldr	r3, [sp, #16]
 800ed4a:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 800ed4c:	b905      	cbnz	r5, 800ed50 <BUTTON_DrawSkinFlex+0x15c>
 800ed4e:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800ed50:	a804      	add	r0, sp, #16
 800ed52:	f7f6 f8a1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ed56:	2300      	movs	r3, #0
 800ed58:	4628      	mov	r0, r5
 800ed5a:	6821      	ldr	r1, [r4, #0]
 800ed5c:	461a      	mov	r2, r3
 800ed5e:	f001 fa05 	bl	801016c <GUI_DRAW__Draw>
 800ed62:	2000      	movs	r0, #0
 800ed64:	b009      	add	sp, #36	; 0x24
 800ed66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed68:	6800      	ldr	r0, [r0, #0]
 800ed6a:	f007 fa07 	bl	801617c <WM_SetHasTrans>
 800ed6e:	2000      	movs	r0, #0
 800ed70:	b009      	add	sp, #36	; 0x24
 800ed72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed74:	68a3      	ldr	r3, [r4, #8]
 800ed76:	2b00      	cmp	r3, #0
 800ed78:	d164      	bne.n	800ee44 <BUTTON_DrawSkinFlex+0x250>
 800ed7a:	9a04      	ldr	r2, [sp, #16]
 800ed7c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800ed7e:	2b00      	cmp	r3, #0
 800ed80:	bf14      	ite	ne
 800ed82:	236c      	movne	r3, #108	; 0x6c
 800ed84:	2368      	moveq	r3, #104	; 0x68
 800ed86:	4413      	add	r3, r2
 800ed88:	685d      	ldr	r5, [r3, #4]
 800ed8a:	e7e1      	b.n	800ed50 <BUTTON_DrawSkinFlex+0x15c>
 800ed8c:	68b3      	ldr	r3, [r6, #8]
 800ed8e:	9303      	str	r3, [sp, #12]
 800ed90:	6873      	ldr	r3, [r6, #4]
 800ed92:	9302      	str	r3, [sp, #8]
 800ed94:	4637      	mov	r7, r6
 800ed96:	f100 0114 	add.w	r1, r0, #20
 800ed9a:	f857 0904 	ldr.w	r0, [r7], #-4
 800ed9e:	c90e      	ldmia	r1, {r1, r2, r3}
 800eda0:	9001      	str	r0, [sp, #4]
 800eda2:	6920      	ldr	r0, [r4, #16]
 800eda4:	9500      	str	r5, [sp, #0]
 800eda6:	f005 fec5 	bl	8014b34 <GUI__DrawTwinArc4>
 800edaa:	2500      	movs	r5, #0
 800edac:	f857 0f04 	ldr.w	r0, [r7, #4]!
 800edb0:	f7f6 fbf8 	bl	80055a4 <GUI_SetColor>
 800edb4:	69f3      	ldr	r3, [r6, #28]
 800edb6:	69a2      	ldr	r2, [r4, #24]
 800edb8:	6921      	ldr	r1, [r4, #16]
 800edba:	6960      	ldr	r0, [r4, #20]
 800edbc:	1ad2      	subs	r2, r2, r3
 800edbe:	4419      	add	r1, r3
 800edc0:	4428      	add	r0, r5
 800edc2:	f003 ffa1 	bl	8012d08 <GUI_DrawHLine>
 800edc6:	69f3      	ldr	r3, [r6, #28]
 800edc8:	69a2      	ldr	r2, [r4, #24]
 800edca:	6921      	ldr	r1, [r4, #16]
 800edcc:	69e0      	ldr	r0, [r4, #28]
 800edce:	1ad2      	subs	r2, r2, r3
 800edd0:	4419      	add	r1, r3
 800edd2:	1b40      	subs	r0, r0, r5
 800edd4:	f003 ff98 	bl	8012d08 <GUI_DrawHLine>
 800edd8:	69f3      	ldr	r3, [r6, #28]
 800edda:	69e2      	ldr	r2, [r4, #28]
 800eddc:	6961      	ldr	r1, [r4, #20]
 800edde:	6920      	ldr	r0, [r4, #16]
 800ede0:	1ad2      	subs	r2, r2, r3
 800ede2:	4419      	add	r1, r3
 800ede4:	4428      	add	r0, r5
 800ede6:	f003 ffe9 	bl	8012dbc <GUI_DrawVLine>
 800edea:	69f3      	ldr	r3, [r6, #28]
 800edec:	69e2      	ldr	r2, [r4, #28]
 800edee:	6961      	ldr	r1, [r4, #20]
 800edf0:	69a0      	ldr	r0, [r4, #24]
 800edf2:	1ad2      	subs	r2, r2, r3
 800edf4:	1b40      	subs	r0, r0, r5
 800edf6:	4419      	add	r1, r3
 800edf8:	3501      	adds	r5, #1
 800edfa:	f003 ffdf 	bl	8012dbc <GUI_DrawVLine>
 800edfe:	2d02      	cmp	r5, #2
 800ee00:	d1d4      	bne.n	800edac <BUTTON_DrawSkinFlex+0x1b8>
 800ee02:	68b0      	ldr	r0, [r6, #8]
 800ee04:	f7f6 fbce 	bl	80055a4 <GUI_SetColor>
 800ee08:	69f1      	ldr	r1, [r6, #28]
 800ee0a:	6920      	ldr	r0, [r4, #16]
 800ee0c:	6965      	ldr	r5, [r4, #20]
 800ee0e:	69e3      	ldr	r3, [r4, #28]
 800ee10:	1842      	adds	r2, r0, r1
 800ee12:	1a5b      	subs	r3, r3, r1
 800ee14:	3a01      	subs	r2, #1
 800ee16:	4429      	add	r1, r5
 800ee18:	3002      	adds	r0, #2
 800ee1a:	f003 fff3 	bl	8012e04 <GUI_FillRect>
 800ee1e:	69f1      	ldr	r1, [r6, #28]
 800ee20:	69a2      	ldr	r2, [r4, #24]
 800ee22:	6965      	ldr	r5, [r4, #20]
 800ee24:	69e3      	ldr	r3, [r4, #28]
 800ee26:	1a50      	subs	r0, r2, r1
 800ee28:	1a5b      	subs	r3, r3, r1
 800ee2a:	3001      	adds	r0, #1
 800ee2c:	4429      	add	r1, r5
 800ee2e:	3a02      	subs	r2, #2
 800ee30:	f003 ffe8 	bl	8012e04 <GUI_FillRect>
 800ee34:	69f5      	ldr	r5, [r6, #28]
 800ee36:	e708      	b.n	800ec4a <BUTTON_DrawSkinFlex+0x56>
 800ee38:	2301      	movs	r3, #1
 800ee3a:	e73a      	b.n	800ecb2 <BUTTON_DrawSkinFlex+0xbe>
 800ee3c:	a804      	add	r0, sp, #16
 800ee3e:	f7f6 f82b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ee42:	e721      	b.n	800ec88 <BUTTON_DrawSkinFlex+0x94>
 800ee44:	9b04      	ldr	r3, [sp, #16]
 800ee46:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800ee48:	e782      	b.n	800ed50 <BUTTON_DrawSkinFlex+0x15c>
 800ee4a:	bf00      	nop
 800ee4c:	0801baec 	.word	0x0801baec

0800ee50 <CHECKBOX__GetButtonSize>:
 800ee50:	b500      	push	{lr}
 800ee52:	b08b      	sub	sp, #44	; 0x2c
 800ee54:	2100      	movs	r1, #0
 800ee56:	a801      	add	r0, sp, #4
 800ee58:	2224      	movs	r2, #36	; 0x24
 800ee5a:	f008 fae2 	bl	8017422 <memset>
 800ee5e:	4b05      	ldr	r3, [pc, #20]	; (800ee74 <CHECKBOX__GetButtonSize+0x24>)
 800ee60:	681b      	ldr	r3, [r3, #0]
 800ee62:	689b      	ldr	r3, [r3, #8]
 800ee64:	2219      	movs	r2, #25
 800ee66:	685b      	ldr	r3, [r3, #4]
 800ee68:	9202      	str	r2, [sp, #8]
 800ee6a:	a801      	add	r0, sp, #4
 800ee6c:	4798      	blx	r3
 800ee6e:	b00b      	add	sp, #44	; 0x2c
 800ee70:	f85d fb04 	ldr.w	pc, [sp], #4
 800ee74:	20000118 	.word	0x20000118

0800ee78 <CHECKBOX_Callback>:
 800ee78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ee7c:	6845      	ldr	r5, [r0, #4]
 800ee7e:	b083      	sub	sp, #12
 800ee80:	4604      	mov	r4, r0
 800ee82:	4601      	mov	r1, r0
 800ee84:	4628      	mov	r0, r5
 800ee86:	f002 feb9 	bl	8011bfc <WIDGET_HandleActive>
 800ee8a:	b360      	cbz	r0, 800eee6 <CHECKBOX_Callback+0x6e>
 800ee8c:	6823      	ldr	r3, [r4, #0]
 800ee8e:	2b0e      	cmp	r3, #14
 800ee90:	d03c      	beq.n	800ef0c <CHECKBOX_Callback+0x94>
 800ee92:	dd67      	ble.n	800ef64 <CHECKBOX_Callback+0xec>
 800ee94:	2b0f      	cmp	r3, #15
 800ee96:	d029      	beq.n	800eeec <CHECKBOX_Callback+0x74>
 800ee98:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800ee9c:	d120      	bne.n	800eee0 <CHECKBOX_Callback+0x68>
 800ee9e:	4628      	mov	r0, r5
 800eea0:	f7f5 ffe8 	bl	8004e74 <GUI_ALLOC_LockH>
 800eea4:	4603      	mov	r3, r0
 800eea6:	a802      	add	r0, sp, #8
 800eea8:	f9b3 7030 	ldrsh.w	r7, [r3, #48]	; 0x30
 800eeac:	f840 3d08 	str.w	r3, [r0, #-8]!
 800eeb0:	f893 9074 	ldrb.w	r9, [r3, #116]	; 0x74
 800eeb4:	f893 8075 	ldrb.w	r8, [r3, #117]	; 0x75
 800eeb8:	f7f5 ffee 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800eebc:	68e6      	ldr	r6, [r4, #12]
 800eebe:	2e00      	cmp	r6, #0
 800eec0:	d068      	beq.n	800ef94 <CHECKBOX_Callback+0x11c>
 800eec2:	4628      	mov	r0, r5
 800eec4:	f7fe fc10 	bl	800d6e8 <WM_HasCaptured>
 800eec8:	2800      	cmp	r0, #0
 800eeca:	d15e      	bne.n	800ef8a <CHECKBOX_Callback+0x112>
 800eecc:	7a33      	ldrb	r3, [r6, #8]
 800eece:	2b00      	cmp	r3, #0
 800eed0:	d162      	bne.n	800ef98 <CHECKBOX_Callback+0x120>
 800eed2:	4628      	mov	r0, r5
 800eed4:	2102      	movs	r1, #2
 800eed6:	f7fe fc41 	bl	800d75c <WM_NotifyParent>
 800eeda:	4638      	mov	r0, r7
 800eedc:	f7f7 f912 	bl	8006104 <GUI_StoreKey>
 800eee0:	4620      	mov	r0, r4
 800eee2:	f7fd ff03 	bl	800ccec <WM_DefaultProc>
 800eee6:	b003      	add	sp, #12
 800eee8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eeec:	4628      	mov	r0, r5
 800eeee:	f7f5 ffc1 	bl	8004e74 <GUI_ALLOC_LockH>
 800eef2:	ab02      	add	r3, sp, #8
 800eef4:	f843 0d04 	str.w	r0, [r3, #-4]!
 800eef8:	6f02      	ldr	r2, [r0, #112]	; 0x70
 800eefa:	6814      	ldr	r4, [r2, #0]
 800eefc:	4618      	mov	r0, r3
 800eefe:	f7f5 ffcb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ef02:	2c00      	cmp	r4, #0
 800ef04:	d0ef      	beq.n	800eee6 <CHECKBOX_Callback+0x6e>
 800ef06:	4628      	mov	r0, r5
 800ef08:	47a0      	blx	r4
 800ef0a:	e7ec      	b.n	800eee6 <CHECKBOX_Callback+0x6e>
 800ef0c:	4628      	mov	r0, r5
 800ef0e:	f7f5 ffb1 	bl	8004e74 <GUI_ALLOC_LockH>
 800ef12:	4603      	mov	r3, r0
 800ef14:	a802      	add	r0, sp, #8
 800ef16:	f840 3d08 	str.w	r3, [r0, #-8]!
 800ef1a:	f893 7074 	ldrb.w	r7, [r3, #116]	; 0x74
 800ef1e:	f893 6075 	ldrb.w	r6, [r3, #117]	; 0x75
 800ef22:	f7f5 ffb9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ef26:	4628      	mov	r0, r5
 800ef28:	f7ff fb5c 	bl	800e5e4 <WM__IsEnabled>
 800ef2c:	2800      	cmp	r0, #0
 800ef2e:	d0d7      	beq.n	800eee0 <CHECKBOX_Callback+0x68>
 800ef30:	68e3      	ldr	r3, [r4, #12]
 800ef32:	685a      	ldr	r2, [r3, #4]
 800ef34:	2a00      	cmp	r2, #0
 800ef36:	ddd3      	ble.n	800eee0 <CHECKBOX_Callback+0x68>
 800ef38:	681b      	ldr	r3, [r3, #0]
 800ef3a:	2b20      	cmp	r3, #32
 800ef3c:	d1d0      	bne.n	800eee0 <CHECKBOX_Callback+0x68>
 800ef3e:	2d00      	cmp	r5, #0
 800ef40:	d0ce      	beq.n	800eee0 <CHECKBOX_Callback+0x68>
 800ef42:	3601      	adds	r6, #1
 800ef44:	4628      	mov	r0, r5
 800ef46:	fb96 f3f7 	sdiv	r3, r6, r7
 800ef4a:	fb07 6613 	mls	r6, r7, r3, r6
 800ef4e:	f7f5 ff91 	bl	8004e74 <GUI_ALLOC_LockH>
 800ef52:	9001      	str	r0, [sp, #4]
 800ef54:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 800ef58:	429e      	cmp	r6, r3
 800ef5a:	d324      	bcc.n	800efa6 <CHECKBOX_Callback+0x12e>
 800ef5c:	a801      	add	r0, sp, #4
 800ef5e:	f7f5 ff9b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ef62:	e7bd      	b.n	800eee0 <CHECKBOX_Callback+0x68>
 800ef64:	2b0b      	cmp	r3, #11
 800ef66:	d1bb      	bne.n	800eee0 <CHECKBOX_Callback+0x68>
 800ef68:	4628      	mov	r0, r5
 800ef6a:	f7f5 ff83 	bl	8004e74 <GUI_ALLOC_LockH>
 800ef6e:	ad02      	add	r5, sp, #8
 800ef70:	4603      	mov	r3, r0
 800ef72:	f845 3d04 	str.w	r3, [r5, #-4]!
 800ef76:	3078      	adds	r0, #120	; 0x78
 800ef78:	f7f6 f920 	bl	80051bc <GUI_ALLOC_FreePtr>
 800ef7c:	4628      	mov	r0, r5
 800ef7e:	f7f5 ff8b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800ef82:	4620      	mov	r0, r4
 800ef84:	f7fd feb2 	bl	800ccec <WM_DefaultProc>
 800ef88:	e7ad      	b.n	800eee6 <CHECKBOX_Callback+0x6e>
 800ef8a:	2100      	movs	r1, #0
 800ef8c:	4628      	mov	r0, r5
 800ef8e:	f7fe fbe5 	bl	800d75c <WM_NotifyParent>
 800ef92:	e7a5      	b.n	800eee0 <CHECKBOX_Callback+0x68>
 800ef94:	2103      	movs	r1, #3
 800ef96:	e7f9      	b.n	800ef8c <CHECKBOX_Callback+0x114>
 800ef98:	2101      	movs	r1, #1
 800ef9a:	4628      	mov	r0, r5
 800ef9c:	f006 ffe8 	bl	8015f70 <WM_SetCapture>
 800efa0:	b975      	cbnz	r5, 800efc0 <CHECKBOX_Callback+0x148>
 800efa2:	2101      	movs	r1, #1
 800efa4:	e7f2      	b.n	800ef8c <CHECKBOX_Callback+0x114>
 800efa6:	f880 6075 	strb.w	r6, [r0, #117]	; 0x75
 800efaa:	a801      	add	r0, sp, #4
 800efac:	f7f5 ff74 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800efb0:	4628      	mov	r0, r5
 800efb2:	f7fd f98d 	bl	800c2d0 <WM_InvalidateWindow>
 800efb6:	4628      	mov	r0, r5
 800efb8:	2105      	movs	r1, #5
 800efba:	f7fe fbcf 	bl	800d75c <WM_NotifyParent>
 800efbe:	e78f      	b.n	800eee0 <CHECKBOX_Callback+0x68>
 800efc0:	f108 0801 	add.w	r8, r8, #1
 800efc4:	4628      	mov	r0, r5
 800efc6:	fb98 f3f9 	sdiv	r3, r8, r9
 800efca:	fb09 8813 	mls	r8, r9, r3, r8
 800efce:	f7f5 ff51 	bl	8004e74 <GUI_ALLOC_LockH>
 800efd2:	9001      	str	r0, [sp, #4]
 800efd4:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 800efd8:	4598      	cmp	r8, r3
 800efda:	d303      	bcc.n	800efe4 <CHECKBOX_Callback+0x16c>
 800efdc:	a801      	add	r0, sp, #4
 800efde:	f7f5 ff5b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800efe2:	e7de      	b.n	800efa2 <CHECKBOX_Callback+0x12a>
 800efe4:	f880 8075 	strb.w	r8, [r0, #117]	; 0x75
 800efe8:	a801      	add	r0, sp, #4
 800efea:	f7f5 ff55 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800efee:	4628      	mov	r0, r5
 800eff0:	f7fd f96e 	bl	800c2d0 <WM_InvalidateWindow>
 800eff4:	2105      	movs	r1, #5
 800eff6:	4628      	mov	r0, r5
 800eff8:	f7fe fbb0 	bl	800d75c <WM_NotifyParent>
 800effc:	e7d1      	b.n	800efa2 <CHECKBOX_Callback+0x12a>
 800effe:	bf00      	nop

0800f000 <CHECKBOX_CreateIndirect>:
 800f000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f004:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f008:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800f00c:	f9b0 800e 	ldrsh.w	r8, [r0, #14]
 800f010:	f9b0 a010 	ldrsh.w	sl, [r0, #16]
 800f014:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f018:	6987      	ldr	r7, [r0, #24]
 800f01a:	f8df b0bc 	ldr.w	fp, [pc, #188]	; 800f0d8 <CHECKBOX_CreateIndirect+0xd8>
 800f01e:	b087      	sub	sp, #28
 800f020:	460c      	mov	r4, r1
 800f022:	4415      	add	r5, r2
 800f024:	441e      	add	r6, r3
 800f026:	f1b8 0f00 	cmp.w	r8, #0
 800f02a:	d105      	bne.n	800f038 <CHECKBOX_CreateIndirect+0x38>
 800f02c:	f8db 3000 	ldr.w	r3, [fp]
 800f030:	689b      	ldr	r3, [r3, #8]
 800f032:	681b      	ldr	r3, [r3, #0]
 800f034:	4798      	blx	r3
 800f036:	4680      	mov	r8, r0
 800f038:	f1ba 0f00 	cmp.w	sl, #0
 800f03c:	d044      	beq.n	800f0c8 <CHECKBOX_CreateIndirect+0xc8>
 800f03e:	f8db 3010 	ldr.w	r3, [fp, #16]
 800f042:	9400      	str	r4, [sp, #0]
 800f044:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
 800f048:	1b1c      	subs	r4, r3, r4
 800f04a:	fab4 f484 	clz	r4, r4
 800f04e:	f8df e08c 	ldr.w	lr, [pc, #140]	; 800f0dc <CHECKBOX_CreateIndirect+0xdc>
 800f052:	f8cd e008 	str.w	lr, [sp, #8]
 800f056:	3754      	adds	r7, #84	; 0x54
 800f058:	0964      	lsrs	r4, r4, #5
 800f05a:	9703      	str	r7, [sp, #12]
 800f05c:	4631      	mov	r1, r6
 800f05e:	4653      	mov	r3, sl
 800f060:	4642      	mov	r2, r8
 800f062:	4628      	mov	r0, r5
 800f064:	9401      	str	r4, [sp, #4]
 800f066:	f7fd f989 	bl	800c37c <WM_CreateWindowAsChild>
 800f06a:	4f1b      	ldr	r7, [pc, #108]	; (800f0d8 <CHECKBOX_CreateIndirect+0xd8>)
 800f06c:	4606      	mov	r6, r0
 800f06e:	b338      	cbz	r0, 800f0c0 <CHECKBOX_CreateIndirect+0xc0>
 800f070:	f7f5 ff00 	bl	8004e74 <GUI_ALLOC_LockH>
 800f074:	1d3d      	adds	r5, r7, #4
 800f076:	4649      	mov	r1, r9
 800f078:	2210      	movs	r2, #16
 800f07a:	9005      	str	r0, [sp, #20]
 800f07c:	f002 fd86 	bl	8011b8c <WIDGET__Init>
 800f080:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f082:	f10d 0c18 	add.w	ip, sp, #24
 800f086:	f85c ed04 	ldr.w	lr, [ip, #-4]!
 800f08a:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 800f08e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f090:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f092:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f094:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f096:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f098:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f09c:	230f      	movs	r3, #15
 800f09e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f0a2:	2502      	movs	r5, #2
 800f0a4:	683a      	ldr	r2, [r7, #0]
 800f0a6:	f8ce 2070 	str.w	r2, [lr, #112]	; 0x70
 800f0aa:	4660      	mov	r0, ip
 800f0ac:	f8ce 307c 	str.w	r3, [lr, #124]	; 0x7c
 800f0b0:	f88e 5074 	strb.w	r5, [lr, #116]	; 0x74
 800f0b4:	f7f5 fef0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f0b8:	683b      	ldr	r3, [r7, #0]
 800f0ba:	4630      	mov	r0, r6
 800f0bc:	685b      	ldr	r3, [r3, #4]
 800f0be:	4798      	blx	r3
 800f0c0:	4630      	mov	r0, r6
 800f0c2:	b007      	add	sp, #28
 800f0c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0c8:	f8db 3000 	ldr.w	r3, [fp]
 800f0cc:	689b      	ldr	r3, [r3, #8]
 800f0ce:	681b      	ldr	r3, [r3, #0]
 800f0d0:	4798      	blx	r3
 800f0d2:	4682      	mov	sl, r0
 800f0d4:	e7b3      	b.n	800f03e <CHECKBOX_CreateIndirect+0x3e>
 800f0d6:	bf00      	nop
 800f0d8:	20000118 	.word	0x20000118
 800f0dc:	0800ee79 	.word	0x0800ee79

0800f0e0 <CHECKBOX_GetBkColor>:
 800f0e0:	b510      	push	{r4, lr}
 800f0e2:	4604      	mov	r4, r0
 800f0e4:	b082      	sub	sp, #8
 800f0e6:	b910      	cbnz	r0, 800f0ee <CHECKBOX_GetBkColor+0xe>
 800f0e8:	4620      	mov	r0, r4
 800f0ea:	b002      	add	sp, #8
 800f0ec:	bd10      	pop	{r4, pc}
 800f0ee:	f7f5 fec1 	bl	8004e74 <GUI_ALLOC_LockH>
 800f0f2:	4603      	mov	r3, r0
 800f0f4:	9001      	str	r0, [sp, #4]
 800f0f6:	b148      	cbz	r0, 800f10c <CHECKBOX_GetBkColor+0x2c>
 800f0f8:	4620      	mov	r0, r4
 800f0fa:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 800f0fc:	f7fd f8e8 	bl	800c2d0 <WM_InvalidateWindow>
 800f100:	a801      	add	r0, sp, #4
 800f102:	f7f5 fec9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f106:	4620      	mov	r0, r4
 800f108:	b002      	add	sp, #8
 800f10a:	bd10      	pop	{r4, pc}
 800f10c:	4604      	mov	r4, r0
 800f10e:	e7f7      	b.n	800f100 <CHECKBOX_GetBkColor+0x20>

0800f110 <CHECKBOX_SetText>:
 800f110:	b318      	cbz	r0, 800f15a <CHECKBOX_SetText+0x4a>
 800f112:	b311      	cbz	r1, 800f15a <CHECKBOX_SetText+0x4a>
 800f114:	b570      	push	{r4, r5, r6, lr}
 800f116:	b082      	sub	sp, #8
 800f118:	460c      	mov	r4, r1
 800f11a:	4605      	mov	r5, r0
 800f11c:	f7f5 feaa 	bl	8004e74 <GUI_ALLOC_LockH>
 800f120:	6f86      	ldr	r6, [r0, #120]	; 0x78
 800f122:	9000      	str	r0, [sp, #0]
 800f124:	4668      	mov	r0, sp
 800f126:	9601      	str	r6, [sp, #4]
 800f128:	f7f5 feb6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f12c:	4621      	mov	r1, r4
 800f12e:	a801      	add	r0, sp, #4
 800f130:	f7f7 fd4c 	bl	8006bcc <GUI__SetText>
 800f134:	b178      	cbz	r0, 800f156 <CHECKBOX_SetText+0x46>
 800f136:	9b01      	ldr	r3, [sp, #4]
 800f138:	429e      	cmp	r6, r3
 800f13a:	d009      	beq.n	800f150 <CHECKBOX_SetText+0x40>
 800f13c:	4628      	mov	r0, r5
 800f13e:	f7f5 fe99 	bl	8004e74 <GUI_ALLOC_LockH>
 800f142:	9a01      	ldr	r2, [sp, #4]
 800f144:	6782      	str	r2, [r0, #120]	; 0x78
 800f146:	4603      	mov	r3, r0
 800f148:	4668      	mov	r0, sp
 800f14a:	9300      	str	r3, [sp, #0]
 800f14c:	f7f5 fea4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f150:	4628      	mov	r0, r5
 800f152:	f7fd f8bd 	bl	800c2d0 <WM_InvalidateWindow>
 800f156:	b002      	add	sp, #8
 800f158:	bd70      	pop	{r4, r5, r6, pc}
 800f15a:	4770      	bx	lr

0800f15c <_Create>:
 800f15c:	b530      	push	{r4, r5, lr}
 800f15e:	b08b      	sub	sp, #44	; 0x2c
 800f160:	4605      	mov	r5, r0
 800f162:	f7f5 fe87 	bl	8004e74 <GUI_ALLOC_LockH>
 800f166:	ab0a      	add	r3, sp, #40	; 0x28
 800f168:	6f02      	ldr	r2, [r0, #112]	; 0x70
 800f16a:	f843 0d28 	str.w	r0, [r3, #-40]!
 800f16e:	4618      	mov	r0, r3
 800f170:	6894      	ldr	r4, [r2, #8]
 800f172:	f7f5 fe91 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f176:	a80a      	add	r0, sp, #40	; 0x28
 800f178:	2200      	movs	r2, #0
 800f17a:	6863      	ldr	r3, [r4, #4]
 800f17c:	f840 5d24 	str.w	r5, [r0, #-36]!
 800f180:	9202      	str	r2, [sp, #8]
 800f182:	4798      	blx	r3
 800f184:	b00b      	add	sp, #44	; 0x2c
 800f186:	bd30      	pop	{r4, r5, pc}

0800f188 <_Paint>:
 800f188:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f18c:	b08b      	sub	sp, #44	; 0x2c
 800f18e:	4604      	mov	r4, r0
 800f190:	f7f5 fe70 	bl	8004e74 <GUI_ALLOC_LockH>
 800f194:	4603      	mov	r3, r0
 800f196:	a80a      	add	r0, sp, #40	; 0x28
 800f198:	f893 8075 	ldrb.w	r8, [r3, #117]	; 0x75
 800f19c:	f840 3d28 	str.w	r3, [r0, #-40]!
 800f1a0:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 800f1a2:	6f9f      	ldr	r7, [r3, #120]	; 0x78
 800f1a4:	f8b3 9032 	ldrh.w	r9, [r3, #50]	; 0x32
 800f1a8:	f7f5 fe76 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f1ac:	4620      	mov	r0, r4
 800f1ae:	f006 fc2b 	bl	8015a08 <WM_GetWindowSizeX>
 800f1b2:	4605      	mov	r5, r0
 800f1b4:	4620      	mov	r0, r4
 800f1b6:	f006 fc3d 	bl	8015a34 <WM_GetWindowSizeY>
 800f1ba:	3d01      	subs	r5, #1
 800f1bc:	3801      	subs	r0, #1
 800f1be:	2300      	movs	r3, #0
 800f1c0:	2207      	movs	r2, #7
 800f1c2:	9008      	str	r0, [sp, #32]
 800f1c4:	9507      	str	r5, [sp, #28]
 800f1c6:	9401      	str	r4, [sp, #4]
 800f1c8:	9306      	str	r3, [sp, #24]
 800f1ca:	9305      	str	r3, [sp, #20]
 800f1cc:	9202      	str	r2, [sp, #8]
 800f1ce:	a801      	add	r0, sp, #4
 800f1d0:	47b0      	blx	r6
 800f1d2:	f1b8 0f00 	cmp.w	r8, #0
 800f1d6:	d103      	bne.n	800f1e0 <_Paint+0x58>
 800f1d8:	b957      	cbnz	r7, 800f1f0 <_Paint+0x68>
 800f1da:	b00b      	add	sp, #44	; 0x2c
 800f1dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f1e0:	2306      	movs	r3, #6
 800f1e2:	f8cd 800c 	str.w	r8, [sp, #12]
 800f1e6:	9302      	str	r3, [sp, #8]
 800f1e8:	a801      	add	r0, sp, #4
 800f1ea:	47b0      	blx	r6
 800f1ec:	2f00      	cmp	r7, #0
 800f1ee:	d0f4      	beq.n	800f1da <_Paint+0x52>
 800f1f0:	2312      	movs	r3, #18
 800f1f2:	4638      	mov	r0, r7
 800f1f4:	9302      	str	r3, [sp, #8]
 800f1f6:	f7f5 fe3d 	bl	8004e74 <GUI_ALLOC_LockH>
 800f1fa:	ac0a      	add	r4, sp, #40	; 0x28
 800f1fc:	f844 0d04 	str.w	r0, [r4, #-4]!
 800f200:	a801      	add	r0, sp, #4
 800f202:	47b0      	blx	r6
 800f204:	4620      	mov	r0, r4
 800f206:	f7f5 fe47 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f20a:	f019 0f01 	tst.w	r9, #1
 800f20e:	d0e4      	beq.n	800f1da <_Paint+0x52>
 800f210:	230a      	movs	r3, #10
 800f212:	4638      	mov	r0, r7
 800f214:	9302      	str	r3, [sp, #8]
 800f216:	f7f5 fe2d 	bl	8004e74 <GUI_ALLOC_LockH>
 800f21a:	9009      	str	r0, [sp, #36]	; 0x24
 800f21c:	a801      	add	r0, sp, #4
 800f21e:	47b0      	blx	r6
 800f220:	4620      	mov	r0, r4
 800f222:	f7f5 fe39 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f226:	b00b      	add	sp, #44	; 0x2c
 800f228:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800f22c <CHECKBOX_DrawSkinFlex>:
 800f22c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f230:	4605      	mov	r5, r0
 800f232:	6800      	ldr	r0, [r0, #0]
 800f234:	b095      	sub	sp, #84	; 0x54
 800f236:	bb10      	cbnz	r0, 800f27e <CHECKBOX_DrawSkinFlex+0x52>
 800f238:	f8df 9294 	ldr.w	r9, [pc, #660]	; 800f4d0 <CHECKBOX_DrawSkinFlex+0x2a4>
 800f23c:	4680      	mov	r8, r0
 800f23e:	686c      	ldr	r4, [r5, #4]
 800f240:	2c19      	cmp	r4, #25
 800f242:	f200 813e 	bhi.w	800f4c2 <CHECKBOX_DrawSkinFlex+0x296>
 800f246:	e8df f014 	tbh	[pc, r4, lsl #1]
 800f24a:	002a      	.short	0x002a
 800f24c:	013c013c 	.word	0x013c013c
 800f250:	013c013c 	.word	0x013c013c
 800f254:	0041013c 	.word	0x0041013c
 800f258:	013c0075 	.word	0x013c0075
 800f25c:	00ad013c 	.word	0x00ad013c
 800f260:	013c013c 	.word	0x013c013c
 800f264:	013c013c 	.word	0x013c013c
 800f268:	013c013c 	.word	0x013c013c
 800f26c:	0103013c 	.word	0x0103013c
 800f270:	013c013c 	.word	0x013c013c
 800f274:	013c013c 	.word	0x013c013c
 800f278:	013c013c 	.word	0x013c013c
 800f27c:	0024      	.short	0x0024
 800f27e:	f7ff f9b1 	bl	800e5e4 <WM__IsEnabled>
 800f282:	fab0 f880 	clz	r8, r0
 800f286:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800f28a:	4b8f      	ldr	r3, [pc, #572]	; (800f4c8 <CHECKBOX_DrawSkinFlex+0x29c>)
 800f28c:	f853 9028 	ldr.w	r9, [r3, r8, lsl #2]
 800f290:	e7d5      	b.n	800f23e <CHECKBOX_DrawSkinFlex+0x12>
 800f292:	f8d9 4018 	ldr.w	r4, [r9, #24]
 800f296:	4620      	mov	r0, r4
 800f298:	b015      	add	sp, #84	; 0x54
 800f29a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f29e:	6828      	ldr	r0, [r5, #0]
 800f2a0:	f006 ff6c 	bl	801617c <WM_SetHasTrans>
 800f2a4:	6828      	ldr	r0, [r5, #0]
 800f2a6:	f7f5 fde5 	bl	8004e74 <GUI_ALLOC_LockH>
 800f2aa:	4602      	mov	r2, r0
 800f2ac:	a814      	add	r0, sp, #80	; 0x50
 800f2ae:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800f2b2:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 800f2b6:	f840 2d08 	str.w	r2, [r0, #-8]!
 800f2ba:	1a5b      	subs	r3, r3, r1
 800f2bc:	3301      	adds	r3, #1
 800f2be:	67d3      	str	r3, [r2, #124]	; 0x7c
 800f2c0:	f7f5 fdea 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f2c4:	4620      	mov	r0, r4
 800f2c6:	b015      	add	sp, #84	; 0x54
 800f2c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2cc:	68ab      	ldr	r3, [r5, #8]
 800f2ce:	6828      	ldr	r0, [r5, #0]
 800f2d0:	9303      	str	r3, [sp, #12]
 800f2d2:	461f      	mov	r7, r3
 800f2d4:	f7f5 fdce 	bl	8004e74 <GUI_ALLOC_LockH>
 800f2d8:	ab14      	add	r3, sp, #80	; 0x50
 800f2da:	6fc5      	ldr	r5, [r0, #124]	; 0x7c
 800f2dc:	f843 0d08 	str.w	r0, [r3, #-8]!
 800f2e0:	4e7a      	ldr	r6, [pc, #488]	; (800f4cc <CHECKBOX_DrawSkinFlex+0x2a0>)
 800f2e2:	4618      	mov	r0, r3
 800f2e4:	f7f5 fdd8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f2e8:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 800f2ec:	f107 3bff 	add.w	fp, r7, #4294967295
 800f2f0:	2c00      	cmp	r4, #0
 800f2f2:	f000 80ef 	beq.w	800f4d4 <CHECKBOX_DrawSkinFlex+0x2a8>
 800f2f6:	ea4f 018b 	mov.w	r1, fp, lsl #2
 800f2fa:	eb01 020b 	add.w	r2, r1, fp
 800f2fe:	0092      	lsls	r2, r2, #2
 800f300:	e003      	b.n	800f30a <CHECKBOX_DrawSkinFlex+0xde>
 800f302:	6ce4      	ldr	r4, [r4, #76]	; 0x4c
 800f304:	2c00      	cmp	r4, #0
 800f306:	f000 80e5 	beq.w	800f4d4 <CHECKBOX_DrawSkinFlex+0x2a8>
 800f30a:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 800f30e:	429d      	cmp	r5, r3
 800f310:	d1f7      	bne.n	800f302 <CHECKBOX_DrawSkinFlex+0xd6>
 800f312:	18a3      	adds	r3, r4, r2
 800f314:	4608      	mov	r0, r1
 800f316:	689b      	ldr	r3, [r3, #8]
 800f318:	2b00      	cmp	r3, #0
 800f31a:	d0f2      	beq.n	800f302 <CHECKBOX_DrawSkinFlex+0xd6>
 800f31c:	2203      	movs	r2, #3
 800f31e:	4458      	add	r0, fp
 800f320:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800f324:	4611      	mov	r1, r2
 800f326:	f003 fadf 	bl	80128e8 <GUI_DrawBitmap>
 800f32a:	2400      	movs	r4, #0
 800f32c:	4620      	mov	r0, r4
 800f32e:	b015      	add	sp, #84	; 0x54
 800f330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f334:	6828      	ldr	r0, [r5, #0]
 800f336:	f7f5 fd9d 	bl	8004e74 <GUI_ALLOC_LockH>
 800f33a:	ab14      	add	r3, sp, #80	; 0x50
 800f33c:	6fc6      	ldr	r6, [r0, #124]	; 0x7c
 800f33e:	f843 0d08 	str.w	r0, [r3, #-8]!
 800f342:	4618      	mov	r0, r3
 800f344:	f7f5 fda8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f348:	6828      	ldr	r0, [r5, #0]
 800f34a:	f006 ff3d 	bl	80161c8 <WM_GetHasTrans>
 800f34e:	2800      	cmp	r0, #0
 800f350:	f000 81f2 	beq.w	800f738 <CHECKBOX_DrawSkinFlex+0x50c>
 800f354:	f1a9 0704 	sub.w	r7, r9, #4
 800f358:	2400      	movs	r4, #0
 800f35a:	f857 0f04 	ldr.w	r0, [r7, #4]!
 800f35e:	f7f6 f921 	bl	80055a4 <GUI_SetColor>
 800f362:	6928      	ldr	r0, [r5, #16]
 800f364:	6969      	ldr	r1, [r5, #20]
 800f366:	1833      	adds	r3, r6, r0
 800f368:	3b01      	subs	r3, #1
 800f36a:	1b1b      	subs	r3, r3, r4
 800f36c:	4420      	add	r0, r4
 800f36e:	4421      	add	r1, r4
 800f370:	461a      	mov	r2, r3
 800f372:	3401      	adds	r4, #1
 800f374:	f002 ff68 	bl	8012248 <GUI_DrawRect>
 800f378:	2c03      	cmp	r4, #3
 800f37a:	d1ee      	bne.n	800f35a <CHECKBOX_DrawSkinFlex+0x12e>
 800f37c:	6928      	ldr	r0, [r5, #16]
 800f37e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800f382:	6969      	ldr	r1, [r5, #20]
 800f384:	9301      	str	r3, [sp, #4]
 800f386:	1833      	adds	r3, r6, r0
 800f388:	f8d9 200c 	ldr.w	r2, [r9, #12]
 800f38c:	9200      	str	r2, [sp, #0]
 800f38e:	3b04      	subs	r3, #4
 800f390:	3003      	adds	r0, #3
 800f392:	3103      	adds	r1, #3
 800f394:	461a      	mov	r2, r3
 800f396:	f003 fb23 	bl	80129e0 <GUI_DrawGradientV>
 800f39a:	2400      	movs	r4, #0
 800f39c:	4620      	mov	r0, r4
 800f39e:	b015      	add	sp, #84	; 0x54
 800f3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3a4:	6828      	ldr	r0, [r5, #0]
 800f3a6:	f7f5 fd65 	bl	8004e74 <GUI_ALLOC_LockH>
 800f3aa:	4603      	mov	r3, r0
 800f3ac:	a814      	add	r0, sp, #80	; 0x50
 800f3ae:	f9b3 7054 	ldrsh.w	r7, [r3, #84]	; 0x54
 800f3b2:	f840 3d0c 	str.w	r3, [r0, #-12]!
 800f3b6:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 800f3b8:	f8d3 9034 	ldr.w	r9, [r3, #52]	; 0x34
 800f3bc:	f893 8056 	ldrb.w	r8, [r3, #86]	; 0x56
 800f3c0:	f7f5 fd6a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f3c4:	6828      	ldr	r0, [r5, #0]
 800f3c6:	f7f5 fd55 	bl	8004e74 <GUI_ALLOC_LockH>
 800f3ca:	ac14      	add	r4, sp, #80	; 0x50
 800f3cc:	f8d0 a07c 	ldr.w	sl, [r0, #124]	; 0x7c
 800f3d0:	f844 0d08 	str.w	r0, [r4, #-8]!
 800f3d4:	4620      	mov	r0, r4
 800f3d6:	f7f5 fd5f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f3da:	4620      	mov	r0, r4
 800f3dc:	f7fd ffb0 	bl	800d340 <WM_GetClientRect>
 800f3e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f3e4:	6a28      	ldr	r0, [r5, #32]
 800f3e6:	4453      	add	r3, sl
 800f3e8:	4498      	add	r8, r3
 800f3ea:	f8ad 8048 	strh.w	r8, [sp, #72]	; 0x48
 800f3ee:	f7f6 fe69 	bl	80060c4 <GUI_GetStringDistX>
 800f3f2:	4605      	mov	r5, r0
 800f3f4:	4648      	mov	r0, r9
 800f3f6:	f7f5 ffc7 	bl	8005388 <GUI_GetYSizeOfFont>
 800f3fa:	f027 0303 	bic.w	r3, r7, #3
 800f3fe:	2b04      	cmp	r3, #4
 800f400:	f000 8192 	beq.w	800f728 <CHECKBOX_DrawSkinFlex+0x4fc>
 800f404:	2b0c      	cmp	r3, #12
 800f406:	f000 8169 	beq.w	800f6dc <CHECKBOX_DrawSkinFlex+0x4b0>
 800f40a:	f9bd 304a 	ldrsh.w	r3, [sp, #74]	; 0x4a
 800f40e:	b280      	uxth	r0, r0
 800f410:	f027 010c 	bic.w	r1, r7, #12
 800f414:	2901      	cmp	r1, #1
 800f416:	f000 817f 	beq.w	800f718 <CHECKBOX_DrawSkinFlex+0x4ec>
 800f41a:	2902      	cmp	r1, #2
 800f41c:	f000 816d 	beq.w	800f6fa <CHECKBOX_DrawSkinFlex+0x4ce>
 800f420:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	; 0x48
 800f424:	b2ad      	uxth	r5, r5
 800f426:	3d01      	subs	r5, #1
 800f428:	3801      	subs	r0, #1
 800f42a:	4403      	add	r3, r0
 800f42c:	442a      	add	r2, r5
 800f42e:	4630      	mov	r0, r6
 800f430:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 800f434:	f8ad 304e 	strh.w	r3, [sp, #78]	; 0x4e
 800f438:	f7f6 f8b4 	bl	80055a4 <GUI_SetColor>
 800f43c:	4620      	mov	r0, r4
 800f43e:	f04f 31ff 	mov.w	r1, #4294967295
 800f442:	f003 fd03 	bl	8012e4c <GUI_DrawFocusRect>
 800f446:	2400      	movs	r4, #0
 800f448:	4620      	mov	r0, r4
 800f44a:	b015      	add	sp, #84	; 0x54
 800f44c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f450:	6828      	ldr	r0, [r5, #0]
 800f452:	f7f5 fd0f 	bl	8004e74 <GUI_ALLOC_LockH>
 800f456:	4603      	mov	r3, r0
 800f458:	a814      	add	r0, sp, #80	; 0x50
 800f45a:	f9b3 7054 	ldrsh.w	r7, [r3, #84]	; 0x54
 800f45e:	f840 3d0c 	str.w	r3, [r0, #-12]!
 800f462:	f8d3 8044 	ldr.w	r8, [r3, #68]	; 0x44
 800f466:	f8d3 9034 	ldr.w	r9, [r3, #52]	; 0x34
 800f46a:	f893 6056 	ldrb.w	r6, [r3, #86]	; 0x56
 800f46e:	f7f5 fd13 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f472:	6828      	ldr	r0, [r5, #0]
 800f474:	f7f5 fcfe 	bl	8004e74 <GUI_ALLOC_LockH>
 800f478:	ac14      	add	r4, sp, #80	; 0x50
 800f47a:	f8d0 a07c 	ldr.w	sl, [r0, #124]	; 0x7c
 800f47e:	f844 0d08 	str.w	r0, [r4, #-8]!
 800f482:	4620      	mov	r0, r4
 800f484:	f7f5 fd08 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f488:	4620      	mov	r0, r4
 800f48a:	f7fd ff59 	bl	800d340 <WM_GetClientRect>
 800f48e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f492:	6a2d      	ldr	r5, [r5, #32]
 800f494:	4453      	add	r3, sl
 800f496:	441e      	add	r6, r3
 800f498:	4648      	mov	r0, r9
 800f49a:	f8ad 6048 	strh.w	r6, [sp, #72]	; 0x48
 800f49e:	f7f6 f8a7 	bl	80055f0 <GUI_SetFont>
 800f4a2:	2002      	movs	r0, #2
 800f4a4:	f7f6 f8d2 	bl	800564c <GUI_SetTextMode>
 800f4a8:	4640      	mov	r0, r8
 800f4aa:	f7f6 f87b 	bl	80055a4 <GUI_SetColor>
 800f4ae:	4621      	mov	r1, r4
 800f4b0:	4628      	mov	r0, r5
 800f4b2:	463a      	mov	r2, r7
 800f4b4:	f7f6 fdde 	bl	8006074 <GUI_DispStringInRect>
 800f4b8:	2400      	movs	r4, #0
 800f4ba:	4620      	mov	r0, r4
 800f4bc:	b015      	add	sp, #84	; 0x54
 800f4be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4c2:	2400      	movs	r4, #0
 800f4c4:	e6e7      	b.n	800f296 <CHECKBOX_DrawSkinFlex+0x6a>
 800f4c6:	bf00      	nop
 800f4c8:	0801bb64 	.word	0x0801bb64
 800f4cc:	200005b0 	.word	0x200005b0
 800f4d0:	20000164 	.word	0x20000164
 800f4d4:	2050      	movs	r0, #80	; 0x50
 800f4d6:	f7f5 fba7 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 800f4da:	4604      	mov	r4, r0
 800f4dc:	2800      	cmp	r0, #0
 800f4de:	f43f aeda 	beq.w	800f296 <CHECKBOX_DrawSkinFlex+0x6a>
 800f4e2:	4fc1      	ldr	r7, [pc, #772]	; (800f7e8 <CHECKBOX_DrawSkinFlex+0x5bc>)
 800f4e4:	2250      	movs	r2, #80	; 0x50
 800f4e6:	683b      	ldr	r3, [r7, #0]
 800f4e8:	2100      	movs	r1, #0
 800f4ea:	4798      	blx	r3
 800f4ec:	ea4f 034b 	mov.w	r3, fp, lsl #1
 800f4f0:	4618      	mov	r0, r3
 800f4f2:	930b      	str	r3, [sp, #44]	; 0x2c
 800f4f4:	4458      	add	r0, fp
 800f4f6:	4bbd      	ldr	r3, [pc, #756]	; (800f7ec <CHECKBOX_DrawSkinFlex+0x5c0>)
 800f4f8:	f8d9 2014 	ldr.w	r2, [r9, #20]
 800f4fc:	6462      	str	r2, [r4, #68]	; 0x44
 800f4fe:	f1a5 0906 	sub.w	r9, r5, #6
 800f502:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800f506:	fb83 2309 	smull	r2, r3, r3, r9
 800f50a:	3028      	adds	r0, #40	; 0x28
 800f50c:	f1b9 0f00 	cmp.w	r9, #0
 800f510:	eb09 72d9 	add.w	r2, r9, r9, lsr #31
 800f514:	ea4f 0262 	mov.w	r2, r2, asr #1
 800f518:	ea4f 7ee9 	mov.w	lr, r9, asr #31
 800f51c:	900a      	str	r0, [sp, #40]	; 0x28
 800f51e:	4648      	mov	r0, r9
 800f520:	bfb8      	it	lt
 800f522:	1ee8      	sublt	r0, r5, #3
 800f524:	ebce 0363 	rsb	r3, lr, r3, asr #1
 800f528:	eba2 00a0 	sub.w	r0, r2, r0, asr #2
 800f52c:	f856 1028 	ldr.w	r1, [r6, r8, lsl #2]
 800f530:	f846 4028 	str.w	r4, [r6, r8, lsl #2]
 800f534:	eb00 0a03 	add.w	sl, r0, r3
 800f538:	1ad6      	subs	r6, r2, r3
 800f53a:	1c6b      	adds	r3, r5, #1
 800f53c:	bf48      	it	mi
 800f53e:	f105 0308 	addmi.w	r3, r5, #8
 800f542:	10db      	asrs	r3, r3, #3
 800f544:	fb03 f809 	mul.w	r8, r3, r9
 800f548:	64e1      	str	r1, [r4, #76]	; 0x4c
 800f54a:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
 800f54e:	f104 0140 	add.w	r1, r4, #64	; 0x40
 800f552:	4640      	mov	r0, r8
 800f554:	9109      	str	r1, [sp, #36]	; 0x24
 800f556:	9308      	str	r3, [sp, #32]
 800f558:	f7f5 fb66 	bl	8004c28 <GUI_ALLOC_GetFixedBlock>
 800f55c:	9004      	str	r0, [sp, #16]
 800f55e:	2800      	cmp	r0, #0
 800f560:	f000 80c8 	beq.w	800f6f4 <CHECKBOX_DrawSkinFlex+0x4c8>
 800f564:	683b      	ldr	r3, [r7, #0]
 800f566:	4642      	mov	r2, r8
 800f568:	2100      	movs	r1, #0
 800f56a:	4798      	blx	r3
 800f56c:	2e01      	cmp	r6, #1
 800f56e:	f340 818e 	ble.w	800f88e <CHECKBOX_DrawSkinFlex+0x662>
 800f572:	f1bb 0f01 	cmp.w	fp, #1
 800f576:	f10a 0202 	add.w	r2, sl, #2
 800f57a:	f040 8139 	bne.w	800f7f0 <CHECKBOX_DrawSkinFlex+0x5c4>
 800f57e:	9908      	ldr	r1, [sp, #32]
 800f580:	f8cd b01c 	str.w	fp, [sp, #28]
 800f584:	004b      	lsls	r3, r1, #1
 800f586:	425b      	negs	r3, r3
 800f588:	4618      	mov	r0, r3
 800f58a:	465b      	mov	r3, fp
 800f58c:	f8dd b010 	ldr.w	fp, [sp, #16]
 800f590:	f8cd a018 	str.w	sl, [sp, #24]
 800f594:	4657      	mov	r7, sl
 800f596:	f10a 0e01 	add.w	lr, sl, #1
 800f59a:	fb01 f202 	mul.w	r2, r1, r2
 800f59e:	f04f 0880 	mov.w	r8, #128	; 0x80
 800f5a2:	950c      	str	r5, [sp, #48]	; 0x30
 800f5a4:	940d      	str	r4, [sp, #52]	; 0x34
 800f5a6:	9605      	str	r6, [sp, #20]
 800f5a8:	468c      	mov	ip, r1
 800f5aa:	4682      	mov	sl, r0
 800f5ac:	f003 0407 	and.w	r4, r3, #7
 800f5b0:	eb02 010a 	add.w	r1, r2, sl
 800f5b4:	45b9      	cmp	r9, r7
 800f5b6:	fa48 f404 	asr.w	r4, r8, r4
 800f5ba:	eb02 05e3 	add.w	r5, r2, r3, asr #3
 800f5be:	eb01 01e3 	add.w	r1, r1, r3, asr #3
 800f5c2:	4677      	mov	r7, lr
 800f5c4:	f103 0301 	add.w	r3, r3, #1
 800f5c8:	f10e 0e01 	add.w	lr, lr, #1
 800f5cc:	4462      	add	r2, ip
 800f5ce:	4620      	mov	r0, r4
 800f5d0:	dd04      	ble.n	800f5dc <CHECKBOX_DrawSkinFlex+0x3b0>
 800f5d2:	f81b 6001 	ldrb.w	r6, [fp, r1]
 800f5d6:	4334      	orrs	r4, r6
 800f5d8:	f80b 4001 	strb.w	r4, [fp, r1]
 800f5dc:	45f1      	cmp	r9, lr
 800f5de:	dd04      	ble.n	800f5ea <CHECKBOX_DrawSkinFlex+0x3be>
 800f5e0:	f81b 1005 	ldrb.w	r1, [fp, r5]
 800f5e4:	4301      	orrs	r1, r0
 800f5e6:	f80b 1005 	strb.w	r1, [fp, r5]
 800f5ea:	9905      	ldr	r1, [sp, #20]
 800f5ec:	4299      	cmp	r1, r3
 800f5ee:	d1dd      	bne.n	800f5ac <CHECKBOX_DrawSkinFlex+0x380>
 800f5f0:	f8dd a018 	ldr.w	sl, [sp, #24]
 800f5f4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 800f5f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f5fa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f5fc:	1e4b      	subs	r3, r1, #1
 800f5fe:	460e      	mov	r6, r1
 800f600:	449a      	add	sl, r3
 800f602:	f1a5 0807 	sub.w	r8, r5, #7
 800f606:	45b0      	cmp	r8, r6
 800f608:	dd3e      	ble.n	800f688 <CHECKBOX_DrawSkinFlex+0x45c>
 800f60a:	f1bb 0f01 	cmp.w	fp, #1
 800f60e:	f10a 0302 	add.w	r3, sl, #2
 800f612:	f040 8099 	bne.w	800f748 <CHECKBOX_DrawSkinFlex+0x51c>
 800f616:	9d08      	ldr	r5, [sp, #32]
 800f618:	f8cd b014 	str.w	fp, [sp, #20]
 800f61c:	006a      	lsls	r2, r5, #1
 800f61e:	4252      	negs	r2, r2
 800f620:	fb05 f003 	mul.w	r0, r5, r3
 800f624:	f04f 0e80 	mov.w	lr, #128	; 0x80
 800f628:	9406      	str	r4, [sp, #24]
 800f62a:	46ac      	mov	ip, r5
 800f62c:	4693      	mov	fp, r2
 800f62e:	e001      	b.n	800f634 <CHECKBOX_DrawSkinFlex+0x408>
 800f630:	f10a 0302 	add.w	r3, sl, #2
 800f634:	f006 0107 	and.w	r1, r6, #7
 800f638:	45d1      	cmp	r9, sl
 800f63a:	fa4e f101 	asr.w	r1, lr, r1
 800f63e:	eb00 050b 	add.w	r5, r0, fp
 800f642:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f646:	4637      	mov	r7, r6
 800f648:	4634      	mov	r4, r6
 800f64a:	460a      	mov	r2, r1
 800f64c:	dd09      	ble.n	800f662 <CHECKBOX_DrawSkinFlex+0x436>
 800f64e:	2e00      	cmp	r6, #0
 800f650:	bfb8      	it	lt
 800f652:	1df7      	addlt	r7, r6, #7
 800f654:	eb05 05e7 	add.w	r5, r5, r7, asr #3
 800f658:	9f04      	ldr	r7, [sp, #16]
 800f65a:	5d7f      	ldrb	r7, [r7, r5]
 800f65c:	4339      	orrs	r1, r7
 800f65e:	9f04      	ldr	r7, [sp, #16]
 800f660:	5579      	strb	r1, [r7, r5]
 800f662:	4599      	cmp	r9, r3
 800f664:	dd08      	ble.n	800f678 <CHECKBOX_DrawSkinFlex+0x44c>
 800f666:	2e00      	cmp	r6, #0
 800f668:	bfb8      	it	lt
 800f66a:	1df4      	addlt	r4, r6, #7
 800f66c:	eb00 04e4 	add.w	r4, r0, r4, asr #3
 800f670:	9904      	ldr	r1, [sp, #16]
 800f672:	5d0b      	ldrb	r3, [r1, r4]
 800f674:	431a      	orrs	r2, r3
 800f676:	550a      	strb	r2, [r1, r4]
 800f678:	3601      	adds	r6, #1
 800f67a:	4546      	cmp	r6, r8
 800f67c:	ebcc 0000 	rsb	r0, ip, r0
 800f680:	d1d6      	bne.n	800f630 <CHECKBOX_DrawSkinFlex+0x404>
 800f682:	f8dd b014 	ldr.w	fp, [sp, #20]
 800f686:	9c06      	ldr	r4, [sp, #24]
 800f688:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f68a:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800f68c:	445b      	add	r3, fp
 800f68e:	4619      	mov	r1, r3
 800f690:	9b03      	ldr	r3, [sp, #12]
 800f692:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800f696:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f69a:	630e      	str	r6, [r1, #48]	; 0x30
 800f69c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800f6a0:	2602      	movs	r6, #2
 800f6a2:	ea4f 008b 	mov.w	r0, fp, lsl #2
 800f6a6:	628e      	str	r6, [r1, #40]	; 0x28
 800f6a8:	eb00 020b 	add.w	r2, r0, fp
 800f6ac:	2601      	movs	r6, #1
 800f6ae:	f881 602c 	strb.w	r6, [r1, #44]	; 0x2c
 800f6b2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800f6b6:	f823 6c0e 	strh.w	r6, [r3, #-14]
 800f6ba:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 800f6be:	f823 6c10 	strh.w	r6, [r3, #-16]
 800f6c2:	9e04      	ldr	r6, [sp, #16]
 800f6c4:	6096      	str	r6, [r2, #8]
 800f6c6:	fa1f f589 	uxth.w	r5, r9
 800f6ca:	2100      	movs	r1, #0
 800f6cc:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800f6ce:	60d6      	str	r6, [r2, #12]
 800f6d0:	6111      	str	r1, [r2, #16]
 800f6d2:	f823 5c14 	strh.w	r5, [r3, #-20]
 800f6d6:	f823 5c12 	strh.w	r5, [r3, #-18]
 800f6da:	e61f      	b.n	800f31c <CHECKBOX_DrawSkinFlex+0xf0>
 800f6dc:	f9bd 304e 	ldrsh.w	r3, [sp, #78]	; 0x4e
 800f6e0:	1a1b      	subs	r3, r3, r0
 800f6e2:	3301      	adds	r3, #1
 800f6e4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800f6e8:	f343 034f 	sbfx	r3, r3, #1, #16
 800f6ec:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 800f6f0:	b280      	uxth	r0, r0
 800f6f2:	e68d      	b.n	800f410 <CHECKBOX_DrawSkinFlex+0x1e4>
 800f6f4:	ea4f 008b 	mov.w	r0, fp, lsl #2
 800f6f8:	e610      	b.n	800f31c <CHECKBOX_DrawSkinFlex+0xf0>
 800f6fa:	f9bd 2048 	ldrsh.w	r2, [sp, #72]	; 0x48
 800f6fe:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	; 0x4c
 800f702:	1a89      	subs	r1, r1, r2
 800f704:	1b49      	subs	r1, r1, r5
 800f706:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800f70a:	eb02 0261 	add.w	r2, r2, r1, asr #1
 800f70e:	b212      	sxth	r2, r2
 800f710:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
 800f714:	b2ad      	uxth	r5, r5
 800f716:	e686      	b.n	800f426 <CHECKBOX_DrawSkinFlex+0x1fa>
 800f718:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 800f71c:	b2ad      	uxth	r5, r5
 800f71e:	1b49      	subs	r1, r1, r5
 800f720:	b20a      	sxth	r2, r1
 800f722:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
 800f726:	e67e      	b.n	800f426 <CHECKBOX_DrawSkinFlex+0x1fa>
 800f728:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800f72c:	b280      	uxth	r0, r0
 800f72e:	1a1b      	subs	r3, r3, r0
 800f730:	b21b      	sxth	r3, r3
 800f732:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 800f736:	e66b      	b.n	800f410 <CHECKBOX_DrawSkinFlex+0x1e4>
 800f738:	6828      	ldr	r0, [r5, #0]
 800f73a:	f7ff fcd1 	bl	800f0e0 <CHECKBOX_GetBkColor>
 800f73e:	f7f5 ff2f 	bl	80055a0 <GUI_SetBkColor>
 800f742:	f7f6 f821 	bl	8005788 <GUI_Clear>
 800f746:	e605      	b.n	800f354 <CHECKBOX_DrawSkinFlex+0x128>
 800f748:	9908      	ldr	r1, [sp, #32]
 800f74a:	f8cd b014 	str.w	fp, [sp, #20]
 800f74e:	460a      	mov	r2, r1
 800f750:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f754:	fb02 f203 	mul.w	r2, r2, r3
 800f758:	f1cc 0c00 	rsb	ip, ip, #0
 800f75c:	f04f 0e80 	mov.w	lr, #128	; 0x80
 800f760:	9406      	str	r4, [sp, #24]
 800f762:	468b      	mov	fp, r1
 800f764:	9804      	ldr	r0, [sp, #16]
 800f766:	e026      	b.n	800f7b6 <CHECKBOX_DrawSkinFlex+0x58a>
 800f768:	2e00      	cmp	r6, #0
 800f76a:	4634      	mov	r4, r6
 800f76c:	ebcb 0102 	rsb	r1, fp, r2
 800f770:	bfb8      	it	lt
 800f772:	1df4      	addlt	r4, r6, #7
 800f774:	eb01 04e4 	add.w	r4, r1, r4, asr #3
 800f778:	f006 0707 	and.w	r7, r6, #7
 800f77c:	5d05      	ldrb	r5, [r0, r4]
 800f77e:	fa4e f707 	asr.w	r7, lr, r7
 800f782:	433d      	orrs	r5, r7
 800f784:	5505      	strb	r5, [r0, r4]
 800f786:	4599      	cmp	r9, r3
 800f788:	dd0c      	ble.n	800f7a4 <CHECKBOX_DrawSkinFlex+0x578>
 800f78a:	2e00      	cmp	r6, #0
 800f78c:	4633      	mov	r3, r6
 800f78e:	bfb8      	it	lt
 800f790:	1df3      	addlt	r3, r6, #7
 800f792:	eb02 02e3 	add.w	r2, r2, r3, asr #3
 800f796:	f006 0407 	and.w	r4, r6, #7
 800f79a:	5c83      	ldrb	r3, [r0, r2]
 800f79c:	fa4e f404 	asr.w	r4, lr, r4
 800f7a0:	4323      	orrs	r3, r4
 800f7a2:	5483      	strb	r3, [r0, r2]
 800f7a4:	3601      	adds	r6, #1
 800f7a6:	4546      	cmp	r6, r8
 800f7a8:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f7ac:	460a      	mov	r2, r1
 800f7ae:	f43f af68 	beq.w	800f682 <CHECKBOX_DrawSkinFlex+0x456>
 800f7b2:	f10a 0302 	add.w	r3, sl, #2
 800f7b6:	45d1      	cmp	r9, sl
 800f7b8:	dd0e      	ble.n	800f7d8 <CHECKBOX_DrawSkinFlex+0x5ac>
 800f7ba:	2e00      	cmp	r6, #0
 800f7bc:	4631      	mov	r1, r6
 800f7be:	eb02 040c 	add.w	r4, r2, ip
 800f7c2:	bfb8      	it	lt
 800f7c4:	1df1      	addlt	r1, r6, #7
 800f7c6:	eb04 01e1 	add.w	r1, r4, r1, asr #3
 800f7ca:	f006 0507 	and.w	r5, r6, #7
 800f7ce:	5c44      	ldrb	r4, [r0, r1]
 800f7d0:	fa4e f505 	asr.w	r5, lr, r5
 800f7d4:	432c      	orrs	r4, r5
 800f7d6:	5444      	strb	r4, [r0, r1]
 800f7d8:	f10a 0101 	add.w	r1, sl, #1
 800f7dc:	4589      	cmp	r9, r1
 800f7de:	dcc3      	bgt.n	800f768 <CHECKBOX_DrawSkinFlex+0x53c>
 800f7e0:	ebcb 0102 	rsb	r1, fp, r2
 800f7e4:	e7cf      	b.n	800f786 <CHECKBOX_DrawSkinFlex+0x55a>
 800f7e6:	bf00      	nop
 800f7e8:	2000003c 	.word	0x2000003c
 800f7ec:	66666667 	.word	0x66666667
 800f7f0:	9808      	ldr	r0, [sp, #32]
 800f7f2:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 800f7f6:	0043      	lsls	r3, r0, #1
 800f7f8:	425b      	negs	r3, r3
 800f7fa:	9307      	str	r3, [sp, #28]
 800f7fc:	f8dd b010 	ldr.w	fp, [sp, #16]
 800f800:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800f804:	2301      	movs	r3, #1
 800f806:	fb00 f202 	mul.w	r2, r0, r2
 800f80a:	46d6      	mov	lr, sl
 800f80c:	eb0a 0103 	add.w	r1, sl, r3
 800f810:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f814:	950e      	str	r5, [sp, #56]	; 0x38
 800f816:	940f      	str	r4, [sp, #60]	; 0x3c
 800f818:	9606      	str	r6, [sp, #24]
 800f81a:	4680      	mov	r8, r0
 800f81c:	9807      	ldr	r0, [sp, #28]
 800f81e:	f003 0707 	and.w	r7, r3, #7
 800f822:	1814      	adds	r4, r2, r0
 800f824:	fa4c f707 	asr.w	r7, ip, r7
 800f828:	ebc8 0002 	rsb	r0, r8, r2
 800f82c:	45f1      	cmp	r9, lr
 800f82e:	eb02 0ae3 	add.w	sl, r2, r3, asr #3
 800f832:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800f836:	eb00 00e3 	add.w	r0, r0, r3, asr #3
 800f83a:	4442      	add	r2, r8
 800f83c:	f103 0301 	add.w	r3, r3, #1
 800f840:	468e      	mov	lr, r1
 800f842:	463e      	mov	r6, r7
 800f844:	9705      	str	r7, [sp, #20]
 800f846:	dd04      	ble.n	800f852 <CHECKBOX_DrawSkinFlex+0x626>
 800f848:	f81b 5004 	ldrb.w	r5, [fp, r4]
 800f84c:	432f      	orrs	r7, r5
 800f84e:	f80b 7004 	strb.w	r7, [fp, r4]
 800f852:	4589      	cmp	r9, r1
 800f854:	f101 0101 	add.w	r1, r1, #1
 800f858:	dd04      	ble.n	800f864 <CHECKBOX_DrawSkinFlex+0x638>
 800f85a:	f81b 4000 	ldrb.w	r4, [fp, r0]
 800f85e:	4334      	orrs	r4, r6
 800f860:	f80b 4000 	strb.w	r4, [fp, r0]
 800f864:	4589      	cmp	r9, r1
 800f866:	dd05      	ble.n	800f874 <CHECKBOX_DrawSkinFlex+0x648>
 800f868:	f81b 000a 	ldrb.w	r0, [fp, sl]
 800f86c:	9c05      	ldr	r4, [sp, #20]
 800f86e:	4320      	orrs	r0, r4
 800f870:	f80b 000a 	strb.w	r0, [fp, sl]
 800f874:	9806      	ldr	r0, [sp, #24]
 800f876:	4298      	cmp	r0, r3
 800f878:	d1d0      	bne.n	800f81c <CHECKBOX_DrawSkinFlex+0x5f0>
 800f87a:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800f87e:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800f882:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800f884:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800f886:	1e43      	subs	r3, r0, #1
 800f888:	4606      	mov	r6, r0
 800f88a:	449a      	add	sl, r3
 800f88c:	e6b9      	b.n	800f602 <CHECKBOX_DrawSkinFlex+0x3d6>
 800f88e:	2601      	movs	r6, #1
 800f890:	e6b7      	b.n	800f602 <CHECKBOX_DrawSkinFlex+0x3d6>
 800f892:	bf00      	nop

0800f894 <GUI_CreateDialogBox>:
 800f894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f898:	4604      	mov	r4, r0
 800f89a:	b082      	sub	sp, #8
 800f89c:	460d      	mov	r5, r1
 800f89e:	4616      	mov	r6, r2
 800f8a0:	2b00      	cmp	r3, #0
 800f8a2:	d038      	beq.n	800f916 <GUI_CreateDialogBox+0x82>
 800f8a4:	469a      	mov	sl, r3
 800f8a6:	9600      	str	r6, [sp, #0]
 800f8a8:	6826      	ldr	r6, [r4, #0]
 800f8aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f8ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f8ae:	4651      	mov	r1, sl
 800f8b0:	4620      	mov	r0, r4
 800f8b2:	47b0      	blx	r6
 800f8b4:	4607      	mov	r7, r0
 800f8b6:	b918      	cbnz	r0, 800f8c0 <GUI_CreateDialogBox+0x2c>
 800f8b8:	4638      	mov	r0, r7
 800f8ba:	b002      	add	sp, #8
 800f8bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8c0:	f7fd fd4c 	bl	800d35c <WM_GetClientWindow>
 800f8c4:	8a61      	ldrh	r1, [r4, #18]
 800f8c6:	4680      	mov	r8, r0
 800f8c8:	4638      	mov	r0, r7
 800f8ca:	f002 f967 	bl	8011b9c <WIDGET_OrState>
 800f8ce:	4638      	mov	r0, r7
 800f8d0:	f7fe f830 	bl	800d934 <WM_ShowWindow>
 800f8d4:	3d01      	subs	r5, #1
 800f8d6:	4640      	mov	r0, r8
 800f8d8:	f7fe f82c 	bl	800d934 <WM_ShowWindow>
 800f8dc:	2d00      	cmp	r5, #0
 800f8de:	bfc8      	it	gt
 800f8e0:	f04f 0900 	movgt.w	r9, #0
 800f8e4:	dc04      	bgt.n	800f8f0 <GUI_CreateDialogBox+0x5c>
 800f8e6:	e01a      	b.n	800f91e <GUI_CreateDialogBox+0x8a>
 800f8e8:	f7fe f824 	bl	800d934 <WM_ShowWindow>
 800f8ec:	3d01      	subs	r5, #1
 800f8ee:	d016      	beq.n	800f91e <GUI_CreateDialogBox+0x8a>
 800f8f0:	f854 6f1c 	ldr.w	r6, [r4, #28]!
 800f8f4:	f8cd 9000 	str.w	r9, [sp]
 800f8f8:	2300      	movs	r3, #0
 800f8fa:	4620      	mov	r0, r4
 800f8fc:	461a      	mov	r2, r3
 800f8fe:	4641      	mov	r1, r8
 800f900:	47b0      	blx	r6
 800f902:	4606      	mov	r6, r0
 800f904:	2800      	cmp	r0, #0
 800f906:	d1ef      	bne.n	800f8e8 <GUI_CreateDialogBox+0x54>
 800f908:	4638      	mov	r0, r7
 800f90a:	f7fc fe1b 	bl	800c544 <WM_DeleteWindow>
 800f90e:	4630      	mov	r0, r6
 800f910:	b002      	add	sp, #8
 800f912:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f916:	f7fd fd2f 	bl	800d378 <WM_GetDesktopWindow>
 800f91a:	4682      	mov	sl, r0
 800f91c:	e7c3      	b.n	800f8a6 <GUI_CreateDialogBox+0x12>
 800f91e:	4640      	mov	r0, r8
 800f920:	211d      	movs	r1, #29
 800f922:	f7fd ff59 	bl	800d7d8 <WM_SendMessageNoPara>
 800f926:	f1ba 3fff 	cmp.w	sl, #4294967295
 800f92a:	d0c5      	beq.n	800f8b8 <GUI_CreateDialogBox+0x24>
 800f92c:	f7fd fd9e 	bl	800d46c <WM_GetFocusedWindow>
 800f930:	b940      	cbnz	r0, 800f944 <GUI_CreateDialogBox+0xb0>
 800f932:	45ba      	cmp	sl, r7
 800f934:	d00c      	beq.n	800f950 <GUI_CreateDialogBox+0xbc>
 800f936:	4638      	mov	r0, r7
 800f938:	f006 fb56 	bl	8015fe8 <WM_SetFocusOnNextChild>
 800f93c:	4638      	mov	r0, r7
 800f93e:	e7bc      	b.n	800f8ba <GUI_CreateDialogBox+0x26>
 800f940:	2800      	cmp	r0, #0
 800f942:	d0f8      	beq.n	800f936 <GUI_CreateDialogBox+0xa2>
 800f944:	f7f5 fa8c 	bl	8004e60 <GUI_ALLOC_h2p>
 800f948:	6980      	ldr	r0, [r0, #24]
 800f94a:	4287      	cmp	r7, r0
 800f94c:	d1f8      	bne.n	800f940 <GUI_CreateDialogBox+0xac>
 800f94e:	e7b3      	b.n	800f8b8 <GUI_CreateDialogBox+0x24>
 800f950:	4650      	mov	r0, sl
 800f952:	e7b2      	b.n	800f8ba <GUI_CreateDialogBox+0x26>

0800f954 <_ManageScrollbars>:
 800f954:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f956:	b08b      	sub	sp, #44	; 0x2c
 800f958:	a902      	add	r1, sp, #8
 800f95a:	4606      	mov	r6, r0
 800f95c:	f7fd fdae 	bl	800d4bc <WM_GetInsideRectExScrollbar>
 800f960:	4630      	mov	r0, r6
 800f962:	f7f5 fa87 	bl	8004e74 <GUI_ALLOC_LockH>
 800f966:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800f96a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800f96e:	6d85      	ldr	r5, [r0, #88]	; 0x58
 800f970:	f8b0 1078 	ldrh.w	r1, [r0, #120]	; 0x78
 800f974:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800f976:	9001      	str	r0, [sp, #4]
 800f978:	1ad3      	subs	r3, r2, r3
 800f97a:	1b5b      	subs	r3, r3, r5
 800f97c:	074a      	lsls	r2, r1, #29
 800f97e:	eba3 0504 	sub.w	r5, r3, r4
 800f982:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 800f984:	6d44      	ldr	r4, [r0, #84]	; 0x54
 800f986:	d538      	bpl.n	800f9fa <_ManageScrollbars+0xa6>
 800f988:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f98c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800f990:	f8c0 5084 	str.w	r5, [r0, #132]	; 0x84
 800f994:	1ad3      	subs	r3, r2, r3
 800f996:	1b1b      	subs	r3, r3, r4
 800f998:	6f42      	ldr	r2, [r0, #116]	; 0x74
 800f99a:	67c2      	str	r2, [r0, #124]	; 0x7c
 800f99c:	1bdc      	subs	r4, r3, r7
 800f99e:	078b      	lsls	r3, r1, #30
 800f9a0:	d408      	bmi.n	800f9b4 <_ManageScrollbars+0x60>
 800f9a2:	6f01      	ldr	r1, [r0, #112]	; 0x70
 800f9a4:	428c      	cmp	r4, r1
 800f9a6:	4630      	mov	r0, r6
 800f9a8:	bfac      	ite	ge
 800f9aa:	2100      	movge	r1, #0
 800f9ac:	2101      	movlt	r1, #1
 800f9ae:	f006 fb91 	bl	80160d4 <WM_SetScrollbarH>
 800f9b2:	9801      	ldr	r0, [sp, #4]
 800f9b4:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800f9b6:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 800f9ba:	f8c0 4090 	str.w	r4, [r0, #144]	; 0x90
 800f9be:	307c      	adds	r0, #124	; 0x7c
 800f9c0:	f7fd fd36 	bl	800d430 <WM_CheckScrollBounds>
 800f9c4:	9801      	ldr	r0, [sp, #4]
 800f9c6:	3088      	adds	r0, #136	; 0x88
 800f9c8:	f7fd fd32 	bl	800d430 <WM_CheckScrollBounds>
 800f9cc:	9b01      	ldr	r3, [sp, #4]
 800f9ce:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 800f9d2:	ca07      	ldmia	r2, {r0, r1, r2}
 800f9d4:	3388      	adds	r3, #136	; 0x88
 800f9d6:	ac07      	add	r4, sp, #28
 800f9d8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f9dc:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800f9e0:	ad04      	add	r5, sp, #16
 800f9e2:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800f9e6:	a801      	add	r0, sp, #4
 800f9e8:	f7f5 fa56 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800f9ec:	462a      	mov	r2, r5
 800f9ee:	4621      	mov	r1, r4
 800f9f0:	4630      	mov	r0, r6
 800f9f2:	f002 f9e3 	bl	8011dbc <WIDGET__SetScrollState>
 800f9f6:	b00b      	add	sp, #44	; 0x2c
 800f9f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9fa:	6f41      	ldr	r1, [r0, #116]	; 0x74
 800f9fc:	428d      	cmp	r5, r1
 800f9fe:	bfac      	ite	ge
 800fa00:	2100      	movge	r1, #0
 800fa02:	2101      	movlt	r1, #1
 800fa04:	4630      	mov	r0, r6
 800fa06:	f006 fb8f 	bl	8016128 <WM_SetScrollbarV>
 800fa0a:	9801      	ldr	r0, [sp, #4]
 800fa0c:	f8b0 1078 	ldrh.w	r1, [r0, #120]	; 0x78
 800fa10:	e7ba      	b.n	800f988 <_ManageScrollbars+0x34>
 800fa12:	bf00      	nop

0800fa14 <GRAPH_Callback>:
 800fa14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa18:	e890 0018 	ldmia.w	r0, {r3, r4}
 800fa1c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fa20:	b099      	sub	sp, #100	; 0x64
 800fa22:	4605      	mov	r5, r0
 800fa24:	f000 812c 	beq.w	800fc80 <GRAPH_Callback+0x26c>
 800fa28:	4601      	mov	r1, r0
 800fa2a:	4620      	mov	r0, r4
 800fa2c:	f002 f8e6 	bl	8011bfc <WIDGET_HandleActive>
 800fa30:	4606      	mov	r6, r0
 800fa32:	2e00      	cmp	r6, #0
 800fa34:	f000 80f1 	beq.w	800fc1a <GRAPH_Callback+0x206>
 800fa38:	682b      	ldr	r3, [r5, #0]
 800fa3a:	3b05      	subs	r3, #5
 800fa3c:	2b21      	cmp	r3, #33	; 0x21
 800fa3e:	f200 8119 	bhi.w	800fc74 <GRAPH_Callback+0x260>
 800fa42:	e8df f013 	tbh	[pc, r3, lsl #1]
 800fa46:	0126      	.short	0x0126
 800fa48:	01170117 	.word	0x01170117
 800fa4c:	01170117 	.word	0x01170117
 800fa50:	012d0117 	.word	0x012d0117
 800fa54:	01170117 	.word	0x01170117
 800fa58:	00220117 	.word	0x00220117
 800fa5c:	01170117 	.word	0x01170117
 800fa60:	01170117 	.word	0x01170117
 800fa64:	01170117 	.word	0x01170117
 800fa68:	01170117 	.word	0x01170117
 800fa6c:	01170117 	.word	0x01170117
 800fa70:	01170117 	.word	0x01170117
 800fa74:	01170117 	.word	0x01170117
 800fa78:	01170117 	.word	0x01170117
 800fa7c:	01170117 	.word	0x01170117
 800fa80:	01170117 	.word	0x01170117
 800fa84:	01170117 	.word	0x01170117
 800fa88:	00ed      	.short	0x00ed
 800fa8a:	4620      	mov	r0, r4
 800fa8c:	68ed      	ldr	r5, [r5, #12]
 800fa8e:	f7f5 f9f1 	bl	8004e74 <GUI_ALLOC_LockH>
 800fa92:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800fa94:	900f      	str	r0, [sp, #60]	; 0x3c
 800fa96:	4603      	mov	r3, r0
 800fa98:	6812      	ldr	r2, [r2, #0]
 800fa9a:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 800fa9c:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800fa9e:	9204      	str	r2, [sp, #16]
 800faa0:	a810      	add	r0, sp, #64	; 0x40
 800faa2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800faa4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800faa6:	9205      	str	r2, [sp, #20]
 800faa8:	9303      	str	r3, [sp, #12]
 800faaa:	9101      	str	r1, [sp, #4]
 800faac:	9702      	str	r7, [sp, #8]
 800faae:	f7fd fc47 	bl	800d340 <WM_GetClientRect>
 800fab2:	a910      	add	r1, sp, #64	; 0x40
 800fab4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800fab6:	f002 f9c3 	bl	8011e40 <WIDGET__EFFECT_DrawDownRect>
 800faba:	f10d 0e40 	add.w	lr, sp, #64	; 0x40
 800fabe:	e89e 0003 	ldmia.w	lr, {r0, r1}
 800fac2:	f10d 0b50 	add.w	fp, sp, #80	; 0x50
 800fac6:	e88b 0003 	stmia.w	fp, {r0, r1}
 800faca:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 800face:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800fad2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800fad6:	9803      	ldr	r0, [sp, #12]
 800fad8:	f8bd 6054 	ldrh.w	r6, [sp, #84]	; 0x54
 800fadc:	f8bd e056 	ldrh.w	lr, [sp, #86]	; 0x56
 800fae0:	4439      	add	r1, r7
 800fae2:	9f05      	ldr	r7, [sp, #20]
 800fae4:	4419      	add	r1, r3
 800fae6:	1818      	adds	r0, r3, r0
 800fae8:	441a      	add	r2, r3
 800faea:	443b      	add	r3, r7
 800faec:	1af3      	subs	r3, r6, r3
 800faee:	9e01      	ldr	r6, [sp, #4]
 800faf0:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 800faf4:	ebc0 000e 	rsb	r0, r0, lr
 800faf8:	4432      	add	r2, r6
 800fafa:	f8ad 2050 	strh.w	r2, [sp, #80]	; 0x50
 800fafe:	f8ad 0056 	strh.w	r0, [sp, #86]	; 0x56
 800fb02:	f8ad 1052 	strh.w	r1, [sp, #82]	; 0x52
 800fb06:	e89b 0003 	ldmia.w	fp, {r0, r1}
 800fb0a:	ab12      	add	r3, sp, #72	; 0x48
 800fb0c:	e883 0003 	stmia.w	r3, {r0, r1}
 800fb10:	4618      	mov	r0, r3
 800fb12:	f7fd ff03 	bl	800d91c <WM_SetUserClipRect>
 800fb16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb18:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800fb1a:	f7f5 fd41 	bl	80055a0 <GUI_SetBkColor>
 800fb1e:	f7f5 fe33 	bl	8005788 <GUI_Clear>
 800fb22:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800fb24:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800fb28:	b11b      	cbz	r3, 800fb32 <GRAPH_Callback+0x11e>
 800fb2a:	2100      	movs	r1, #0
 800fb2c:	4620      	mov	r0, r4
 800fb2e:	4798      	blx	r3
 800fb30:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800fb32:	f897 306c 	ldrb.w	r3, [r7, #108]	; 0x6c
 800fb36:	2b00      	cmp	r3, #0
 800fb38:	f040 8171 	bne.w	800fe1e <GRAPH_Callback+0x40a>
 800fb3c:	9a04      	ldr	r2, [sp, #16]
 800fb3e:	a910      	add	r1, sp, #64	; 0x40
 800fb40:	4658      	mov	r0, fp
 800fb42:	f7f7 f833 	bl	8006bac <GUI__ReduceRect>
 800fb46:	4658      	mov	r0, fp
 800fb48:	f7fd fee8 	bl	800d91c <WM_SetUserClipRect>
 800fb4c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800fb4e:	f896 203b 	ldrb.w	r2, [r6, #59]	; 0x3b
 800fb52:	2a00      	cmp	r2, #0
 800fb54:	f040 80f5 	bne.w	800fd42 <GRAPH_Callback+0x32e>
 800fb58:	f8d6 3094 	ldr.w	r3, [r6, #148]	; 0x94
 800fb5c:	b113      	cbz	r3, 800fb64 <GRAPH_Callback+0x150>
 800fb5e:	2101      	movs	r1, #1
 800fb60:	4620      	mov	r0, r4
 800fb62:	4798      	blx	r3
 800fb64:	a812      	add	r0, sp, #72	; 0x48
 800fb66:	f7fd fed9 	bl	800d91c <WM_SetUserClipRect>
 800fb6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb6c:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800fb6e:	f000 fa91 	bl	8010094 <GUI_ARRAY_GetNumItems>
 800fb72:	2600      	movs	r6, #0
 800fb74:	4680      	mov	r8, r0
 800fb76:	b1e0      	cbz	r0, 800fbb2 <GRAPH_Callback+0x19e>
 800fb78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb7a:	4631      	mov	r1, r6
 800fb7c:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800fb7e:	f000 facd 	bl	801011c <GUI_ARRAY_GethItem>
 800fb82:	f7f5 f977 	bl	8004e74 <GUI_ALLOC_LockH>
 800fb86:	3601      	adds	r6, #1
 800fb88:	9016      	str	r0, [sp, #88]	; 0x58
 800fb8a:	b180      	cbz	r0, 800fbae <GRAPH_Callback+0x19a>
 800fb8c:	6807      	ldr	r7, [r0, #0]
 800fb8e:	4638      	mov	r0, r7
 800fb90:	f7f5 f970 	bl	8004e74 <GUI_ALLOC_LockH>
 800fb94:	4603      	mov	r3, r0
 800fb96:	4629      	mov	r1, r5
 800fb98:	4638      	mov	r0, r7
 800fb9a:	930e      	str	r3, [sp, #56]	; 0x38
 800fb9c:	b123      	cbz	r3, 800fba8 <GRAPH_Callback+0x194>
 800fb9e:	681b      	ldr	r3, [r3, #0]
 800fba0:	4798      	blx	r3
 800fba2:	a80e      	add	r0, sp, #56	; 0x38
 800fba4:	f7f5 f978 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fba8:	a816      	add	r0, sp, #88	; 0x58
 800fbaa:	f7f5 f975 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fbae:	45b0      	cmp	r8, r6
 800fbb0:	d1e2      	bne.n	800fb78 <GRAPH_Callback+0x164>
 800fbb2:	4658      	mov	r0, fp
 800fbb4:	f7fd feb2 	bl	800d91c <WM_SetUserClipRect>
 800fbb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fbba:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800fbbc:	f000 fa6a 	bl	8010094 <GUI_ARRAY_GetNumItems>
 800fbc0:	2600      	movs	r6, #0
 800fbc2:	4680      	mov	r8, r0
 800fbc4:	b1e0      	cbz	r0, 800fc00 <GRAPH_Callback+0x1ec>
 800fbc6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fbc8:	4631      	mov	r1, r6
 800fbca:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800fbcc:	f000 faa6 	bl	801011c <GUI_ARRAY_GethItem>
 800fbd0:	f7f5 f950 	bl	8004e74 <GUI_ALLOC_LockH>
 800fbd4:	3601      	adds	r6, #1
 800fbd6:	9016      	str	r0, [sp, #88]	; 0x58
 800fbd8:	b180      	cbz	r0, 800fbfc <GRAPH_Callback+0x1e8>
 800fbda:	6807      	ldr	r7, [r0, #0]
 800fbdc:	4638      	mov	r0, r7
 800fbde:	f7f5 f949 	bl	8004e74 <GUI_ALLOC_LockH>
 800fbe2:	4603      	mov	r3, r0
 800fbe4:	4629      	mov	r1, r5
 800fbe6:	4638      	mov	r0, r7
 800fbe8:	930d      	str	r3, [sp, #52]	; 0x34
 800fbea:	b123      	cbz	r3, 800fbf6 <GRAPH_Callback+0x1e2>
 800fbec:	681b      	ldr	r3, [r3, #0]
 800fbee:	4798      	blx	r3
 800fbf0:	a80d      	add	r0, sp, #52	; 0x34
 800fbf2:	f7f5 f951 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fbf6:	a816      	add	r0, sp, #88	; 0x58
 800fbf8:	f7f5 f94e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fbfc:	45b0      	cmp	r8, r6
 800fbfe:	d1e2      	bne.n	800fbc6 <GRAPH_Callback+0x1b2>
 800fc00:	2000      	movs	r0, #0
 800fc02:	f7fd fe8b 	bl	800d91c <WM_SetUserClipRect>
 800fc06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fc08:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800fc0c:	b113      	cbz	r3, 800fc14 <GRAPH_Callback+0x200>
 800fc0e:	4620      	mov	r0, r4
 800fc10:	2102      	movs	r1, #2
 800fc12:	4798      	blx	r3
 800fc14:	a80f      	add	r0, sp, #60	; 0x3c
 800fc16:	f7f5 f93f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fc1a:	b019      	add	sp, #100	; 0x64
 800fc1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc20:	68eb      	ldr	r3, [r5, #12]
 800fc22:	2b05      	cmp	r3, #5
 800fc24:	d126      	bne.n	800fc74 <GRAPH_Callback+0x260>
 800fc26:	4620      	mov	r0, r4
 800fc28:	68ae      	ldr	r6, [r5, #8]
 800fc2a:	f7fd fd05 	bl	800d638 <WM_GetScrollbarV>
 800fc2e:	4286      	cmp	r6, r0
 800fc30:	d005      	beq.n	800fc3e <GRAPH_Callback+0x22a>
 800fc32:	4620      	mov	r0, r4
 800fc34:	68ac      	ldr	r4, [r5, #8]
 800fc36:	f7fd fcd7 	bl	800d5e8 <WM_GetScrollbarH>
 800fc3a:	4284      	cmp	r4, r0
 800fc3c:	d11a      	bne.n	800fc74 <GRAPH_Callback+0x260>
 800fc3e:	686c      	ldr	r4, [r5, #4]
 800fc40:	68ae      	ldr	r6, [r5, #8]
 800fc42:	4620      	mov	r0, r4
 800fc44:	f7f5 f916 	bl	8004e74 <GUI_ALLOC_LockH>
 800fc48:	9016      	str	r0, [sp, #88]	; 0x58
 800fc4a:	4630      	mov	r0, r6
 800fc4c:	f000 fe80 	bl	8010950 <SCROLLBAR_GetValue>
 800fc50:	4607      	mov	r7, r0
 800fc52:	4630      	mov	r0, r6
 800fc54:	f7fd fc14 	bl	800d480 <WM_GetId>
 800fc58:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800fc5a:	28fe      	cmp	r0, #254	; 0xfe
 800fc5c:	bf08      	it	eq
 800fc5e:	f8c3 7080 	streq.w	r7, [r3, #128]	; 0x80
 800fc62:	4620      	mov	r0, r4
 800fc64:	bf18      	it	ne
 800fc66:	f8c3 708c 	strne.w	r7, [r3, #140]	; 0x8c
 800fc6a:	f7fc fb31 	bl	800c2d0 <WM_InvalidateWindow>
 800fc6e:	a816      	add	r0, sp, #88	; 0x58
 800fc70:	f7f5 f912 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fc74:	4628      	mov	r0, r5
 800fc76:	f7fd f839 	bl	800ccec <WM_DefaultProc>
 800fc7a:	b019      	add	sp, #100	; 0x64
 800fc7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc80:	4601      	mov	r1, r0
 800fc82:	4620      	mov	r0, r4
 800fc84:	f001 ffba 	bl	8011bfc <WIDGET_HandleActive>
 800fc88:	4606      	mov	r6, r0
 800fc8a:	4620      	mov	r0, r4
 800fc8c:	f7ff fe62 	bl	800f954 <_ManageScrollbars>
 800fc90:	e6cf      	b.n	800fa32 <GRAPH_Callback+0x1e>
 800fc92:	4620      	mov	r0, r4
 800fc94:	f7ff fe5e 	bl	800f954 <_ManageScrollbars>
 800fc98:	4628      	mov	r0, r5
 800fc9a:	f7fd f827 	bl	800ccec <WM_DefaultProc>
 800fc9e:	e7ec      	b.n	800fc7a <GRAPH_Callback+0x266>
 800fca0:	4620      	mov	r0, r4
 800fca2:	f7f5 f8e7 	bl	8004e74 <GUI_ALLOC_LockH>
 800fca6:	9014      	str	r0, [sp, #80]	; 0x50
 800fca8:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fcaa:	f000 f9f3 	bl	8010094 <GUI_ARRAY_GetNumItems>
 800fcae:	1e06      	subs	r6, r0, #0
 800fcb0:	bfc8      	it	gt
 800fcb2:	2400      	movgt	r4, #0
 800fcb4:	dd1b      	ble.n	800fcee <GRAPH_Callback+0x2da>
 800fcb6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fcb8:	4621      	mov	r1, r4
 800fcba:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800fcbc:	f000 fa2e 	bl	801011c <GUI_ARRAY_GethItem>
 800fcc0:	f7f5 f8d8 	bl	8004e74 <GUI_ALLOC_LockH>
 800fcc4:	3401      	adds	r4, #1
 800fcc6:	9016      	str	r0, [sp, #88]	; 0x58
 800fcc8:	b178      	cbz	r0, 800fcea <GRAPH_Callback+0x2d6>
 800fcca:	6805      	ldr	r5, [r0, #0]
 800fccc:	4628      	mov	r0, r5
 800fcce:	f7f5 f8d1 	bl	8004e74 <GUI_ALLOC_LockH>
 800fcd2:	4603      	mov	r3, r0
 800fcd4:	9312      	str	r3, [sp, #72]	; 0x48
 800fcd6:	a812      	add	r0, sp, #72	; 0x48
 800fcd8:	b123      	cbz	r3, 800fce4 <GRAPH_Callback+0x2d0>
 800fcda:	685f      	ldr	r7, [r3, #4]
 800fcdc:	f7f5 f8dc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fce0:	4628      	mov	r0, r5
 800fce2:	47b8      	blx	r7
 800fce4:	a816      	add	r0, sp, #88	; 0x58
 800fce6:	f7f5 f8d7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fcea:	42a6      	cmp	r6, r4
 800fcec:	d1e3      	bne.n	800fcb6 <GRAPH_Callback+0x2a2>
 800fcee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fcf0:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800fcf2:	f000 f9cf 	bl	8010094 <GUI_ARRAY_GetNumItems>
 800fcf6:	1e05      	subs	r5, r0, #0
 800fcf8:	bfc8      	it	gt
 800fcfa:	2400      	movgt	r4, #0
 800fcfc:	dd11      	ble.n	800fd22 <GRAPH_Callback+0x30e>
 800fcfe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fd00:	4621      	mov	r1, r4
 800fd02:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800fd04:	f000 fa0a 	bl	801011c <GUI_ARRAY_GethItem>
 800fd08:	f7f5 f8b4 	bl	8004e74 <GUI_ALLOC_LockH>
 800fd0c:	3401      	adds	r4, #1
 800fd0e:	9016      	str	r0, [sp, #88]	; 0x58
 800fd10:	b128      	cbz	r0, 800fd1e <GRAPH_Callback+0x30a>
 800fd12:	6800      	ldr	r0, [r0, #0]
 800fd14:	f7f5 fa38 	bl	8005188 <GUI_ALLOC_Free>
 800fd18:	a816      	add	r0, sp, #88	; 0x58
 800fd1a:	f7f5 f8bd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fd1e:	42a5      	cmp	r5, r4
 800fd20:	d1ed      	bne.n	800fcfe <GRAPH_Callback+0x2ea>
 800fd22:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fd24:	ac18      	add	r4, sp, #96	; 0x60
 800fd26:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800fd28:	f000 f9c8 	bl	80100bc <GUI_ARRAY_Delete>
 800fd2c:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 800fd30:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800fd32:	f000 f9c3 	bl	80100bc <GUI_ARRAY_Delete>
 800fd36:	4620      	mov	r0, r4
 800fd38:	f7f5 f8ae 	bl	8004e98 <GUI_ALLOC_UnlockH>
 800fd3c:	b019      	add	sp, #100	; 0x64
 800fd3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd42:	9b01      	ldr	r3, [sp, #4]
 800fd44:	b93b      	cbnz	r3, 800fd56 <GRAPH_Callback+0x342>
 800fd46:	9b02      	ldr	r3, [sp, #8]
 800fd48:	b92b      	cbnz	r3, 800fd56 <GRAPH_Callback+0x342>
 800fd4a:	9b05      	ldr	r3, [sp, #20]
 800fd4c:	b91b      	cbnz	r3, 800fd56 <GRAPH_Callback+0x342>
 800fd4e:	9b03      	ldr	r3, [sp, #12]
 800fd50:	2b00      	cmp	r3, #0
 800fd52:	f43f af01 	beq.w	800fb58 <GRAPH_Callback+0x144>
 800fd56:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 800fd58:	a916      	add	r1, sp, #88	; 0x58
 800fd5a:	4620      	mov	r0, r4
 800fd5c:	f8d2 8000 	ldr.w	r8, [r2]
 800fd60:	f7fd fbac 	bl	800d4bc <WM_GetInsideRectExScrollbar>
 800fd64:	f7fd fc1e 	bl	800d5a4 <WM_GetOrgX>
 800fd68:	9004      	str	r0, [sp, #16]
 800fd6a:	f7fd fc27 	bl	800d5bc <WM_GetOrgY>
 800fd6e:	9901      	ldr	r1, [sp, #4]
 800fd70:	f9bd a058 	ldrsh.w	sl, [sp, #88]	; 0x58
 800fd74:	f9bd 205a 	ldrsh.w	r2, [sp, #90]	; 0x5a
 800fd78:	f9bd 905c 	ldrsh.w	r9, [sp, #92]	; 0x5c
 800fd7c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800fd80:	448a      	add	sl, r1
 800fd82:	9902      	ldr	r1, [sp, #8]
 800fd84:	440a      	add	r2, r1
 800fd86:	9207      	str	r2, [sp, #28]
 800fd88:	9a05      	ldr	r2, [sp, #20]
 800fd8a:	ebc2 0909 	rsb	r9, r2, r9
 800fd8e:	9a03      	ldr	r2, [sp, #12]
 800fd90:	4607      	mov	r7, r0
 800fd92:	1a9b      	subs	r3, r3, r2
 800fd94:	6bb0      	ldr	r0, [r6, #56]	; 0x38
 800fd96:	9306      	str	r3, [sp, #24]
 800fd98:	f7f5 fc02 	bl	80055a0 <GUI_SetBkColor>
 800fd9c:	6bf0      	ldr	r0, [r6, #60]	; 0x3c
 800fd9e:	f7f5 fc01 	bl	80055a4 <GUI_SetColor>
 800fda2:	9901      	ldr	r1, [sp, #4]
 800fda4:	b141      	cbz	r1, 800fdb8 <GRAPH_Callback+0x3a4>
 800fda6:	1e4a      	subs	r2, r1, #1
 800fda8:	f9b5 3000 	ldrsh.w	r3, [r5]
 800fdac:	9904      	ldr	r1, [sp, #16]
 800fdae:	4442      	add	r2, r8
 800fdb0:	1a5b      	subs	r3, r3, r1
 800fdb2:	429a      	cmp	r2, r3
 800fdb4:	f280 80ea 	bge.w	800ff8c <GRAPH_Callback+0x578>
 800fdb8:	9b02      	ldr	r3, [sp, #8]
 800fdba:	b13b      	cbz	r3, 800fdcc <GRAPH_Callback+0x3b8>
 800fdbc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fdc0:	3b01      	subs	r3, #1
 800fdc2:	1bd2      	subs	r2, r2, r7
 800fdc4:	4443      	add	r3, r8
 800fdc6:	4293      	cmp	r3, r2
 800fdc8:	f280 80f4 	bge.w	800ffb4 <GRAPH_Callback+0x5a0>
 800fdcc:	9905      	ldr	r1, [sp, #20]
 800fdce:	b151      	cbz	r1, 800fde6 <GRAPH_Callback+0x3d2>
 800fdd0:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800fdd4:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800fdd8:	1a50      	subs	r0, r2, r1
 800fdda:	9904      	ldr	r1, [sp, #16]
 800fddc:	3001      	adds	r0, #1
 800fdde:	1a5e      	subs	r6, r3, r1
 800fde0:	42b0      	cmp	r0, r6
 800fde2:	f340 80f8 	ble.w	800ffd6 <GRAPH_Callback+0x5c2>
 800fde6:	9b03      	ldr	r3, [sp, #12]
 800fde8:	b1bb      	cbz	r3, 800fe1a <GRAPH_Callback+0x406>
 800fdea:	4619      	mov	r1, r3
 800fdec:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800fdf0:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800fdf4:	1a59      	subs	r1, r3, r1
 800fdf6:	3101      	adds	r1, #1
 800fdf8:	1bd7      	subs	r7, r2, r7
 800fdfa:	42b9      	cmp	r1, r7
 800fdfc:	dc0d      	bgt.n	800fe1a <GRAPH_Callback+0x406>
 800fdfe:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800fe02:	f9bd 0058 	ldrsh.w	r0, [sp, #88]	; 0x58
 800fe06:	f7f5 fc8d 	bl	8005724 <GUI_ClearRect>
 800fe0a:	9806      	ldr	r0, [sp, #24]
 800fe0c:	f109 0201 	add.w	r2, r9, #1
 800fe10:	f10a 31ff 	add.w	r1, sl, #4294967295
 800fe14:	3001      	adds	r0, #1
 800fe16:	f002 ff77 	bl	8012d08 <GUI_DrawHLine>
 800fe1a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800fe1c:	e69c      	b.n	800fb58 <GRAPH_Callback+0x144>
 800fe1e:	a916      	add	r1, sp, #88	; 0x58
 800fe20:	4620      	mov	r0, r4
 800fe22:	f7fd fb4b 	bl	800d4bc <WM_GetInsideRectExScrollbar>
 800fe26:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800fe28:	6c38      	ldr	r0, [r7, #64]	; 0x40
 800fe2a:	681b      	ldr	r3, [r3, #0]
 800fe2c:	9309      	str	r3, [sp, #36]	; 0x24
 800fe2e:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800fe32:	9307      	str	r3, [sp, #28]
 800fe34:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800fe38:	9308      	str	r3, [sp, #32]
 800fe3a:	f8d7 9044 	ldr.w	r9, [r7, #68]	; 0x44
 800fe3e:	f8d7 8048 	ldr.w	r8, [r7, #72]	; 0x48
 800fe42:	f9bd a05c 	ldrsh.w	sl, [sp, #92]	; 0x5c
 800fe46:	f9bd 6058 	ldrsh.w	r6, [sp, #88]	; 0x58
 800fe4a:	f7f5 fbab 	bl	80055a4 <GUI_SetColor>
 800fe4e:	f7f5 fa7b 	bl	8005348 <GUI_GetLineStyle>
 800fe52:	9006      	str	r0, [sp, #24]
 800fe54:	f1b9 0f00 	cmp.w	r9, #0
 800fe58:	d04f      	beq.n	800fefa <GRAPH_Callback+0x4e6>
 800fe5a:	f8b7 2078 	ldrh.w	r2, [r7, #120]	; 0x78
 800fe5e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800fe60:	07d2      	lsls	r2, r2, #31
 800fe62:	bf54      	ite	pl
 800fe64:	f8d7 208c 	ldrpl.w	r2, [r7, #140]	; 0x8c
 800fe68:	2200      	movmi	r2, #0
 800fe6a:	444b      	add	r3, r9
 800fe6c:	4413      	add	r3, r2
 800fe6e:	4599      	cmp	r9, r3
 800fe70:	dc03      	bgt.n	800fe7a <GRAPH_Callback+0x466>
 800fe72:	ebc9 0303 	rsb	r3, r9, r3
 800fe76:	4599      	cmp	r9, r3
 800fe78:	ddfb      	ble.n	800fe72 <GRAPH_Callback+0x45e>
 800fe7a:	9905      	ldr	r1, [sp, #20]
 800fe7c:	930a      	str	r3, [sp, #40]	; 0x28
 800fe7e:	9b01      	ldr	r3, [sp, #4]
 800fe80:	f897 007a 	ldrb.w	r0, [r7, #122]	; 0x7a
 800fe84:	185a      	adds	r2, r3, r1
 800fe86:	ebc6 0a0a 	rsb	sl, r6, sl
 800fe8a:	f1c2 0201 	rsb	r2, r2, #1
 800fe8e:	eb02 010a 	add.w	r1, r2, sl
 800fe92:	460e      	mov	r6, r1
 800fe94:	f7f5 fbb6 	bl	8005604 <GUI_SetLineStyle>
 800fe98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fe9a:	429e      	cmp	r6, r3
 800fe9c:	4631      	mov	r1, r6
 800fe9e:	dd2c      	ble.n	800fefa <GRAPH_Callback+0x4e6>
 800fea0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fea2:	9a01      	ldr	r2, [sp, #4]
 800fea4:	950a      	str	r5, [sp, #40]	; 0x28
 800fea6:	4410      	add	r0, r2
 800fea8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800feac:	181e      	adds	r6, r3, r0
 800feae:	9409      	str	r4, [sp, #36]	; 0x24
 800feb0:	9d03      	ldr	r5, [sp, #12]
 800feb2:	4688      	mov	r8, r1
 800feb4:	4682      	mov	sl, r0
 800feb6:	e006      	b.n	800fec6 <GRAPH_Callback+0x4b2>
 800feb8:	f003 fa24 	bl	8013304 <GUI_DrawLine>
 800febc:	444e      	add	r6, r9
 800febe:	ebca 0306 	rsb	r3, sl, r6
 800fec2:	4598      	cmp	r8, r3
 800fec4:	dd16      	ble.n	800fef4 <GRAPH_Callback+0x4e0>
 800fec6:	9b02      	ldr	r3, [sp, #8]
 800fec8:	f9bd 405a 	ldrsh.w	r4, [sp, #90]	; 0x5a
 800fecc:	f9bd e05e 	ldrsh.w	lr, [sp, #94]	; 0x5e
 800fed0:	f897 c07a 	ldrb.w	ip, [r7, #122]	; 0x7a
 800fed4:	441c      	add	r4, r3
 800fed6:	ebc5 0e0e 	rsb	lr, r5, lr
 800feda:	4632      	mov	r2, r6
 800fedc:	4630      	mov	r0, r6
 800fede:	4621      	mov	r1, r4
 800fee0:	4673      	mov	r3, lr
 800fee2:	f1bc 0f00 	cmp.w	ip, #0
 800fee6:	d1e7      	bne.n	800feb8 <GRAPH_Callback+0x4a4>
 800fee8:	4672      	mov	r2, lr
 800feea:	4621      	mov	r1, r4
 800feec:	4630      	mov	r0, r6
 800feee:	f002 ff65 	bl	8012dbc <GUI_DrawVLine>
 800fef2:	e7e3      	b.n	800febc <GRAPH_Callback+0x4a8>
 800fef4:	ac09      	add	r4, sp, #36	; 0x24
 800fef6:	e894 0130 	ldmia.w	r4, {r4, r5, r8}
 800fefa:	f1b8 0f00 	cmp.w	r8, #0
 800fefe:	d041      	beq.n	800ff84 <GRAPH_Callback+0x570>
 800ff00:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800ff02:	f8d7 6080 	ldr.w	r6, [r7, #128]	; 0x80
 800ff06:	4443      	add	r3, r8
 800ff08:	1b9e      	subs	r6, r3, r6
 800ff0a:	45b0      	cmp	r8, r6
 800ff0c:	dc03      	bgt.n	800ff16 <GRAPH_Callback+0x502>
 800ff0e:	ebc8 0606 	rsb	r6, r8, r6
 800ff12:	45b0      	cmp	r8, r6
 800ff14:	ddfb      	ble.n	800ff0e <GRAPH_Callback+0x4fa>
 800ff16:	9a02      	ldr	r2, [sp, #8]
 800ff18:	9b03      	ldr	r3, [sp, #12]
 800ff1a:	9908      	ldr	r1, [sp, #32]
 800ff1c:	f897 007b 	ldrb.w	r0, [r7, #123]	; 0x7b
 800ff20:	18d3      	adds	r3, r2, r3
 800ff22:	9a07      	ldr	r2, [sp, #28]
 800ff24:	f1c3 0301 	rsb	r3, r3, #1
 800ff28:	ebc1 0902 	rsb	r9, r1, r2
 800ff2c:	4499      	add	r9, r3
 800ff2e:	f7f5 fb69 	bl	8005604 <GUI_SetLineStyle>
 800ff32:	45b1      	cmp	r9, r6
 800ff34:	dd26      	ble.n	800ff84 <GRAPH_Callback+0x570>
 800ff36:	9508      	str	r5, [sp, #32]
 800ff38:	9407      	str	r4, [sp, #28]
 800ff3a:	9d05      	ldr	r5, [sp, #20]
 800ff3c:	f8dd a00c 	ldr.w	sl, [sp, #12]
 800ff40:	e005      	b.n	800ff4e <GRAPH_Callback+0x53a>
 800ff42:	4670      	mov	r0, lr
 800ff44:	f003 f9de 	bl	8013304 <GUI_DrawLine>
 800ff48:	4446      	add	r6, r8
 800ff4a:	45b1      	cmp	r9, r6
 800ff4c:	dd18      	ble.n	800ff80 <GRAPH_Callback+0x56c>
 800ff4e:	f9bd 005e 	ldrsh.w	r0, [sp, #94]	; 0x5e
 800ff52:	f9bd 405c 	ldrsh.w	r4, [sp, #92]	; 0x5c
 800ff56:	9a01      	ldr	r2, [sp, #4]
 800ff58:	f9bd e058 	ldrsh.w	lr, [sp, #88]	; 0x58
 800ff5c:	f897 c07b 	ldrb.w	ip, [r7, #123]	; 0x7b
 800ff60:	ebca 0000 	rsb	r0, sl, r0
 800ff64:	1b80      	subs	r0, r0, r6
 800ff66:	1b64      	subs	r4, r4, r5
 800ff68:	4496      	add	lr, r2
 800ff6a:	4603      	mov	r3, r0
 800ff6c:	4601      	mov	r1, r0
 800ff6e:	4622      	mov	r2, r4
 800ff70:	f1bc 0f00 	cmp.w	ip, #0
 800ff74:	d1e5      	bne.n	800ff42 <GRAPH_Callback+0x52e>
 800ff76:	4622      	mov	r2, r4
 800ff78:	4671      	mov	r1, lr
 800ff7a:	f002 fec5 	bl	8012d08 <GUI_DrawHLine>
 800ff7e:	e7e3      	b.n	800ff48 <GRAPH_Callback+0x534>
 800ff80:	9c07      	ldr	r4, [sp, #28]
 800ff82:	9d08      	ldr	r5, [sp, #32]
 800ff84:	9806      	ldr	r0, [sp, #24]
 800ff86:	f7f5 fb3d 	bl	8005604 <GUI_SetLineStyle>
 800ff8a:	e5d7      	b.n	800fb3c <GRAPH_Callback+0x128>
 800ff8c:	9903      	ldr	r1, [sp, #12]
 800ff8e:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800ff92:	f9bd 0058 	ldrsh.w	r0, [sp, #88]	; 0x58
 800ff96:	1a5b      	subs	r3, r3, r1
 800ff98:	9902      	ldr	r1, [sp, #8]
 800ff9a:	3301      	adds	r3, #1
 800ff9c:	4441      	add	r1, r8
 800ff9e:	f7f5 fbc1 	bl	8005724 <GUI_ClearRect>
 800ffa2:	9b06      	ldr	r3, [sp, #24]
 800ffa4:	1c5a      	adds	r2, r3, #1
 800ffa6:	9b07      	ldr	r3, [sp, #28]
 800ffa8:	f10a 30ff 	add.w	r0, sl, #4294967295
 800ffac:	1e59      	subs	r1, r3, #1
 800ffae:	f002 ff05 	bl	8012dbc <GUI_DrawVLine>
 800ffb2:	e701      	b.n	800fdb8 <GRAPH_Callback+0x3a4>
 800ffb4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800ffb8:	f9bd 105a 	ldrsh.w	r1, [sp, #90]	; 0x5a
 800ffbc:	f9bd 0058 	ldrsh.w	r0, [sp, #88]	; 0x58
 800ffc0:	f7f5 fbb0 	bl	8005724 <GUI_ClearRect>
 800ffc4:	9b07      	ldr	r3, [sp, #28]
 800ffc6:	f109 0201 	add.w	r2, r9, #1
 800ffca:	f10a 31ff 	add.w	r1, sl, #4294967295
 800ffce:	1e58      	subs	r0, r3, #1
 800ffd0:	f002 fe9a 	bl	8012d08 <GUI_DrawHLine>
 800ffd4:	e6fa      	b.n	800fdcc <GRAPH_Callback+0x3b8>
 800ffd6:	9903      	ldr	r1, [sp, #12]
 800ffd8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800ffdc:	1a5b      	subs	r3, r3, r1
 800ffde:	9902      	ldr	r1, [sp, #8]
 800ffe0:	3301      	adds	r3, #1
 800ffe2:	4441      	add	r1, r8
 800ffe4:	f7f5 fb9e 	bl	8005724 <GUI_ClearRect>
 800ffe8:	9b07      	ldr	r3, [sp, #28]
 800ffea:	1e59      	subs	r1, r3, #1
 800ffec:	9b06      	ldr	r3, [sp, #24]
 800ffee:	f109 0001 	add.w	r0, r9, #1
 800fff2:	1c5a      	adds	r2, r3, #1
 800fff4:	f002 fee2 	bl	8012dbc <GUI_DrawVLine>
 800fff8:	e6f5      	b.n	800fde6 <GRAPH_Callback+0x3d2>
 800fffa:	bf00      	nop

0800fffc <GRAPH_CreateIndirect>:
 800fffc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010000:	4604      	mov	r4, r0
 8010002:	b087      	sub	sp, #28
 8010004:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 8010008:	69a5      	ldr	r5, [r4, #24]
 801000a:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 801000e:	4f1f      	ldr	r7, [pc, #124]	; (801008c <GRAPH_CreateIndirect+0x90>)
 8010010:	9100      	str	r1, [sp, #0]
 8010012:	f9b4 c010 	ldrsh.w	ip, [r4, #16]
 8010016:	9702      	str	r7, [sp, #8]
 8010018:	f9b4 e00e 	ldrsh.w	lr, [r4, #14]
 801001c:	356c      	adds	r5, #108	; 0x6c
 801001e:	2700      	movs	r7, #0
 8010020:	18f1      	adds	r1, r6, r3
 8010022:	9503      	str	r5, [sp, #12]
 8010024:	9701      	str	r7, [sp, #4]
 8010026:	4410      	add	r0, r2
 8010028:	4663      	mov	r3, ip
 801002a:	4672      	mov	r2, lr
 801002c:	f8b4 8012 	ldrh.w	r8, [r4, #18]
 8010030:	f9b4 4008 	ldrsh.w	r4, [r4, #8]
 8010034:	f7fc f9a2 	bl	800c37c <WM_CreateWindowAsChild>
 8010038:	4606      	mov	r6, r0
 801003a:	b318      	cbz	r0, 8010084 <GRAPH_CreateIndirect+0x88>
 801003c:	f000 f892 	bl	8010164 <GUI_ARRAY_Create>
 8010040:	4681      	mov	r9, r0
 8010042:	f000 f88f 	bl	8010164 <GUI_ARRAY_Create>
 8010046:	4605      	mov	r5, r0
 8010048:	4630      	mov	r0, r6
 801004a:	f7f4 ff13 	bl	8004e74 <GUI_ALLOC_LockH>
 801004e:	6685      	str	r5, [r0, #104]	; 0x68
 8010050:	4d0f      	ldr	r5, [pc, #60]	; (8010090 <GRAPH_CreateIndirect+0x94>)
 8010052:	f8c0 9064 	str.w	r9, [r0, #100]	; 0x64
 8010056:	463a      	mov	r2, r7
 8010058:	4621      	mov	r1, r4
 801005a:	9005      	str	r0, [sp, #20]
 801005c:	af06      	add	r7, sp, #24
 801005e:	f001 fd95 	bl	8011b8c <WIDGET__Init>
 8010062:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010064:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 8010068:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 801006c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801006e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010070:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010072:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8010076:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801007a:	f8ae 8078 	strh.w	r8, [lr, #120]	; 0x78
 801007e:	4638      	mov	r0, r7
 8010080:	f7f4 ff0a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010084:	4630      	mov	r0, r6
 8010086:	b007      	add	sp, #28
 8010088:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801008c:	0800fa15 	.word	0x0800fa15
 8010090:	2000019c 	.word	0x2000019c

08010094 <GUI_ARRAY_GetNumItems>:
 8010094:	b510      	push	{r4, lr}
 8010096:	b082      	sub	sp, #8
 8010098:	b918      	cbnz	r0, 80100a2 <GUI_ARRAY_GetNumItems+0xe>
 801009a:	4604      	mov	r4, r0
 801009c:	4620      	mov	r0, r4
 801009e:	b002      	add	sp, #8
 80100a0:	bd10      	pop	{r4, pc}
 80100a2:	f7f4 fee7 	bl	8004e74 <GUI_ALLOC_LockH>
 80100a6:	ab02      	add	r3, sp, #8
 80100a8:	8804      	ldrh	r4, [r0, #0]
 80100aa:	f843 0d04 	str.w	r0, [r3, #-4]!
 80100ae:	4618      	mov	r0, r3
 80100b0:	f7f4 fef2 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80100b4:	4620      	mov	r0, r4
 80100b6:	b002      	add	sp, #8
 80100b8:	bd10      	pop	{r4, pc}
 80100ba:	bf00      	nop

080100bc <GUI_ARRAY_Delete>:
 80100bc:	b900      	cbnz	r0, 80100c0 <GUI_ARRAY_Delete+0x4>
 80100be:	4770      	bx	lr
 80100c0:	b530      	push	{r4, r5, lr}
 80100c2:	b083      	sub	sp, #12
 80100c4:	4605      	mov	r5, r0
 80100c6:	f7f4 fed5 	bl	8004e74 <GUI_ALLOC_LockH>
 80100ca:	9000      	str	r0, [sp, #0]
 80100cc:	6840      	ldr	r0, [r0, #4]
 80100ce:	b938      	cbnz	r0, 80100e0 <GUI_ARRAY_Delete+0x24>
 80100d0:	4668      	mov	r0, sp
 80100d2:	f7f4 fee1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80100d6:	4628      	mov	r0, r5
 80100d8:	f7f5 f856 	bl	8005188 <GUI_ALLOC_Free>
 80100dc:	b003      	add	sp, #12
 80100de:	bd30      	pop	{r4, r5, pc}
 80100e0:	f7f4 fec8 	bl	8004e74 <GUI_ALLOC_LockH>
 80100e4:	9b00      	ldr	r3, [sp, #0]
 80100e6:	9001      	str	r0, [sp, #4]
 80100e8:	881b      	ldrh	r3, [r3, #0]
 80100ea:	b15b      	cbz	r3, 8010104 <GUI_ARRAY_Delete+0x48>
 80100ec:	2400      	movs	r4, #0
 80100ee:	e000      	b.n	80100f2 <GUI_ARRAY_Delete+0x36>
 80100f0:	9801      	ldr	r0, [sp, #4]
 80100f2:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 80100f6:	f7f5 f861 	bl	80051bc <GUI_ALLOC_FreePtr>
 80100fa:	9b00      	ldr	r3, [sp, #0]
 80100fc:	881b      	ldrh	r3, [r3, #0]
 80100fe:	3401      	adds	r4, #1
 8010100:	42a3      	cmp	r3, r4
 8010102:	dcf5      	bgt.n	80100f0 <GUI_ARRAY_Delete+0x34>
 8010104:	a801      	add	r0, sp, #4
 8010106:	f7f4 fec7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801010a:	9800      	ldr	r0, [sp, #0]
 801010c:	3004      	adds	r0, #4
 801010e:	f7f5 f855 	bl	80051bc <GUI_ALLOC_FreePtr>
 8010112:	9b00      	ldr	r3, [sp, #0]
 8010114:	2200      	movs	r2, #0
 8010116:	801a      	strh	r2, [r3, #0]
 8010118:	e7da      	b.n	80100d0 <GUI_ARRAY_Delete+0x14>
 801011a:	bf00      	nop

0801011c <GUI_ARRAY_GethItem>:
 801011c:	b510      	push	{r4, lr}
 801011e:	b082      	sub	sp, #8
 8010120:	b918      	cbnz	r0, 801012a <GUI_ARRAY_GethItem+0xe>
 8010122:	4604      	mov	r4, r0
 8010124:	4620      	mov	r0, r4
 8010126:	b002      	add	sp, #8
 8010128:	bd10      	pop	{r4, pc}
 801012a:	460c      	mov	r4, r1
 801012c:	f7f4 fea2 	bl	8004e74 <GUI_ALLOC_LockH>
 8010130:	8803      	ldrh	r3, [r0, #0]
 8010132:	9000      	str	r0, [sp, #0]
 8010134:	429c      	cmp	r4, r3
 8010136:	d306      	bcc.n	8010146 <GUI_ARRAY_GethItem+0x2a>
 8010138:	2400      	movs	r4, #0
 801013a:	4668      	mov	r0, sp
 801013c:	f7f4 feac 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010140:	4620      	mov	r0, r4
 8010142:	b002      	add	sp, #8
 8010144:	bd10      	pop	{r4, pc}
 8010146:	6840      	ldr	r0, [r0, #4]
 8010148:	b908      	cbnz	r0, 801014e <GUI_ARRAY_GethItem+0x32>
 801014a:	4604      	mov	r4, r0
 801014c:	e7f5      	b.n	801013a <GUI_ARRAY_GethItem+0x1e>
 801014e:	f7f4 fe91 	bl	8004e74 <GUI_ALLOC_LockH>
 8010152:	ab02      	add	r3, sp, #8
 8010154:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 8010158:	f843 0d04 	str.w	r0, [r3, #-4]!
 801015c:	4618      	mov	r0, r3
 801015e:	f7f4 fe9b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010162:	e7ea      	b.n	801013a <GUI_ARRAY_GethItem+0x1e>

08010164 <GUI_ARRAY_Create>:
 8010164:	2008      	movs	r0, #8
 8010166:	f7f5 b875 	b.w	8005254 <GUI_ALLOC_AllocZero>
 801016a:	bf00      	nop

0801016c <GUI_DRAW__Draw>:
 801016c:	b900      	cbnz	r0, 8010170 <GUI_DRAW__Draw+0x4>
 801016e:	4770      	bx	lr
 8010170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010174:	b082      	sub	sp, #8
 8010176:	461e      	mov	r6, r3
 8010178:	4615      	mov	r5, r2
 801017a:	460c      	mov	r4, r1
 801017c:	4607      	mov	r7, r0
 801017e:	f7f4 fe79 	bl	8004e74 <GUI_ALLOC_LockH>
 8010182:	ab02      	add	r3, sp, #8
 8010184:	6802      	ldr	r2, [r0, #0]
 8010186:	f843 0d04 	str.w	r0, [r3, #-4]!
 801018a:	4618      	mov	r0, r3
 801018c:	f8d2 8000 	ldr.w	r8, [r2]
 8010190:	f7f4 fe82 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010194:	4633      	mov	r3, r6
 8010196:	462a      	mov	r2, r5
 8010198:	4621      	mov	r1, r4
 801019a:	4638      	mov	r0, r7
 801019c:	47c0      	blx	r8
 801019e:	b002      	add	sp, #8
 80101a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080101a4 <SCROLLBAR_Callback>:
 80101a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101a8:	6845      	ldr	r5, [r0, #4]
 80101aa:	b08f      	sub	sp, #60	; 0x3c
 80101ac:	4604      	mov	r4, r0
 80101ae:	4601      	mov	r1, r0
 80101b0:	4628      	mov	r0, r5
 80101b2:	f001 fd23 	bl	8011bfc <WIDGET_HandleActive>
 80101b6:	b328      	cbz	r0, 8010204 <SCROLLBAR_Callback+0x60>
 80101b8:	6823      	ldr	r3, [r4, #0]
 80101ba:	2b23      	cmp	r3, #35	; 0x23
 80101bc:	f000 8081 	beq.w	80102c2 <SCROLLBAR_Callback+0x11e>
 80101c0:	dc12      	bgt.n	80101e8 <SCROLLBAR_Callback+0x44>
 80101c2:	2b0e      	cmp	r3, #14
 80101c4:	d021      	beq.n	801020a <SCROLLBAR_Callback+0x66>
 80101c6:	2b0f      	cmp	r3, #15
 80101c8:	f000 808c 	beq.w	80102e4 <SCROLLBAR_Callback+0x140>
 80101cc:	2b0b      	cmp	r3, #11
 80101ce:	d116      	bne.n	80101fe <SCROLLBAR_Callback+0x5a>
 80101d0:	4628      	mov	r0, r5
 80101d2:	f7fd fa59 	bl	800d688 <WM_GetScrollPartner>
 80101d6:	f7fc f87b 	bl	800c2d0 <WM_InvalidateWindow>
 80101da:	4628      	mov	r0, r5
 80101dc:	f7fd f9fa 	bl	800d5d4 <WM_GetParent>
 80101e0:	2125      	movs	r1, #37	; 0x25
 80101e2:	f7fd faf9 	bl	800d7d8 <WM_SendMessageNoPara>
 80101e6:	e00a      	b.n	80101fe <SCROLLBAR_Callback+0x5a>
 80101e8:	f240 1213 	movw	r2, #275	; 0x113
 80101ec:	4293      	cmp	r3, r2
 80101ee:	d047      	beq.n	8010280 <SCROLLBAR_Callback+0xdc>
 80101f0:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80101f4:	f000 80a2 	beq.w	801033c <SCROLLBAR_Callback+0x198>
 80101f8:	2b24      	cmp	r3, #36	; 0x24
 80101fa:	f000 8081 	beq.w	8010300 <SCROLLBAR_Callback+0x15c>
 80101fe:	4620      	mov	r0, r4
 8010200:	f7fc fd74 	bl	800ccec <WM_DefaultProc>
 8010204:	b00f      	add	sp, #60	; 0x3c
 8010206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801020a:	4628      	mov	r0, r5
 801020c:	f7f4 fe32 	bl	8004e74 <GUI_ALLOC_LockH>
 8010210:	ab0e      	add	r3, sp, #56	; 0x38
 8010212:	6d46      	ldr	r6, [r0, #84]	; 0x54
 8010214:	f843 0d2c 	str.w	r0, [r3, #-44]!
 8010218:	4618      	mov	r0, r3
 801021a:	f7f4 fe3d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801021e:	68e3      	ldr	r3, [r4, #12]
 8010220:	685a      	ldr	r2, [r3, #4]
 8010222:	2a00      	cmp	r2, #0
 8010224:	ddeb      	ble.n	80101fe <SCROLLBAR_Callback+0x5a>
 8010226:	681b      	ldr	r3, [r3, #0]
 8010228:	3b10      	subs	r3, #16
 801022a:	2b12      	cmp	r3, #18
 801022c:	d8e7      	bhi.n	80101fe <SCROLLBAR_Callback+0x5a>
 801022e:	a201      	add	r2, pc, #4	; (adr r2, 8010234 <SCROLLBAR_Callback+0x90>)
 8010230:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010234:	08010491 	.word	0x08010491
 8010238:	08010491 	.word	0x08010491
 801023c:	0801051b 	.word	0x0801051b
 8010240:	0801051b 	.word	0x0801051b
 8010244:	080101ff 	.word	0x080101ff
 8010248:	080101ff 	.word	0x080101ff
 801024c:	080101ff 	.word	0x080101ff
 8010250:	080101ff 	.word	0x080101ff
 8010254:	080101ff 	.word	0x080101ff
 8010258:	080101ff 	.word	0x080101ff
 801025c:	080101ff 	.word	0x080101ff
 8010260:	080101ff 	.word	0x080101ff
 8010264:	080101ff 	.word	0x080101ff
 8010268:	080101ff 	.word	0x080101ff
 801026c:	080101ff 	.word	0x080101ff
 8010270:	080101ff 	.word	0x080101ff
 8010274:	080101ff 	.word	0x080101ff
 8010278:	080104d5 	.word	0x080104d5
 801027c:	08010557 	.word	0x08010557
 8010280:	4628      	mov	r0, r5
 8010282:	f7f4 fdf7 	bl	8004e74 <GUI_ALLOC_LockH>
 8010286:	6dc6      	ldr	r6, [r0, #92]	; 0x5c
 8010288:	9003      	str	r0, [sp, #12]
 801028a:	2e00      	cmp	r6, #0
 801028c:	f000 80cd 	beq.w	801042a <SCROLLBAR_Callback+0x286>
 8010290:	2d00      	cmp	r5, #0
 8010292:	f040 81a3 	bne.w	80105dc <SCROLLBAR_Callback+0x438>
 8010296:	2e00      	cmp	r6, #0
 8010298:	f340 80c7 	ble.w	801042a <SCROLLBAR_Callback+0x286>
 801029c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 801029e:	6e02      	ldr	r2, [r0, #96]	; 0x60
 80102a0:	4293      	cmp	r3, r2
 80102a2:	bfac      	ite	ge
 80102a4:	2301      	movge	r3, #1
 80102a6:	2300      	movlt	r3, #0
 80102a8:	dd00      	ble.n	80102ac <SCROLLBAR_Callback+0x108>
 80102aa:	6502      	str	r2, [r0, #80]	; 0x50
 80102ac:	2b00      	cmp	r3, #0
 80102ae:	f040 8164 	bne.w	801057a <SCROLLBAR_Callback+0x3d6>
 80102b2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80102b4:	2132      	movs	r1, #50	; 0x32
 80102b6:	f7fd fd83 	bl	800ddc0 <WM_RestartTimer>
 80102ba:	a803      	add	r0, sp, #12
 80102bc:	f7f4 fdec 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80102c0:	e79d      	b.n	80101fe <SCROLLBAR_Callback+0x5a>
 80102c2:	4628      	mov	r0, r5
 80102c4:	f7f4 fdd6 	bl	8004e74 <GUI_ALLOC_LockH>
 80102c8:	9005      	str	r0, [sp, #20]
 80102ca:	2800      	cmp	r0, #0
 80102cc:	d097      	beq.n	80101fe <SCROLLBAR_Callback+0x5a>
 80102ce:	68e3      	ldr	r3, [r4, #12]
 80102d0:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 80102d2:	6d41      	ldr	r1, [r0, #84]	; 0x54
 80102d4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80102d6:	605a      	str	r2, [r3, #4]
 80102d8:	601d      	str	r5, [r3, #0]
 80102da:	6099      	str	r1, [r3, #8]
 80102dc:	a805      	add	r0, sp, #20
 80102de:	f7f4 fddb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80102e2:	e78c      	b.n	80101fe <SCROLLBAR_Callback+0x5a>
 80102e4:	4628      	mov	r0, r5
 80102e6:	f7f4 fdc5 	bl	8004e74 <GUI_ALLOC_LockH>
 80102ea:	9005      	str	r0, [sp, #20]
 80102ec:	2800      	cmp	r0, #0
 80102ee:	d089      	beq.n	8010204 <SCROLLBAR_Callback+0x60>
 80102f0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80102f2:	a805      	add	r0, sp, #20
 80102f4:	681c      	ldr	r4, [r3, #0]
 80102f6:	f7f4 fdcf 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80102fa:	4628      	mov	r0, r5
 80102fc:	47a0      	blx	r4
 80102fe:	e781      	b.n	8010204 <SCROLLBAR_Callback+0x60>
 8010300:	4628      	mov	r0, r5
 8010302:	68e6      	ldr	r6, [r4, #12]
 8010304:	f7f4 fdb6 	bl	8004e74 <GUI_ALLOC_LockH>
 8010308:	6832      	ldr	r2, [r6, #0]
 801030a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 801030c:	9005      	str	r0, [sp, #20]
 801030e:	429a      	cmp	r2, r3
 8010310:	f040 80bb 	bne.w	801048a <SCROLLBAR_Callback+0x2e6>
 8010314:	6d47      	ldr	r7, [r0, #84]	; 0x54
 8010316:	68b3      	ldr	r3, [r6, #8]
 8010318:	6871      	ldr	r1, [r6, #4]
 801031a:	429f      	cmp	r7, r3
 801031c:	f000 813d 	beq.w	801059a <SCROLLBAR_Callback+0x3f6>
 8010320:	64c2      	str	r2, [r0, #76]	; 0x4c
 8010322:	6543      	str	r3, [r0, #84]	; 0x54
 8010324:	6501      	str	r1, [r0, #80]	; 0x50
 8010326:	4628      	mov	r0, r5
 8010328:	f7fb ffd2 	bl	800c2d0 <WM_InvalidateWindow>
 801032c:	a805      	add	r0, sp, #20
 801032e:	f7f4 fdb3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010332:	4628      	mov	r0, r5
 8010334:	2105      	movs	r1, #5
 8010336:	f7fd fa11 	bl	800d75c <WM_NotifyParent>
 801033a:	e760      	b.n	80101fe <SCROLLBAR_Callback+0x5a>
 801033c:	68e6      	ldr	r6, [r4, #12]
 801033e:	2e00      	cmp	r6, #0
 8010340:	f43f af5d 	beq.w	80101fe <SCROLLBAR_Callback+0x5a>
 8010344:	7a37      	ldrb	r7, [r6, #8]
 8010346:	4628      	mov	r0, r5
 8010348:	2f00      	cmp	r7, #0
 801034a:	d077      	beq.n	801043c <SCROLLBAR_Callback+0x298>
 801034c:	f7f4 fd92 	bl	8004e74 <GUI_ALLOC_LockH>
 8010350:	9003      	str	r0, [sp, #12]
 8010352:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8010354:	f8d0 a050 	ldr.w	sl, [r0, #80]	; 0x50
 8010358:	a905      	add	r1, sp, #20
 801035a:	4628      	mov	r0, r5
 801035c:	4798      	blx	r3
 801035e:	9a03      	ldr	r2, [sp, #12]
 8010360:	6870      	ldr	r0, [r6, #4]
 8010362:	f8b2 9032 	ldrh.w	r9, [r2, #50]	; 0x32
 8010366:	6831      	ldr	r1, [r6, #0]
 8010368:	6d57      	ldr	r7, [r2, #84]	; 0x54
 801036a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801036c:	f019 0f08 	tst.w	r9, #8
 8010370:	bf1c      	itt	ne
 8010372:	e886 0003 	stmiane.w	r6, {r0, r1}
 8010376:	4606      	movne	r6, r0
 8010378:	6d90      	ldr	r0, [r2, #88]	; 0x58
 801037a:	bf08      	it	eq
 801037c:	460e      	moveq	r6, r1
 801037e:	2803      	cmp	r0, #3
 8010380:	eba3 0307 	sub.w	r3, r3, r7
 8010384:	4690      	mov	r8, r2
 8010386:	f000 81a1 	beq.w	80106cc <SCROLLBAR_Callback+0x528>
 801038a:	f8dd e018 	ldr.w	lr, [sp, #24]
 801038e:	45b6      	cmp	lr, r6
 8010390:	f2c0 811c 	blt.w	80105cc <SCROLLBAR_Callback+0x428>
 8010394:	2802      	cmp	r0, #2
 8010396:	f000 81d5 	beq.w	8010744 <SCROLLBAR_Callback+0x5a0>
 801039a:	6e52      	ldr	r2, [r2, #100]	; 0x64
 801039c:	2a00      	cmp	r2, #0
 801039e:	f040 81f1 	bne.w	8010784 <SCROLLBAR_Callback+0x5e0>
 80103a2:	2202      	movs	r2, #2
 80103a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80103a6:	f8c8 2058 	str.w	r2, [r8, #88]	; 0x58
 80103aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80103ae:	f04f 37ff 	mov.w	r7, #4294967295
 80103b2:	f8d8 b05c 	ldr.w	fp, [r8, #92]	; 0x5c
 80103b6:	460a      	mov	r2, r1
 80103b8:	2900      	cmp	r1, #0
 80103ba:	f040 815b 	bne.w	8010674 <SCROLLBAR_Callback+0x4d0>
 80103be:	f8d8 3058 	ldr.w	r3, [r8, #88]	; 0x58
 80103c2:	2b01      	cmp	r3, #1
 80103c4:	bf04      	itt	eq
 80103c6:	f8d8 204c 	ldreq.w	r2, [r8, #76]	; 0x4c
 80103ca:	f102 32ff 	addeq.w	r2, r2, #4294967295
 80103ce:	f8c8 2060 	str.w	r2, [r8, #96]	; 0x60
 80103d2:	a803      	add	r0, sp, #12
 80103d4:	f7f4 fd60 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80103d8:	2f00      	cmp	r7, #0
 80103da:	f000 80e4 	beq.w	80105a6 <SCROLLBAR_Callback+0x402>
 80103de:	f1bb 0f00 	cmp.w	fp, #0
 80103e2:	f000 819a 	beq.w	801071a <SCROLLBAR_Callback+0x576>
 80103e6:	2101      	movs	r1, #1
 80103e8:	4628      	mov	r0, r5
 80103ea:	f005 fdc1 	bl	8015f70 <WM_SetCapture>
 80103ee:	2d00      	cmp	r5, #0
 80103f0:	f040 8120 	bne.w	8010634 <SCROLLBAR_Callback+0x490>
 80103f4:	f419 7f80 	tst.w	r9, #256	; 0x100
 80103f8:	f47f af01 	bne.w	80101fe <SCROLLBAR_Callback+0x5a>
 80103fc:	4628      	mov	r0, r5
 80103fe:	f7f4 fd39 	bl	8004e74 <GUI_ALLOC_LockH>
 8010402:	ab0e      	add	r3, sp, #56	; 0x38
 8010404:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8010406:	f843 0d28 	str.w	r0, [r3, #-40]!
 801040a:	4618      	mov	r0, r3
 801040c:	f7f4 fd44 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010410:	f44f 7180 	mov.w	r1, #256	; 0x100
 8010414:	4628      	mov	r0, r5
 8010416:	f001 fbc1 	bl	8011b9c <WIDGET_OrState>
 801041a:	07b1      	lsls	r1, r6, #30
 801041c:	f57f aeef 	bpl.w	80101fe <SCROLLBAR_Callback+0x5a>
 8010420:	4628      	mov	r0, r5
 8010422:	2101      	movs	r1, #1
 8010424:	f7fd f99a 	bl	800d75c <WM_NotifyParent>
 8010428:	e6e9      	b.n	80101fe <SCROLLBAR_Callback+0x5a>
 801042a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 801042c:	6e02      	ldr	r2, [r0, #96]	; 0x60
 801042e:	4293      	cmp	r3, r2
 8010430:	bfd4      	ite	le
 8010432:	2301      	movle	r3, #1
 8010434:	2300      	movgt	r3, #0
 8010436:	f6bf af39 	bge.w	80102ac <SCROLLBAR_Callback+0x108>
 801043a:	e736      	b.n	80102aa <SCROLLBAR_Callback+0x106>
 801043c:	f7f4 fd1a 	bl	8004e74 <GUI_ALLOC_LockH>
 8010440:	ab0e      	add	r3, sp, #56	; 0x38
 8010442:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8010444:	f843 0d2c 	str.w	r0, [r3, #-44]!
 8010448:	4618      	mov	r0, r3
 801044a:	f7f4 fd25 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801044e:	05f2      	lsls	r2, r6, #23
 8010450:	f57f aed5 	bpl.w	80101fe <SCROLLBAR_Callback+0x5a>
 8010454:	f44f 7180 	mov.w	r1, #256	; 0x100
 8010458:	4628      	mov	r0, r5
 801045a:	f001 fbb7 	bl	8011bcc <WIDGET_AndState>
 801045e:	4628      	mov	r0, r5
 8010460:	f7f4 fd08 	bl	8004e74 <GUI_ALLOC_LockH>
 8010464:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8010466:	9004      	str	r0, [sp, #16]
 8010468:	2b00      	cmp	r3, #0
 801046a:	f040 816f 	bne.w	801074c <SCROLLBAR_Callback+0x5a8>
 801046e:	2300      	movs	r3, #0
 8010470:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8010472:	6583      	str	r3, [r0, #88]	; 0x58
 8010474:	a804      	add	r0, sp, #16
 8010476:	f7f4 fd0f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801047a:	07b3      	lsls	r3, r6, #30
 801047c:	f57f aebf 	bpl.w	80101fe <SCROLLBAR_Callback+0x5a>
 8010480:	4628      	mov	r0, r5
 8010482:	2102      	movs	r1, #2
 8010484:	f7fd f96a 	bl	800d75c <WM_NotifyParent>
 8010488:	e6b9      	b.n	80101fe <SCROLLBAR_Callback+0x5a>
 801048a:	68b3      	ldr	r3, [r6, #8]
 801048c:	6871      	ldr	r1, [r6, #4]
 801048e:	e747      	b.n	8010320 <SCROLLBAR_Callback+0x17c>
 8010490:	2d00      	cmp	r5, #0
 8010492:	f43f aeb4 	beq.w	80101fe <SCROLLBAR_Callback+0x5a>
 8010496:	4628      	mov	r0, r5
 8010498:	f7f4 fcec 	bl	8004e74 <GUI_ALLOC_LockH>
 801049c:	ab0e      	add	r3, sp, #56	; 0x38
 801049e:	6d06      	ldr	r6, [r0, #80]	; 0x50
 80104a0:	f843 0d28 	str.w	r0, [r3, #-40]!
 80104a4:	4618      	mov	r0, r3
 80104a6:	f7f4 fcf7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80104aa:	4628      	mov	r0, r5
 80104ac:	f7f4 fce2 	bl	8004e74 <GUI_ALLOC_LockH>
 80104b0:	1e73      	subs	r3, r6, #1
 80104b2:	2b00      	cmp	r3, #0
 80104b4:	9005      	str	r0, [sp, #20]
 80104b6:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80104b8:	6d41      	ldr	r1, [r0, #84]	; 0x54
 80104ba:	f2c0 8179 	blt.w	80107b0 <SCROLLBAR_Callback+0x60c>
 80104be:	1a52      	subs	r2, r2, r1
 80104c0:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80104c4:	4293      	cmp	r3, r2
 80104c6:	dd44      	ble.n	8010552 <SCROLLBAR_Callback+0x3ae>
 80104c8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80104ca:	4293      	cmp	r3, r2
 80104cc:	f43f af06 	beq.w	80102dc <SCROLLBAR_Callback+0x138>
 80104d0:	6502      	str	r2, [r0, #80]	; 0x50
 80104d2:	e728      	b.n	8010326 <SCROLLBAR_Callback+0x182>
 80104d4:	2d00      	cmp	r5, #0
 80104d6:	f43f ae92 	beq.w	80101fe <SCROLLBAR_Callback+0x5a>
 80104da:	4628      	mov	r0, r5
 80104dc:	f7f4 fcca 	bl	8004e74 <GUI_ALLOC_LockH>
 80104e0:	ab0e      	add	r3, sp, #56	; 0x38
 80104e2:	6d07      	ldr	r7, [r0, #80]	; 0x50
 80104e4:	f843 0d28 	str.w	r0, [r3, #-40]!
 80104e8:	4618      	mov	r0, r3
 80104ea:	f7f4 fcd5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80104ee:	4628      	mov	r0, r5
 80104f0:	f7f4 fcc0 	bl	8004e74 <GUI_ALLOC_LockH>
 80104f4:	443e      	add	r6, r7
 80104f6:	2e00      	cmp	r6, #0
 80104f8:	9005      	str	r0, [sp, #20]
 80104fa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80104fc:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80104fe:	f2c0 815a 	blt.w	80107b6 <SCROLLBAR_Callback+0x612>
 8010502:	1a9b      	subs	r3, r3, r2
 8010504:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010508:	429e      	cmp	r6, r3
 801050a:	f340 8155 	ble.w	80107b8 <SCROLLBAR_Callback+0x614>
 801050e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8010510:	429a      	cmp	r2, r3
 8010512:	f43f aee3 	beq.w	80102dc <SCROLLBAR_Callback+0x138>
 8010516:	6503      	str	r3, [r0, #80]	; 0x50
 8010518:	e705      	b.n	8010326 <SCROLLBAR_Callback+0x182>
 801051a:	2d00      	cmp	r5, #0
 801051c:	f43f ae6f 	beq.w	80101fe <SCROLLBAR_Callback+0x5a>
 8010520:	4628      	mov	r0, r5
 8010522:	f7f4 fca7 	bl	8004e74 <GUI_ALLOC_LockH>
 8010526:	ab0e      	add	r3, sp, #56	; 0x38
 8010528:	6d06      	ldr	r6, [r0, #80]	; 0x50
 801052a:	f843 0d28 	str.w	r0, [r3, #-40]!
 801052e:	4618      	mov	r0, r3
 8010530:	f7f4 fcb2 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010534:	4628      	mov	r0, r5
 8010536:	f7f4 fc9d 	bl	8004e74 <GUI_ALLOC_LockH>
 801053a:	1c73      	adds	r3, r6, #1
 801053c:	2b00      	cmp	r3, #0
 801053e:	9005      	str	r0, [sp, #20]
 8010540:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8010542:	6d41      	ldr	r1, [r0, #84]	; 0x54
 8010544:	f2c0 8134 	blt.w	80107b0 <SCROLLBAR_Callback+0x60c>
 8010548:	1a52      	subs	r2, r2, r1
 801054a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801054e:	429a      	cmp	r2, r3
 8010550:	dbba      	blt.n	80104c8 <SCROLLBAR_Callback+0x324>
 8010552:	461a      	mov	r2, r3
 8010554:	e7b8      	b.n	80104c8 <SCROLLBAR_Callback+0x324>
 8010556:	2d00      	cmp	r5, #0
 8010558:	f43f ae51 	beq.w	80101fe <SCROLLBAR_Callback+0x5a>
 801055c:	4628      	mov	r0, r5
 801055e:	f7f4 fc89 	bl	8004e74 <GUI_ALLOC_LockH>
 8010562:	ab0e      	add	r3, sp, #56	; 0x38
 8010564:	6d07      	ldr	r7, [r0, #80]	; 0x50
 8010566:	f843 0d28 	str.w	r0, [r3, #-40]!
 801056a:	4618      	mov	r0, r3
 801056c:	f7f4 fc94 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010570:	4628      	mov	r0, r5
 8010572:	f7f4 fc7f 	bl	8004e74 <GUI_ALLOC_LockH>
 8010576:	1bbe      	subs	r6, r7, r6
 8010578:	e7bd      	b.n	80104f6 <SCROLLBAR_Callback+0x352>
 801057a:	4628      	mov	r0, r5
 801057c:	f7f4 fc7a 	bl	8004e74 <GUI_ALLOC_LockH>
 8010580:	9005      	str	r0, [sp, #20]
 8010582:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010584:	f7fd fbce 	bl	800dd24 <WM_DeleteTimer>
 8010588:	a80e      	add	r0, sp, #56	; 0x38
 801058a:	2200      	movs	r2, #0
 801058c:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 8010590:	665a      	str	r2, [r3, #100]	; 0x64
 8010592:	65da      	str	r2, [r3, #92]	; 0x5c
 8010594:	f7f4 fc80 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010598:	e68f      	b.n	80102ba <SCROLLBAR_Callback+0x116>
 801059a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 801059c:	428b      	cmp	r3, r1
 801059e:	f43f ae9d 	beq.w	80102dc <SCROLLBAR_Callback+0x138>
 80105a2:	463b      	mov	r3, r7
 80105a4:	e6bc      	b.n	8010320 <SCROLLBAR_Callback+0x17c>
 80105a6:	f1bb 0f00 	cmp.w	fp, #0
 80105aa:	f43f af1c 	beq.w	80103e6 <SCROLLBAR_Callback+0x242>
 80105ae:	4628      	mov	r0, r5
 80105b0:	f7f4 fc60 	bl	8004e74 <GUI_ALLOC_LockH>
 80105b4:	9004      	str	r0, [sp, #16]
 80105b6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80105b8:	f7fd fbb4 	bl	800dd24 <WM_DeleteTimer>
 80105bc:	a80e      	add	r0, sp, #56	; 0x38
 80105be:	f850 3d28 	ldr.w	r3, [r0, #-40]!
 80105c2:	665f      	str	r7, [r3, #100]	; 0x64
 80105c4:	65df      	str	r7, [r3, #92]	; 0x5c
 80105c6:	f7f4 fc67 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80105ca:	e70c      	b.n	80103e6 <SCROLLBAR_Callback+0x242>
 80105cc:	9907      	ldr	r1, [sp, #28]
 80105ce:	42b1      	cmp	r1, r6
 80105d0:	dd5f      	ble.n	8010692 <SCROLLBAR_Callback+0x4ee>
 80105d2:	ebc7 0a0a 	rsb	sl, r7, sl
 80105d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80105d8:	427f      	negs	r7, r7
 80105da:	e6ea      	b.n	80103b2 <SCROLLBAR_Callback+0x20e>
 80105dc:	4628      	mov	r0, r5
 80105de:	f7f4 fc49 	bl	8004e74 <GUI_ALLOC_LockH>
 80105e2:	ab0e      	add	r3, sp, #56	; 0x38
 80105e4:	6d07      	ldr	r7, [r0, #80]	; 0x50
 80105e6:	f843 0d28 	str.w	r0, [r3, #-40]!
 80105ea:	4618      	mov	r0, r3
 80105ec:	f7f4 fc54 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80105f0:	4628      	mov	r0, r5
 80105f2:	f7f4 fc3f 	bl	8004e74 <GUI_ALLOC_LockH>
 80105f6:	443e      	add	r6, r7
 80105f8:	2e00      	cmp	r6, #0
 80105fa:	9005      	str	r0, [sp, #20]
 80105fc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80105fe:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8010600:	f2c0 80be 	blt.w	8010780 <SCROLLBAR_Callback+0x5dc>
 8010604:	1a9b      	subs	r3, r3, r2
 8010606:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801060a:	42b3      	cmp	r3, r6
 801060c:	bfa8      	it	ge
 801060e:	4633      	movge	r3, r6
 8010610:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8010612:	429a      	cmp	r2, r3
 8010614:	f000 80f1 	beq.w	80107fa <SCROLLBAR_Callback+0x656>
 8010618:	6503      	str	r3, [r0, #80]	; 0x50
 801061a:	4628      	mov	r0, r5
 801061c:	f7fb fe58 	bl	800c2d0 <WM_InvalidateWindow>
 8010620:	a805      	add	r0, sp, #20
 8010622:	f7f4 fc39 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010626:	2105      	movs	r1, #5
 8010628:	4628      	mov	r0, r5
 801062a:	f7fd f897 	bl	800d75c <WM_NotifyParent>
 801062e:	9803      	ldr	r0, [sp, #12]
 8010630:	6dc6      	ldr	r6, [r0, #92]	; 0x5c
 8010632:	e630      	b.n	8010296 <SCROLLBAR_Callback+0xf2>
 8010634:	4628      	mov	r0, r5
 8010636:	f7f4 fc1d 	bl	8004e74 <GUI_ALLOC_LockH>
 801063a:	f1ba 0f00 	cmp.w	sl, #0
 801063e:	9004      	str	r0, [sp, #16]
 8010640:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8010642:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8010644:	f2c0 80b2 	blt.w	80107ac <SCROLLBAR_Callback+0x608>
 8010648:	1a9b      	subs	r3, r3, r2
 801064a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801064e:	4553      	cmp	r3, sl
 8010650:	bfa8      	it	ge
 8010652:	4653      	movge	r3, sl
 8010654:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8010656:	429a      	cmp	r2, r3
 8010658:	f000 8088 	beq.w	801076c <SCROLLBAR_Callback+0x5c8>
 801065c:	6503      	str	r3, [r0, #80]	; 0x50
 801065e:	4628      	mov	r0, r5
 8010660:	f7fb fe36 	bl	800c2d0 <WM_InvalidateWindow>
 8010664:	a804      	add	r0, sp, #16
 8010666:	f7f4 fc17 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801066a:	2105      	movs	r1, #5
 801066c:	4628      	mov	r0, r5
 801066e:	f7fd f875 	bl	800d75c <WM_NotifyParent>
 8010672:	e6bf      	b.n	80103f4 <SCROLLBAR_Callback+0x250>
 8010674:	980d      	ldr	r0, [sp, #52]	; 0x34
 8010676:	9a06      	ldr	r2, [sp, #24]
 8010678:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 801067c:	eba6 0060 	sub.w	r0, r6, r0, asr #1
 8010680:	1a80      	subs	r0, r0, r2
 8010682:	3801      	subs	r0, #1
 8010684:	fb03 f000 	mul.w	r0, r3, r0
 8010688:	f7f6 f9ac 	bl	80069e4 <GUI__DivideRound32>
 801068c:	f8c8 0060 	str.w	r0, [r8, #96]	; 0x60
 8010690:	e69f      	b.n	80103d2 <SCROLLBAR_Callback+0x22e>
 8010692:	9908      	ldr	r1, [sp, #32]
 8010694:	42b1      	cmp	r1, r6
 8010696:	db6d      	blt.n	8010774 <SCROLLBAR_Callback+0x5d0>
 8010698:	990c      	ldr	r1, [sp, #48]	; 0x30
 801069a:	2900      	cmp	r1, #0
 801069c:	dd11      	ble.n	80106c2 <SCROLLBAR_Callback+0x51e>
 801069e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80106a0:	9301      	str	r3, [sp, #4]
 80106a2:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80106a6:	eba6 0662 	sub.w	r6, r6, r2, asr #1
 80106aa:	ebce 0606 	rsb	r6, lr, r6
 80106ae:	3e01      	subs	r6, #1
 80106b0:	fb06 f003 	mul.w	r0, r6, r3
 80106b4:	f7f6 f996 	bl	80069e4 <GUI__DivideRound32>
 80106b8:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80106bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80106be:	9b01      	ldr	r3, [sp, #4]
 80106c0:	4682      	mov	sl, r0
 80106c2:	2203      	movs	r2, #3
 80106c4:	f8c8 2058 	str.w	r2, [r8, #88]	; 0x58
 80106c8:	2700      	movs	r7, #0
 80106ca:	e672      	b.n	80103b2 <SCROLLBAR_Callback+0x20e>
 80106cc:	4628      	mov	r0, r5
 80106ce:	9301      	str	r3, [sp, #4]
 80106d0:	f7f4 fbd0 	bl	8004e74 <GUI_ALLOC_LockH>
 80106d4:	9004      	str	r0, [sp, #16]
 80106d6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80106d8:	f7fd fb24 	bl	800dd24 <WM_DeleteTimer>
 80106dc:	a80e      	add	r0, sp, #56	; 0x38
 80106de:	2100      	movs	r1, #0
 80106e0:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 80106e4:	6651      	str	r1, [r2, #100]	; 0x64
 80106e6:	65d1      	str	r1, [r2, #92]	; 0x5c
 80106e8:	f7f4 fbd6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80106ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80106ee:	9806      	ldr	r0, [sp, #24]
 80106f0:	9b01      	ldr	r3, [sp, #4]
 80106f2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80106f4:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80106f8:	eba6 0662 	sub.w	r6, r6, r2, asr #1
 80106fc:	1a30      	subs	r0, r6, r0
 80106fe:	3801      	subs	r0, #1
 8010700:	fb03 f000 	mul.w	r0, r3, r0
 8010704:	f7f6 f96e 	bl	80069e4 <GUI__DivideRound32>
 8010708:	4682      	mov	sl, r0
 801070a:	a80e      	add	r0, sp, #56	; 0x38
 801070c:	f850 3d2c 	ldr.w	r3, [r0, #-44]!
 8010710:	f8c3 a060 	str.w	sl, [r3, #96]	; 0x60
 8010714:	f7f4 fbc0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010718:	e665      	b.n	80103e6 <SCROLLBAR_Callback+0x242>
 801071a:	465b      	mov	r3, fp
 801071c:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8010720:	f240 41d2 	movw	r1, #1234	; 0x4d2
 8010724:	4628      	mov	r0, r5
 8010726:	f7fd fb13 	bl	800dd50 <WM_CreateTimer>
 801072a:	4606      	mov	r6, r0
 801072c:	4628      	mov	r0, r5
 801072e:	f7f4 fba1 	bl	8004e74 <GUI_ALLOC_LockH>
 8010732:	4603      	mov	r3, r0
 8010734:	a80e      	add	r0, sp, #56	; 0x38
 8010736:	f840 3d28 	str.w	r3, [r0, #-40]!
 801073a:	665e      	str	r6, [r3, #100]	; 0x64
 801073c:	65df      	str	r7, [r3, #92]	; 0x5c
 801073e:	f7f4 fbab 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010742:	e650      	b.n	80103e6 <SCROLLBAR_Callback+0x242>
 8010744:	f04f 37ff 	mov.w	r7, #4294967295
 8010748:	990c      	ldr	r1, [sp, #48]	; 0x30
 801074a:	e632      	b.n	80103b2 <SCROLLBAR_Callback+0x20e>
 801074c:	4628      	mov	r0, r5
 801074e:	f7f4 fb91 	bl	8004e74 <GUI_ALLOC_LockH>
 8010752:	9005      	str	r0, [sp, #20]
 8010754:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010756:	f7fd fae5 	bl	800dd24 <WM_DeleteTimer>
 801075a:	a80e      	add	r0, sp, #56	; 0x38
 801075c:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 8010760:	665f      	str	r7, [r3, #100]	; 0x64
 8010762:	65df      	str	r7, [r3, #92]	; 0x5c
 8010764:	f7f4 fb98 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010768:	9804      	ldr	r0, [sp, #16]
 801076a:	e680      	b.n	801046e <SCROLLBAR_Callback+0x2ca>
 801076c:	a804      	add	r0, sp, #16
 801076e:	f7f4 fb93 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010772:	e63f      	b.n	80103f4 <SCROLLBAR_Callback+0x250>
 8010774:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010776:	42b1      	cmp	r1, r6
 8010778:	dd20      	ble.n	80107bc <SCROLLBAR_Callback+0x618>
 801077a:	44ba      	add	sl, r7
 801077c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801077e:	e618      	b.n	80103b2 <SCROLLBAR_Callback+0x20e>
 8010780:	2300      	movs	r3, #0
 8010782:	e745      	b.n	8010610 <SCROLLBAR_Callback+0x46c>
 8010784:	4628      	mov	r0, r5
 8010786:	9301      	str	r3, [sp, #4]
 8010788:	f7f4 fb74 	bl	8004e74 <GUI_ALLOC_LockH>
 801078c:	9004      	str	r0, [sp, #16]
 801078e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010790:	f7fd fac8 	bl	800dd24 <WM_DeleteTimer>
 8010794:	a80e      	add	r0, sp, #56	; 0x38
 8010796:	2100      	movs	r1, #0
 8010798:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 801079c:	6651      	str	r1, [r2, #100]	; 0x64
 801079e:	65d1      	str	r1, [r2, #92]	; 0x5c
 80107a0:	f7f4 fb7a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80107a4:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80107a8:	9b01      	ldr	r3, [sp, #4]
 80107aa:	e5fa      	b.n	80103a2 <SCROLLBAR_Callback+0x1fe>
 80107ac:	2300      	movs	r3, #0
 80107ae:	e751      	b.n	8010654 <SCROLLBAR_Callback+0x4b0>
 80107b0:	2300      	movs	r3, #0
 80107b2:	461a      	mov	r2, r3
 80107b4:	e688      	b.n	80104c8 <SCROLLBAR_Callback+0x324>
 80107b6:	2600      	movs	r6, #0
 80107b8:	4633      	mov	r3, r6
 80107ba:	e6a8      	b.n	801050e <SCROLLBAR_Callback+0x36a>
 80107bc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80107be:	42b1      	cmp	r1, r6
 80107c0:	db1f      	blt.n	8010802 <SCROLLBAR_Callback+0x65e>
 80107c2:	2801      	cmp	r0, #1
 80107c4:	d020      	beq.n	8010808 <SCROLLBAR_Callback+0x664>
 80107c6:	6e51      	ldr	r1, [r2, #100]	; 0x64
 80107c8:	b189      	cbz	r1, 80107ee <SCROLLBAR_Callback+0x64a>
 80107ca:	4628      	mov	r0, r5
 80107cc:	9301      	str	r3, [sp, #4]
 80107ce:	f7f4 fb51 	bl	8004e74 <GUI_ALLOC_LockH>
 80107d2:	9004      	str	r0, [sp, #16]
 80107d4:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80107d6:	f7fd faa5 	bl	800dd24 <WM_DeleteTimer>
 80107da:	a80e      	add	r0, sp, #56	; 0x38
 80107dc:	2100      	movs	r1, #0
 80107de:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 80107e2:	6651      	str	r1, [r2, #100]	; 0x64
 80107e4:	65d1      	str	r1, [r2, #92]	; 0x5c
 80107e6:	f7f4 fb57 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80107ea:	9a03      	ldr	r2, [sp, #12]
 80107ec:	9b01      	ldr	r3, [sp, #4]
 80107ee:	990c      	ldr	r1, [sp, #48]	; 0x30
 80107f0:	2701      	movs	r7, #1
 80107f2:	4690      	mov	r8, r2
 80107f4:	44ba      	add	sl, r7
 80107f6:	6597      	str	r7, [r2, #88]	; 0x58
 80107f8:	e5db      	b.n	80103b2 <SCROLLBAR_Callback+0x20e>
 80107fa:	a805      	add	r0, sp, #20
 80107fc:	f7f4 fb4c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010800:	e715      	b.n	801062e <SCROLLBAR_Callback+0x48a>
 8010802:	2700      	movs	r7, #0
 8010804:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010806:	e5d4      	b.n	80103b2 <SCROLLBAR_Callback+0x20e>
 8010808:	990c      	ldr	r1, [sp, #48]	; 0x30
 801080a:	4607      	mov	r7, r0
 801080c:	e5d1      	b.n	80103b2 <SCROLLBAR_Callback+0x20e>
 801080e:	bf00      	nop

08010810 <SCROLLBAR__Rect2VRect>:
 8010810:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8010812:	071b      	lsls	r3, r3, #28
 8010814:	d516      	bpl.n	8010844 <SCROLLBAR__Rect2VRect+0x34>
 8010816:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801081a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801081e:	f9b1 0004 	ldrsh.w	r0, [r1, #4]
 8010822:	b470      	push	{r4, r5, r6}
 8010824:	1ad3      	subs	r3, r2, r3
 8010826:	f9b1 4000 	ldrsh.w	r4, [r1]
 801082a:	88ce      	ldrh	r6, [r1, #6]
 801082c:	884d      	ldrh	r5, [r1, #2]
 801082e:	808e      	strh	r6, [r1, #4]
 8010830:	3301      	adds	r3, #1
 8010832:	b29b      	uxth	r3, r3
 8010834:	43e4      	mvns	r4, r4
 8010836:	43c2      	mvns	r2, r0
 8010838:	800d      	strh	r5, [r1, #0]
 801083a:	1918      	adds	r0, r3, r4
 801083c:	bc70      	pop	{r4, r5, r6}
 801083e:	4413      	add	r3, r2
 8010840:	80c8      	strh	r0, [r1, #6]
 8010842:	804b      	strh	r3, [r1, #2]
 8010844:	4770      	bx	lr
 8010846:	bf00      	nop

08010848 <SCROLLBAR_CreateAttached>:
 8010848:	b5f0      	push	{r4, r5, r6, r7, lr}
 801084a:	f011 0708 	ands.w	r7, r1, #8
 801084e:	b089      	sub	sp, #36	; 0x24
 8010850:	460d      	mov	r5, r1
 8010852:	4604      	mov	r4, r0
 8010854:	a906      	add	r1, sp, #24
 8010856:	4e3b      	ldr	r6, [pc, #236]	; (8010944 <SCROLLBAR_CreateAttached+0xfc>)
 8010858:	d122      	bne.n	80108a0 <SCROLLBAR_CreateAttached+0x58>
 801085a:	f7fc fe21 	bl	800d4a0 <WM_GetInsideRectEx>
 801085e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010862:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8010866:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 801086a:	f9b6 3000 	ldrsh.w	r3, [r6]
 801086e:	9400      	str	r4, [sp, #0]
 8010870:	243c      	movs	r4, #60	; 0x3c
 8010872:	f8df e0d4 	ldr.w	lr, [pc, #212]	; 8010948 <SCROLLBAR_CreateAttached+0x100>
 8010876:	9403      	str	r4, [sp, #12]
 8010878:	1a12      	subs	r2, r2, r0
 801087a:	f240 348a 	movw	r4, #906	; 0x38a
 801087e:	3101      	adds	r1, #1
 8010880:	9401      	str	r4, [sp, #4]
 8010882:	1ac9      	subs	r1, r1, r3
 8010884:	3201      	adds	r2, #1
 8010886:	f8cd e008 	str.w	lr, [sp, #8]
 801088a:	f7fb fd77 	bl	800c37c <WM_CreateWindowAsChild>
 801088e:	4604      	mov	r4, r0
 8010890:	bb40      	cbnz	r0, 80108e4 <SCROLLBAR_CreateAttached+0x9c>
 8010892:	4620      	mov	r0, r4
 8010894:	2106      	movs	r1, #6
 8010896:	f7fc ff61 	bl	800d75c <WM_NotifyParent>
 801089a:	4620      	mov	r0, r4
 801089c:	b009      	add	sp, #36	; 0x24
 801089e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80108a0:	f7fc fdfe 	bl	800d4a0 <WM_GetInsideRectEx>
 80108a4:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80108a8:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 80108ac:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80108b0:	f9b6 2000 	ldrsh.w	r2, [r6]
 80108b4:	9400      	str	r4, [sp, #0]
 80108b6:	243c      	movs	r4, #60	; 0x3c
 80108b8:	1a5b      	subs	r3, r3, r1
 80108ba:	9403      	str	r4, [sp, #12]
 80108bc:	4f22      	ldr	r7, [pc, #136]	; (8010948 <SCROLLBAR_CreateAttached+0x100>)
 80108be:	9702      	str	r7, [sp, #8]
 80108c0:	f240 548a 	movw	r4, #1418	; 0x58a
 80108c4:	3001      	adds	r0, #1
 80108c6:	9401      	str	r4, [sp, #4]
 80108c8:	1a80      	subs	r0, r0, r2
 80108ca:	3301      	adds	r3, #1
 80108cc:	f7fb fd56 	bl	800c37c <WM_CreateWindowAsChild>
 80108d0:	4604      	mov	r4, r0
 80108d2:	2800      	cmp	r0, #0
 80108d4:	d0dd      	beq.n	8010892 <SCROLLBAR_CreateAttached+0x4a>
 80108d6:	f7f4 facd 	bl	8004e74 <GUI_ALLOC_LockH>
 80108da:	2708      	movs	r7, #8
 80108dc:	9005      	str	r0, [sp, #20]
 80108de:	2218      	movs	r2, #24
 80108e0:	21fe      	movs	r1, #254	; 0xfe
 80108e2:	e004      	b.n	80108ee <SCROLLBAR_CreateAttached+0xa6>
 80108e4:	f7f4 fac6 	bl	8004e74 <GUI_ALLOC_LockH>
 80108e8:	2210      	movs	r2, #16
 80108ea:	9005      	str	r0, [sp, #20]
 80108ec:	21ff      	movs	r1, #255	; 0xff
 80108ee:	f015 0f10 	tst.w	r5, #16
 80108f2:	bf08      	it	eq
 80108f4:	463a      	moveq	r2, r7
 80108f6:	f001 f949 	bl	8011b8c <WIDGET__Init>
 80108fa:	4b14      	ldr	r3, [pc, #80]	; (801094c <SCROLLBAR_CreateAttached+0x104>)
 80108fc:	6977      	ldr	r7, [r6, #20]
 80108fe:	f10d 0c20 	add.w	ip, sp, #32
 8010902:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8010904:	f85c 5d0c 	ldr.w	r5, [ip, #-12]!
 8010908:	f105 0e34 	add.w	lr, r5, #52	; 0x34
 801090c:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 8010910:	2164      	movs	r1, #100	; 0x64
 8010912:	220a      	movs	r2, #10
 8010914:	2300      	movs	r3, #0
 8010916:	64e9      	str	r1, [r5, #76]	; 0x4c
 8010918:	4660      	mov	r0, ip
 801091a:	656a      	str	r2, [r5, #84]	; 0x54
 801091c:	652b      	str	r3, [r5, #80]	; 0x50
 801091e:	646f      	str	r7, [r5, #68]	; 0x44
 8010920:	f7f4 faba 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010924:	6973      	ldr	r3, [r6, #20]
 8010926:	4620      	mov	r0, r4
 8010928:	685b      	ldr	r3, [r3, #4]
 801092a:	4798      	blx	r3
 801092c:	4620      	mov	r0, r4
 801092e:	f7fc feab 	bl	800d688 <WM_GetScrollPartner>
 8010932:	f7fb fccd 	bl	800c2d0 <WM_InvalidateWindow>
 8010936:	4620      	mov	r0, r4
 8010938:	f7fc fe4c 	bl	800d5d4 <WM_GetParent>
 801093c:	2125      	movs	r1, #37	; 0x25
 801093e:	f7fc ff4b 	bl	800d7d8 <WM_SendMessageNoPara>
 8010942:	e7a6      	b.n	8010892 <SCROLLBAR_CreateAttached+0x4a>
 8010944:	200001cc 	.word	0x200001cc
 8010948:	080101a5 	.word	0x080101a5
 801094c:	200001d0 	.word	0x200001d0

08010950 <SCROLLBAR_GetValue>:
 8010950:	b510      	push	{r4, lr}
 8010952:	b082      	sub	sp, #8
 8010954:	b918      	cbnz	r0, 801095e <SCROLLBAR_GetValue+0xe>
 8010956:	4604      	mov	r4, r0
 8010958:	4620      	mov	r0, r4
 801095a:	b002      	add	sp, #8
 801095c:	bd10      	pop	{r4, pc}
 801095e:	f7f4 fa89 	bl	8004e74 <GUI_ALLOC_LockH>
 8010962:	ab02      	add	r3, sp, #8
 8010964:	6d04      	ldr	r4, [r0, #80]	; 0x50
 8010966:	f843 0d04 	str.w	r0, [r3, #-4]!
 801096a:	4618      	mov	r0, r3
 801096c:	f7f4 fa94 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010970:	4620      	mov	r0, r4
 8010972:	b002      	add	sp, #8
 8010974:	bd10      	pop	{r4, pc}
 8010976:	bf00      	nop

08010978 <_Create>:
 8010978:	b530      	push	{r4, r5, lr}
 801097a:	b08d      	sub	sp, #52	; 0x34
 801097c:	4605      	mov	r5, r0
 801097e:	f7f4 fa79 	bl	8004e74 <GUI_ALLOC_LockH>
 8010982:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8010984:	4909      	ldr	r1, [pc, #36]	; (80109ac <_Create+0x34>)
 8010986:	6481      	str	r1, [r0, #72]	; 0x48
 8010988:	4603      	mov	r3, r0
 801098a:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 801098e:	4668      	mov	r0, sp
 8010990:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8010992:	9300      	str	r3, [sp, #0]
 8010994:	9201      	str	r2, [sp, #4]
 8010996:	f7f4 fa7f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801099a:	2200      	movs	r2, #0
 801099c:	ab01      	add	r3, sp, #4
 801099e:	9503      	str	r5, [sp, #12]
 80109a0:	9204      	str	r2, [sp, #16]
 80109a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80109a4:	a803      	add	r0, sp, #12
 80109a6:	47a0      	blx	r4
 80109a8:	b00d      	add	sp, #52	; 0x34
 80109aa:	bd30      	pop	{r4, r5, pc}
 80109ac:	080109b1 	.word	0x080109b1

080109b0 <_CalcPositions>:
 80109b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80109b4:	b090      	sub	sp, #64	; 0x40
 80109b6:	460c      	mov	r4, r1
 80109b8:	4606      	mov	r6, r0
 80109ba:	f7f4 fa5b 	bl	8004e74 <GUI_ALLOC_LockH>
 80109be:	4605      	mov	r5, r0
 80109c0:	c803      	ldmia	r0, {r0, r1}
 80109c2:	af03      	add	r7, sp, #12
 80109c4:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 80109c6:	9500      	str	r5, [sp, #0]
 80109c8:	e887 0003 	stmia.w	r7, {r0, r1}
 80109cc:	f003 0308 	and.w	r3, r3, #8
 80109d0:	b29b      	uxth	r3, r3
 80109d2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80109d6:	f9bd 900e 	ldrsh.w	r9, [sp, #14]
 80109da:	2b00      	cmp	r3, #0
 80109dc:	d06f      	beq.n	8010abe <_CalcPositions+0x10e>
 80109de:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80109e2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80109e6:	4696      	mov	lr, r2
 80109e8:	3300      	adds	r3, #0
 80109ea:	bf18      	it	ne
 80109ec:	2301      	movne	r3, #1
 80109ee:	2019      	movs	r0, #25
 80109f0:	a901      	add	r1, sp, #4
 80109f2:	9301      	str	r3, [sp, #4]
 80109f4:	61a2      	str	r2, [r4, #24]
 80109f6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80109f8:	9607      	str	r6, [sp, #28]
 80109fa:	9008      	str	r0, [sp, #32]
 80109fc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8010a00:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8010a04:	f8cd c034 	str.w	ip, [sp, #52]	; 0x34
 8010a08:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
 8010a0c:	910f      	str	r1, [sp, #60]	; 0x3c
 8010a0e:	a807      	add	r0, sp, #28
 8010a10:	4798      	blx	r3
 8010a12:	9a00      	ldr	r2, [sp, #0]
 8010a14:	f9b2 3030 	ldrsh.w	r3, [r2, #48]	; 0x30
 8010a18:	2bff      	cmp	r3, #255	; 0xff
 8010a1a:	4606      	mov	r6, r0
 8010a1c:	d055      	beq.n	8010aca <_CalcPositions+0x11a>
 8010a1e:	2bfe      	cmp	r3, #254	; 0xfe
 8010a20:	d05c      	beq.n	8010adc <_CalcPositions+0x12c>
 8010a22:	f1c9 0200 	rsb	r2, r9, #0
 8010a26:	f1c8 0100 	rsb	r1, r8, #0
 8010a2a:	4638      	mov	r0, r7
 8010a2c:	f7f4 fce0 	bl	80053f0 <GUI_MoveRect>
 8010a30:	4639      	mov	r1, r7
 8010a32:	9800      	ldr	r0, [sp, #0]
 8010a34:	f7ff feec 	bl	8010810 <SCROLLBAR__Rect2VRect>
 8010a38:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8010a3c:	f9bd 8010 	ldrsh.w	r8, [sp, #16]
 8010a40:	9b00      	ldr	r3, [sp, #0]
 8010a42:	ebc2 0808 	rsb	r8, r2, r8
 8010a46:	f8d3 a04c 	ldr.w	sl, [r3, #76]	; 0x4c
 8010a4a:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8010a4c:	f108 0501 	add.w	r5, r8, #1
 8010a50:	eba5 0546 	sub.w	r5, r5, r6, lsl #1
 8010a54:	4651      	mov	r1, sl
 8010a56:	fb00 f005 	mul.w	r0, r0, r5
 8010a5a:	f7f5 ffc3 	bl	80069e4 <GUI__DivideRound32>
 8010a5e:	4b32      	ldr	r3, [pc, #200]	; (8010b28 <_CalcPositions+0x178>)
 8010a60:	f8c4 8014 	str.w	r8, [r4, #20]
 8010a64:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010a68:	1c5a      	adds	r2, r3, #1
 8010a6a:	4290      	cmp	r0, r2
 8010a6c:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 8010a70:	bfd8      	it	le
 8010a72:	1c98      	addle	r0, r3, #2
 8010a74:	42a8      	cmp	r0, r5
 8010a76:	f859 3d40 	ldr.w	r3, [r9, #-64]!
 8010a7a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8010a7e:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8010a80:	bfa8      	it	ge
 8010a82:	4628      	movge	r0, r5
 8010a84:	4607      	mov	r7, r0
 8010a86:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8010a88:	6022      	str	r2, [r4, #0]
 8010a8a:	ebc7 0805 	rsb	r8, r7, r5
 8010a8e:	1e73      	subs	r3, r6, #1
 8010a90:	4435      	add	r5, r6
 8010a92:	ebc1 010a 	rsb	r1, r1, sl
 8010a96:	6063      	str	r3, [r4, #4]
 8010a98:	fb00 f008 	mul.w	r0, r0, r8
 8010a9c:	6125      	str	r5, [r4, #16]
 8010a9e:	f7f5 ffa1 	bl	80069e4 <GUI__DivideRound32>
 8010aa2:	4430      	add	r0, r6
 8010aa4:	19c2      	adds	r2, r0, r7
 8010aa6:	3a01      	subs	r2, #1
 8010aa8:	60a0      	str	r0, [r4, #8]
 8010aaa:	60e2      	str	r2, [r4, #12]
 8010aac:	f8c4 801c 	str.w	r8, [r4, #28]
 8010ab0:	4648      	mov	r0, r9
 8010ab2:	6227      	str	r7, [r4, #32]
 8010ab4:	f7f4 f9f0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010ab8:	b010      	add	sp, #64	; 0x40
 8010aba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010abe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8010ac2:	f9bd e012 	ldrsh.w	lr, [sp, #18]
 8010ac6:	4694      	mov	ip, r2
 8010ac8:	e78e      	b.n	80109e8 <_CalcPositions+0x38>
 8010aca:	6990      	ldr	r0, [r2, #24]
 8010acc:	f7fc fdb4 	bl	800d638 <WM_GetScrollbarV>
 8010ad0:	b9c0      	cbnz	r0, 8010b04 <_CalcPositions+0x154>
 8010ad2:	9a00      	ldr	r2, [sp, #0]
 8010ad4:	f9b2 3030 	ldrsh.w	r3, [r2, #48]	; 0x30
 8010ad8:	2bfe      	cmp	r3, #254	; 0xfe
 8010ada:	d1a2      	bne.n	8010a22 <_CalcPositions+0x72>
 8010adc:	6990      	ldr	r0, [r2, #24]
 8010ade:	f7fc fd83 	bl	800d5e8 <WM_GetScrollbarH>
 8010ae2:	2800      	cmp	r0, #0
 8010ae4:	d09d      	beq.n	8010a22 <_CalcPositions+0x72>
 8010ae6:	a905      	add	r1, sp, #20
 8010ae8:	f7fc fdf2 	bl	800d6d0 <WM_GetWindowRectEx>
 8010aec:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8010af0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010af4:	429a      	cmp	r2, r3
 8010af6:	d194      	bne.n	8010a22 <_CalcPositions+0x72>
 8010af8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8010afc:	3b01      	subs	r3, #1
 8010afe:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010b02:	e78e      	b.n	8010a22 <_CalcPositions+0x72>
 8010b04:	a905      	add	r1, sp, #20
 8010b06:	f7fc fde3 	bl	800d6d0 <WM_GetWindowRectEx>
 8010b0a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8010b0e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010b12:	429a      	cmp	r2, r3
 8010b14:	d1dd      	bne.n	8010ad2 <_CalcPositions+0x122>
 8010b16:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8010b1a:	9a00      	ldr	r2, [sp, #0]
 8010b1c:	3901      	subs	r1, #1
 8010b1e:	f9b2 3030 	ldrsh.w	r3, [r2, #48]	; 0x30
 8010b22:	f8ad 1010 	strh.w	r1, [sp, #16]
 8010b26:	e77a      	b.n	8010a1e <_CalcPositions+0x6e>
 8010b28:	200001e4 	.word	0x200001e4

08010b2c <_Paint>:
 8010b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010b2e:	b099      	sub	sp, #100	; 0x64
 8010b30:	4606      	mov	r6, r0
 8010b32:	f7f4 f99f 	bl	8004e74 <GUI_ALLOC_LockH>
 8010b36:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8010b38:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8010b3a:	9001      	str	r0, [sp, #4]
 8010b3c:	4605      	mov	r5, r0
 8010b3e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010b42:	a906      	add	r1, sp, #24
 8010b44:	4630      	mov	r0, r6
 8010b46:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8010b48:	9304      	str	r3, [sp, #16]
 8010b4a:	9205      	str	r2, [sp, #20]
 8010b4c:	f7ff ff30 	bl	80109b0 <_CalcPositions>
 8010b50:	a801      	add	r0, sp, #4
 8010b52:	f7f4 f9a1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010b56:	4628      	mov	r0, r5
 8010b58:	a902      	add	r1, sp, #8
 8010b5a:	f000 ffe3 	bl	8011b24 <WIDGET__GetClientRect>
 8010b5e:	9a06      	ldr	r2, [sp, #24]
 8010b60:	9b07      	ldr	r3, [sp, #28]
 8010b62:	f9bd 700a 	ldrsh.w	r7, [sp, #10]
 8010b66:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8010b6a:	9213      	str	r2, [sp, #76]	; 0x4c
 8010b6c:	2108      	movs	r1, #8
 8010b6e:	a804      	add	r0, sp, #16
 8010b70:	9017      	str	r0, [sp, #92]	; 0x5c
 8010b72:	9110      	str	r1, [sp, #64]	; 0x40
 8010b74:	9315      	str	r3, [sp, #84]	; 0x54
 8010b76:	960f      	str	r6, [sp, #60]	; 0x3c
 8010b78:	9714      	str	r7, [sp, #80]	; 0x50
 8010b7a:	9516      	str	r5, [sp, #88]	; 0x58
 8010b7c:	a80f      	add	r0, sp, #60	; 0x3c
 8010b7e:	47a0      	blx	r4
 8010b80:	9a07      	ldr	r2, [sp, #28]
 8010b82:	9b08      	ldr	r3, [sp, #32]
 8010b84:	3201      	adds	r2, #1
 8010b86:	3b01      	subs	r3, #1
 8010b88:	2110      	movs	r1, #16
 8010b8a:	9213      	str	r2, [sp, #76]	; 0x4c
 8010b8c:	9315      	str	r3, [sp, #84]	; 0x54
 8010b8e:	9110      	str	r1, [sp, #64]	; 0x40
 8010b90:	a80f      	add	r0, sp, #60	; 0x3c
 8010b92:	47a0      	blx	r4
 8010b94:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010b96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010b98:	3201      	adds	r2, #1
 8010b9a:	3b01      	subs	r3, #1
 8010b9c:	2111      	movs	r1, #17
 8010b9e:	9213      	str	r2, [sp, #76]	; 0x4c
 8010ba0:	9315      	str	r3, [sp, #84]	; 0x54
 8010ba2:	9110      	str	r1, [sp, #64]	; 0x40
 8010ba4:	a80f      	add	r0, sp, #60	; 0x3c
 8010ba6:	47a0      	blx	r4
 8010ba8:	2113      	movs	r1, #19
 8010baa:	9a08      	ldr	r2, [sp, #32]
 8010bac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010bae:	9110      	str	r1, [sp, #64]	; 0x40
 8010bb0:	9213      	str	r2, [sp, #76]	; 0x4c
 8010bb2:	9315      	str	r3, [sp, #84]	; 0x54
 8010bb4:	a80f      	add	r0, sp, #60	; 0x3c
 8010bb6:	47a0      	blx	r4
 8010bb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010bba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010bbc:	9213      	str	r2, [sp, #76]	; 0x4c
 8010bbe:	2109      	movs	r1, #9
 8010bc0:	9315      	str	r3, [sp, #84]	; 0x54
 8010bc2:	9110      	str	r1, [sp, #64]	; 0x40
 8010bc4:	a80f      	add	r0, sp, #60	; 0x3c
 8010bc6:	47a0      	blx	r4
 8010bc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010bca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010bcc:	4293      	cmp	r3, r2
 8010bce:	d006      	beq.n	8010bde <_Paint+0xb2>
 8010bd0:	3301      	adds	r3, #1
 8010bd2:	210c      	movs	r1, #12
 8010bd4:	9313      	str	r3, [sp, #76]	; 0x4c
 8010bd6:	9215      	str	r2, [sp, #84]	; 0x54
 8010bd8:	a80f      	add	r0, sp, #60	; 0x3c
 8010bda:	9110      	str	r1, [sp, #64]	; 0x40
 8010bdc:	47a0      	blx	r4
 8010bde:	b019      	add	sp, #100	; 0x64
 8010be0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010be2:	bf00      	nop

08010be4 <_DrawGraspH>:
 8010be4:	4603      	mov	r3, r0
 8010be6:	b570      	push	{r4, r5, r6, lr}
 8010be8:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8010bec:	f9b3 5002 	ldrsh.w	r5, [r3, #2]
 8010bf0:	f9b3 4004 	ldrsh.w	r4, [r3, #4]
 8010bf4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010bf8:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8010bfa:	1b56      	subs	r6, r2, r5
 8010bfc:	3603      	adds	r6, #3
 8010bfe:	441c      	add	r4, r3
 8010c00:	10b6      	asrs	r6, r6, #2
 8010c02:	4435      	add	r5, r6
 8010c04:	1064      	asrs	r4, r4, #1
 8010c06:	1b96      	subs	r6, r2, r6
 8010c08:	f7f4 fccc 	bl	80055a4 <GUI_SetColor>
 8010c0c:	4632      	mov	r2, r6
 8010c0e:	4629      	mov	r1, r5
 8010c10:	4620      	mov	r0, r4
 8010c12:	f002 f8d3 	bl	8012dbc <GUI_DrawVLine>
 8010c16:	4632      	mov	r2, r6
 8010c18:	4629      	mov	r1, r5
 8010c1a:	1ca0      	adds	r0, r4, #2
 8010c1c:	f002 f8ce 	bl	8012dbc <GUI_DrawVLine>
 8010c20:	4632      	mov	r2, r6
 8010c22:	4629      	mov	r1, r5
 8010c24:	1d20      	adds	r0, r4, #4
 8010c26:	f002 f8c9 	bl	8012dbc <GUI_DrawVLine>
 8010c2a:	4632      	mov	r2, r6
 8010c2c:	4629      	mov	r1, r5
 8010c2e:	1ea0      	subs	r0, r4, #2
 8010c30:	f002 f8c4 	bl	8012dbc <GUI_DrawVLine>
 8010c34:	4632      	mov	r2, r6
 8010c36:	4629      	mov	r1, r5
 8010c38:	1f20      	subs	r0, r4, #4
 8010c3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c3e:	f002 b8bd 	b.w	8012dbc <GUI_DrawVLine>
 8010c42:	bf00      	nop

08010c44 <_DrawGraspV>:
 8010c44:	4603      	mov	r3, r0
 8010c46:	b570      	push	{r4, r5, r6, lr}
 8010c48:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8010c4c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8010c50:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8010c54:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010c58:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8010c5a:	1b56      	subs	r6, r2, r5
 8010c5c:	3603      	adds	r6, #3
 8010c5e:	441c      	add	r4, r3
 8010c60:	10b6      	asrs	r6, r6, #2
 8010c62:	4435      	add	r5, r6
 8010c64:	1064      	asrs	r4, r4, #1
 8010c66:	1b96      	subs	r6, r2, r6
 8010c68:	f7f4 fc9c 	bl	80055a4 <GUI_SetColor>
 8010c6c:	4632      	mov	r2, r6
 8010c6e:	4629      	mov	r1, r5
 8010c70:	4620      	mov	r0, r4
 8010c72:	f002 f849 	bl	8012d08 <GUI_DrawHLine>
 8010c76:	4632      	mov	r2, r6
 8010c78:	4629      	mov	r1, r5
 8010c7a:	1ca0      	adds	r0, r4, #2
 8010c7c:	f002 f844 	bl	8012d08 <GUI_DrawHLine>
 8010c80:	4632      	mov	r2, r6
 8010c82:	4629      	mov	r1, r5
 8010c84:	1d20      	adds	r0, r4, #4
 8010c86:	f002 f83f 	bl	8012d08 <GUI_DrawHLine>
 8010c8a:	4632      	mov	r2, r6
 8010c8c:	4629      	mov	r1, r5
 8010c8e:	1ea0      	subs	r0, r4, #2
 8010c90:	f002 f83a 	bl	8012d08 <GUI_DrawHLine>
 8010c94:	4632      	mov	r2, r6
 8010c96:	4629      	mov	r1, r5
 8010c98:	1f20      	subs	r0, r4, #4
 8010c9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c9e:	f002 b833 	b.w	8012d08 <GUI_DrawHLine>
 8010ca2:	bf00      	nop

08010ca4 <_DrawFrame>:
 8010ca4:	b538      	push	{r3, r4, r5, lr}
 8010ca6:	4604      	mov	r4, r0
 8010ca8:	6808      	ldr	r0, [r1, #0]
 8010caa:	460d      	mov	r5, r1
 8010cac:	f7f4 fc7a 	bl	80055a4 <GUI_SetColor>
 8010cb0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010cb4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010cb8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8010cbc:	3a01      	subs	r2, #1
 8010cbe:	3101      	adds	r1, #1
 8010cc0:	f002 f822 	bl	8012d08 <GUI_DrawHLine>
 8010cc4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010cc8:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010ccc:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8010cd0:	3a01      	subs	r2, #1
 8010cd2:	3101      	adds	r1, #1
 8010cd4:	f002 f818 	bl	8012d08 <GUI_DrawHLine>
 8010cd8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010cdc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010ce0:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010ce4:	3a01      	subs	r2, #1
 8010ce6:	3101      	adds	r1, #1
 8010ce8:	f002 f868 	bl	8012dbc <GUI_DrawVLine>
 8010cec:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010cf0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010cf4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010cf8:	3a01      	subs	r2, #1
 8010cfa:	3101      	adds	r1, #1
 8010cfc:	f002 f85e 	bl	8012dbc <GUI_DrawVLine>
 8010d00:	6868      	ldr	r0, [r5, #4]
 8010d02:	f7f4 fc4f 	bl	80055a4 <GUI_SetColor>
 8010d06:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010d0a:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010d0e:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8010d12:	3a01      	subs	r2, #1
 8010d14:	3101      	adds	r1, #1
 8010d16:	3001      	adds	r0, #1
 8010d18:	f001 fff6 	bl	8012d08 <GUI_DrawHLine>
 8010d1c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010d20:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010d24:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8010d28:	3a01      	subs	r2, #1
 8010d2a:	3101      	adds	r1, #1
 8010d2c:	3801      	subs	r0, #1
 8010d2e:	f001 ffeb 	bl	8012d08 <GUI_DrawHLine>
 8010d32:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010d36:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010d3a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010d3e:	3a02      	subs	r2, #2
 8010d40:	3102      	adds	r1, #2
 8010d42:	3001      	adds	r0, #1
 8010d44:	f002 f83a 	bl	8012dbc <GUI_DrawVLine>
 8010d48:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010d4c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010d50:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010d54:	3a02      	subs	r2, #2
 8010d56:	3102      	adds	r1, #2
 8010d58:	3801      	subs	r0, #1
 8010d5a:	f002 f82f 	bl	8012dbc <GUI_DrawVLine>
 8010d5e:	68a8      	ldr	r0, [r5, #8]
 8010d60:	f7f4 fc20 	bl	80055a4 <GUI_SetColor>
 8010d64:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010d68:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010d6c:	f001 fff2 	bl	8012d54 <GUI_DrawPixel>
 8010d70:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010d74:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010d78:	f001 ffec 	bl	8012d54 <GUI_DrawPixel>
 8010d7c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010d80:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010d84:	f001 ffe6 	bl	8012d54 <GUI_DrawPixel>
 8010d88:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010d8c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010d90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010d94:	f001 bfde 	b.w	8012d54 <GUI_DrawPixel>

08010d98 <_DrawBackgroundH>:
 8010d98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d9a:	4604      	mov	r4, r0
 8010d9c:	b083      	sub	sp, #12
 8010d9e:	460d      	mov	r5, r1
 8010da0:	f7ff ff80 	bl	8010ca4 <_DrawFrame>
 8010da4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010da8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010dac:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010db0:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010db4:	68ee      	ldr	r6, [r5, #12]
 8010db6:	692f      	ldr	r7, [r5, #16]
 8010db8:	9701      	str	r7, [sp, #4]
 8010dba:	440b      	add	r3, r1
 8010dbc:	9600      	str	r6, [sp, #0]
 8010dbe:	105b      	asrs	r3, r3, #1
 8010dc0:	3102      	adds	r1, #2
 8010dc2:	3a02      	subs	r2, #2
 8010dc4:	3002      	adds	r0, #2
 8010dc6:	f001 fe0b 	bl	80129e0 <GUI_DrawGradientV>
 8010dca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010dce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010dd2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010dd6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010dda:	69ae      	ldr	r6, [r5, #24]
 8010ddc:	696c      	ldr	r4, [r5, #20]
 8010dde:	9400      	str	r4, [sp, #0]
 8010de0:	4419      	add	r1, r3
 8010de2:	1049      	asrs	r1, r1, #1
 8010de4:	9601      	str	r6, [sp, #4]
 8010de6:	3101      	adds	r1, #1
 8010de8:	3b02      	subs	r3, #2
 8010dea:	3a02      	subs	r2, #2
 8010dec:	3002      	adds	r0, #2
 8010dee:	f001 fdf7 	bl	80129e0 <GUI_DrawGradientV>
 8010df2:	b003      	add	sp, #12
 8010df4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010df6:	bf00      	nop

08010df8 <_DrawBackgroundV>:
 8010df8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010dfa:	4604      	mov	r4, r0
 8010dfc:	b083      	sub	sp, #12
 8010dfe:	460d      	mov	r5, r1
 8010e00:	f7ff ff50 	bl	8010ca4 <_DrawFrame>
 8010e04:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010e08:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010e0c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010e10:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010e14:	68ee      	ldr	r6, [r5, #12]
 8010e16:	692f      	ldr	r7, [r5, #16]
 8010e18:	9701      	str	r7, [sp, #4]
 8010e1a:	4402      	add	r2, r0
 8010e1c:	9600      	str	r6, [sp, #0]
 8010e1e:	1052      	asrs	r2, r2, #1
 8010e20:	3002      	adds	r0, #2
 8010e22:	3b02      	subs	r3, #2
 8010e24:	3102      	adds	r1, #2
 8010e26:	f001 fea5 	bl	8012b74 <GUI_DrawGradientH>
 8010e2a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010e2e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010e32:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010e36:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010e3a:	69ae      	ldr	r6, [r5, #24]
 8010e3c:	696c      	ldr	r4, [r5, #20]
 8010e3e:	9400      	str	r4, [sp, #0]
 8010e40:	4410      	add	r0, r2
 8010e42:	1040      	asrs	r0, r0, #1
 8010e44:	9601      	str	r6, [sp, #4]
 8010e46:	3001      	adds	r0, #1
 8010e48:	3a02      	subs	r2, #2
 8010e4a:	3b02      	subs	r3, #2
 8010e4c:	3102      	adds	r1, #2
 8010e4e:	f001 fe91 	bl	8012b74 <GUI_DrawGradientH>
 8010e52:	b003      	add	sp, #12
 8010e54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e56:	bf00      	nop

08010e58 <SCROLLBAR_DrawSkinFlex>:
 8010e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e5c:	4604      	mov	r4, r0
 8010e5e:	b089      	sub	sp, #36	; 0x24
 8010e60:	6800      	ldr	r0, [r0, #0]
 8010e62:	f7f4 f807 	bl	8004e74 <GUI_ALLOC_LockH>
 8010e66:	4681      	mov	r9, r0
 8010e68:	a808      	add	r0, sp, #32
 8010e6a:	f840 9d0c 	str.w	r9, [r0, #-12]!
 8010e6e:	f7f4 f813 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8010e72:	f8d4 8020 	ldr.w	r8, [r4, #32]
 8010e76:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 8010e7a:	f8d8 3000 	ldr.w	r3, [r8]
 8010e7e:	f9b4 7014 	ldrsh.w	r7, [r4, #20]
 8010e82:	f9b4 5018 	ldrsh.w	r5, [r4, #24]
 8010e86:	f9b4 a01c 	ldrsh.w	sl, [r4, #28]
 8010e8a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010e8e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010e92:	f8ad 501c 	strh.w	r5, [sp, #28]
 8010e96:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010e9a:	2b00      	cmp	r3, #0
 8010e9c:	d132      	bne.n	8010f04 <SCROLLBAR_DrawSkinFlex+0xac>
 8010e9e:	4a66      	ldr	r2, [pc, #408]	; (8011038 <SCROLLBAR_DrawSkinFlex+0x1e0>)
 8010ea0:	f8df b1b0 	ldr.w	fp, [pc, #432]	; 8011054 <SCROLLBAR_DrawSkinFlex+0x1fc>
 8010ea4:	4b65      	ldr	r3, [pc, #404]	; (801103c <SCROLLBAR_DrawSkinFlex+0x1e4>)
 8010ea6:	6861      	ldr	r1, [r4, #4]
 8010ea8:	3908      	subs	r1, #8
 8010eaa:	2911      	cmp	r1, #17
 8010eac:	d826      	bhi.n	8010efc <SCROLLBAR_DrawSkinFlex+0xa4>
 8010eae:	e8df f001 	tbb	[pc, r1]
 8010eb2:	7c3c      	.short	0x7c3c
 8010eb4:	256a2525 	.word	0x256a2525
 8010eb8:	6a6a2525 	.word	0x6a6a2525
 8010ebc:	25250925 	.word	0x25250925
 8010ec0:	33252525 	.word	0x33252525
 8010ec4:	485e      	ldr	r0, [pc, #376]	; (8011040 <SCROLLBAR_DrawSkinFlex+0x1e8>)
 8010ec6:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8010eca:	9203      	str	r2, [sp, #12]
 8010ecc:	f1a0 012c 	sub.w	r1, r0, #44	; 0x2c
 8010ed0:	2c03      	cmp	r4, #3
 8010ed2:	bf14      	ite	ne
 8010ed4:	4604      	movne	r4, r0
 8010ed6:	460c      	moveq	r4, r1
 8010ed8:	4621      	mov	r1, r4
 8010eda:	a806      	add	r0, sp, #24
 8010edc:	4798      	blx	r3
 8010ede:	f8d8 3000 	ldr.w	r3, [r8]
 8010ee2:	9a03      	ldr	r2, [sp, #12]
 8010ee4:	2b00      	cmp	r3, #0
 8010ee6:	f000 8092 	beq.w	801100e <SCROLLBAR_DrawSkinFlex+0x1b6>
 8010eea:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8010eee:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8010ef2:	1a5b      	subs	r3, r3, r1
 8010ef4:	3301      	adds	r3, #1
 8010ef6:	2b0e      	cmp	r3, #14
 8010ef8:	f300 8099 	bgt.w	801102e <SCROLLBAR_DrawSkinFlex+0x1d6>
 8010efc:	2000      	movs	r0, #0
 8010efe:	b009      	add	sp, #36	; 0x24
 8010f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f04:	aa06      	add	r2, sp, #24
 8010f06:	4611      	mov	r1, r2
 8010f08:	4648      	mov	r0, r9
 8010f0a:	f000 fdf5 	bl	8011af8 <WIDGET__RotateRect90>
 8010f0e:	f8df b148 	ldr.w	fp, [pc, #328]	; 8011058 <SCROLLBAR_DrawSkinFlex+0x200>
 8010f12:	4a4c      	ldr	r2, [pc, #304]	; (8011044 <SCROLLBAR_DrawSkinFlex+0x1ec>)
 8010f14:	4b4c      	ldr	r3, [pc, #304]	; (8011048 <SCROLLBAR_DrawSkinFlex+0x1f0>)
 8010f16:	e7c6      	b.n	8010ea6 <SCROLLBAR_DrawSkinFlex+0x4e>
 8010f18:	f8d8 3000 	ldr.w	r3, [r8]
 8010f1c:	2b00      	cmp	r3, #0
 8010f1e:	d071      	beq.n	8011004 <SCROLLBAR_DrawSkinFlex+0x1ac>
 8010f20:	69a3      	ldr	r3, [r4, #24]
 8010f22:	6920      	ldr	r0, [r4, #16]
 8010f24:	1a18      	subs	r0, r3, r0
 8010f26:	3001      	adds	r0, #1
 8010f28:	e7e9      	b.n	8010efe <SCROLLBAR_DrawSkinFlex+0xa6>
 8010f2a:	4a45      	ldr	r2, [pc, #276]	; (8011040 <SCROLLBAR_DrawSkinFlex+0x1e8>)
 8010f2c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010f30:	f1a2 042c 	sub.w	r4, r2, #44	; 0x2c
 8010f34:	2902      	cmp	r1, #2
 8010f36:	bf18      	it	ne
 8010f38:	4614      	movne	r4, r2
 8010f3a:	4621      	mov	r1, r4
 8010f3c:	a806      	add	r0, sp, #24
 8010f3e:	4798      	blx	r3
 8010f40:	f8d8 3000 	ldr.w	r3, [r8]
 8010f44:	2b00      	cmp	r3, #0
 8010f46:	d069      	beq.n	801101c <SCROLLBAR_DrawSkinFlex+0x1c4>
 8010f48:	1bad      	subs	r5, r5, r6
 8010f4a:	ebc7 070a 	rsb	r7, r7, sl
 8010f4e:	3501      	adds	r5, #1
 8010f50:	3701      	adds	r7, #1
 8010f52:	4b3e      	ldr	r3, [pc, #248]	; (801104c <SCROLLBAR_DrawSkinFlex+0x1f4>)
 8010f54:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8010f56:	1f2c      	subs	r4, r5, #4
 8010f58:	fb83 2304 	smull	r2, r3, r3, r4
 8010f5c:	eba3 74e4 	sub.w	r4, r3, r4, asr #31
 8010f60:	f7f4 fb20 	bl	80055a4 <GUI_SetColor>
 8010f64:	1b29      	subs	r1, r5, r4
 8010f66:	eba5 0561 	sub.w	r5, r5, r1, asr #1
 8010f6a:	1e69      	subs	r1, r5, #1
 8010f6c:	f04f 35ff 	mov.w	r5, #4294967295
 8010f70:	4648      	mov	r0, r9
 8010f72:	107a      	asrs	r2, r7, #1
 8010f74:	4431      	add	r1, r6
 8010f76:	4623      	mov	r3, r4
 8010f78:	9500      	str	r5, [sp, #0]
 8010f7a:	f000 ff33 	bl	8011de4 <WIDGET__DrawTriangle>
 8010f7e:	2000      	movs	r0, #0
 8010f80:	b009      	add	sp, #36	; 0x24
 8010f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f86:	4c32      	ldr	r4, [pc, #200]	; (8011050 <SCROLLBAR_DrawSkinFlex+0x1f8>)
 8010f88:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8010f8c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8010f8e:	6ca4      	ldr	r4, [r4, #72]	; 0x48
 8010f90:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8010f94:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8010f98:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8010f9c:	e88d 0030 	stmia.w	sp, {r4, r5}
 8010fa0:	47d8      	blx	fp
 8010fa2:	2000      	movs	r0, #0
 8010fa4:	b009      	add	sp, #36	; 0x24
 8010fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010faa:	4a25      	ldr	r2, [pc, #148]	; (8011040 <SCROLLBAR_DrawSkinFlex+0x1e8>)
 8010fac:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010fb0:	f1a2 0b2c 	sub.w	fp, r2, #44	; 0x2c
 8010fb4:	2901      	cmp	r1, #1
 8010fb6:	bf18      	it	ne
 8010fb8:	4693      	movne	fp, r2
 8010fba:	4659      	mov	r1, fp
 8010fbc:	a806      	add	r0, sp, #24
 8010fbe:	4798      	blx	r3
 8010fc0:	f8d8 3000 	ldr.w	r3, [r8]
 8010fc4:	b37b      	cbz	r3, 8011026 <SCROLLBAR_DrawSkinFlex+0x1ce>
 8010fc6:	1bae      	subs	r6, r5, r6
 8010fc8:	3601      	adds	r6, #1
 8010fca:	ebc7 070a 	rsb	r7, r7, sl
 8010fce:	4b1f      	ldr	r3, [pc, #124]	; (801104c <SCROLLBAR_DrawSkinFlex+0x1f4>)
 8010fd0:	f8db 0024 	ldr.w	r0, [fp, #36]	; 0x24
 8010fd4:	1f34      	subs	r4, r6, #4
 8010fd6:	fb83 2304 	smull	r2, r3, r3, r4
 8010fda:	eba3 74e4 	sub.w	r4, r3, r4, asr #31
 8010fde:	f7f4 fae1 	bl	80055a4 <GUI_SetColor>
 8010fe2:	1b31      	subs	r1, r6, r4
 8010fe4:	eba6 0661 	sub.w	r6, r6, r1, asr #1
 8010fe8:	1e71      	subs	r1, r6, #1
 8010fea:	2601      	movs	r6, #1
 8010fec:	4648      	mov	r0, r9
 8010fee:	fa47 f206 	asr.w	r2, r7, r6
 8010ff2:	1a69      	subs	r1, r5, r1
 8010ff4:	4623      	mov	r3, r4
 8010ff6:	9600      	str	r6, [sp, #0]
 8010ff8:	f000 fef4 	bl	8011de4 <WIDGET__DrawTriangle>
 8010ffc:	2000      	movs	r0, #0
 8010ffe:	b009      	add	sp, #36	; 0x24
 8011000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011004:	69e3      	ldr	r3, [r4, #28]
 8011006:	6960      	ldr	r0, [r4, #20]
 8011008:	1a18      	subs	r0, r3, r0
 801100a:	3001      	adds	r0, #1
 801100c:	e777      	b.n	8010efe <SCROLLBAR_DrawSkinFlex+0xa6>
 801100e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011012:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8011016:	1a5b      	subs	r3, r3, r1
 8011018:	3301      	adds	r3, #1
 801101a:	e76c      	b.n	8010ef6 <SCROLLBAR_DrawSkinFlex+0x9e>
 801101c:	ebc7 070a 	rsb	r7, r7, sl
 8011020:	1c7d      	adds	r5, r7, #1
 8011022:	462f      	mov	r7, r5
 8011024:	e795      	b.n	8010f52 <SCROLLBAR_DrawSkinFlex+0xfa>
 8011026:	ebc7 070a 	rsb	r7, r7, sl
 801102a:	1c7e      	adds	r6, r7, #1
 801102c:	e7cf      	b.n	8010fce <SCROLLBAR_DrawSkinFlex+0x176>
 801102e:	a806      	add	r0, sp, #24
 8011030:	4621      	mov	r1, r4
 8011032:	4790      	blx	r2
 8011034:	2000      	movs	r0, #0
 8011036:	e762      	b.n	8010efe <SCROLLBAR_DrawSkinFlex+0xa6>
 8011038:	08010be5 	.word	0x08010be5
 801103c:	08010d99 	.word	0x08010d99
 8011040:	20000220 	.word	0x20000220
 8011044:	08010c45 	.word	0x08010c45
 8011048:	08010df9 	.word	0x08010df9
 801104c:	55555556 	.word	0x55555556
 8011050:	200001f4 	.word	0x200001f4
 8011054:	080129e1 	.word	0x080129e1
 8011058:	08012b75 	.word	0x08012b75

0801105c <SLIDER_Callback>:
 801105c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011060:	6845      	ldr	r5, [r0, #4]
 8011062:	b083      	sub	sp, #12
 8011064:	4604      	mov	r4, r0
 8011066:	4601      	mov	r1, r0
 8011068:	4628      	mov	r0, r5
 801106a:	f000 fdc7 	bl	8011bfc <WIDGET_HandleActive>
 801106e:	b150      	cbz	r0, 8011086 <SLIDER_Callback+0x2a>
 8011070:	6823      	ldr	r3, [r4, #0]
 8011072:	2b0f      	cmp	r3, #15
 8011074:	d00a      	beq.n	801108c <SLIDER_Callback+0x30>
 8011076:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 801107a:	d031      	beq.n	80110e0 <SLIDER_Callback+0x84>
 801107c:	2b0e      	cmp	r3, #14
 801107e:	d017      	beq.n	80110b0 <SLIDER_Callback+0x54>
 8011080:	4620      	mov	r0, r4
 8011082:	f7fb fe33 	bl	800ccec <WM_DefaultProc>
 8011086:	b003      	add	sp, #12
 8011088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801108c:	4628      	mov	r0, r5
 801108e:	f7f3 fef1 	bl	8004e74 <GUI_ALLOC_LockH>
 8011092:	ab02      	add	r3, sp, #8
 8011094:	f843 0d04 	str.w	r0, [r3, #-4]!
 8011098:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 801109a:	6814      	ldr	r4, [r2, #0]
 801109c:	4618      	mov	r0, r3
 801109e:	f7f3 fefb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80110a2:	2c00      	cmp	r4, #0
 80110a4:	d0ef      	beq.n	8011086 <SLIDER_Callback+0x2a>
 80110a6:	4628      	mov	r0, r5
 80110a8:	47a0      	blx	r4
 80110aa:	b003      	add	sp, #12
 80110ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110b0:	68e3      	ldr	r3, [r4, #12]
 80110b2:	685a      	ldr	r2, [r3, #4]
 80110b4:	2a00      	cmp	r2, #0
 80110b6:	dde3      	ble.n	8011080 <SLIDER_Callback+0x24>
 80110b8:	681b      	ldr	r3, [r3, #0]
 80110ba:	2b10      	cmp	r3, #16
 80110bc:	d07f      	beq.n	80111be <SLIDER_Callback+0x162>
 80110be:	2b12      	cmp	r3, #18
 80110c0:	d1de      	bne.n	8011080 <SLIDER_Callback+0x24>
 80110c2:	2d00      	cmp	r5, #0
 80110c4:	d0dc      	beq.n	8011080 <SLIDER_Callback+0x24>
 80110c6:	4628      	mov	r0, r5
 80110c8:	f7f3 fed4 	bl	8004e74 <GUI_ALLOC_LockH>
 80110cc:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 80110ce:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80110d0:	9001      	str	r0, [sp, #4]
 80110d2:	4293      	cmp	r3, r2
 80110d4:	f2c0 80b1 	blt.w	801123a <SLIDER_Callback+0x1de>
 80110d8:	a801      	add	r0, sp, #4
 80110da:	f7f3 fedd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80110de:	e7cf      	b.n	8011080 <SLIDER_Callback+0x24>
 80110e0:	f8d4 b00c 	ldr.w	fp, [r4, #12]
 80110e4:	f1bb 0f00 	cmp.w	fp, #0
 80110e8:	d0ca      	beq.n	8011080 <SLIDER_Callback+0x24>
 80110ea:	4628      	mov	r0, r5
 80110ec:	f7f3 fec2 	bl	8004e74 <GUI_ALLOC_LockH>
 80110f0:	4603      	mov	r3, r0
 80110f2:	a802      	add	r0, sp, #8
 80110f4:	f8d3 9058 	ldr.w	r9, [r3, #88]	; 0x58
 80110f8:	f840 3d08 	str.w	r3, [r0, #-8]!
 80110fc:	6d5f      	ldr	r7, [r3, #84]	; 0x54
 80110fe:	f9b3 6060 	ldrsh.w	r6, [r3, #96]	; 0x60
 8011102:	f8b3 8032 	ldrh.w	r8, [r3, #50]	; 0x32
 8011106:	f8b3 a028 	ldrh.w	sl, [r3, #40]	; 0x28
 801110a:	f7f3 fec5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801110e:	f89b 3008 	ldrb.w	r3, [fp, #8]
 8011112:	2b00      	cmp	r3, #0
 8011114:	d03f      	beq.n	8011196 <SLIDER_Callback+0x13a>
 8011116:	e89b 000c 	ldmia.w	fp, {r2, r3}
 801111a:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
 801111e:	f018 0f08 	tst.w	r8, #8
 8011122:	ea4f 0666 	mov.w	r6, r6, asr #1
 8011126:	bf08      	it	eq
 8011128:	4613      	moveq	r3, r2
 801112a:	3601      	adds	r6, #1
 801112c:	ebc6 0b03 	rsb	fp, r6, r3
 8011130:	4628      	mov	r0, r5
 8011132:	f000 fd13 	bl	8011b5c <WIDGET__GetWindowSizeX>
 8011136:	f1bb 0f00 	cmp.w	fp, #0
 801113a:	dd3e      	ble.n	80111ba <SLIDER_Callback+0x15e>
 801113c:	eba0 0646 	sub.w	r6, r0, r6, lsl #1
 8011140:	45b3      	cmp	fp, r6
 8011142:	da0c      	bge.n	801115e <SLIDER_Callback+0x102>
 8011144:	2e00      	cmp	r6, #0
 8011146:	d071      	beq.n	801122c <SLIDER_Callback+0x1d0>
 8011148:	eb06 73d6 	add.w	r3, r6, r6, lsr #31
 801114c:	105b      	asrs	r3, r3, #1
 801114e:	ebc9 0707 	rsb	r7, r9, r7
 8011152:	fb0b 3707 	mla	r7, fp, r7, r3
 8011156:	fbb7 f6f6 	udiv	r6, r7, r6
 801115a:	eb06 0709 	add.w	r7, r6, r9
 801115e:	4628      	mov	r0, r5
 8011160:	f7fc fade 	bl	800d720 <WM_IsFocusable>
 8011164:	2800      	cmp	r0, #0
 8011166:	d15d      	bne.n	8011224 <SLIDER_Callback+0x1c8>
 8011168:	2101      	movs	r1, #1
 801116a:	4628      	mov	r0, r5
 801116c:	f004 ff00 	bl	8015f70 <WM_SetCapture>
 8011170:	2d00      	cmp	r5, #0
 8011172:	d13c      	bne.n	80111ee <SLIDER_Callback+0x192>
 8011174:	f418 7f80 	tst.w	r8, #256	; 0x100
 8011178:	d182      	bne.n	8011080 <SLIDER_Callback+0x24>
 801117a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801117e:	4628      	mov	r0, r5
 8011180:	f000 fd0c 	bl	8011b9c <WIDGET_OrState>
 8011184:	f01a 0f02 	tst.w	sl, #2
 8011188:	f43f af7a 	beq.w	8011080 <SLIDER_Callback+0x24>
 801118c:	4628      	mov	r0, r5
 801118e:	2101      	movs	r1, #1
 8011190:	f7fc fae4 	bl	800d75c <WM_NotifyParent>
 8011194:	e774      	b.n	8011080 <SLIDER_Callback+0x24>
 8011196:	f418 7f80 	tst.w	r8, #256	; 0x100
 801119a:	f43f af71 	beq.w	8011080 <SLIDER_Callback+0x24>
 801119e:	f44f 7180 	mov.w	r1, #256	; 0x100
 80111a2:	4628      	mov	r0, r5
 80111a4:	f000 fd12 	bl	8011bcc <WIDGET_AndState>
 80111a8:	f01a 0f02 	tst.w	sl, #2
 80111ac:	f43f af68 	beq.w	8011080 <SLIDER_Callback+0x24>
 80111b0:	4628      	mov	r0, r5
 80111b2:	2102      	movs	r1, #2
 80111b4:	f7fc fad2 	bl	800d75c <WM_NotifyParent>
 80111b8:	e762      	b.n	8011080 <SLIDER_Callback+0x24>
 80111ba:	464f      	mov	r7, r9
 80111bc:	e7cf      	b.n	801115e <SLIDER_Callback+0x102>
 80111be:	2d00      	cmp	r5, #0
 80111c0:	f43f af5e 	beq.w	8011080 <SLIDER_Callback+0x24>
 80111c4:	4628      	mov	r0, r5
 80111c6:	f7f3 fe55 	bl	8004e74 <GUI_ALLOC_LockH>
 80111ca:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 80111cc:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80111ce:	9001      	str	r0, [sp, #4]
 80111d0:	4293      	cmp	r3, r2
 80111d2:	dd81      	ble.n	80110d8 <SLIDER_Callback+0x7c>
 80111d4:	3b01      	subs	r3, #1
 80111d6:	65c3      	str	r3, [r0, #92]	; 0x5c
 80111d8:	4628      	mov	r0, r5
 80111da:	f7fb f879 	bl	800c2d0 <WM_InvalidateWindow>
 80111de:	a801      	add	r0, sp, #4
 80111e0:	f7f3 fe5a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80111e4:	4628      	mov	r0, r5
 80111e6:	2105      	movs	r1, #5
 80111e8:	f7fc fab8 	bl	800d75c <WM_NotifyParent>
 80111ec:	e748      	b.n	8011080 <SLIDER_Callback+0x24>
 80111ee:	4628      	mov	r0, r5
 80111f0:	f7f3 fe40 	bl	8004e74 <GUI_ALLOC_LockH>
 80111f4:	6d83      	ldr	r3, [r0, #88]	; 0x58
 80111f6:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80111f8:	9001      	str	r0, [sp, #4]
 80111fa:	429f      	cmp	r7, r3
 80111fc:	bfb8      	it	lt
 80111fe:	461f      	movlt	r7, r3
 8011200:	4297      	cmp	r7, r2
 8011202:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8011204:	bfa8      	it	ge
 8011206:	4617      	movge	r7, r2
 8011208:	42bb      	cmp	r3, r7
 801120a:	d012      	beq.n	8011232 <SLIDER_Callback+0x1d6>
 801120c:	65c7      	str	r7, [r0, #92]	; 0x5c
 801120e:	4628      	mov	r0, r5
 8011210:	f7fb f85e 	bl	800c2d0 <WM_InvalidateWindow>
 8011214:	a801      	add	r0, sp, #4
 8011216:	f7f3 fe3f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801121a:	2105      	movs	r1, #5
 801121c:	4628      	mov	r0, r5
 801121e:	f7fc fa9d 	bl	800d75c <WM_NotifyParent>
 8011222:	e7a7      	b.n	8011174 <SLIDER_Callback+0x118>
 8011224:	4628      	mov	r0, r5
 8011226:	f7fc faeb 	bl	800d800 <WM_SetFocus>
 801122a:	e79d      	b.n	8011168 <SLIDER_Callback+0x10c>
 801122c:	4633      	mov	r3, r6
 801122e:	2601      	movs	r6, #1
 8011230:	e78d      	b.n	801114e <SLIDER_Callback+0xf2>
 8011232:	a801      	add	r0, sp, #4
 8011234:	f7f3 fe30 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011238:	e79c      	b.n	8011174 <SLIDER_Callback+0x118>
 801123a:	3301      	adds	r3, #1
 801123c:	e7cb      	b.n	80111d6 <SLIDER_Callback+0x17a>
 801123e:	bf00      	nop

08011240 <SLIDER_CreateIndirect>:
 8011240:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011244:	4604      	mov	r4, r0
 8011246:	b086      	sub	sp, #24
 8011248:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 801124c:	69a5      	ldr	r5, [r4, #24]
 801124e:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8011252:	4f23      	ldr	r7, [pc, #140]	; (80112e0 <SLIDER_CreateIndirect+0xa0>)
 8011254:	9100      	str	r1, [sp, #0]
 8011256:	f9b4 e010 	ldrsh.w	lr, [r4, #16]
 801125a:	9702      	str	r7, [sp, #8]
 801125c:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8011260:	18f1      	adds	r1, r6, r3
 8011262:	3538      	adds	r5, #56	; 0x38
 8011264:	2601      	movs	r6, #1
 8011266:	9503      	str	r5, [sp, #12]
 8011268:	9601      	str	r6, [sp, #4]
 801126a:	4410      	add	r0, r2
 801126c:	4673      	mov	r3, lr
 801126e:	463a      	mov	r2, r7
 8011270:	8a65      	ldrh	r5, [r4, #18]
 8011272:	f9b4 4008 	ldrsh.w	r4, [r4, #8]
 8011276:	f7fb f881 	bl	800c37c <WM_CreateWindowAsChild>
 801127a:	4680      	mov	r8, r0
 801127c:	b360      	cbz	r0, 80112d8 <SLIDER_CreateIndirect+0x98>
 801127e:	f7f3 fdf9 	bl	8004e74 <GUI_ALLOC_LockH>
 8011282:	4f18      	ldr	r7, [pc, #96]	; (80112e4 <SLIDER_CreateIndirect+0xa4>)
 8011284:	9005      	str	r0, [sp, #20]
 8011286:	f015 0f08 	tst.w	r5, #8
 801128a:	4621      	mov	r1, r4
 801128c:	bf0c      	ite	eq
 801128e:	2210      	moveq	r2, #16
 8011290:	2218      	movne	r2, #24
 8011292:	463d      	mov	r5, r7
 8011294:	f000 fc7a 	bl	8011b8c <WIDGET__Init>
 8011298:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801129a:	f10d 0e18 	add.w	lr, sp, #24
 801129e:	f04f 0c08 	mov.w	ip, #8
 80112a2:	f85e 6d04 	ldr.w	r6, [lr, #-4]!
 80112a6:	f106 0434 	add.w	r4, r6, #52	; 0x34
 80112aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80112ac:	e895 0003 	ldmia.w	r5, {r0, r1}
 80112b0:	f04f 33ff 	mov.w	r3, #4294967295
 80112b4:	e884 0003 	stmia.w	r4, {r0, r1}
 80112b8:	2200      	movs	r2, #0
 80112ba:	69b9      	ldr	r1, [r7, #24]
 80112bc:	6533      	str	r3, [r6, #80]	; 0x50
 80112be:	2564      	movs	r5, #100	; 0x64
 80112c0:	4670      	mov	r0, lr
 80112c2:	64f1      	str	r1, [r6, #76]	; 0x4c
 80112c4:	f8a6 c060 	strh.w	ip, [r6, #96]	; 0x60
 80112c8:	6575      	str	r5, [r6, #84]	; 0x54
 80112ca:	65b2      	str	r2, [r6, #88]	; 0x58
 80112cc:	f7f3 fde4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80112d0:	69bb      	ldr	r3, [r7, #24]
 80112d2:	4640      	mov	r0, r8
 80112d4:	685b      	ldr	r3, [r3, #4]
 80112d6:	4798      	blx	r3
 80112d8:	4640      	mov	r0, r8
 80112da:	b006      	add	sp, #24
 80112dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112e0:	0801105d 	.word	0x0801105d
 80112e4:	2000024c 	.word	0x2000024c

080112e8 <SLIDER_GetFlag>:
 80112e8:	b510      	push	{r4, lr}
 80112ea:	b082      	sub	sp, #8
 80112ec:	b918      	cbnz	r0, 80112f6 <SLIDER_GetFlag+0xe>
 80112ee:	4604      	mov	r4, r0
 80112f0:	4620      	mov	r0, r4
 80112f2:	b002      	add	sp, #8
 80112f4:	bd10      	pop	{r4, pc}
 80112f6:	460c      	mov	r4, r1
 80112f8:	f7f3 fdbc 	bl	8004e74 <GUI_ALLOC_LockH>
 80112fc:	aa02      	add	r2, sp, #8
 80112fe:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8011302:	f842 0d04 	str.w	r0, [r2, #-4]!
 8011306:	4610      	mov	r0, r2
 8011308:	401c      	ands	r4, r3
 801130a:	f7f3 fdc5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801130e:	4620      	mov	r0, r4
 8011310:	b002      	add	sp, #8
 8011312:	bd10      	pop	{r4, pc}

08011314 <_Create>:
 8011314:	b530      	push	{r4, r5, lr}
 8011316:	b08b      	sub	sp, #44	; 0x2c
 8011318:	4605      	mov	r5, r0
 801131a:	f7f3 fdab 	bl	8004e74 <GUI_ALLOC_LockH>
 801131e:	ab0a      	add	r3, sp, #40	; 0x28
 8011320:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8011322:	f843 0d28 	str.w	r0, [r3, #-40]!
 8011326:	4618      	mov	r0, r3
 8011328:	f7f3 fdb6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801132c:	2300      	movs	r3, #0
 801132e:	9501      	str	r5, [sp, #4]
 8011330:	9302      	str	r3, [sp, #8]
 8011332:	9309      	str	r3, [sp, #36]	; 0x24
 8011334:	a801      	add	r0, sp, #4
 8011336:	47a0      	blx	r4
 8011338:	b00b      	add	sp, #44	; 0x2c
 801133a:	bd30      	pop	{r4, r5, pc}

0801133c <_Paint>:
 801133c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011340:	b097      	sub	sp, #92	; 0x5c
 8011342:	4607      	mov	r7, r0
 8011344:	f7f3 fd96 	bl	8004e74 <GUI_ALLOC_LockH>
 8011348:	4603      	mov	r3, r0
 801134a:	9303      	str	r3, [sp, #12]
 801134c:	8e5d      	ldrh	r5, [r3, #50]	; 0x32
 801134e:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 8011352:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011354:	f9b3 1060 	ldrsh.w	r1, [r3, #96]	; 0x60
 8011358:	f8d3 8058 	ldr.w	r8, [r3, #88]	; 0x58
 801135c:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 801135e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011360:	9209      	str	r2, [sp, #36]	; 0x24
 8011362:	f3c5 2400 	ubfx	r4, r5, #8, #1
 8011366:	940b      	str	r4, [sp, #44]	; 0x2c
 8011368:	a803      	add	r0, sp, #12
 801136a:	f3c5 04c0 	ubfx	r4, r5, #3, #1
 801136e:	9108      	str	r1, [sp, #32]
 8011370:	9301      	str	r3, [sp, #4]
 8011372:	940c      	str	r4, [sp, #48]	; 0x30
 8011374:	f7f3 fd90 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011378:	4638      	mov	r0, r7
 801137a:	a904      	add	r1, sp, #16
 801137c:	f7fb ffde 	bl	800d33c <WM_GetClientRectEx>
 8011380:	45c8      	cmp	r8, r9
 8011382:	bf18      	it	ne
 8011384:	ebc8 0c09 	rsbne	ip, r8, r9
 8011388:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801138c:	f005 0501 	and.w	r5, r5, #1
 8011390:	bf08      	it	eq
 8011392:	f04f 0c01 	moveq.w	ip, #1
 8011396:	f1b9 0f00 	cmp.w	r9, #0
 801139a:	f000 80bc 	beq.w	8011516 <_Paint+0x1da>
 801139e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80113a2:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80113a6:	9b08      	ldr	r3, [sp, #32]
 80113a8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80113aa:	f9bd a014 	ldrsh.w	sl, [sp, #20]
 80113ae:	ebc2 0b00 	rsb	fp, r2, r0
 80113b2:	ea6f 0e03 	mvn.w	lr, r3
 80113b6:	44de      	add	lr, fp
 80113b8:	2900      	cmp	r1, #0
 80113ba:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 80113be:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 80113c2:	da17      	bge.n	80113f4 <_Paint+0xb8>
 80113c4:	f8df b1ac 	ldr.w	fp, [pc, #428]	; 8011574 <_Paint+0x238>
 80113c8:	fb8b 4b0e 	smull	r4, fp, fp, lr
 80113cc:	ea4f 7eee 	mov.w	lr, lr, asr #31
 80113d0:	ebce 0e6b 	rsb	lr, lr, fp, asr #1
 80113d4:	f10c 0b01 	add.w	fp, ip, #1
 80113d8:	45f3      	cmp	fp, lr
 80113da:	bfca      	itet	gt
 80113dc:	f04f 0e0b 	movgt.w	lr, #11
 80113e0:	f8cd b024 	strle.w	fp, [sp, #36]	; 0x24
 80113e4:	f8cd e024 	strgt.w	lr, [sp, #36]	; 0x24
 80113e8:	ebc2 0b00 	rsb	fp, r2, r0
 80113ec:	f1b9 0f00 	cmp.w	r9, #0
 80113f0:	f000 80bc 	beq.w	801156c <_Paint+0x230>
 80113f4:	9c01      	ldr	r4, [sp, #4]
 80113f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80113fa:	ebc3 0b0b 	rsb	fp, r3, fp
 80113fe:	ebc8 0404 	rsb	r4, r8, r4
 8011402:	3201      	adds	r2, #1
 8011404:	fb04 f40b 	mul.w	r4, r4, fp
 8011408:	3101      	adds	r1, #1
 801140a:	fb94 fcfc 	sdiv	ip, r4, ip
 801140e:	eb0c 0402 	add.w	r4, ip, r2
 8011412:	3801      	subs	r0, #1
 8011414:	4423      	add	r3, r4
 8011416:	f10d 0e20 	add.w	lr, sp, #32
 801141a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801141e:	9014      	str	r0, [sp, #80]	; 0x50
 8011420:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011424:	f103 38ff 	add.w	r8, r3, #4294967295
 8011428:	a806      	add	r0, sp, #24
 801142a:	230f      	movs	r3, #15
 801142c:	9212      	str	r2, [sp, #72]	; 0x48
 801142e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8011432:	930e      	str	r3, [sp, #56]	; 0x38
 8011434:	9111      	str	r1, [sp, #68]	; 0x44
 8011436:	f8ad 1018 	strh.w	r1, [sp, #24]
 801143a:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 801143e:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
 8011442:	f8ad a01c 	strh.w	sl, [sp, #28]
 8011446:	970d      	str	r7, [sp, #52]	; 0x34
 8011448:	f7fc fa68 	bl	800d91c <WM_SetUserClipRect>
 801144c:	a80d      	add	r0, sp, #52	; 0x34
 801144e:	47b0      	blx	r6
 8011450:	2000      	movs	r0, #0
 8011452:	f7fc fa63 	bl	800d91c <WM_SetUserClipRect>
 8011456:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011458:	2213      	movs	r2, #19
 801145a:	920e      	str	r2, [sp, #56]	; 0x38
 801145c:	2b00      	cmp	r3, #0
 801145e:	d07e      	beq.n	801155e <_Paint+0x222>
 8011460:	9412      	str	r4, [sp, #72]	; 0x48
 8011462:	4621      	mov	r1, r4
 8011464:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011466:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011468:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 801146c:	4642      	mov	r2, r8
 801146e:	a806      	add	r0, sp, #24
 8011470:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011474:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011478:	f8ad 201e 	strh.w	r2, [sp, #30]
 801147c:	f8ad 4018 	strh.w	r4, [sp, #24]
 8011480:	f7fc fa4c 	bl	800d91c <WM_SetUserClipRect>
 8011484:	a80d      	add	r0, sp, #52	; 0x34
 8011486:	47b0      	blx	r6
 8011488:	2000      	movs	r0, #0
 801148a:	f7fc fa47 	bl	800d91c <WM_SetUserClipRect>
 801148e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8011492:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8011496:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801149a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801149e:	3001      	adds	r0, #1
 80114a0:	3901      	subs	r1, #1
 80114a2:	3201      	adds	r2, #1
 80114a4:	3b01      	subs	r3, #1
 80114a6:	9012      	str	r0, [sp, #72]	; 0x48
 80114a8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80114ac:	2414      	movs	r4, #20
 80114ae:	a806      	add	r0, sp, #24
 80114b0:	9114      	str	r1, [sp, #80]	; 0x50
 80114b2:	f8ad 101e 	strh.w	r1, [sp, #30]
 80114b6:	9211      	str	r2, [sp, #68]	; 0x44
 80114b8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80114bc:	9313      	str	r3, [sp, #76]	; 0x4c
 80114be:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114c2:	940e      	str	r4, [sp, #56]	; 0x38
 80114c4:	f7fc fa2a 	bl	800d91c <WM_SetUserClipRect>
 80114c8:	a80d      	add	r0, sp, #52	; 0x34
 80114ca:	47b0      	blx	r6
 80114cc:	2000      	movs	r0, #0
 80114ce:	f7fc fa25 	bl	800d91c <WM_SetUserClipRect>
 80114d2:	b1ed      	cbz	r5, 8011510 <_Paint+0x1d4>
 80114d4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80114d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80114dc:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80114e0:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 80114e4:	9114      	str	r1, [sp, #80]	; 0x50
 80114e6:	a806      	add	r0, sp, #24
 80114e8:	250a      	movs	r5, #10
 80114ea:	f8ad 101e 	strh.w	r1, [sp, #30]
 80114ee:	9211      	str	r2, [sp, #68]	; 0x44
 80114f0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80114f4:	9313      	str	r3, [sp, #76]	; 0x4c
 80114f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114fa:	950e      	str	r5, [sp, #56]	; 0x38
 80114fc:	9412      	str	r4, [sp, #72]	; 0x48
 80114fe:	f8ad 401a 	strh.w	r4, [sp, #26]
 8011502:	f7fc fa0b 	bl	800d91c <WM_SetUserClipRect>
 8011506:	a80d      	add	r0, sp, #52	; 0x34
 8011508:	47b0      	blx	r6
 801150a:	2000      	movs	r0, #0
 801150c:	f7fc fa06 	bl	800d91c <WM_SetUserClipRect>
 8011510:	b017      	add	sp, #92	; 0x5c
 8011512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011516:	f9bd a014 	ldrsh.w	sl, [sp, #20]
 801151a:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 801151e:	9b08      	ldr	r3, [sp, #32]
 8011520:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011522:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8011526:	ebc1 0b0a 	rsb	fp, r1, sl
 801152a:	ea6f 0e03 	mvn.w	lr, r3
 801152e:	44de      	add	lr, fp
 8011530:	2a00      	cmp	r2, #0
 8011532:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8011536:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 801153a:	f6ff af43 	blt.w	80113c4 <_Paint+0x88>
 801153e:	9c01      	ldr	r4, [sp, #4]
 8011540:	f10b 3bff 	add.w	fp, fp, #4294967295
 8011544:	ebc3 0b0b 	rsb	fp, r3, fp
 8011548:	ebc8 0404 	rsb	r4, r8, r4
 801154c:	3101      	adds	r1, #1
 801154e:	fb04 f40b 	mul.w	r4, r4, fp
 8011552:	3201      	adds	r2, #1
 8011554:	fb94 fcfc 	sdiv	ip, r4, ip
 8011558:	eb0c 0401 	add.w	r4, ip, r1
 801155c:	e759      	b.n	8011412 <_Paint+0xd6>
 801155e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011560:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011562:	9411      	str	r4, [sp, #68]	; 0x44
 8011564:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8011568:	4643      	mov	r3, r8
 801156a:	e780      	b.n	801146e <_Paint+0x132>
 801156c:	ebc1 0b0a 	rsb	fp, r1, sl
 8011570:	e7e5      	b.n	801153e <_Paint+0x202>
 8011572:	bf00      	nop
 8011574:	66666667 	.word	0x66666667

08011578 <SLIDER_DrawSkinFlex>:
 8011578:	6a02      	ldr	r2, [r0, #32]
 801157a:	2a00      	cmp	r2, #0
 801157c:	f000 811c 	beq.w	80117b8 <SLIDER_DrawSkinFlex+0x240>
 8011580:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011584:	49aa      	ldr	r1, [pc, #680]	; (8011830 <SLIDER_DrawSkinFlex+0x2b8>)
 8011586:	6843      	ldr	r3, [r0, #4]
 8011588:	68d5      	ldr	r5, [r2, #12]
 801158a:	4604      	mov	r4, r0
 801158c:	3b0a      	subs	r3, #10
 801158e:	f101 002c 	add.w	r0, r1, #44	; 0x2c
 8011592:	b086      	sub	sp, #24
 8011594:	2d00      	cmp	r5, #0
 8011596:	bf14      	ite	ne
 8011598:	460d      	movne	r5, r1
 801159a:	4605      	moveq	r5, r0
 801159c:	2b0a      	cmp	r3, #10
 801159e:	d81f      	bhi.n	80115e0 <SLIDER_DrawSkinFlex+0x68>
 80115a0:	e8df f003 	tbb	[pc, r3]
 80115a4:	1e1e1e06 	.word	0x1e1e1e06
 80115a8:	1e1e4d1e 	.word	0x1e1e4d1e
 80115ac:	891e      	.short	0x891e
 80115ae:	22          	.byte	0x22
 80115af:	00          	.byte	0x00
 80115b0:	2101      	movs	r1, #1
 80115b2:	6820      	ldr	r0, [r4, #0]
 80115b4:	f7ff fe98 	bl	80112e8 <SLIDER_GetFlag>
 80115b8:	b190      	cbz	r0, 80115e0 <SLIDER_DrawSkinFlex+0x68>
 80115ba:	6a28      	ldr	r0, [r5, #32]
 80115bc:	f7f3 fff2 	bl	80055a4 <GUI_SetColor>
 80115c0:	6921      	ldr	r1, [r4, #16]
 80115c2:	6965      	ldr	r5, [r4, #20]
 80115c4:	69a2      	ldr	r2, [r4, #24]
 80115c6:	69e3      	ldr	r3, [r4, #28]
 80115c8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80115cc:	a804      	add	r0, sp, #16
 80115ce:	2100      	movs	r1, #0
 80115d0:	f8ad 5012 	strh.w	r5, [sp, #18]
 80115d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80115d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80115dc:	f001 fc36 	bl	8012e4c <GUI_DrawFocusRect>
 80115e0:	2000      	movs	r0, #0
 80115e2:	b006      	add	sp, #24
 80115e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80115e8:	6917      	ldr	r7, [r2, #16]
 80115ea:	69e8      	ldr	r0, [r5, #28]
 80115ec:	2f00      	cmp	r7, #0
 80115ee:	f000 8121 	beq.w	8011834 <SLIDER_DrawSkinFlex+0x2bc>
 80115f2:	f7f3 ffd7 	bl	80055a4 <GUI_SetColor>
 80115f6:	f8d4 8020 	ldr.w	r8, [r4, #32]
 80115fa:	f8d8 6004 	ldr.w	r6, [r8, #4]
 80115fe:	2e00      	cmp	r6, #0
 8011600:	ddee      	ble.n	80115e0 <SLIDER_DrawSkinFlex+0x68>
 8011602:	2700      	movs	r7, #0
 8011604:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8011608:	f8d8 0000 	ldr.w	r0, [r8]
 801160c:	9303      	str	r3, [sp, #12]
 801160e:	6963      	ldr	r3, [r4, #20]
 8011610:	69a2      	ldr	r2, [r4, #24]
 8011612:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8011614:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8011618:	eb03 0060 	add.w	r0, r3, r0, asr #1
 801161c:	9b03      	ldr	r3, [sp, #12]
 801161e:	1a51      	subs	r1, r2, r1
 8011620:	3e01      	subs	r6, #1
 8011622:	fb03 f307 	mul.w	r3, r3, r7
 8011626:	3101      	adds	r1, #1
 8011628:	fb93 f3f6 	sdiv	r3, r3, r6
 801162c:	4418      	add	r0, r3
 801162e:	f001 fb6b 	bl	8012d08 <GUI_DrawHLine>
 8011632:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8011636:	3701      	adds	r7, #1
 8011638:	42be      	cmp	r6, r7
 801163a:	dce3      	bgt.n	8011604 <SLIDER_DrawSkinFlex+0x8c>
 801163c:	e7d0      	b.n	80115e0 <SLIDER_DrawSkinFlex+0x68>
 801163e:	6913      	ldr	r3, [r2, #16]
 8011640:	2b00      	cmp	r3, #0
 8011642:	f000 80bb 	beq.w	80117bc <SLIDER_DrawSkinFlex+0x244>
 8011646:	6927      	ldr	r7, [r4, #16]
 8011648:	69a6      	ldr	r6, [r4, #24]
 801164a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 801164c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 801164e:	6928      	ldr	r0, [r5, #16]
 8011650:	1bf6      	subs	r6, r6, r7
 8011652:	1af3      	subs	r3, r6, r3
 8011654:	1a9b      	subs	r3, r3, r2
 8011656:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 801165a:	eb07 0763 	add.w	r7, r7, r3, asr #1
 801165e:	19d6      	adds	r6, r2, r7
 8011660:	f106 38ff 	add.w	r8, r6, #4294967295
 8011664:	f7f3 ff9e 	bl	80055a4 <GUI_SetColor>
 8011668:	4642      	mov	r2, r8
 801166a:	4639      	mov	r1, r7
 801166c:	6960      	ldr	r0, [r4, #20]
 801166e:	f001 fb4b 	bl	8012d08 <GUI_DrawHLine>
 8011672:	6961      	ldr	r1, [r4, #20]
 8011674:	69e2      	ldr	r2, [r4, #28]
 8011676:	4638      	mov	r0, r7
 8011678:	3101      	adds	r1, #1
 801167a:	f001 fb9f 	bl	8012dbc <GUI_DrawVLine>
 801167e:	3e02      	subs	r6, #2
 8011680:	3701      	adds	r7, #1
 8011682:	6968      	ldr	r0, [r5, #20]
 8011684:	f7f3 ff8e 	bl	80055a4 <GUI_SetColor>
 8011688:	4632      	mov	r2, r6
 801168a:	4639      	mov	r1, r7
 801168c:	69e0      	ldr	r0, [r4, #28]
 801168e:	f001 fb3b 	bl	8012d08 <GUI_DrawHLine>
 8011692:	6961      	ldr	r1, [r4, #20]
 8011694:	69e2      	ldr	r2, [r4, #28]
 8011696:	4640      	mov	r0, r8
 8011698:	3101      	adds	r1, #1
 801169a:	f001 fb8f 	bl	8012dbc <GUI_DrawVLine>
 801169e:	69a8      	ldr	r0, [r5, #24]
 80116a0:	f7f3 ff80 	bl	80055a4 <GUI_SetColor>
 80116a4:	69e3      	ldr	r3, [r4, #28]
 80116a6:	6961      	ldr	r1, [r4, #20]
 80116a8:	4632      	mov	r2, r6
 80116aa:	4638      	mov	r0, r7
 80116ac:	3b01      	subs	r3, #1
 80116ae:	3101      	adds	r1, #1
 80116b0:	f001 fba8 	bl	8012e04 <GUI_FillRect>
 80116b4:	e794      	b.n	80115e0 <SLIDER_DrawSkinFlex+0x68>
 80116b6:	6913      	ldr	r3, [r2, #16]
 80116b8:	6816      	ldr	r6, [r2, #0]
 80116ba:	2b00      	cmp	r3, #0
 80116bc:	f000 80e0 	beq.w	8011880 <SLIDER_DrawSkinFlex+0x308>
 80116c0:	69a2      	ldr	r2, [r4, #24]
 80116c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80116c4:	6828      	ldr	r0, [r5, #0]
 80116c6:	ebc3 0802 	rsb	r8, r3, r2
 80116ca:	3601      	adds	r6, #1
 80116cc:	1076      	asrs	r6, r6, #1
 80116ce:	f7f3 ff69 	bl	80055a4 <GUI_SetColor>
 80116d2:	f108 37ff 	add.w	r7, r8, #4294967295
 80116d6:	6961      	ldr	r1, [r4, #20]
 80116d8:	ebc6 0a07 	rsb	sl, r6, r7
 80116dc:	f10a 0901 	add.w	r9, sl, #1
 80116e0:	1873      	adds	r3, r6, r1
 80116e2:	4648      	mov	r0, r9
 80116e4:	3b01      	subs	r3, #1
 80116e6:	463a      	mov	r2, r7
 80116e8:	f001 fe0c 	bl	8013304 <GUI_DrawLine>
 80116ec:	69e1      	ldr	r1, [r4, #28]
 80116ee:	1b8b      	subs	r3, r1, r6
 80116f0:	3301      	adds	r3, #1
 80116f2:	4648      	mov	r0, r9
 80116f4:	463a      	mov	r2, r7
 80116f6:	f001 fe05 	bl	8013304 <GUI_DrawLine>
 80116fa:	4652      	mov	r2, sl
 80116fc:	6921      	ldr	r1, [r4, #16]
 80116fe:	6960      	ldr	r0, [r4, #20]
 8011700:	f001 fb02 	bl	8012d08 <GUI_DrawHLine>
 8011704:	4652      	mov	r2, sl
 8011706:	6921      	ldr	r1, [r4, #16]
 8011708:	69e0      	ldr	r0, [r4, #28]
 801170a:	f001 fafd 	bl	8012d08 <GUI_DrawHLine>
 801170e:	69e2      	ldr	r2, [r4, #28]
 8011710:	6961      	ldr	r1, [r4, #20]
 8011712:	6920      	ldr	r0, [r4, #16]
 8011714:	f001 fb52 	bl	8012dbc <GUI_DrawVLine>
 8011718:	6868      	ldr	r0, [r5, #4]
 801171a:	f7f3 ff43 	bl	80055a4 <GUI_SetColor>
 801171e:	6961      	ldr	r1, [r4, #20]
 8011720:	f1a8 0802 	sub.w	r8, r8, #2
 8011724:	1873      	adds	r3, r6, r1
 8011726:	4648      	mov	r0, r9
 8011728:	3b01      	subs	r3, #1
 801172a:	3101      	adds	r1, #1
 801172c:	4642      	mov	r2, r8
 801172e:	f001 fde9 	bl	8013304 <GUI_DrawLine>
 8011732:	69e1      	ldr	r1, [r4, #28]
 8011734:	1b8b      	subs	r3, r1, r6
 8011736:	3301      	adds	r3, #1
 8011738:	4642      	mov	r2, r8
 801173a:	4648      	mov	r0, r9
 801173c:	3901      	subs	r1, #1
 801173e:	f001 fde1 	bl	8013304 <GUI_DrawLine>
 8011742:	6921      	ldr	r1, [r4, #16]
 8011744:	6960      	ldr	r0, [r4, #20]
 8011746:	4652      	mov	r2, sl
 8011748:	3101      	adds	r1, #1
 801174a:	3001      	adds	r0, #1
 801174c:	f001 fadc 	bl	8012d08 <GUI_DrawHLine>
 8011750:	6921      	ldr	r1, [r4, #16]
 8011752:	69e0      	ldr	r0, [r4, #28]
 8011754:	4652      	mov	r2, sl
 8011756:	3101      	adds	r1, #1
 8011758:	3801      	subs	r0, #1
 801175a:	f001 fad5 	bl	8012d08 <GUI_DrawHLine>
 801175e:	69e2      	ldr	r2, [r4, #28]
 8011760:	6961      	ldr	r1, [r4, #20]
 8011762:	6920      	ldr	r0, [r4, #16]
 8011764:	3a01      	subs	r2, #1
 8011766:	3101      	adds	r1, #1
 8011768:	3001      	adds	r0, #1
 801176a:	f001 fb27 	bl	8012dbc <GUI_DrawVLine>
 801176e:	68eb      	ldr	r3, [r5, #12]
 8011770:	9301      	str	r3, [sp, #4]
 8011772:	69e3      	ldr	r3, [r4, #28]
 8011774:	6961      	ldr	r1, [r4, #20]
 8011776:	6920      	ldr	r0, [r4, #16]
 8011778:	68aa      	ldr	r2, [r5, #8]
 801177a:	9200      	str	r2, [sp, #0]
 801177c:	3b02      	subs	r3, #2
 801177e:	464a      	mov	r2, r9
 8011780:	3102      	adds	r1, #2
 8011782:	3002      	adds	r0, #2
 8011784:	f001 f9f6 	bl	8012b74 <GUI_DrawGradientH>
 8011788:	68e8      	ldr	r0, [r5, #12]
 801178a:	f7f3 ff0b 	bl	80055a4 <GUI_SetColor>
 801178e:	2e03      	cmp	r6, #3
 8011790:	f77f af26 	ble.w	80115e0 <SLIDER_DrawSkinFlex+0x68>
 8011794:	f106 38ff 	add.w	r8, r6, #4294967295
 8011798:	2502      	movs	r5, #2
 801179a:	69e2      	ldr	r2, [r4, #28]
 801179c:	6961      	ldr	r1, [r4, #20]
 801179e:	1b92      	subs	r2, r2, r6
 80117a0:	4431      	add	r1, r6
 80117a2:	442a      	add	r2, r5
 80117a4:	1b49      	subs	r1, r1, r5
 80117a6:	1b78      	subs	r0, r7, r5
 80117a8:	3a01      	subs	r2, #1
 80117aa:	3101      	adds	r1, #1
 80117ac:	3501      	adds	r5, #1
 80117ae:	f001 fb05 	bl	8012dbc <GUI_DrawVLine>
 80117b2:	4545      	cmp	r5, r8
 80117b4:	d1f1      	bne.n	801179a <SLIDER_DrawSkinFlex+0x222>
 80117b6:	e713      	b.n	80115e0 <SLIDER_DrawSkinFlex+0x68>
 80117b8:	2000      	movs	r0, #0
 80117ba:	4770      	bx	lr
 80117bc:	6961      	ldr	r1, [r4, #20]
 80117be:	69e2      	ldr	r2, [r4, #28]
 80117c0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80117c2:	6aaf      	ldr	r7, [r5, #40]	; 0x28
 80117c4:	6928      	ldr	r0, [r5, #16]
 80117c6:	1a56      	subs	r6, r2, r1
 80117c8:	1af6      	subs	r6, r6, r3
 80117ca:	1bf6      	subs	r6, r6, r7
 80117cc:	440b      	add	r3, r1
 80117ce:	3301      	adds	r3, #1
 80117d0:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
 80117d4:	eb03 0666 	add.w	r6, r3, r6, asr #1
 80117d8:	4437      	add	r7, r6
 80117da:	f107 38ff 	add.w	r8, r7, #4294967295
 80117de:	f7f3 fee1 	bl	80055a4 <GUI_SetColor>
 80117e2:	4642      	mov	r2, r8
 80117e4:	4631      	mov	r1, r6
 80117e6:	6920      	ldr	r0, [r4, #16]
 80117e8:	f001 fae8 	bl	8012dbc <GUI_DrawVLine>
 80117ec:	6921      	ldr	r1, [r4, #16]
 80117ee:	69a2      	ldr	r2, [r4, #24]
 80117f0:	4630      	mov	r0, r6
 80117f2:	3101      	adds	r1, #1
 80117f4:	1ebe      	subs	r6, r7, #2
 80117f6:	1c47      	adds	r7, r0, #1
 80117f8:	f001 fa86 	bl	8012d08 <GUI_DrawHLine>
 80117fc:	6968      	ldr	r0, [r5, #20]
 80117fe:	f7f3 fed1 	bl	80055a4 <GUI_SetColor>
 8011802:	4632      	mov	r2, r6
 8011804:	4639      	mov	r1, r7
 8011806:	69a0      	ldr	r0, [r4, #24]
 8011808:	f001 fad8 	bl	8012dbc <GUI_DrawVLine>
 801180c:	6921      	ldr	r1, [r4, #16]
 801180e:	69a2      	ldr	r2, [r4, #24]
 8011810:	4640      	mov	r0, r8
 8011812:	3101      	adds	r1, #1
 8011814:	f001 fa78 	bl	8012d08 <GUI_DrawHLine>
 8011818:	69a8      	ldr	r0, [r5, #24]
 801181a:	f7f3 fec3 	bl	80055a4 <GUI_SetColor>
 801181e:	69a2      	ldr	r2, [r4, #24]
 8011820:	6920      	ldr	r0, [r4, #16]
 8011822:	4633      	mov	r3, r6
 8011824:	4639      	mov	r1, r7
 8011826:	3a01      	subs	r2, #1
 8011828:	3001      	adds	r0, #1
 801182a:	f001 faeb 	bl	8012e04 <GUI_FillRect>
 801182e:	e6d7      	b.n	80115e0 <SLIDER_DrawSkinFlex+0x68>
 8011830:	20000274 	.word	0x20000274
 8011834:	f7f3 feb6 	bl	80055a4 <GUI_SetColor>
 8011838:	f8d4 8020 	ldr.w	r8, [r4, #32]
 801183c:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8011840:	2e00      	cmp	r6, #0
 8011842:	f77f aecd 	ble.w	80115e0 <SLIDER_DrawSkinFlex+0x68>
 8011846:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801184a:	f8d8 0000 	ldr.w	r0, [r8]
 801184e:	9303      	str	r3, [sp, #12]
 8011850:	6923      	ldr	r3, [r4, #16]
 8011852:	6961      	ldr	r1, [r4, #20]
 8011854:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8011856:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 801185a:	eb03 0060 	add.w	r0, r3, r0, asr #1
 801185e:	9b03      	ldr	r3, [sp, #12]
 8011860:	440a      	add	r2, r1
 8011862:	3e01      	subs	r6, #1
 8011864:	fb03 f307 	mul.w	r3, r3, r7
 8011868:	3a01      	subs	r2, #1
 801186a:	fb93 f3f6 	sdiv	r3, r3, r6
 801186e:	4418      	add	r0, r3
 8011870:	f001 faa4 	bl	8012dbc <GUI_DrawVLine>
 8011874:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8011878:	3701      	adds	r7, #1
 801187a:	42be      	cmp	r6, r7
 801187c:	dce3      	bgt.n	8011846 <SLIDER_DrawSkinFlex+0x2ce>
 801187e:	e6af      	b.n	80115e0 <SLIDER_DrawSkinFlex+0x68>
 8011880:	6962      	ldr	r2, [r4, #20]
 8011882:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8011884:	6828      	ldr	r0, [r5, #0]
 8011886:	eb02 0803 	add.w	r8, r2, r3
 801188a:	3601      	adds	r6, #1
 801188c:	1076      	asrs	r6, r6, #1
 801188e:	f7f3 fe89 	bl	80055a4 <GUI_SetColor>
 8011892:	f108 0701 	add.w	r7, r8, #1
 8011896:	6922      	ldr	r2, [r4, #16]
 8011898:	eb06 0a07 	add.w	sl, r6, r7
 801189c:	f10a 39ff 	add.w	r9, sl, #4294967295
 80118a0:	18b0      	adds	r0, r6, r2
 80118a2:	464b      	mov	r3, r9
 80118a4:	3801      	subs	r0, #1
 80118a6:	4639      	mov	r1, r7
 80118a8:	f001 fd2c 	bl	8013304 <GUI_DrawLine>
 80118ac:	69a2      	ldr	r2, [r4, #24]
 80118ae:	1b90      	subs	r0, r2, r6
 80118b0:	464b      	mov	r3, r9
 80118b2:	3001      	adds	r0, #1
 80118b4:	4639      	mov	r1, r7
 80118b6:	f001 fd25 	bl	8013304 <GUI_DrawLine>
 80118ba:	4651      	mov	r1, sl
 80118bc:	69e2      	ldr	r2, [r4, #28]
 80118be:	6920      	ldr	r0, [r4, #16]
 80118c0:	f001 fa7c 	bl	8012dbc <GUI_DrawVLine>
 80118c4:	4651      	mov	r1, sl
 80118c6:	69e2      	ldr	r2, [r4, #28]
 80118c8:	69a0      	ldr	r0, [r4, #24]
 80118ca:	f001 fa77 	bl	8012dbc <GUI_DrawVLine>
 80118ce:	69a2      	ldr	r2, [r4, #24]
 80118d0:	6921      	ldr	r1, [r4, #16]
 80118d2:	69e0      	ldr	r0, [r4, #28]
 80118d4:	3a01      	subs	r2, #1
 80118d6:	3101      	adds	r1, #1
 80118d8:	f001 fa16 	bl	8012d08 <GUI_DrawHLine>
 80118dc:	6868      	ldr	r0, [r5, #4]
 80118de:	f7f3 fe61 	bl	80055a4 <GUI_SetColor>
 80118e2:	6922      	ldr	r2, [r4, #16]
 80118e4:	f108 0802 	add.w	r8, r8, #2
 80118e8:	18b0      	adds	r0, r6, r2
 80118ea:	464b      	mov	r3, r9
 80118ec:	3801      	subs	r0, #1
 80118ee:	3201      	adds	r2, #1
 80118f0:	4641      	mov	r1, r8
 80118f2:	f001 fd07 	bl	8013304 <GUI_DrawLine>
 80118f6:	69a2      	ldr	r2, [r4, #24]
 80118f8:	1b90      	subs	r0, r2, r6
 80118fa:	464b      	mov	r3, r9
 80118fc:	4641      	mov	r1, r8
 80118fe:	3001      	adds	r0, #1
 8011900:	3a01      	subs	r2, #1
 8011902:	f001 fcff 	bl	8013304 <GUI_DrawLine>
 8011906:	69e2      	ldr	r2, [r4, #28]
 8011908:	6920      	ldr	r0, [r4, #16]
 801190a:	4651      	mov	r1, sl
 801190c:	3a01      	subs	r2, #1
 801190e:	3001      	adds	r0, #1
 8011910:	f001 fa54 	bl	8012dbc <GUI_DrawVLine>
 8011914:	69e2      	ldr	r2, [r4, #28]
 8011916:	69a0      	ldr	r0, [r4, #24]
 8011918:	4651      	mov	r1, sl
 801191a:	3a01      	subs	r2, #1
 801191c:	3801      	subs	r0, #1
 801191e:	f001 fa4d 	bl	8012dbc <GUI_DrawVLine>
 8011922:	69a2      	ldr	r2, [r4, #24]
 8011924:	6921      	ldr	r1, [r4, #16]
 8011926:	69e0      	ldr	r0, [r4, #28]
 8011928:	3a02      	subs	r2, #2
 801192a:	3102      	adds	r1, #2
 801192c:	3801      	subs	r0, #1
 801192e:	f001 f9eb 	bl	8012d08 <GUI_DrawHLine>
 8011932:	68eb      	ldr	r3, [r5, #12]
 8011934:	9301      	str	r3, [sp, #4]
 8011936:	69e3      	ldr	r3, [r4, #28]
 8011938:	69a2      	ldr	r2, [r4, #24]
 801193a:	6920      	ldr	r0, [r4, #16]
 801193c:	68a9      	ldr	r1, [r5, #8]
 801193e:	9100      	str	r1, [sp, #0]
 8011940:	3b02      	subs	r3, #2
 8011942:	4649      	mov	r1, r9
 8011944:	3a02      	subs	r2, #2
 8011946:	3002      	adds	r0, #2
 8011948:	f001 f84a 	bl	80129e0 <GUI_DrawGradientV>
 801194c:	68a8      	ldr	r0, [r5, #8]
 801194e:	f7f3 fe29 	bl	80055a4 <GUI_SetColor>
 8011952:	2e03      	cmp	r6, #3
 8011954:	f77f ae44 	ble.w	80115e0 <SLIDER_DrawSkinFlex+0x68>
 8011958:	f106 38ff 	add.w	r8, r6, #4294967295
 801195c:	2502      	movs	r5, #2
 801195e:	69a2      	ldr	r2, [r4, #24]
 8011960:	6921      	ldr	r1, [r4, #16]
 8011962:	1b92      	subs	r2, r2, r6
 8011964:	4431      	add	r1, r6
 8011966:	442a      	add	r2, r5
 8011968:	1b49      	subs	r1, r1, r5
 801196a:	1978      	adds	r0, r7, r5
 801196c:	3a01      	subs	r2, #1
 801196e:	3101      	adds	r1, #1
 8011970:	3501      	adds	r5, #1
 8011972:	f001 f9c9 	bl	8012d08 <GUI_DrawHLine>
 8011976:	4545      	cmp	r5, r8
 8011978:	d1f1      	bne.n	801195e <SLIDER_DrawSkinFlex+0x3e6>
 801197a:	e631      	b.n	80115e0 <SLIDER_DrawSkinFlex+0x68>

0801197c <TEXT_Callback>:
 801197c:	b530      	push	{r4, r5, lr}
 801197e:	6845      	ldr	r5, [r0, #4]
 8011980:	b085      	sub	sp, #20
 8011982:	4604      	mov	r4, r0
 8011984:	4601      	mov	r1, r0
 8011986:	4628      	mov	r0, r5
 8011988:	f000 f938 	bl	8011bfc <WIDGET_HandleActive>
 801198c:	b1b8      	cbz	r0, 80119be <TEXT_Callback+0x42>
 801198e:	6823      	ldr	r3, [r4, #0]
 8011990:	2b0f      	cmp	r3, #15
 8011992:	d016      	beq.n	80119c2 <TEXT_Callback+0x46>
 8011994:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8011998:	d040      	beq.n	8011a1c <TEXT_Callback+0xa0>
 801199a:	2b0b      	cmp	r3, #11
 801199c:	d10c      	bne.n	80119b8 <TEXT_Callback+0x3c>
 801199e:	4628      	mov	r0, r5
 80119a0:	f7f3 fa68 	bl	8004e74 <GUI_ALLOC_LockH>
 80119a4:	ad04      	add	r5, sp, #16
 80119a6:	4603      	mov	r3, r0
 80119a8:	f845 3d08 	str.w	r3, [r5, #-8]!
 80119ac:	3044      	adds	r0, #68	; 0x44
 80119ae:	f7f3 fc05 	bl	80051bc <GUI_ALLOC_FreePtr>
 80119b2:	4628      	mov	r0, r5
 80119b4:	f7f3 fa70 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80119b8:	4620      	mov	r0, r4
 80119ba:	f7fb f997 	bl	800ccec <WM_DefaultProc>
 80119be:	b005      	add	sp, #20
 80119c0:	bd30      	pop	{r4, r5, pc}
 80119c2:	4628      	mov	r0, r5
 80119c4:	f7f3 fa56 	bl	8004e74 <GUI_ALLOC_LockH>
 80119c8:	9000      	str	r0, [sp, #0]
 80119ca:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80119cc:	f7f5 ff98 	bl	8007900 <LCD_SetColor>
 80119d0:	9b00      	ldr	r3, [sp, #0]
 80119d2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80119d4:	f7f3 fe0c 	bl	80055f0 <GUI_SetFont>
 80119d8:	4628      	mov	r0, r5
 80119da:	f004 fbf5 	bl	80161c8 <WM_GetHasTrans>
 80119de:	b340      	cbz	r0, 8011a32 <TEXT_Callback+0xb6>
 80119e0:	9b00      	ldr	r3, [sp, #0]
 80119e2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80119e4:	b1ab      	cbz	r3, 8011a12 <TEXT_Callback+0x96>
 80119e6:	2002      	movs	r0, #2
 80119e8:	f7f3 fe30 	bl	800564c <GUI_SetTextMode>
 80119ec:	a802      	add	r0, sp, #8
 80119ee:	f7fb fca7 	bl	800d340 <WM_GetClientRect>
 80119f2:	9b00      	ldr	r3, [sp, #0]
 80119f4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80119f6:	f7f3 fa3d 	bl	8004e74 <GUI_ALLOC_LockH>
 80119fa:	9a00      	ldr	r2, [sp, #0]
 80119fc:	9001      	str	r0, [sp, #4]
 80119fe:	f892 3040 	ldrb.w	r3, [r2, #64]	; 0x40
 8011a02:	f9b2 2048 	ldrsh.w	r2, [r2, #72]	; 0x48
 8011a06:	a902      	add	r1, sp, #8
 8011a08:	f7f4 fb58 	bl	80060bc <GUI_DispStringInRectWrap>
 8011a0c:	a801      	add	r0, sp, #4
 8011a0e:	f7f3 fa43 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011a12:	4668      	mov	r0, sp
 8011a14:	f7f3 fa40 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011a18:	b005      	add	sp, #20
 8011a1a:	bd30      	pop	{r4, r5, pc}
 8011a1c:	68e3      	ldr	r3, [r4, #12]
 8011a1e:	b17b      	cbz	r3, 8011a40 <TEXT_Callback+0xc4>
 8011a20:	7a1b      	ldrb	r3, [r3, #8]
 8011a22:	2b00      	cmp	r3, #0
 8011a24:	bf14      	ite	ne
 8011a26:	2101      	movne	r1, #1
 8011a28:	2102      	moveq	r1, #2
 8011a2a:	4628      	mov	r0, r5
 8011a2c:	f7fb fe96 	bl	800d75c <WM_NotifyParent>
 8011a30:	e7c2      	b.n	80119b8 <TEXT_Callback+0x3c>
 8011a32:	9b00      	ldr	r3, [sp, #0]
 8011a34:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8011a36:	f7f5 ff5d 	bl	80078f4 <LCD_SetBkColor>
 8011a3a:	f7f3 fea5 	bl	8005788 <GUI_Clear>
 8011a3e:	e7cf      	b.n	80119e0 <TEXT_Callback+0x64>
 8011a40:	2103      	movs	r1, #3
 8011a42:	e7f2      	b.n	8011a2a <TEXT_Callback+0xae>

08011a44 <TEXT_CreateIndirect>:
 8011a44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a48:	4604      	mov	r4, r0
 8011a4a:	b087      	sub	sp, #28
 8011a4c:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 8011a50:	69a5      	ldr	r5, [r4, #24]
 8011a52:	f9b4 e010 	ldrsh.w	lr, [r4, #16]
 8011a56:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8011a5a:	9100      	str	r1, [sp, #0]
 8011a5c:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8011a60:	f8df c090 	ldr.w	ip, [pc, #144]	; 8011af4 <TEXT_CreateIndirect+0xb0>
 8011a64:	f8cd c008 	str.w	ip, [sp, #8]
 8011a68:	18f1      	adds	r1, r6, r3
 8011a6a:	3520      	adds	r5, #32
 8011a6c:	2603      	movs	r6, #3
 8011a6e:	9503      	str	r5, [sp, #12]
 8011a70:	9601      	str	r6, [sp, #4]
 8011a72:	4410      	add	r0, r2
 8011a74:	4673      	mov	r3, lr
 8011a76:	463a      	mov	r2, r7
 8011a78:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 8011a7c:	8a67      	ldrh	r7, [r4, #18]
 8011a7e:	6865      	ldr	r5, [r4, #4]
 8011a80:	f7fa fc7c 	bl	800c37c <WM_CreateWindowAsChild>
 8011a84:	4604      	mov	r4, r0
 8011a86:	b300      	cbz	r0, 8011aca <TEXT_CreateIndirect+0x86>
 8011a88:	b31d      	cbz	r5, 8011ad2 <TEXT_CreateIndirect+0x8e>
 8011a8a:	4628      	mov	r0, r5
 8011a8c:	f7ee fbae 	bl	80001ec <strlen>
 8011a90:	3001      	adds	r0, #1
 8011a92:	f7f3 fbdf 	bl	8005254 <GUI_ALLOC_AllocZero>
 8011a96:	4681      	mov	r9, r0
 8011a98:	b9e8      	cbnz	r0, 8011ad6 <TEXT_CreateIndirect+0x92>
 8011a9a:	f10d 0814 	add.w	r8, sp, #20
 8011a9e:	4620      	mov	r0, r4
 8011aa0:	f7f3 f9e8 	bl	8004e74 <GUI_ALLOC_LockH>
 8011aa4:	4631      	mov	r1, r6
 8011aa6:	2200      	movs	r2, #0
 8011aa8:	9005      	str	r0, [sp, #20]
 8011aaa:	f000 f86f 	bl	8011b8c <WIDGET__Init>
 8011aae:	4b10      	ldr	r3, [pc, #64]	; (8011af0 <TEXT_CreateIndirect+0xac>)
 8011ab0:	9e05      	ldr	r6, [sp, #20]
 8011ab2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8011ab4:	f106 0534 	add.w	r5, r6, #52	; 0x34
 8011ab8:	f8c6 9044 	str.w	r9, [r6, #68]	; 0x44
 8011abc:	f8a6 7048 	strh.w	r7, [r6, #72]	; 0x48
 8011ac0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8011ac4:	4640      	mov	r0, r8
 8011ac6:	f7f3 f9e7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011aca:	4620      	mov	r0, r4
 8011acc:	b007      	add	sp, #28
 8011ace:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011ad2:	46a9      	mov	r9, r5
 8011ad4:	e7e1      	b.n	8011a9a <TEXT_CreateIndirect+0x56>
 8011ad6:	f7f3 f9cd 	bl	8004e74 <GUI_ALLOC_LockH>
 8011ada:	f10d 0818 	add.w	r8, sp, #24
 8011ade:	4629      	mov	r1, r5
 8011ae0:	f848 0d04 	str.w	r0, [r8, #-4]!
 8011ae4:	f005 fca5 	bl	8017432 <strcpy>
 8011ae8:	4640      	mov	r0, r8
 8011aea:	f7f3 f9d5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011aee:	e7d6      	b.n	8011a9e <TEXT_CreateIndirect+0x5a>
 8011af0:	200002cc 	.word	0x200002cc
 8011af4:	0801197d 	.word	0x0801197d

08011af8 <WIDGET__RotateRect90>:
 8011af8:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011afc:	b470      	push	{r4, r5, r6}
 8011afe:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8011b02:	8856      	ldrh	r6, [r2, #2]
 8011b04:	88d0      	ldrh	r0, [r2, #6]
 8011b06:	f9b2 5000 	ldrsh.w	r5, [r2]
 8011b0a:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8011b0e:	80ca      	strh	r2, [r1, #6]
 8011b10:	1ae3      	subs	r3, r4, r3
 8011b12:	b29b      	uxth	r3, r3
 8011b14:	1a18      	subs	r0, r3, r0
 8011b16:	1b9b      	subs	r3, r3, r6
 8011b18:	804d      	strh	r5, [r1, #2]
 8011b1a:	8008      	strh	r0, [r1, #0]
 8011b1c:	808b      	strh	r3, [r1, #4]
 8011b1e:	bc70      	pop	{r4, r5, r6}
 8011b20:	4770      	bx	lr
 8011b22:	bf00      	nop

08011b24 <WIDGET__GetClientRect>:
 8011b24:	b510      	push	{r4, lr}
 8011b26:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011b28:	071b      	lsls	r3, r3, #28
 8011b2a:	b082      	sub	sp, #8
 8011b2c:	460c      	mov	r4, r1
 8011b2e:	d404      	bmi.n	8011b3a <WIDGET__GetClientRect+0x16>
 8011b30:	4608      	mov	r0, r1
 8011b32:	f7fb fc05 	bl	800d340 <WM_GetClientRect>
 8011b36:	b002      	add	sp, #8
 8011b38:	bd10      	pop	{r4, pc}
 8011b3a:	4668      	mov	r0, sp
 8011b3c:	f7fb fc00 	bl	800d340 <WM_GetClientRect>
 8011b40:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 8011b44:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8011b48:	f8bd 2000 	ldrh.w	r2, [sp]
 8011b4c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011b50:	8020      	strh	r0, [r4, #0]
 8011b52:	80a1      	strh	r1, [r4, #4]
 8011b54:	8062      	strh	r2, [r4, #2]
 8011b56:	80e3      	strh	r3, [r4, #6]
 8011b58:	b002      	add	sp, #8
 8011b5a:	bd10      	pop	{r4, pc}

08011b5c <WIDGET__GetWindowSizeX>:
 8011b5c:	b510      	push	{r4, lr}
 8011b5e:	b082      	sub	sp, #8
 8011b60:	4604      	mov	r4, r0
 8011b62:	f7f3 f987 	bl	8004e74 <GUI_ALLOC_LockH>
 8011b66:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011b68:	9001      	str	r0, [sp, #4]
 8011b6a:	071b      	lsls	r3, r3, #28
 8011b6c:	4620      	mov	r0, r4
 8011b6e:	d408      	bmi.n	8011b82 <WIDGET__GetWindowSizeX+0x26>
 8011b70:	f003 ff4a 	bl	8015a08 <WM_GetWindowSizeX>
 8011b74:	4604      	mov	r4, r0
 8011b76:	a801      	add	r0, sp, #4
 8011b78:	f7f3 f98e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011b7c:	4620      	mov	r0, r4
 8011b7e:	b002      	add	sp, #8
 8011b80:	bd10      	pop	{r4, pc}
 8011b82:	f003 ff57 	bl	8015a34 <WM_GetWindowSizeY>
 8011b86:	4604      	mov	r4, r0
 8011b88:	e7f5      	b.n	8011b76 <WIDGET__GetWindowSizeX+0x1a>
 8011b8a:	bf00      	nop

08011b8c <WIDGET__Init>:
 8011b8c:	4b02      	ldr	r3, [pc, #8]	; (8011b98 <WIDGET__Init+0xc>)
 8011b8e:	8642      	strh	r2, [r0, #50]	; 0x32
 8011b90:	681b      	ldr	r3, [r3, #0]
 8011b92:	8601      	strh	r1, [r0, #48]	; 0x30
 8011b94:	62c3      	str	r3, [r0, #44]	; 0x2c
 8011b96:	4770      	bx	lr
 8011b98:	200002dc 	.word	0x200002dc

08011b9c <WIDGET_OrState>:
 8011b9c:	b900      	cbnz	r0, 8011ba0 <WIDGET_OrState+0x4>
 8011b9e:	4770      	bx	lr
 8011ba0:	b530      	push	{r4, r5, lr}
 8011ba2:	b083      	sub	sp, #12
 8011ba4:	460c      	mov	r4, r1
 8011ba6:	4605      	mov	r5, r0
 8011ba8:	f7f3 f964 	bl	8004e74 <GUI_ALLOC_LockH>
 8011bac:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 8011bae:	9001      	str	r0, [sp, #4]
 8011bb0:	ea34 0301 	bics.w	r3, r4, r1
 8011bb4:	d004      	beq.n	8011bc0 <WIDGET_OrState+0x24>
 8011bb6:	4321      	orrs	r1, r4
 8011bb8:	8641      	strh	r1, [r0, #50]	; 0x32
 8011bba:	4628      	mov	r0, r5
 8011bbc:	f7fa fb88 	bl	800c2d0 <WM_InvalidateWindow>
 8011bc0:	a801      	add	r0, sp, #4
 8011bc2:	f7f3 f969 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011bc6:	b003      	add	sp, #12
 8011bc8:	bd30      	pop	{r4, r5, pc}
 8011bca:	bf00      	nop

08011bcc <WIDGET_AndState>:
 8011bcc:	b900      	cbnz	r0, 8011bd0 <WIDGET_AndState+0x4>
 8011bce:	4770      	bx	lr
 8011bd0:	b530      	push	{r4, r5, lr}
 8011bd2:	b083      	sub	sp, #12
 8011bd4:	460c      	mov	r4, r1
 8011bd6:	4605      	mov	r5, r0
 8011bd8:	f7f3 f94c 	bl	8004e74 <GUI_ALLOC_LockH>
 8011bdc:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011bde:	9001      	str	r0, [sp, #4]
 8011be0:	ea23 0104 	bic.w	r1, r3, r4
 8011be4:	428b      	cmp	r3, r1
 8011be6:	d003      	beq.n	8011bf0 <WIDGET_AndState+0x24>
 8011be8:	8641      	strh	r1, [r0, #50]	; 0x32
 8011bea:	4628      	mov	r0, r5
 8011bec:	f7fa fb70 	bl	800c2d0 <WM_InvalidateWindow>
 8011bf0:	a801      	add	r0, sp, #4
 8011bf2:	f7f3 f951 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011bf6:	b003      	add	sp, #12
 8011bf8:	bd30      	pop	{r4, r5, pc}
 8011bfa:	bf00      	nop

08011bfc <WIDGET_HandleActive>:
 8011bfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c00:	b084      	sub	sp, #16
 8011c02:	b920      	cbnz	r0, 8011c0e <WIDGET_HandleActive+0x12>
 8011c04:	2401      	movs	r4, #1
 8011c06:	4620      	mov	r0, r4
 8011c08:	b004      	add	sp, #16
 8011c0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c0e:	460e      	mov	r6, r1
 8011c10:	4607      	mov	r7, r0
 8011c12:	f7f3 f92f 	bl	8004e74 <GUI_ALLOC_LockH>
 8011c16:	6833      	ldr	r3, [r6, #0]
 8011c18:	9002      	str	r0, [sp, #8]
 8011c1a:	2b16      	cmp	r3, #22
 8011c1c:	4605      	mov	r5, r0
 8011c1e:	f000 808c 	beq.w	8011d3a <WIDGET_HandleActive+0x13e>
 8011c22:	dd26      	ble.n	8011c72 <WIDGET_HandleActive+0x76>
 8011c24:	2b1f      	cmp	r3, #31
 8011c26:	d078      	beq.n	8011d1a <WIDGET_HandleActive+0x11e>
 8011c28:	dd4d      	ble.n	8011cc6 <WIDGET_HandleActive+0xca>
 8011c2a:	2b31      	cmp	r3, #49	; 0x31
 8011c2c:	d033      	beq.n	8011c96 <WIDGET_HandleActive+0x9a>
 8011c2e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011c32:	d144      	bne.n	8011cbe <WIDGET_HandleActive+0xc2>
 8011c34:	68f2      	ldr	r2, [r6, #12]
 8011c36:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011c38:	6814      	ldr	r4, [r2, #0]
 8011c3a:	681b      	ldr	r3, [r3, #0]
 8011c3c:	62c2      	str	r2, [r0, #44]	; 0x2c
 8011c3e:	a802      	add	r0, sp, #8
 8011c40:	1b1c      	subs	r4, r3, r4
 8011c42:	f7f3 f929 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011c46:	4638      	mov	r0, r7
 8011c48:	f7f3 f914 	bl	8004e74 <GUI_ALLOC_LockH>
 8011c4c:	ad04      	add	r5, sp, #16
 8011c4e:	4262      	negs	r2, r4
 8011c50:	9400      	str	r4, [sp, #0]
 8011c52:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011c56:	4623      	mov	r3, r4
 8011c58:	4611      	mov	r1, r2
 8011c5a:	f7fc fd2d 	bl	800e6b8 <WM__UpdateChildPositions>
 8011c5e:	4628      	mov	r0, r5
 8011c60:	f7f3 f91a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011c64:	4638      	mov	r0, r7
 8011c66:	f7fa fb33 	bl	800c2d0 <WM_InvalidateWindow>
 8011c6a:	9d02      	ldr	r5, [sp, #8]
 8011c6c:	2400      	movs	r4, #0
 8011c6e:	b95d      	cbnz	r5, 8011c88 <WIDGET_HandleActive+0x8c>
 8011c70:	e7c9      	b.n	8011c06 <WIDGET_HandleActive+0xa>
 8011c72:	2b11      	cmp	r3, #17
 8011c74:	d057      	beq.n	8011d26 <WIDGET_HandleActive+0x12a>
 8011c76:	dd3c      	ble.n	8011cf2 <WIDGET_HandleActive+0xf6>
 8011c78:	2b14      	cmp	r3, #20
 8011c7a:	d011      	beq.n	8011ca0 <WIDGET_HandleActive+0xa4>
 8011c7c:	2b15      	cmp	r3, #21
 8011c7e:	d11e      	bne.n	8011cbe <WIDGET_HandleActive+0xc2>
 8011c80:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8011c84:	60f3      	str	r3, [r6, #12]
 8011c86:	2400      	movs	r4, #0
 8011c88:	a802      	add	r0, sp, #8
 8011c8a:	f7f3 f905 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011c8e:	4620      	mov	r0, r4
 8011c90:	b004      	add	sp, #16
 8011c92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c96:	2400      	movs	r4, #0
 8011c98:	60f4      	str	r4, [r6, #12]
 8011c9a:	2d00      	cmp	r5, #0
 8011c9c:	d1f4      	bne.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011c9e:	e7b2      	b.n	8011c06 <WIDGET_HandleActive+0xa>
 8011ca0:	68f4      	ldr	r4, [r6, #12]
 8011ca2:	4621      	mov	r1, r4
 8011ca4:	f7fa fb06 	bl	800c2b4 <WM__GetClientRectWin>
 8011ca8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8011caa:	4621      	mov	r1, r4
 8011cac:	4620      	mov	r0, r4
 8011cae:	681a      	ldr	r2, [r3, #0]
 8011cb0:	f7f4 ff7c 	bl	8006bac <GUI__ReduceRect>
 8011cb4:	9d02      	ldr	r5, [sp, #8]
 8011cb6:	2400      	movs	r4, #0
 8011cb8:	2d00      	cmp	r5, #0
 8011cba:	d1e5      	bne.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011cbc:	e7a3      	b.n	8011c06 <WIDGET_HandleActive+0xa>
 8011cbe:	2401      	movs	r4, #1
 8011cc0:	2d00      	cmp	r5, #0
 8011cc2:	d1e1      	bne.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011cc4:	e79f      	b.n	8011c06 <WIDGET_HandleActive+0xa>
 8011cc6:	2b1e      	cmp	r3, #30
 8011cc8:	d1f9      	bne.n	8011cbe <WIDGET_HandleActive+0xc2>
 8011cca:	f8d6 800c 	ldr.w	r8, [r6, #12]
 8011cce:	f1b8 0f01 	cmp.w	r8, #1
 8011cd2:	d136      	bne.n	8011d42 <WIDGET_HandleActive+0x146>
 8011cd4:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011cd6:	f003 0410 	and.w	r4, r3, #16
 8011cda:	b2a4      	uxth	r4, r4
 8011cdc:	2c00      	cmp	r4, #0
 8011cde:	d14f      	bne.n	8011d80 <WIDGET_HandleActive+0x184>
 8011ce0:	a802      	add	r0, sp, #8
 8011ce2:	f7f3 f8d9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011ce6:	9d02      	ldr	r5, [sp, #8]
 8011ce8:	f8c6 800c 	str.w	r8, [r6, #12]
 8011cec:	2d00      	cmp	r5, #0
 8011cee:	d1cb      	bne.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011cf0:	e789      	b.n	8011c06 <WIDGET_HandleActive+0xa>
 8011cf2:	2b0d      	cmp	r3, #13
 8011cf4:	d1e3      	bne.n	8011cbe <WIDGET_HandleActive+0xc2>
 8011cf6:	68f3      	ldr	r3, [r6, #12]
 8011cf8:	68db      	ldr	r3, [r3, #12]
 8011cfa:	2b00      	cmp	r3, #0
 8011cfc:	d0df      	beq.n	8011cbe <WIDGET_HandleActive+0xc2>
 8011cfe:	7a1b      	ldrb	r3, [r3, #8]
 8011d00:	2b00      	cmp	r3, #0
 8011d02:	d0dc      	beq.n	8011cbe <WIDGET_HandleActive+0xc2>
 8011d04:	a802      	add	r0, sp, #8
 8011d06:	f7f3 f8c7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011d0a:	4638      	mov	r0, r7
 8011d0c:	f003 fe3e 	bl	801598c <WM_BringToTop>
 8011d10:	9d02      	ldr	r5, [sp, #8]
 8011d12:	2400      	movs	r4, #0
 8011d14:	2d00      	cmp	r5, #0
 8011d16:	d1b7      	bne.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011d18:	e775      	b.n	8011c06 <WIDGET_HandleActive+0xa>
 8011d1a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011d1c:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8011d20:	60f3      	str	r3, [r6, #12]
 8011d22:	2400      	movs	r4, #0
 8011d24:	e7b0      	b.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011d26:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011d28:	06db      	lsls	r3, r3, #27
 8011d2a:	d504      	bpl.n	8011d36 <WIDGET_HandleActive+0x13a>
 8011d2c:	68f3      	ldr	r3, [r6, #12]
 8011d2e:	b113      	cbz	r3, 8011d36 <WIDGET_HandleActive+0x13a>
 8011d30:	7a1b      	ldrb	r3, [r3, #8]
 8011d32:	2b00      	cmp	r3, #0
 8011d34:	d136      	bne.n	8011da4 <WIDGET_HandleActive+0x1a8>
 8011d36:	2401      	movs	r4, #1
 8011d38:	e7a6      	b.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011d3a:	68f3      	ldr	r3, [r6, #12]
 8011d3c:	8603      	strh	r3, [r0, #48]	; 0x30
 8011d3e:	2400      	movs	r4, #0
 8011d40:	e7a2      	b.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011d42:	8e44      	ldrh	r4, [r0, #50]	; 0x32
 8011d44:	4638      	mov	r0, r7
 8011d46:	f7f3 f895 	bl	8004e74 <GUI_ALLOC_LockH>
 8011d4a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011d4c:	9003      	str	r0, [sp, #12]
 8011d4e:	f024 0401 	bic.w	r4, r4, #1
 8011d52:	429c      	cmp	r4, r3
 8011d54:	d003      	beq.n	8011d5e <WIDGET_HandleActive+0x162>
 8011d56:	8644      	strh	r4, [r0, #50]	; 0x32
 8011d58:	4638      	mov	r0, r7
 8011d5a:	f7fa fab9 	bl	800c2d0 <WM_InvalidateWindow>
 8011d5e:	a803      	add	r0, sp, #12
 8011d60:	f7f3 f89a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011d64:	2409      	movs	r4, #9
 8011d66:	a802      	add	r0, sp, #8
 8011d68:	f7f3 f896 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011d6c:	4621      	mov	r1, r4
 8011d6e:	4638      	mov	r0, r7
 8011d70:	f7fb fcf4 	bl	800d75c <WM_NotifyParent>
 8011d74:	9d02      	ldr	r5, [sp, #8]
 8011d76:	2400      	movs	r4, #0
 8011d78:	60f4      	str	r4, [r6, #12]
 8011d7a:	2d00      	cmp	r5, #0
 8011d7c:	d184      	bne.n	8011c88 <WIDGET_HandleActive+0x8c>
 8011d7e:	e742      	b.n	8011c06 <WIDGET_HandleActive+0xa>
 8011d80:	4638      	mov	r0, r7
 8011d82:	f043 0401 	orr.w	r4, r3, #1
 8011d86:	f7f3 f875 	bl	8004e74 <GUI_ALLOC_LockH>
 8011d8a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8011d8c:	9003      	str	r0, [sp, #12]
 8011d8e:	42a3      	cmp	r3, r4
 8011d90:	d003      	beq.n	8011d9a <WIDGET_HandleActive+0x19e>
 8011d92:	8644      	strh	r4, [r0, #50]	; 0x32
 8011d94:	4638      	mov	r0, r7
 8011d96:	f7fa fa9b 	bl	800c2d0 <WM_InvalidateWindow>
 8011d9a:	a803      	add	r0, sp, #12
 8011d9c:	f7f3 f87c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011da0:	2408      	movs	r4, #8
 8011da2:	e7e0      	b.n	8011d66 <WIDGET_HandleActive+0x16a>
 8011da4:	a802      	add	r0, sp, #8
 8011da6:	f7f3 f877 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011daa:	4638      	mov	r0, r7
 8011dac:	f7fb fd28 	bl	800d800 <WM_SetFocus>
 8011db0:	9d02      	ldr	r5, [sp, #8]
 8011db2:	2401      	movs	r4, #1
 8011db4:	2d00      	cmp	r5, #0
 8011db6:	f47f af67 	bne.w	8011c88 <WIDGET_HandleActive+0x8c>
 8011dba:	e724      	b.n	8011c06 <WIDGET_HandleActive+0xa>

08011dbc <WIDGET__SetScrollState>:
 8011dbc:	b570      	push	{r4, r5, r6, lr}
 8011dbe:	460e      	mov	r6, r1
 8011dc0:	21fe      	movs	r1, #254	; 0xfe
 8011dc2:	4614      	mov	r4, r2
 8011dc4:	4605      	mov	r5, r0
 8011dc6:	f7fb fb43 	bl	800d450 <WM_GetDialogItem>
 8011dca:	4631      	mov	r1, r6
 8011dcc:	f7fb fd6a 	bl	800d8a4 <WM_SetScrollState>
 8011dd0:	4628      	mov	r0, r5
 8011dd2:	21ff      	movs	r1, #255	; 0xff
 8011dd4:	f7fb fb3c 	bl	800d450 <WM_GetDialogItem>
 8011dd8:	4621      	mov	r1, r4
 8011dda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011dde:	f7fb bd61 	b.w	800d8a4 <WM_SetScrollState>
 8011de2:	bf00      	nop

08011de4 <WIDGET__DrawTriangle>:
 8011de4:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8011de6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011dea:	460d      	mov	r5, r1
 8011dec:	0701      	lsls	r1, r0, #28
 8011dee:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8011df2:	d411      	bmi.n	8011e18 <WIDGET__DrawTriangle+0x34>
 8011df4:	2b00      	cmp	r3, #0
 8011df6:	db21      	blt.n	8011e3c <WIDGET__DrawTriangle+0x58>
 8011df8:	1ad6      	subs	r6, r2, r3
 8011dfa:	189c      	adds	r4, r3, r2
 8011dfc:	1c57      	adds	r7, r2, #1
 8011dfe:	4622      	mov	r2, r4
 8011e00:	4631      	mov	r1, r6
 8011e02:	4628      	mov	r0, r5
 8011e04:	3601      	adds	r6, #1
 8011e06:	f000 ffd9 	bl	8012dbc <GUI_DrawVLine>
 8011e0a:	42b7      	cmp	r7, r6
 8011e0c:	f104 34ff 	add.w	r4, r4, #4294967295
 8011e10:	4445      	add	r5, r8
 8011e12:	d1f4      	bne.n	8011dfe <WIDGET__DrawTriangle+0x1a>
 8011e14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e18:	2b00      	cmp	r3, #0
 8011e1a:	dbfb      	blt.n	8011e14 <WIDGET__DrawTriangle+0x30>
 8011e1c:	1ad6      	subs	r6, r2, r3
 8011e1e:	189c      	adds	r4, r3, r2
 8011e20:	1c57      	adds	r7, r2, #1
 8011e22:	4622      	mov	r2, r4
 8011e24:	4631      	mov	r1, r6
 8011e26:	4628      	mov	r0, r5
 8011e28:	3601      	adds	r6, #1
 8011e2a:	f000 ff6d 	bl	8012d08 <GUI_DrawHLine>
 8011e2e:	42be      	cmp	r6, r7
 8011e30:	f104 34ff 	add.w	r4, r4, #4294967295
 8011e34:	4445      	add	r5, r8
 8011e36:	d1f4      	bne.n	8011e22 <WIDGET__DrawTriangle+0x3e>
 8011e38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011e40 <WIDGET__EFFECT_DrawDownRect>:
 8011e40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e42:	4605      	mov	r5, r0
 8011e44:	b085      	sub	sp, #20
 8011e46:	460c      	mov	r4, r1
 8011e48:	2900      	cmp	r1, #0
 8011e4a:	d048      	beq.n	8011ede <WIDGET__EFFECT_DrawDownRect+0x9e>
 8011e4c:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 8011e4e:	071b      	lsls	r3, r3, #28
 8011e50:	d516      	bpl.n	8011e80 <WIDGET__EFFECT_DrawDownRect+0x40>
 8011e52:	f9b5 3000 	ldrsh.w	r3, [r5]
 8011e56:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8011e5a:	8866      	ldrh	r6, [r4, #2]
 8011e5c:	88e1      	ldrh	r1, [r4, #6]
 8011e5e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8011e62:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011e66:	f8ad 7002 	strh.w	r7, [sp, #2]
 8011e6a:	1ad2      	subs	r2, r2, r3
 8011e6c:	b293      	uxth	r3, r2
 8011e6e:	1a5a      	subs	r2, r3, r1
 8011e70:	1b9b      	subs	r3, r3, r6
 8011e72:	f8ad 2000 	strh.w	r2, [sp]
 8011e76:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011e7a:	f8ad 0006 	strh.w	r0, [sp, #6]
 8011e7e:	466c      	mov	r4, sp
 8011e80:	f105 0308 	add.w	r3, r5, #8
 8011e84:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011e88:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8011e8a:	ab02      	add	r3, sp, #8
 8011e8c:	6816      	ldr	r6, [r2, #0]
 8011e8e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011e92:	4619      	mov	r1, r3
 8011e94:	4628      	mov	r0, r5
 8011e96:	f7fc fbaf 	bl	800e5f8 <WM__Screen2Client>
 8011e9a:	f9b4 3000 	ldrsh.w	r3, [r4]
 8011e9e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8011ea2:	4433      	add	r3, r6
 8011ea4:	4293      	cmp	r3, r2
 8011ea6:	dc14      	bgt.n	8011ed2 <WIDGET__EFFECT_DrawDownRect+0x92>
 8011ea8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011eac:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011eb0:	1b9b      	subs	r3, r3, r6
 8011eb2:	4293      	cmp	r3, r2
 8011eb4:	db0d      	blt.n	8011ed2 <WIDGET__EFFECT_DrawDownRect+0x92>
 8011eb6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8011eba:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8011ebe:	4433      	add	r3, r6
 8011ec0:	4293      	cmp	r3, r2
 8011ec2:	dc06      	bgt.n	8011ed2 <WIDGET__EFFECT_DrawDownRect+0x92>
 8011ec4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011ec8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011ecc:	1b9e      	subs	r6, r3, r6
 8011ece:	4296      	cmp	r6, r2
 8011ed0:	da03      	bge.n	8011eda <WIDGET__EFFECT_DrawDownRect+0x9a>
 8011ed2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8011ed4:	4620      	mov	r0, r4
 8011ed6:	691b      	ldr	r3, [r3, #16]
 8011ed8:	4798      	blx	r3
 8011eda:	b005      	add	sp, #20
 8011edc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ede:	4668      	mov	r0, sp
 8011ee0:	f7fb fa2e 	bl	800d340 <WM_GetClientRect>
 8011ee4:	466c      	mov	r4, sp
 8011ee6:	e7b1      	b.n	8011e4c <WIDGET__EFFECT_DrawDownRect+0xc>

08011ee8 <_DrawDownRect>:
 8011ee8:	b510      	push	{r4, lr}
 8011eea:	b09e      	sub	sp, #120	; 0x78
 8011eec:	4604      	mov	r4, r0
 8011eee:	a801      	add	r0, sp, #4
 8011ef0:	f7f3 fb38 	bl	8005564 <GUI_SaveContext_W>
 8011ef4:	4b09      	ldr	r3, [pc, #36]	; (8011f1c <_DrawDownRect+0x34>)
 8011ef6:	6818      	ldr	r0, [r3, #0]
 8011ef8:	f7f5 fd02 	bl	8007900 <LCD_SetColor>
 8011efc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011f00:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011f04:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011f08:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011f0c:	f000 f99c 	bl	8012248 <GUI_DrawRect>
 8011f10:	a801      	add	r0, sp, #4
 8011f12:	f7f3 fb31 	bl	8005578 <GUI_RestoreContext>
 8011f16:	b01e      	add	sp, #120	; 0x78
 8011f18:	bd10      	pop	{r4, pc}
 8011f1a:	bf00      	nop
 8011f1c:	200002e0 	.word	0x200002e0

08011f20 <_DrawUp>:
 8011f20:	b500      	push	{lr}
 8011f22:	b0a1      	sub	sp, #132	; 0x84
 8011f24:	a801      	add	r0, sp, #4
 8011f26:	f7fb fa0b 	bl	800d340 <WM_GetClientRect>
 8011f2a:	a803      	add	r0, sp, #12
 8011f2c:	f7f3 fb1a 	bl	8005564 <GUI_SaveContext_W>
 8011f30:	4b09      	ldr	r3, [pc, #36]	; (8011f58 <_DrawUp+0x38>)
 8011f32:	6818      	ldr	r0, [r3, #0]
 8011f34:	f7f5 fce4 	bl	8007900 <LCD_SetColor>
 8011f38:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8011f3c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8011f40:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 8011f44:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8011f48:	f000 f97e 	bl	8012248 <GUI_DrawRect>
 8011f4c:	a803      	add	r0, sp, #12
 8011f4e:	f7f3 fb13 	bl	8005578 <GUI_RestoreContext>
 8011f52:	b021      	add	sp, #132	; 0x84
 8011f54:	f85d fb04 	ldr.w	pc, [sp], #4
 8011f58:	200002e0 	.word	0x200002e0

08011f5c <_DrawUpRect>:
 8011f5c:	b510      	push	{r4, lr}
 8011f5e:	b09e      	sub	sp, #120	; 0x78
 8011f60:	4604      	mov	r4, r0
 8011f62:	a801      	add	r0, sp, #4
 8011f64:	f7f3 fafe 	bl	8005564 <GUI_SaveContext_W>
 8011f68:	4b09      	ldr	r3, [pc, #36]	; (8011f90 <_DrawUpRect+0x34>)
 8011f6a:	6818      	ldr	r0, [r3, #0]
 8011f6c:	f7f5 fcc8 	bl	8007900 <LCD_SetColor>
 8011f70:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011f74:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011f78:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011f7c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011f80:	f000 f962 	bl	8012248 <GUI_DrawRect>
 8011f84:	a801      	add	r0, sp, #4
 8011f86:	f7f3 faf7 	bl	8005578 <GUI_RestoreContext>
 8011f8a:	b01e      	add	sp, #120	; 0x78
 8011f8c:	bd10      	pop	{r4, pc}
 8011f8e:	bf00      	nop
 8011f90:	200002e0 	.word	0x200002e0

08011f94 <_DrawDown>:
 8011f94:	b500      	push	{lr}
 8011f96:	b0a1      	sub	sp, #132	; 0x84
 8011f98:	a801      	add	r0, sp, #4
 8011f9a:	f7fb f9d1 	bl	800d340 <WM_GetClientRect>
 8011f9e:	a803      	add	r0, sp, #12
 8011fa0:	f7f3 fae0 	bl	8005564 <GUI_SaveContext_W>
 8011fa4:	4b09      	ldr	r3, [pc, #36]	; (8011fcc <_DrawDown+0x38>)
 8011fa6:	6818      	ldr	r0, [r3, #0]
 8011fa8:	f7f5 fcaa 	bl	8007900 <LCD_SetColor>
 8011fac:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8011fb0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8011fb4:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 8011fb8:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8011fbc:	f000 f944 	bl	8012248 <GUI_DrawRect>
 8011fc0:	a803      	add	r0, sp, #12
 8011fc2:	f7f3 fad9 	bl	8005578 <GUI_RestoreContext>
 8011fc6:	b021      	add	sp, #132	; 0x84
 8011fc8:	f85d fb04 	ldr.w	pc, [sp], #4
 8011fcc:	200002e0 	.word	0x200002e0

08011fd0 <WINDOW_Callback>:
 8011fd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011fd4:	6846      	ldr	r6, [r0, #4]
 8011fd6:	b083      	sub	sp, #12
 8011fd8:	4604      	mov	r4, r0
 8011fda:	4630      	mov	r0, r6
 8011fdc:	f7f2 ff4a 	bl	8004e74 <GUI_ALLOC_LockH>
 8011fe0:	ad02      	add	r5, sp, #8
 8011fe2:	4603      	mov	r3, r0
 8011fe4:	f845 0d08 	str.w	r0, [r5, #-8]!
 8011fe8:	f8d0 8038 	ldr.w	r8, [r0, #56]	; 0x38
 8011fec:	6b5f      	ldr	r7, [r3, #52]	; 0x34
 8011fee:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8011ff2:	4628      	mov	r0, r5
 8011ff4:	f7f2 ff50 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8011ff8:	6823      	ldr	r3, [r4, #0]
 8011ffa:	3b0e      	subs	r3, #14
 8011ffc:	2b1c      	cmp	r3, #28
 8011ffe:	d819      	bhi.n	8012034 <WINDOW_Callback+0x64>
 8012000:	e8df f003 	tbb	[pc, r3]
 8012004:	18180f2d 	.word	0x18180f2d
 8012008:	18181818 	.word	0x18181818
 801200c:	18181818 	.word	0x18181818
 8012010:	18181818 	.word	0x18181818
 8012014:	18564f3a 	.word	0x18564f3a
 8012018:	1818186f 	.word	0x1818186f
 801201c:	18181818 	.word	0x18181818
 8012020:	1f          	.byte	0x1f
 8012021:	00          	.byte	0x00
 8012022:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8012026:	4599      	cmp	r9, r3
 8012028:	d004      	beq.n	8012034 <WINDOW_Callback+0x64>
 801202a:	4648      	mov	r0, r9
 801202c:	f7f5 fc62 	bl	80078f4 <LCD_SetBkColor>
 8012030:	f7f3 fbaa 	bl	8005788 <GUI_Clear>
 8012034:	2f00      	cmp	r7, #0
 8012036:	d059      	beq.n	80120ec <WINDOW_Callback+0x11c>
 8012038:	4620      	mov	r0, r4
 801203a:	47b8      	blx	r7
 801203c:	b003      	add	sp, #12
 801203e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012042:	4630      	mov	r0, r6
 8012044:	f7f2 ff16 	bl	8004e74 <GUI_ALLOC_LockH>
 8012048:	68e3      	ldr	r3, [r4, #12]
 801204a:	9000      	str	r0, [sp, #0]
 801204c:	2b00      	cmp	r3, #0
 801204e:	d05e      	beq.n	801210e <WINDOW_Callback+0x13e>
 8012050:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012052:	4628      	mov	r0, r5
 8012054:	f7f2 ff20 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8012058:	b003      	add	sp, #12
 801205a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801205e:	68e3      	ldr	r3, [r4, #12]
 8012060:	685a      	ldr	r2, [r3, #4]
 8012062:	2a00      	cmp	r2, #0
 8012064:	dde6      	ble.n	8012034 <WINDOW_Callback+0x64>
 8012066:	681b      	ldr	r3, [r3, #0]
 8012068:	2b09      	cmp	r3, #9
 801206a:	d04c      	beq.n	8012106 <WINDOW_Callback+0x136>
 801206c:	2b0a      	cmp	r3, #10
 801206e:	d1e1      	bne.n	8012034 <WINDOW_Callback+0x64>
 8012070:	4630      	mov	r0, r6
 8012072:	f003 fffd 	bl	8016070 <WM_SetFocusOnPrevChild>
 8012076:	e7e1      	b.n	801203c <WINDOW_Callback+0x6c>
 8012078:	68e4      	ldr	r4, [r4, #12]
 801207a:	2c01      	cmp	r4, #1
 801207c:	d1de      	bne.n	801203c <WINDOW_Callback+0x6c>
 801207e:	4640      	mov	r0, r8
 8012080:	f7fb fb6a 	bl	800d758 <WM_IsWindow>
 8012084:	2800      	cmp	r0, #0
 8012086:	d03e      	beq.n	8012106 <WINDOW_Callback+0x136>
 8012088:	4640      	mov	r0, r8
 801208a:	f7fb fbb9 	bl	800d800 <WM_SetFocus>
 801208e:	4640      	mov	r0, r8
 8012090:	f7fb fb38 	bl	800d704 <WM_HasFocus>
 8012094:	2800      	cmp	r0, #0
 8012096:	d0d1      	beq.n	801203c <WINDOW_Callback+0x6c>
 8012098:	4621      	mov	r1, r4
 801209a:	4640      	mov	r0, r8
 801209c:	f7ff fd7e 	bl	8011b9c <WIDGET_OrState>
 80120a0:	e7cc      	b.n	801203c <WINDOW_Callback+0x6c>
 80120a2:	4621      	mov	r1, r4
 80120a4:	4630      	mov	r0, r6
 80120a6:	f7ff fda9 	bl	8011bfc <WIDGET_HandleActive>
 80120aa:	b003      	add	sp, #12
 80120ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80120b0:	4630      	mov	r0, r6
 80120b2:	f7f2 fedf 	bl	8004e74 <GUI_ALLOC_LockH>
 80120b6:	68e4      	ldr	r4, [r4, #12]
 80120b8:	9001      	str	r0, [sp, #4]
 80120ba:	b164      	cbz	r4, 80120d6 <WINDOW_Callback+0x106>
 80120bc:	4631      	mov	r1, r6
 80120be:	6860      	ldr	r0, [r4, #4]
 80120c0:	f7fc fa7a 	bl	800e5b8 <WM__IsAncestorOrSelf>
 80120c4:	4631      	mov	r1, r6
 80120c6:	b9a8      	cbnz	r0, 80120f4 <WINDOW_Callback+0x124>
 80120c8:	6820      	ldr	r0, [r4, #0]
 80120ca:	f7fc fa63 	bl	800e594 <WM__IsAncestor>
 80120ce:	b110      	cbz	r0, 80120d6 <WINDOW_Callback+0x106>
 80120d0:	9b01      	ldr	r3, [sp, #4]
 80120d2:	6822      	ldr	r2, [r4, #0]
 80120d4:	639a      	str	r2, [r3, #56]	; 0x38
 80120d6:	a801      	add	r0, sp, #4
 80120d8:	f7f2 fede 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80120dc:	b003      	add	sp, #12
 80120de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80120e2:	f8c4 900c 	str.w	r9, [r4, #12]
 80120e6:	b003      	add	sp, #12
 80120e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80120ec:	4620      	mov	r0, r4
 80120ee:	f7fa fdfd 	bl	800ccec <WM_DefaultProc>
 80120f2:	e7a3      	b.n	801203c <WINDOW_Callback+0x6c>
 80120f4:	6860      	ldr	r0, [r4, #4]
 80120f6:	f7fc fa4d 	bl	800e594 <WM__IsAncestor>
 80120fa:	2800      	cmp	r0, #0
 80120fc:	d0eb      	beq.n	80120d6 <WINDOW_Callback+0x106>
 80120fe:	9b01      	ldr	r3, [sp, #4]
 8012100:	6862      	ldr	r2, [r4, #4]
 8012102:	639a      	str	r2, [r3, #56]	; 0x38
 8012104:	e7e7      	b.n	80120d6 <WINDOW_Callback+0x106>
 8012106:	4630      	mov	r0, r6
 8012108:	f003 ff6e 	bl	8015fe8 <WM_SetFocusOnNextChild>
 801210c:	e796      	b.n	801203c <WINDOW_Callback+0x6c>
 801210e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012110:	60e3      	str	r3, [r4, #12]
 8012112:	e79e      	b.n	8012052 <WINDOW_Callback+0x82>

08012114 <WINDOW_CreateIndirect>:
 8012114:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012116:	4604      	mov	r4, r0
 8012118:	b087      	sub	sp, #28
 801211a:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 801211e:	69a6      	ldr	r6, [r4, #24]
 8012120:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8012124:	4f15      	ldr	r7, [pc, #84]	; (801217c <WINDOW_CreateIndirect+0x68>)
 8012126:	9100      	str	r1, [sp, #0]
 8012128:	f9b4 e010 	ldrsh.w	lr, [r4, #16]
 801212c:	9702      	str	r7, [sp, #8]
 801212e:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8012132:	18e9      	adds	r1, r5, r3
 8012134:	3618      	adds	r6, #24
 8012136:	8a65      	ldrh	r5, [r4, #18]
 8012138:	9501      	str	r5, [sp, #4]
 801213a:	4410      	add	r0, r2
 801213c:	9603      	str	r6, [sp, #12]
 801213e:	4673      	mov	r3, lr
 8012140:	463a      	mov	r2, r7
 8012142:	f9b4 5008 	ldrsh.w	r5, [r4, #8]
 8012146:	f7fa f919 	bl	800c37c <WM_CreateWindowAsChild>
 801214a:	4604      	mov	r4, r0
 801214c:	b190      	cbz	r0, 8012174 <WINDOW_CreateIndirect+0x60>
 801214e:	f7f2 fe91 	bl	8004e74 <GUI_ALLOC_LockH>
 8012152:	4629      	mov	r1, r5
 8012154:	2210      	movs	r2, #16
 8012156:	9005      	str	r0, [sp, #20]
 8012158:	f7ff fd18 	bl	8011b8c <WIDGET__Init>
 801215c:	a806      	add	r0, sp, #24
 801215e:	4a08      	ldr	r2, [pc, #32]	; (8012180 <WINDOW_CreateIndirect+0x6c>)
 8012160:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8012164:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012166:	6812      	ldr	r2, [r2, #0]
 8012168:	6359      	str	r1, [r3, #52]	; 0x34
 801216a:	2100      	movs	r1, #0
 801216c:	6399      	str	r1, [r3, #56]	; 0x38
 801216e:	641a      	str	r2, [r3, #64]	; 0x40
 8012170:	f7f2 fe92 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8012174:	4620      	mov	r0, r4
 8012176:	b007      	add	sp, #28
 8012178:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801217a:	bf00      	nop
 801217c:	08011fd1 	.word	0x08011fd1
 8012180:	200002e4 	.word	0x200002e4

08012184 <_GetIndexMask_0>:
 8012184:	b508      	push	{r3, lr}
 8012186:	f7f5 fd35 	bl	8007bf4 <LCD_GetNumColors>
 801218a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801218e:	d014      	beq.n	80121ba <_GetIndexMask_0+0x36>
 8012190:	287f      	cmp	r0, #127	; 0x7f
 8012192:	d80e      	bhi.n	80121b2 <_GetIndexMask_0+0x2e>
 8012194:	283f      	cmp	r0, #63	; 0x3f
 8012196:	d812      	bhi.n	80121be <_GetIndexMask_0+0x3a>
 8012198:	281f      	cmp	r0, #31
 801219a:	d80c      	bhi.n	80121b6 <_GetIndexMask_0+0x32>
 801219c:	280f      	cmp	r0, #15
 801219e:	d810      	bhi.n	80121c2 <_GetIndexMask_0+0x3e>
 80121a0:	2807      	cmp	r0, #7
 80121a2:	d812      	bhi.n	80121ca <_GetIndexMask_0+0x46>
 80121a4:	2803      	cmp	r0, #3
 80121a6:	d80e      	bhi.n	80121c6 <_GetIndexMask_0+0x42>
 80121a8:	2801      	cmp	r0, #1
 80121aa:	bf94      	ite	ls
 80121ac:	2000      	movls	r0, #0
 80121ae:	2001      	movhi	r0, #1
 80121b0:	bd08      	pop	{r3, pc}
 80121b2:	207f      	movs	r0, #127	; 0x7f
 80121b4:	bd08      	pop	{r3, pc}
 80121b6:	201f      	movs	r0, #31
 80121b8:	bd08      	pop	{r3, pc}
 80121ba:	20ff      	movs	r0, #255	; 0xff
 80121bc:	bd08      	pop	{r3, pc}
 80121be:	203f      	movs	r0, #63	; 0x3f
 80121c0:	bd08      	pop	{r3, pc}
 80121c2:	200f      	movs	r0, #15
 80121c4:	bd08      	pop	{r3, pc}
 80121c6:	2003      	movs	r0, #3
 80121c8:	bd08      	pop	{r3, pc}
 80121ca:	2007      	movs	r0, #7
 80121cc:	bd08      	pop	{r3, pc}
 80121ce:	bf00      	nop

080121d0 <_Index2Color_0>:
 80121d0:	b538      	push	{r3, r4, r5, lr}
 80121d2:	4604      	mov	r4, r0
 80121d4:	f7f5 fd0e 	bl	8007bf4 <LCD_GetNumColors>
 80121d8:	4605      	mov	r5, r0
 80121da:	f7f5 fd2b 	bl	8007c34 <LCD_GetPalette>
 80121de:	42a5      	cmp	r5, r4
 80121e0:	d903      	bls.n	80121ea <_Index2Color_0+0x1a>
 80121e2:	b118      	cbz	r0, 80121ec <_Index2Color_0+0x1c>
 80121e4:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 80121e8:	bd38      	pop	{r3, r4, r5, pc}
 80121ea:	2000      	movs	r0, #0
 80121ec:	bd38      	pop	{r3, r4, r5, pc}
 80121ee:	bf00      	nop

080121f0 <_Color2Index_0>:
 80121f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80121f4:	4606      	mov	r6, r0
 80121f6:	f7f5 fcfd 	bl	8007bf4 <LCD_GetNumColors>
 80121fa:	4607      	mov	r7, r0
 80121fc:	f7f5 fd1a 	bl	8007c34 <LCD_GetPalette>
 8012200:	b158      	cbz	r0, 801221a <_Color2Index_0+0x2a>
 8012202:	f1a0 0804 	sub.w	r8, r0, #4
 8012206:	4643      	mov	r3, r8
 8012208:	2000      	movs	r0, #0
 801220a:	e002      	b.n	8012212 <_Color2Index_0+0x22>
 801220c:	3001      	adds	r0, #1
 801220e:	4287      	cmp	r7, r0
 8012210:	dd05      	ble.n	801221e <_Color2Index_0+0x2e>
 8012212:	f853 2f04 	ldr.w	r2, [r3, #4]!
 8012216:	42b2      	cmp	r2, r6
 8012218:	d1f8      	bne.n	801220c <_Color2Index_0+0x1c>
 801221a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801221e:	2400      	movs	r4, #0
 8012220:	4625      	mov	r5, r4
 8012222:	f06f 497f 	mvn.w	r9, #4278190080	; 0xff000000
 8012226:	f858 1f04 	ldr.w	r1, [r8, #4]!
 801222a:	4630      	mov	r0, r6
 801222c:	f7f3 f84a 	bl	80052c4 <GUI_CalcColorDist>
 8012230:	4581      	cmp	r9, r0
 8012232:	bf88      	it	hi
 8012234:	462c      	movhi	r4, r5
 8012236:	f105 0501 	add.w	r5, r5, #1
 801223a:	bf88      	it	hi
 801223c:	4681      	movhi	r9, r0
 801223e:	42af      	cmp	r7, r5
 8012240:	dcf1      	bgt.n	8012226 <_Color2Index_0+0x36>
 8012242:	4620      	mov	r0, r4
 8012244:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08012248 <GUI_DrawRect>:
 8012248:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801224c:	4c1e      	ldr	r4, [pc, #120]	; (80122c8 <GUI_DrawRect+0x80>)
 801224e:	6825      	ldr	r5, [r4, #0]
 8012250:	7e2e      	ldrb	r6, [r5, #24]
 8012252:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 8012254:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 8012256:	3e01      	subs	r6, #1
 8012258:	b083      	sub	sp, #12
 801225a:	b2b6      	uxth	r6, r6
 801225c:	1825      	adds	r5, r4, r0
 801225e:	eb07 0901 	add.w	r9, r7, r1
 8012262:	eb07 0803 	add.w	r8, r7, r3
 8012266:	4414      	add	r4, r2
 8012268:	1ba9      	subs	r1, r5, r6
 801226a:	1932      	adds	r2, r6, r4
 801226c:	ebc6 0309 	rsb	r3, r6, r9
 8012270:	4668      	mov	r0, sp
 8012272:	4446      	add	r6, r8
 8012274:	f8ad 1000 	strh.w	r1, [sp]
 8012278:	f8ad 2004 	strh.w	r2, [sp, #4]
 801227c:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012280:	f8ad 6006 	strh.w	r6, [sp, #6]
 8012284:	f7fa faa8 	bl	800c7d8 <WM__InitIVRSearch>
 8012288:	b1d8      	cbz	r0, 80122c2 <GUI_DrawRect+0x7a>
 801228a:	f109 0701 	add.w	r7, r9, #1
 801228e:	f108 36ff 	add.w	r6, r8, #4294967295
 8012292:	4622      	mov	r2, r4
 8012294:	4649      	mov	r1, r9
 8012296:	4628      	mov	r0, r5
 8012298:	f7f4 ff4a 	bl	8007130 <LCD_DrawHLine>
 801229c:	4622      	mov	r2, r4
 801229e:	4641      	mov	r1, r8
 80122a0:	4628      	mov	r0, r5
 80122a2:	f7f4 ff45 	bl	8007130 <LCD_DrawHLine>
 80122a6:	4632      	mov	r2, r6
 80122a8:	4639      	mov	r1, r7
 80122aa:	4628      	mov	r0, r5
 80122ac:	f7f4 ff6a 	bl	8007184 <LCD_DrawVLine>
 80122b0:	4632      	mov	r2, r6
 80122b2:	4639      	mov	r1, r7
 80122b4:	4620      	mov	r0, r4
 80122b6:	f7f4 ff65 	bl	8007184 <LCD_DrawVLine>
 80122ba:	f7fa f967 	bl	800c58c <WM__GetNextIVR>
 80122be:	2800      	cmp	r0, #0
 80122c0:	d1e7      	bne.n	8012292 <GUI_DrawRect+0x4a>
 80122c2:	b003      	add	sp, #12
 80122c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80122c8:	20000018 	.word	0x20000018

080122cc <GUI_GetYAdjust>:
 80122cc:	4b0a      	ldr	r3, [pc, #40]	; (80122f8 <GUI_GetYAdjust+0x2c>)
 80122ce:	681a      	ldr	r2, [r3, #0]
 80122d0:	8d93      	ldrh	r3, [r2, #44]	; 0x2c
 80122d2:	f003 030c 	and.w	r3, r3, #12
 80122d6:	2b08      	cmp	r3, #8
 80122d8:	d005      	beq.n	80122e6 <GUI_GetYAdjust+0x1a>
 80122da:	2b0c      	cmp	r3, #12
 80122dc:	d003      	beq.n	80122e6 <GUI_GetYAdjust+0x1a>
 80122de:	2b04      	cmp	r3, #4
 80122e0:	d005      	beq.n	80122ee <GUI_GetYAdjust+0x22>
 80122e2:	2000      	movs	r0, #0
 80122e4:	4770      	bx	lr
 80122e6:	69d3      	ldr	r3, [r2, #28]
 80122e8:	7e18      	ldrb	r0, [r3, #24]
 80122ea:	0840      	lsrs	r0, r0, #1
 80122ec:	4770      	bx	lr
 80122ee:	69d3      	ldr	r3, [r2, #28]
 80122f0:	7e18      	ldrb	r0, [r3, #24]
 80122f2:	3801      	subs	r0, #1
 80122f4:	4770      	bx	lr
 80122f6:	bf00      	nop
 80122f8:	20000018 	.word	0x20000018

080122fc <GUI_GetFontDistY>:
 80122fc:	4b02      	ldr	r3, [pc, #8]	; (8012308 <GUI_GetFontDistY+0xc>)
 80122fe:	681b      	ldr	r3, [r3, #0]
 8012300:	69db      	ldr	r3, [r3, #28]
 8012302:	7e58      	ldrb	r0, [r3, #25]
 8012304:	4770      	bx	lr
 8012306:	bf00      	nop
 8012308:	20000018 	.word	0x20000018

0801230c <GUI_GetCharDistX>:
 801230c:	4b02      	ldr	r3, [pc, #8]	; (8012318 <GUI_GetCharDistX+0xc>)
 801230e:	681b      	ldr	r3, [r3, #0]
 8012310:	69db      	ldr	r3, [r3, #28]
 8012312:	2100      	movs	r1, #0
 8012314:	685b      	ldr	r3, [r3, #4]
 8012316:	4718      	bx	r3
 8012318:	20000018 	.word	0x20000018

0801231c <GUI_GetCharDistXEx>:
 801231c:	4b02      	ldr	r3, [pc, #8]	; (8012328 <GUI_GetCharDistXEx+0xc>)
 801231e:	681b      	ldr	r3, [r3, #0]
 8012320:	69db      	ldr	r3, [r3, #28]
 8012322:	685b      	ldr	r3, [r3, #4]
 8012324:	4718      	bx	r3
 8012326:	bf00      	nop
 8012328:	20000018 	.word	0x20000018

0801232c <_Log2VisBuffered>:
 801232c:	4770      	bx	lr
 801232e:	bf00      	nop

08012330 <_DispLine>:
 8012330:	b570      	push	{r4, r5, r6, lr}
 8012332:	b082      	sub	sp, #8
 8012334:	ab02      	add	r3, sp, #8
 8012336:	4d21      	ldr	r5, [pc, #132]	; (80123bc <_DispLine+0x8c>)
 8012338:	f843 1d08 	str.w	r1, [r3, #-8]!
 801233c:	4c20      	ldr	r4, [pc, #128]	; (80123c0 <_DispLine+0x90>)
 801233e:	9001      	str	r0, [sp, #4]
 8012340:	4619      	mov	r1, r3
 8012342:	682b      	ldr	r3, [r5, #0]
 8012344:	4615      	mov	r5, r2
 8012346:	4798      	blx	r3
 8012348:	6823      	ldr	r3, [r4, #0]
 801234a:	9001      	str	r0, [sp, #4]
 801234c:	6958      	ldr	r0, [r3, #20]
 801234e:	b118      	cbz	r0, 8012358 <_DispLine+0x28>
 8012350:	4629      	mov	r1, r5
 8012352:	f7f3 f8e9 	bl	8005528 <GUI_RectsIntersect>
 8012356:	b1a8      	cbz	r0, 8012384 <_DispLine+0x54>
 8012358:	2001      	movs	r0, #1
 801235a:	f002 fd2f 	bl	8014dbc <GUI__ManageCache>
 801235e:	6822      	ldr	r2, [r4, #0]
 8012360:	69d3      	ldr	r3, [r2, #28]
 8012362:	695b      	ldr	r3, [r3, #20]
 8012364:	b1ab      	cbz	r3, 8012392 <_DispLine+0x62>
 8012366:	4c17      	ldr	r4, [pc, #92]	; (80123c4 <_DispLine+0x94>)
 8012368:	6821      	ldr	r1, [r4, #0]
 801236a:	b169      	cbz	r1, 8012388 <_DispLine+0x58>
 801236c:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 8012370:	689b      	ldr	r3, [r3, #8]
 8012372:	9801      	ldr	r0, [sp, #4]
 8012374:	9900      	ldr	r1, [sp, #0]
 8012376:	4798      	blx	r3
 8012378:	4628      	mov	r0, r5
 801237a:	6823      	ldr	r3, [r4, #0]
 801237c:	4798      	blx	r3
 801237e:	2000      	movs	r0, #0
 8012380:	f002 fd1c 	bl	8014dbc <GUI__ManageCache>
 8012384:	b002      	add	sp, #8
 8012386:	bd70      	pop	{r4, r5, r6, pc}
 8012388:	689b      	ldr	r3, [r3, #8]
 801238a:	9900      	ldr	r1, [sp, #0]
 801238c:	9801      	ldr	r0, [sp, #4]
 801238e:	4798      	blx	r3
 8012390:	e7f5      	b.n	801237e <_DispLine+0x4e>
 8012392:	4d0d      	ldr	r5, [pc, #52]	; (80123c8 <_DispLine+0x98>)
 8012394:	9b00      	ldr	r3, [sp, #0]
 8012396:	3b01      	subs	r3, #1
 8012398:	2b00      	cmp	r3, #0
 801239a:	a801      	add	r0, sp, #4
 801239c:	9300      	str	r3, [sp, #0]
 801239e:	dbee      	blt.n	801237e <_DispLine+0x4e>
 80123a0:	f7f3 ffd4 	bl	800634c <GUI_UC__GetCharCodeInc>
 80123a4:	6823      	ldr	r3, [r4, #0]
 80123a6:	69db      	ldr	r3, [r3, #28]
 80123a8:	681b      	ldr	r3, [r3, #0]
 80123aa:	4606      	mov	r6, r0
 80123ac:	4798      	blx	r3
 80123ae:	682b      	ldr	r3, [r5, #0]
 80123b0:	2b00      	cmp	r3, #0
 80123b2:	d0ef      	beq.n	8012394 <_DispLine+0x64>
 80123b4:	4630      	mov	r0, r6
 80123b6:	4798      	blx	r3
 80123b8:	e7ec      	b.n	8012394 <_DispLine+0x64>
 80123ba:	bf00      	nop
 80123bc:	200002e8 	.word	0x200002e8
 80123c0:	20000018 	.word	0x20000018
 80123c4:	2001c16c 	.word	0x2001c16c
 80123c8:	2001c178 	.word	0x2001c178

080123cc <GUI__GetLineNumChars>:
 80123cc:	b530      	push	{r4, r5, lr}
 80123ce:	b083      	sub	sp, #12
 80123d0:	9001      	str	r0, [sp, #4]
 80123d2:	b300      	cbz	r0, 8012416 <GUI__GetLineNumChars+0x4a>
 80123d4:	4b11      	ldr	r3, [pc, #68]	; (801241c <GUI__GetLineNumChars+0x50>)
 80123d6:	681b      	ldr	r3, [r3, #0]
 80123d8:	69db      	ldr	r3, [r3, #28]
 80123da:	695b      	ldr	r3, [r3, #20]
 80123dc:	460d      	mov	r5, r1
 80123de:	b123      	cbz	r3, 80123ea <GUI__GetLineNumChars+0x1e>
 80123e0:	685b      	ldr	r3, [r3, #4]
 80123e2:	b113      	cbz	r3, 80123ea <GUI__GetLineNumChars+0x1e>
 80123e4:	4798      	blx	r3
 80123e6:	b003      	add	sp, #12
 80123e8:	bd30      	pop	{r4, r5, pc}
 80123ea:	2d00      	cmp	r5, #0
 80123ec:	bfd8      	it	le
 80123ee:	2000      	movle	r0, #0
 80123f0:	ddf9      	ble.n	80123e6 <GUI__GetLineNumChars+0x1a>
 80123f2:	2400      	movs	r4, #0
 80123f4:	e004      	b.n	8012400 <GUI__GetLineNumChars+0x34>
 80123f6:	280a      	cmp	r0, #10
 80123f8:	d007      	beq.n	801240a <GUI__GetLineNumChars+0x3e>
 80123fa:	3401      	adds	r4, #1
 80123fc:	42a5      	cmp	r5, r4
 80123fe:	d007      	beq.n	8012410 <GUI__GetLineNumChars+0x44>
 8012400:	a801      	add	r0, sp, #4
 8012402:	f7f3 ffa3 	bl	800634c <GUI_UC__GetCharCodeInc>
 8012406:	2800      	cmp	r0, #0
 8012408:	d1f5      	bne.n	80123f6 <GUI__GetLineNumChars+0x2a>
 801240a:	4620      	mov	r0, r4
 801240c:	b003      	add	sp, #12
 801240e:	bd30      	pop	{r4, r5, pc}
 8012410:	4628      	mov	r0, r5
 8012412:	b003      	add	sp, #12
 8012414:	bd30      	pop	{r4, r5, pc}
 8012416:	b003      	add	sp, #12
 8012418:	bd30      	pop	{r4, r5, pc}
 801241a:	bf00      	nop
 801241c:	20000018 	.word	0x20000018

08012420 <GUI__GetLineDistX>:
 8012420:	b570      	push	{r4, r5, r6, lr}
 8012422:	b084      	sub	sp, #16
 8012424:	ab04      	add	r3, sp, #16
 8012426:	4a1d      	ldr	r2, [pc, #116]	; (801249c <GUI__GetLineDistX+0x7c>)
 8012428:	f843 1d10 	str.w	r1, [r3, #-16]!
 801242c:	9001      	str	r0, [sp, #4]
 801242e:	4619      	mov	r1, r3
 8012430:	6813      	ldr	r3, [r2, #0]
 8012432:	4798      	blx	r3
 8012434:	9001      	str	r0, [sp, #4]
 8012436:	b358      	cbz	r0, 8012490 <GUI__GetLineDistX+0x70>
 8012438:	4b19      	ldr	r3, [pc, #100]	; (80124a0 <GUI__GetLineDistX+0x80>)
 801243a:	681b      	ldr	r3, [r3, #0]
 801243c:	69db      	ldr	r3, [r3, #28]
 801243e:	695b      	ldr	r3, [r3, #20]
 8012440:	b12b      	cbz	r3, 801244e <GUI__GetLineDistX+0x2e>
 8012442:	681b      	ldr	r3, [r3, #0]
 8012444:	b11b      	cbz	r3, 801244e <GUI__GetLineDistX+0x2e>
 8012446:	9900      	ldr	r1, [sp, #0]
 8012448:	4798      	blx	r3
 801244a:	b004      	add	sp, #16
 801244c:	bd70      	pop	{r4, r5, r6, pc}
 801244e:	9b00      	ldr	r3, [sp, #0]
 8012450:	3b01      	subs	r3, #1
 8012452:	2b00      	cmp	r3, #0
 8012454:	9300      	str	r3, [sp, #0]
 8012456:	bfa8      	it	ge
 8012458:	2400      	movge	r4, #0
 801245a:	db1b      	blt.n	8012494 <GUI__GetLineDistX+0x74>
 801245c:	a801      	add	r0, sp, #4
 801245e:	f7f3 ff75 	bl	800634c <GUI_UC__GetCharCodeInc>
 8012462:	4605      	mov	r5, r0
 8012464:	f7ff ff52 	bl	801230c <GUI_GetCharDistX>
 8012468:	9b00      	ldr	r3, [sp, #0]
 801246a:	3b01      	subs	r3, #1
 801246c:	2b00      	cmp	r3, #0
 801246e:	4404      	add	r4, r0
 8012470:	9300      	str	r3, [sp, #0]
 8012472:	daf3      	bge.n	801245c <GUI__GetLineDistX+0x3c>
 8012474:	a904      	add	r1, sp, #16
 8012476:	2600      	movs	r6, #0
 8012478:	f841 6d04 	str.w	r6, [r1, #-4]!
 801247c:	4628      	mov	r0, r5
 801247e:	f7ff ff4d 	bl	801231c <GUI_GetCharDistXEx>
 8012482:	9b03      	ldr	r3, [sp, #12]
 8012484:	4298      	cmp	r0, r3
 8012486:	bfb8      	it	lt
 8012488:	1a1e      	sublt	r6, r3, r0
 801248a:	1930      	adds	r0, r6, r4
 801248c:	b004      	add	sp, #16
 801248e:	bd70      	pop	{r4, r5, r6, pc}
 8012490:	b004      	add	sp, #16
 8012492:	bd70      	pop	{r4, r5, r6, pc}
 8012494:	2500      	movs	r5, #0
 8012496:	462c      	mov	r4, r5
 8012498:	e7ec      	b.n	8012474 <GUI__GetLineDistX+0x54>
 801249a:	bf00      	nop
 801249c:	200002e8 	.word	0x200002e8
 80124a0:	20000018 	.word	0x20000018

080124a4 <GUI__DispLine>:
 80124a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80124a6:	4b2a      	ldr	r3, [pc, #168]	; (8012550 <GUI__DispLine+0xac>)
 80124a8:	681b      	ldr	r3, [r3, #0]
 80124aa:	b083      	sub	sp, #12
 80124ac:	4604      	mov	r4, r0
 80124ae:	460d      	mov	r5, r1
 80124b0:	b17b      	cbz	r3, 80124d2 <GUI__DispLine+0x2e>
 80124b2:	2000      	movs	r0, #0
 80124b4:	f7fa f990 	bl	800c7d8 <WM__InitIVRSearch>
 80124b8:	b148      	cbz	r0, 80124ce <GUI__DispLine+0x2a>
 80124ba:	466e      	mov	r6, sp
 80124bc:	4632      	mov	r2, r6
 80124be:	4629      	mov	r1, r5
 80124c0:	4620      	mov	r0, r4
 80124c2:	f7ff ff35 	bl	8012330 <_DispLine>
 80124c6:	f7fa f861 	bl	800c58c <WM__GetNextIVR>
 80124ca:	2800      	cmp	r0, #0
 80124cc:	d1f6      	bne.n	80124bc <GUI__DispLine+0x18>
 80124ce:	b003      	add	sp, #12
 80124d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80124d2:	6810      	ldr	r0, [r2, #0]
 80124d4:	6851      	ldr	r1, [r2, #4]
 80124d6:	4f1f      	ldr	r7, [pc, #124]	; (8012554 <GUI__DispLine+0xb0>)
 80124d8:	466b      	mov	r3, sp
 80124da:	c303      	stmia	r3!, {r0, r1}
 80124dc:	683b      	ldr	r3, [r7, #0]
 80124de:	f8bd 0000 	ldrh.w	r0, [sp]
 80124e2:	f8b3 e04c 	ldrh.w	lr, [r3, #76]	; 0x4c
 80124e6:	f8b3 6050 	ldrh.w	r6, [r3, #80]	; 0x50
 80124ea:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80124ee:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80124f2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80124f6:	4470      	add	r0, lr
 80124f8:	4432      	add	r2, r6
 80124fa:	4433      	add	r3, r6
 80124fc:	4471      	add	r1, lr
 80124fe:	f8ad 0000 	strh.w	r0, [sp]
 8012502:	4668      	mov	r0, sp
 8012504:	466e      	mov	r6, sp
 8012506:	f8ad 1004 	strh.w	r1, [sp, #4]
 801250a:	f8ad 2002 	strh.w	r2, [sp, #2]
 801250e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012512:	f7fa f961 	bl	800c7d8 <WM__InitIVRSearch>
 8012516:	b950      	cbnz	r0, 801252e <GUI__DispLine+0x8a>
 8012518:	683b      	ldr	r3, [r7, #0]
 801251a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801251c:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 801251e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012520:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8012522:	1b09      	subs	r1, r1, r4
 8012524:	1a12      	subs	r2, r2, r0
 8012526:	8459      	strh	r1, [r3, #34]	; 0x22
 8012528:	849a      	strh	r2, [r3, #36]	; 0x24
 801252a:	b003      	add	sp, #12
 801252c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801252e:	683b      	ldr	r3, [r7, #0]
 8012530:	f8bd 1000 	ldrh.w	r1, [sp]
 8012534:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012538:	8459      	strh	r1, [r3, #34]	; 0x22
 801253a:	849a      	strh	r2, [r3, #36]	; 0x24
 801253c:	4629      	mov	r1, r5
 801253e:	4632      	mov	r2, r6
 8012540:	4620      	mov	r0, r4
 8012542:	f7ff fef5 	bl	8012330 <_DispLine>
 8012546:	f7fa f821 	bl	800c58c <WM__GetNextIVR>
 801254a:	2800      	cmp	r0, #0
 801254c:	d1ef      	bne.n	801252e <GUI__DispLine+0x8a>
 801254e:	e7e3      	b.n	8012518 <GUI__DispLine+0x74>
 8012550:	2001c158 	.word	0x2001c158
 8012554:	20000018 	.word	0x20000018

08012558 <GUIMONO_DispChar>:
 8012558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801255c:	4e4f      	ldr	r6, [pc, #316]	; (801269c <GUIMONO_DispChar+0x144>)
 801255e:	6833      	ldr	r3, [r6, #0]
 8012560:	69da      	ldr	r2, [r3, #28]
 8012562:	f9b3 5022 	ldrsh.w	r5, [r3, #34]	; 0x22
 8012566:	69d4      	ldr	r4, [r2, #28]
 8012568:	f8b4 b00c 	ldrh.w	fp, [r4, #12]
 801256c:	4583      	cmp	fp, r0
 801256e:	b08b      	sub	sp, #44	; 0x2c
 8012570:	d87d      	bhi.n	801266e <GUIMONO_DispChar+0x116>
 8012572:	89e1      	ldrh	r1, [r4, #14]
 8012574:	4281      	cmp	r1, r0
 8012576:	d37a      	bcc.n	801266e <GUIMONO_DispChar+0x116>
 8012578:	6821      	ldr	r1, [r4, #0]
 801257a:	9108      	str	r1, [sp, #32]
 801257c:	f04f 31ff 	mov.w	r1, #4294967295
 8012580:	ebcb 0b00 	rsb	fp, fp, r0
 8012584:	9107      	str	r1, [sp, #28]
 8012586:	f1bb 3fff 	cmp.w	fp, #4294967295
 801258a:	d06a      	beq.n	8012662 <GUIMONO_DispChar+0x10a>
 801258c:	7e17      	ldrb	r7, [r2, #24]
 801258e:	f9b3 802a 	ldrsh.w	r8, [r3, #42]	; 0x2a
 8012592:	7ca2      	ldrb	r2, [r4, #18]
 8012594:	f9b3 9024 	ldrsh.w	r9, [r3, #36]	; 0x24
 8012598:	f894 a010 	ldrb.w	sl, [r4, #16]
 801259c:	fb17 f302 	smulbb	r3, r7, r2
 80125a0:	4640      	mov	r0, r8
 80125a2:	9306      	str	r3, [sp, #24]
 80125a4:	f7f4 fd88 	bl	80070b8 <LCD_SetDrawMode>
 80125a8:	6833      	ldr	r3, [r6, #0]
 80125aa:	9a06      	ldr	r2, [sp, #24]
 80125ac:	9908      	ldr	r1, [sp, #32]
 80125ae:	9009      	str	r0, [sp, #36]	; 0x24
 80125b0:	fb02 100b 	mla	r0, r2, fp, r1
 80125b4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80125b6:	69db      	ldr	r3, [r3, #28]
 80125b8:	9004      	str	r0, [sp, #16]
 80125ba:	9205      	str	r2, [sp, #20]
 80125bc:	7ca2      	ldrb	r2, [r4, #18]
 80125be:	9203      	str	r2, [sp, #12]
 80125c0:	f04f 0b01 	mov.w	fp, #1
 80125c4:	f8cd b008 	str.w	fp, [sp, #8]
 80125c8:	7eda      	ldrb	r2, [r3, #27]
 80125ca:	9201      	str	r2, [sp, #4]
 80125cc:	7e9b      	ldrb	r3, [r3, #26]
 80125ce:	9300      	str	r3, [sp, #0]
 80125d0:	4628      	mov	r0, r5
 80125d2:	463b      	mov	r3, r7
 80125d4:	4652      	mov	r2, sl
 80125d6:	4649      	mov	r1, r9
 80125d8:	f7f4 ff3c 	bl	8007454 <LCD_DrawBitmap>
 80125dc:	9807      	ldr	r0, [sp, #28]
 80125de:	3001      	adds	r0, #1
 80125e0:	d01c      	beq.n	801261c <GUIMONO_DispChar+0xc4>
 80125e2:	f048 0002 	orr.w	r0, r8, #2
 80125e6:	f7f4 fd67 	bl	80070b8 <LCD_SetDrawMode>
 80125ea:	4a2c      	ldr	r2, [pc, #176]	; (801269c <GUIMONO_DispChar+0x144>)
 80125ec:	9807      	ldr	r0, [sp, #28]
 80125ee:	6812      	ldr	r2, [r2, #0]
 80125f0:	9908      	ldr	r1, [sp, #32]
 80125f2:	9b06      	ldr	r3, [sp, #24]
 80125f4:	fb03 1300 	mla	r3, r3, r0, r1
 80125f8:	6b91      	ldr	r1, [r2, #56]	; 0x38
 80125fa:	69d2      	ldr	r2, [r2, #28]
 80125fc:	9105      	str	r1, [sp, #20]
 80125fe:	9304      	str	r3, [sp, #16]
 8012600:	7ca3      	ldrb	r3, [r4, #18]
 8012602:	9303      	str	r3, [sp, #12]
 8012604:	f8cd b008 	str.w	fp, [sp, #8]
 8012608:	7ed3      	ldrb	r3, [r2, #27]
 801260a:	9301      	str	r3, [sp, #4]
 801260c:	7e93      	ldrb	r3, [r2, #26]
 801260e:	9300      	str	r3, [sp, #0]
 8012610:	4652      	mov	r2, sl
 8012612:	463b      	mov	r3, r7
 8012614:	4649      	mov	r1, r9
 8012616:	4628      	mov	r0, r5
 8012618:	f7f4 ff1c 	bl	8007454 <LCD_DrawBitmap>
 801261c:	6833      	ldr	r3, [r6, #0]
 801261e:	4f1f      	ldr	r7, [pc, #124]	; (801269c <GUIMONO_DispChar+0x144>)
 8012620:	69db      	ldr	r3, [r3, #28]
 8012622:	7e5a      	ldrb	r2, [r3, #25]
 8012624:	7e1b      	ldrb	r3, [r3, #24]
 8012626:	429a      	cmp	r2, r3
 8012628:	d914      	bls.n	8012654 <GUIMONO_DispChar+0xfc>
 801262a:	f1b8 0f02 	cmp.w	r8, #2
 801262e:	d011      	beq.n	8012654 <GUIMONO_DispChar+0xfc>
 8012630:	f088 0004 	eor.w	r0, r8, #4
 8012634:	f7f4 fd40 	bl	80070b8 <LCD_SetDrawMode>
 8012638:	683b      	ldr	r3, [r7, #0]
 801263a:	69db      	ldr	r3, [r3, #28]
 801263c:	7e18      	ldrb	r0, [r3, #24]
 801263e:	7ed9      	ldrb	r1, [r3, #27]
 8012640:	7e9a      	ldrb	r2, [r3, #26]
 8012642:	7e5b      	ldrb	r3, [r3, #25]
 8012644:	fb00 9101 	mla	r1, r0, r1, r9
 8012648:	fb0a 5202 	mla	r2, sl, r2, r5
 801264c:	444b      	add	r3, r9
 801264e:	4628      	mov	r0, r5
 8012650:	f7f4 fdc2 	bl	80071d8 <LCD_FillRect>
 8012654:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8012658:	f7f4 fd2e 	bl	80070b8 <LCD_SetDrawMode>
 801265c:	6833      	ldr	r3, [r6, #0]
 801265e:	f9b3 5022 	ldrsh.w	r5, [r3, #34]	; 0x22
 8012662:	7c62      	ldrb	r2, [r4, #17]
 8012664:	4415      	add	r5, r2
 8012666:	845d      	strh	r5, [r3, #34]	; 0x22
 8012668:	b00b      	add	sp, #44	; 0x2c
 801266a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801266e:	68a1      	ldr	r1, [r4, #8]
 8012670:	2900      	cmp	r1, #0
 8012672:	d0f6      	beq.n	8012662 <GUIMONO_DispChar+0x10a>
 8012674:	880f      	ldrh	r7, [r1, #0]
 8012676:	42b8      	cmp	r0, r7
 8012678:	d3f3      	bcc.n	8012662 <GUIMONO_DispChar+0x10a>
 801267a:	f8b1 e002 	ldrh.w	lr, [r1, #2]
 801267e:	4586      	cmp	lr, r0
 8012680:	d3ef      	bcc.n	8012662 <GUIMONO_DispChar+0x10a>
 8012682:	6849      	ldr	r1, [r1, #4]
 8012684:	1bc0      	subs	r0, r0, r7
 8012686:	b280      	uxth	r0, r0
 8012688:	6867      	ldr	r7, [r4, #4]
 801268a:	9708      	str	r7, [sp, #32]
 801268c:	eb01 0780 	add.w	r7, r1, r0, lsl #2
 8012690:	f931 b020 	ldrsh.w	fp, [r1, r0, lsl #2]
 8012694:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8012698:	9107      	str	r1, [sp, #28]
 801269a:	e774      	b.n	8012586 <GUIMONO_DispChar+0x2e>
 801269c:	20000018 	.word	0x20000018

080126a0 <GUIMONO_GetCharDistX>:
 80126a0:	4b04      	ldr	r3, [pc, #16]	; (80126b4 <GUIMONO_GetCharDistX+0x14>)
 80126a2:	681b      	ldr	r3, [r3, #0]
 80126a4:	69db      	ldr	r3, [r3, #28]
 80126a6:	69db      	ldr	r3, [r3, #28]
 80126a8:	b109      	cbz	r1, 80126ae <GUIMONO_GetCharDistX+0xe>
 80126aa:	7c1a      	ldrb	r2, [r3, #16]
 80126ac:	600a      	str	r2, [r1, #0]
 80126ae:	7c58      	ldrb	r0, [r3, #17]
 80126b0:	4770      	bx	lr
 80126b2:	bf00      	nop
 80126b4:	20000018 	.word	0x20000018

080126b8 <GUIMONO_GetFontInfo>:
 80126b8:	2302      	movs	r3, #2
 80126ba:	800b      	strh	r3, [r1, #0]
 80126bc:	4770      	bx	lr
 80126be:	bf00      	nop

080126c0 <GUIMONO_IsInFont>:
 80126c0:	69c3      	ldr	r3, [r0, #28]
 80126c2:	899a      	ldrh	r2, [r3, #12]
 80126c4:	428a      	cmp	r2, r1
 80126c6:	d802      	bhi.n	80126ce <GUIMONO_IsInFont+0xe>
 80126c8:	89da      	ldrh	r2, [r3, #14]
 80126ca:	428a      	cmp	r2, r1
 80126cc:	d211      	bcs.n	80126f2 <GUIMONO_IsInFont+0x32>
 80126ce:	6898      	ldr	r0, [r3, #8]
 80126d0:	b118      	cbz	r0, 80126da <GUIMONO_IsInFont+0x1a>
 80126d2:	8803      	ldrh	r3, [r0, #0]
 80126d4:	4299      	cmp	r1, r3
 80126d6:	d201      	bcs.n	80126dc <GUIMONO_IsInFont+0x1c>
 80126d8:	2000      	movs	r0, #0
 80126da:	4770      	bx	lr
 80126dc:	8842      	ldrh	r2, [r0, #2]
 80126de:	428a      	cmp	r2, r1
 80126e0:	d3fa      	bcc.n	80126d8 <GUIMONO_IsInFont+0x18>
 80126e2:	1ac9      	subs	r1, r1, r3
 80126e4:	6843      	ldr	r3, [r0, #4]
 80126e6:	f833 0021 	ldrh.w	r0, [r3, r1, lsl #2]
 80126ea:	43c0      	mvns	r0, r0
 80126ec:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80126f0:	4770      	bx	lr
 80126f2:	2001      	movs	r0, #1
 80126f4:	4770      	bx	lr
 80126f6:	bf00      	nop

080126f8 <GUIPROP_DispChar>:
 80126f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126fc:	4d3e      	ldr	r5, [pc, #248]	; (80127f8 <GUIPROP_DispChar+0x100>)
 80126fe:	682b      	ldr	r3, [r5, #0]
 8012700:	69da      	ldr	r2, [r3, #28]
 8012702:	f9b3 602a 	ldrsh.w	r6, [r3, #42]	; 0x2a
 8012706:	69d3      	ldr	r3, [r2, #28]
 8012708:	b089      	sub	sp, #36	; 0x24
 801270a:	b143      	cbz	r3, 801271e <GUIPROP_DispChar+0x26>
 801270c:	881a      	ldrh	r2, [r3, #0]
 801270e:	4290      	cmp	r0, r2
 8012710:	d302      	bcc.n	8012718 <GUIPROP_DispChar+0x20>
 8012712:	8859      	ldrh	r1, [r3, #2]
 8012714:	4281      	cmp	r1, r0
 8012716:	d205      	bcs.n	8012724 <GUIPROP_DispChar+0x2c>
 8012718:	689b      	ldr	r3, [r3, #8]
 801271a:	2b00      	cmp	r3, #0
 801271c:	d1f6      	bne.n	801270c <GUIPROP_DispChar+0x14>
 801271e:	b009      	add	sp, #36	; 0x24
 8012720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012724:	f8d3 8004 	ldr.w	r8, [r3, #4]
 8012728:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 80127f8 <GUIPROP_DispChar+0x100>
 801272c:	1a84      	subs	r4, r0, r2
 801272e:	eb08 07c4 	add.w	r7, r8, r4, lsl #3
 8012732:	4630      	mov	r0, r6
 8012734:	f897 b002 	ldrb.w	fp, [r7, #2]
 8012738:	f7f4 fcbe 	bl	80070b8 <LCD_SetDrawMode>
 801273c:	4682      	mov	sl, r0
 801273e:	6828      	ldr	r0, [r5, #0]
 8012740:	f818 2034 	ldrb.w	r2, [r8, r4, lsl #3]
 8012744:	f8d0 e01c 	ldr.w	lr, [r0, #28]
 8012748:	f8d0 c038 	ldr.w	ip, [r0, #56]	; 0x38
 801274c:	f89e 3018 	ldrb.w	r3, [lr, #24]
 8012750:	f9b0 1024 	ldrsh.w	r1, [r0, #36]	; 0x24
 8012754:	f9b0 0022 	ldrsh.w	r0, [r0, #34]	; 0x22
 8012758:	f8cd c014 	str.w	ip, [sp, #20]
 801275c:	9306      	str	r3, [sp, #24]
 801275e:	f04f 0c01 	mov.w	ip, #1
 8012762:	687b      	ldr	r3, [r7, #4]
 8012764:	9304      	str	r3, [sp, #16]
 8012766:	f8cd b00c 	str.w	fp, [sp, #12]
 801276a:	f8cd c008 	str.w	ip, [sp, #8]
 801276e:	f89e c01b 	ldrb.w	ip, [lr, #27]
 8012772:	f8cd c004 	str.w	ip, [sp, #4]
 8012776:	f89e e01a 	ldrb.w	lr, [lr, #26]
 801277a:	9b06      	ldr	r3, [sp, #24]
 801277c:	f8cd e000 	str.w	lr, [sp]
 8012780:	f7f4 fe68 	bl	8007454 <LCD_DrawBitmap>
 8012784:	682b      	ldr	r3, [r5, #0]
 8012786:	69da      	ldr	r2, [r3, #28]
 8012788:	7e53      	ldrb	r3, [r2, #25]
 801278a:	f892 b018 	ldrb.w	fp, [r2, #24]
 801278e:	455b      	cmp	r3, fp
 8012790:	d923      	bls.n	80127da <GUIPROP_DispChar+0xe2>
 8012792:	2e02      	cmp	r6, #2
 8012794:	9306      	str	r3, [sp, #24]
 8012796:	d020      	beq.n	80127da <GUIPROP_DispChar+0xe2>
 8012798:	7ed1      	ldrb	r1, [r2, #27]
 801279a:	9107      	str	r1, [sp, #28]
 801279c:	f7f2 fdc6 	bl	800532c <GUI_GetColor>
 80127a0:	4606      	mov	r6, r0
 80127a2:	f7f2 fdbb 	bl	800531c <GUI_GetBkColor>
 80127a6:	f7f2 fefd 	bl	80055a4 <GUI_SetColor>
 80127aa:	f8d9 2000 	ldr.w	r2, [r9]
 80127ae:	f818 c034 	ldrb.w	ip, [r8, r4, lsl #3]
 80127b2:	69d4      	ldr	r4, [r2, #28]
 80127b4:	f9b2 0022 	ldrsh.w	r0, [r2, #34]	; 0x22
 80127b8:	f894 e01b 	ldrb.w	lr, [r4, #27]
 80127bc:	9907      	ldr	r1, [sp, #28]
 80127be:	f9b2 4024 	ldrsh.w	r4, [r2, #36]	; 0x24
 80127c2:	9b06      	ldr	r3, [sp, #24]
 80127c4:	fb0c 020e 	mla	r2, ip, lr, r0
 80127c8:	fb01 4303 	mla	r3, r1, r3, r4
 80127cc:	fb01 410b 	mla	r1, r1, fp, r4
 80127d0:	f7f4 fd02 	bl	80071d8 <LCD_FillRect>
 80127d4:	4630      	mov	r0, r6
 80127d6:	f7f2 fee5 	bl	80055a4 <GUI_SetColor>
 80127da:	4650      	mov	r0, sl
 80127dc:	f7f4 fc6c 	bl	80070b8 <LCD_SetDrawMode>
 80127e0:	682b      	ldr	r3, [r5, #0]
 80127e2:	7879      	ldrb	r1, [r7, #1]
 80127e4:	69d8      	ldr	r0, [r3, #28]
 80127e6:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 80127e8:	7e80      	ldrb	r0, [r0, #26]
 80127ea:	fb00 2201 	mla	r2, r0, r1, r2
 80127ee:	845a      	strh	r2, [r3, #34]	; 0x22
 80127f0:	b009      	add	sp, #36	; 0x24
 80127f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80127f6:	bf00      	nop
 80127f8:	20000018 	.word	0x20000018

080127fc <GUIPROP_GetCharDistX>:
 80127fc:	4b11      	ldr	r3, [pc, #68]	; (8012844 <GUIPROP_GetCharDistX+0x48>)
 80127fe:	b470      	push	{r4, r5, r6}
 8012800:	681b      	ldr	r3, [r3, #0]
 8012802:	69dd      	ldr	r5, [r3, #28]
 8012804:	69eb      	ldr	r3, [r5, #28]
 8012806:	b143      	cbz	r3, 801281a <GUIPROP_GetCharDistX+0x1e>
 8012808:	881a      	ldrh	r2, [r3, #0]
 801280a:	4290      	cmp	r0, r2
 801280c:	d302      	bcc.n	8012814 <GUIPROP_GetCharDistX+0x18>
 801280e:	885c      	ldrh	r4, [r3, #2]
 8012810:	4284      	cmp	r4, r0
 8012812:	d205      	bcs.n	8012820 <GUIPROP_GetCharDistX+0x24>
 8012814:	689b      	ldr	r3, [r3, #8]
 8012816:	2b00      	cmp	r3, #0
 8012818:	d1f6      	bne.n	8012808 <GUIPROP_GetCharDistX+0xc>
 801281a:	4618      	mov	r0, r3
 801281c:	bc70      	pop	{r4, r5, r6}
 801281e:	4770      	bx	lr
 8012820:	685e      	ldr	r6, [r3, #4]
 8012822:	7eac      	ldrb	r4, [r5, #26]
 8012824:	1a82      	subs	r2, r0, r2
 8012826:	eb06 03c2 	add.w	r3, r6, r2, lsl #3
 801282a:	785b      	ldrb	r3, [r3, #1]
 801282c:	fb13 f004 	smulbb	r0, r3, r4
 8012830:	2900      	cmp	r1, #0
 8012832:	d0f3      	beq.n	801281c <GUIPROP_GetCharDistX+0x20>
 8012834:	f816 3032 	ldrb.w	r3, [r6, r2, lsl #3]
 8012838:	fb14 f303 	smulbb	r3, r4, r3
 801283c:	600b      	str	r3, [r1, #0]
 801283e:	bc70      	pop	{r4, r5, r6}
 8012840:	4770      	bx	lr
 8012842:	bf00      	nop
 8012844:	20000018 	.word	0x20000018

08012848 <GUIPROP_GetFontInfo>:
 8012848:	2301      	movs	r3, #1
 801284a:	800b      	strh	r3, [r1, #0]
 801284c:	4770      	bx	lr
 801284e:	bf00      	nop

08012850 <GUIPROP_IsInFont>:
 8012850:	69c0      	ldr	r0, [r0, #28]
 8012852:	b150      	cbz	r0, 801286a <GUIPROP_IsInFont+0x1a>
 8012854:	8803      	ldrh	r3, [r0, #0]
 8012856:	428b      	cmp	r3, r1
 8012858:	d802      	bhi.n	8012860 <GUIPROP_IsInFont+0x10>
 801285a:	8843      	ldrh	r3, [r0, #2]
 801285c:	428b      	cmp	r3, r1
 801285e:	d203      	bcs.n	8012868 <GUIPROP_IsInFont+0x18>
 8012860:	6880      	ldr	r0, [r0, #8]
 8012862:	2800      	cmp	r0, #0
 8012864:	d1f6      	bne.n	8012854 <GUIPROP_IsInFont+0x4>
 8012866:	4770      	bx	lr
 8012868:	2001      	movs	r0, #1
 801286a:	4770      	bx	lr

0801286c <GUI_CURSOR_SetPositionEx>:
 801286c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012870:	4606      	mov	r6, r0
 8012872:	4610      	mov	r0, r2
 8012874:	4614      	mov	r4, r2
 8012876:	4688      	mov	r8, r1
 8012878:	f7f3 fd1e 	bl	80062b8 <GUI_GetCursorLayer>
 801287c:	b9c8      	cbnz	r0, 80128b2 <GUI_CURSOR_SetPositionEx+0x46>
 801287e:	00a7      	lsls	r7, r4, #2
 8012880:	4d18      	ldr	r5, [pc, #96]	; (80128e4 <GUI_CURSOR_SetPositionEx+0x78>)
 8012882:	193b      	adds	r3, r7, r4
 8012884:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8012888:	68da      	ldr	r2, [r3, #12]
 801288a:	42b2      	cmp	r2, r6
 801288c:	d104      	bne.n	8012898 <GUI_CURSOR_SetPositionEx+0x2c>
 801288e:	691b      	ldr	r3, [r3, #16]
 8012890:	4543      	cmp	r3, r8
 8012892:	d101      	bne.n	8012898 <GUI_CURSOR_SetPositionEx+0x2c>
 8012894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012898:	193b      	adds	r3, r7, r4
 801289a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801289e:	6958      	ldr	r0, [r3, #20]
 80128a0:	b9b0      	cbnz	r0, 80128d0 <GUI_CURSOR_SetPositionEx+0x64>
 80128a2:	443c      	add	r4, r7
 80128a4:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 80128a8:	60e6      	str	r6, [r4, #12]
 80128aa:	f8c4 8010 	str.w	r8, [r4, #16]
 80128ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80128b2:	4b0c      	ldr	r3, [pc, #48]	; (80128e4 <GUI_CURSOR_SetPositionEx+0x78>)
 80128b4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80128b8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80128bc:	6863      	ldr	r3, [r4, #4]
 80128be:	689a      	ldr	r2, [r3, #8]
 80128c0:	6859      	ldr	r1, [r3, #4]
 80128c2:	ebc2 0208 	rsb	r2, r2, r8
 80128c6:	1a71      	subs	r1, r6, r1
 80128c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80128cc:	f7f3 bd22 	b.w	8006314 <GUI_SetLayerPosEx>
 80128d0:	685b      	ldr	r3, [r3, #4]
 80128d2:	689a      	ldr	r2, [r3, #8]
 80128d4:	6859      	ldr	r1, [r3, #4]
 80128d6:	ebc2 0208 	rsb	r2, r2, r8
 80128da:	1a71      	subs	r1, r6, r1
 80128dc:	f001 fa6e 	bl	8013dbc <GUI_SPRITE_SetPosition>
 80128e0:	e7df      	b.n	80128a2 <GUI_CURSOR_SetPositionEx+0x36>
 80128e2:	bf00      	nop
 80128e4:	200005b8 	.word	0x200005b8

080128e8 <GUI_DrawBitmap>:
 80128e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128ec:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 80129d8 <GUI_DrawBitmap+0xf0>
 80128f0:	4604      	mov	r4, r0
 80128f2:	f8d9 3000 	ldr.w	r3, [r9]
 80128f6:	8800      	ldrh	r0, [r0, #0]
 80128f8:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 80128fa:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 80128fc:	8863      	ldrh	r3, [r4, #2]
 80128fe:	b089      	sub	sp, #36	; 0x24
 8012900:	eb02 0805 	add.w	r8, r2, r5
 8012904:	440f      	add	r7, r1
 8012906:	3801      	subs	r0, #1
 8012908:	3b01      	subs	r3, #1
 801290a:	183a      	adds	r2, r7, r0
 801290c:	4443      	add	r3, r8
 801290e:	a806      	add	r0, sp, #24
 8012910:	f8ad 7018 	strh.w	r7, [sp, #24]
 8012914:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012918:	f8ad 201c 	strh.w	r2, [sp, #28]
 801291c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012920:	f7f9 ff5a 	bl	800c7d8 <WM__InitIVRSearch>
 8012924:	2800      	cmp	r0, #0
 8012926:	d04e      	beq.n	80129c6 <GUI_DrawBitmap+0xde>
 8012928:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 80129dc <GUI_DrawBitmap+0xf4>
 801292c:	46cb      	mov	fp, r9
 801292e:	e01a      	b.n	8012966 <GUI_DrawBitmap+0x7e>
 8012930:	f040 0002 	orr.w	r0, r0, #2
 8012934:	f7f2 fe5a 	bl	80055ec <GUI_SetDrawMode>
 8012938:	6921      	ldr	r1, [r4, #16]
 801293a:	b321      	cbz	r1, 8012986 <GUI_DrawBitmap+0x9e>
 801293c:	f8d4 e00c 	ldr.w	lr, [r4, #12]
 8012940:	68a6      	ldr	r6, [r4, #8]
 8012942:	8863      	ldrh	r3, [r4, #2]
 8012944:	8822      	ldrh	r2, [r4, #0]
 8012946:	e88d 4040 	stmia.w	sp, {r6, lr}
 801294a:	2001      	movs	r0, #1
 801294c:	9003      	str	r0, [sp, #12]
 801294e:	9002      	str	r0, [sp, #8]
 8012950:	680e      	ldr	r6, [r1, #0]
 8012952:	4638      	mov	r0, r7
 8012954:	4641      	mov	r1, r8
 8012956:	47b0      	blx	r6
 8012958:	4628      	mov	r0, r5
 801295a:	f7f2 fe47 	bl	80055ec <GUI_SetDrawMode>
 801295e:	f7f9 fe15 	bl	800c58c <WM__GetNextIVR>
 8012962:	2800      	cmp	r0, #0
 8012964:	d02f      	beq.n	80129c6 <GUI_DrawBitmap+0xde>
 8012966:	2000      	movs	r0, #0
 8012968:	68e6      	ldr	r6, [r4, #12]
 801296a:	f7f2 fe3f 	bl	80055ec <GUI_SetDrawMode>
 801296e:	4605      	mov	r5, r0
 8012970:	b116      	cbz	r6, 8012978 <GUI_DrawBitmap+0x90>
 8012972:	7933      	ldrb	r3, [r6, #4]
 8012974:	2b00      	cmp	r3, #0
 8012976:	d1db      	bne.n	8012930 <GUI_DrawBitmap+0x48>
 8012978:	f025 0002 	bic.w	r0, r5, #2
 801297c:	f7f2 fe36 	bl	80055ec <GUI_SetDrawMode>
 8012980:	6921      	ldr	r1, [r4, #16]
 8012982:	2900      	cmp	r1, #0
 8012984:	d1da      	bne.n	801293c <GUI_DrawBitmap+0x54>
 8012986:	f8d9 2000 	ldr.w	r2, [r9]
 801298a:	f8da 3000 	ldr.w	r3, [sl]
 801298e:	7c52      	ldrb	r2, [r2, #17]
 8012990:	68e0      	ldr	r0, [r4, #12]
 8012992:	4621      	mov	r1, r4
 8012994:	4798      	blx	r3
 8012996:	88e1      	ldrh	r1, [r4, #6]
 8012998:	b1c0      	cbz	r0, 80129cc <GUI_DrawBitmap+0xe4>
 801299a:	8863      	ldrh	r3, [r4, #2]
 801299c:	8822      	ldrh	r2, [r4, #0]
 801299e:	68a6      	ldr	r6, [r4, #8]
 80129a0:	9005      	str	r0, [sp, #20]
 80129a2:	88a0      	ldrh	r0, [r4, #4]
 80129a4:	9102      	str	r1, [sp, #8]
 80129a6:	2101      	movs	r1, #1
 80129a8:	9003      	str	r0, [sp, #12]
 80129aa:	9101      	str	r1, [sp, #4]
 80129ac:	9100      	str	r1, [sp, #0]
 80129ae:	4638      	mov	r0, r7
 80129b0:	4641      	mov	r1, r8
 80129b2:	9604      	str	r6, [sp, #16]
 80129b4:	f7f4 fd4e 	bl	8007454 <LCD_DrawBitmap>
 80129b8:	4628      	mov	r0, r5
 80129ba:	f7f2 fe17 	bl	80055ec <GUI_SetDrawMode>
 80129be:	f7f9 fde5 	bl	800c58c <WM__GetNextIVR>
 80129c2:	2800      	cmp	r0, #0
 80129c4:	d1cf      	bne.n	8012966 <GUI_DrawBitmap+0x7e>
 80129c6:	b009      	add	sp, #36	; 0x24
 80129c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129cc:	2901      	cmp	r1, #1
 80129ce:	bf04      	itt	eq
 80129d0:	f8db 3000 	ldreq.w	r3, [fp]
 80129d4:	6b98      	ldreq	r0, [r3, #56]	; 0x38
 80129d6:	e7e0      	b.n	801299a <GUI_DrawBitmap+0xb2>
 80129d8:	20000018 	.word	0x20000018
 80129dc:	20000008 	.word	0x20000008

080129e0 <GUI_DrawGradientV>:
 80129e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129e4:	4c62      	ldr	r4, [pc, #392]	; (8012b70 <GUI_DrawGradientV+0x190>)
 80129e6:	6824      	ldr	r4, [r4, #0]
 80129e8:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80129ea:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80129ec:	b091      	sub	sp, #68	; 0x44
 80129ee:	1828      	adds	r0, r5, r0
 80129f0:	1861      	adds	r1, r4, r1
 80129f2:	18aa      	adds	r2, r5, r2
 80129f4:	18e3      	adds	r3, r4, r3
 80129f6:	4606      	mov	r6, r0
 80129f8:	9007      	str	r0, [sp, #28]
 80129fa:	a80e      	add	r0, sp, #56	; 0x38
 80129fc:	9208      	str	r2, [sp, #32]
 80129fe:	460d      	mov	r5, r1
 8012a00:	9102      	str	r1, [sp, #8]
 8012a02:	9301      	str	r3, [sp, #4]
 8012a04:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 8012a08:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8012a0c:	f8ad 103a 	strh.w	r1, [sp, #58]	; 0x3a
 8012a10:	461c      	mov	r4, r3
 8012a12:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8012a16:	f7f9 fedf 	bl	800c7d8 <WM__InitIVRSearch>
 8012a1a:	2800      	cmp	r0, #0
 8012a1c:	f000 808f 	beq.w	8012b3e <GUI_DrawGradientV+0x15e>
 8012a20:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012a22:	f89d 706c 	ldrb.w	r7, [sp, #108]	; 0x6c
 8012a26:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8012a2a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8012a2c:	f3c2 2607 	ubfx	r6, r2, #8, #8
 8012a30:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012a32:	ebc5 0b04 	rsb	fp, r5, r4
 8012a36:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8012a3a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8012a3c:	f89d 4068 	ldrb.w	r4, [sp, #104]	; 0x68
 8012a40:	eb0b 73db 	add.w	r3, fp, fp, lsr #31
 8012a44:	105b      	asrs	r3, r3, #1
 8012a46:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 8012a4a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012a4c:	fb0b 3504 	mla	r5, fp, r4, r3
 8012a50:	1b3c      	subs	r4, r7, r4
 8012a52:	0e12      	lsrs	r2, r2, #24
 8012a54:	9406      	str	r4, [sp, #24]
 8012a56:	fb0b 3400 	mla	r4, fp, r0, r3
 8012a5a:	1a30      	subs	r0, r6, r0
 8012a5c:	9003      	str	r0, [sp, #12]
 8012a5e:	fb0b 3001 	mla	r0, fp, r1, r3
 8012a62:	fb0b 3302 	mla	r3, fp, r2, r3
 8012a66:	930d      	str	r3, [sp, #52]	; 0x34
 8012a68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8012a6a:	950a      	str	r5, [sp, #40]	; 0x28
 8012a6c:	ebc1 010e 	rsb	r1, r1, lr
 8012a70:	ebc2 6313 	rsb	r3, r2, r3, lsr #24
 8012a74:	940b      	str	r4, [sp, #44]	; 0x2c
 8012a76:	900c      	str	r0, [sp, #48]	; 0x30
 8012a78:	9104      	str	r1, [sp, #16]
 8012a7a:	9305      	str	r3, [sp, #20]
 8012a7c:	465e      	mov	r6, fp
 8012a7e:	f7f2 fc55 	bl	800532c <GUI_GetColor>
 8012a82:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8012a84:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8012a86:	9009      	str	r0, [sp, #36]	; 0x24
 8012a88:	4293      	cmp	r3, r2
 8012a8a:	d067      	beq.n	8012b5c <GUI_DrawGradientV+0x17c>
 8012a8c:	2e00      	cmp	r6, #0
 8012a8e:	d052      	beq.n	8012b36 <GUI_DrawGradientV+0x156>
 8012a90:	9d02      	ldr	r5, [sp, #8]
 8012a92:	9a01      	ldr	r2, [sp, #4]
 8012a94:	4295      	cmp	r5, r2
 8012a96:	dc59      	bgt.n	8012b4c <GUI_DrawGradientV+0x16c>
 8012a98:	af0a      	add	r7, sp, #40	; 0x28
 8012a9a:	4602      	mov	r2, r0
 8012a9c:	e897 0780 	ldmia.w	r7, {r7, r8, r9, sl}
 8012aa0:	f04f 0b01 	mov.w	fp, #1
 8012aa4:	e006      	b.n	8012ab4 <GUI_DrawGradientV+0xd4>
 8012aa6:	f10b 0b01 	add.w	fp, fp, #1
 8012aaa:	9b01      	ldr	r3, [sp, #4]
 8012aac:	3501      	adds	r5, #1
 8012aae:	42ab      	cmp	r3, r5
 8012ab0:	4622      	mov	r2, r4
 8012ab2:	db2f      	blt.n	8012b14 <GUI_DrawGradientV+0x134>
 8012ab4:	fb9a f3f6 	sdiv	r3, sl, r6
 8012ab8:	fb99 f4f6 	sdiv	r4, r9, r6
 8012abc:	061b      	lsls	r3, r3, #24
 8012abe:	fb97 f1f6 	sdiv	r1, r7, r6
 8012ac2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8012ac6:	fb98 f4f6 	sdiv	r4, r8, r6
 8012aca:	ea41 2404 	orr.w	r4, r1, r4, lsl #8
 8012ace:	9905      	ldr	r1, [sp, #20]
 8012ad0:	431c      	orrs	r4, r3
 8012ad2:	9b03      	ldr	r3, [sp, #12]
 8012ad4:	448a      	add	sl, r1
 8012ad6:	9904      	ldr	r1, [sp, #16]
 8012ad8:	4498      	add	r8, r3
 8012ada:	9b02      	ldr	r3, [sp, #8]
 8012adc:	4489      	add	r9, r1
 8012ade:	9906      	ldr	r1, [sp, #24]
 8012ae0:	42ab      	cmp	r3, r5
 8012ae2:	4610      	mov	r0, r2
 8012ae4:	440f      	add	r7, r1
 8012ae6:	dae0      	bge.n	8012aaa <GUI_DrawGradientV+0xca>
 8012ae8:	4294      	cmp	r4, r2
 8012aea:	d0dc      	beq.n	8012aa6 <GUI_DrawGradientV+0xc6>
 8012aec:	f7f4 ff08 	bl	8007900 <LCD_SetColor>
 8012af0:	f1bb 0f01 	cmp.w	fp, #1
 8012af4:	ebcb 0105 	rsb	r1, fp, r5
 8012af8:	f105 33ff 	add.w	r3, r5, #4294967295
 8012afc:	9a08      	ldr	r2, [sp, #32]
 8012afe:	9807      	ldr	r0, [sp, #28]
 8012b00:	d020      	beq.n	8012b44 <GUI_DrawGradientV+0x164>
 8012b02:	f7f4 fb69 	bl	80071d8 <LCD_FillRect>
 8012b06:	9b01      	ldr	r3, [sp, #4]
 8012b08:	3501      	adds	r5, #1
 8012b0a:	42ab      	cmp	r3, r5
 8012b0c:	f04f 0b01 	mov.w	fp, #1
 8012b10:	4622      	mov	r2, r4
 8012b12:	dacf      	bge.n	8012ab4 <GUI_DrawGradientV+0xd4>
 8012b14:	4620      	mov	r0, r4
 8012b16:	f7f4 fef3 	bl	8007900 <LCD_SetColor>
 8012b1a:	f1bb 0f01 	cmp.w	fp, #1
 8012b1e:	d017      	beq.n	8012b50 <GUI_DrawGradientV+0x170>
 8012b20:	9b01      	ldr	r3, [sp, #4]
 8012b22:	9a08      	ldr	r2, [sp, #32]
 8012b24:	9807      	ldr	r0, [sp, #28]
 8012b26:	ebcb 0103 	rsb	r1, fp, r3
 8012b2a:	3101      	adds	r1, #1
 8012b2c:	f7f4 fb54 	bl	80071d8 <LCD_FillRect>
 8012b30:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012b32:	f7f4 fee5 	bl	8007900 <LCD_SetColor>
 8012b36:	f7f9 fd29 	bl	800c58c <WM__GetNextIVR>
 8012b3a:	2800      	cmp	r0, #0
 8012b3c:	d19f      	bne.n	8012a7e <GUI_DrawGradientV+0x9e>
 8012b3e:	b011      	add	sp, #68	; 0x44
 8012b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b44:	1e69      	subs	r1, r5, #1
 8012b46:	f7f4 faf3 	bl	8007130 <LCD_DrawHLine>
 8012b4a:	e7ae      	b.n	8012aaa <GUI_DrawGradientV+0xca>
 8012b4c:	f7f4 fed8 	bl	8007900 <LCD_SetColor>
 8012b50:	9a08      	ldr	r2, [sp, #32]
 8012b52:	9901      	ldr	r1, [sp, #4]
 8012b54:	9807      	ldr	r0, [sp, #28]
 8012b56:	f7f4 faeb 	bl	8007130 <LCD_DrawHLine>
 8012b5a:	e7e9      	b.n	8012b30 <GUI_DrawGradientV+0x150>
 8012b5c:	4618      	mov	r0, r3
 8012b5e:	f7f4 fecf 	bl	8007900 <LCD_SetColor>
 8012b62:	9b01      	ldr	r3, [sp, #4]
 8012b64:	9a08      	ldr	r2, [sp, #32]
 8012b66:	9902      	ldr	r1, [sp, #8]
 8012b68:	9807      	ldr	r0, [sp, #28]
 8012b6a:	f7f4 fb35 	bl	80071d8 <LCD_FillRect>
 8012b6e:	e7df      	b.n	8012b30 <GUI_DrawGradientV+0x150>
 8012b70:	20000018 	.word	0x20000018

08012b74 <GUI_DrawGradientH>:
 8012b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b78:	4c62      	ldr	r4, [pc, #392]	; (8012d04 <GUI_DrawGradientH+0x190>)
 8012b7a:	6824      	ldr	r4, [r4, #0]
 8012b7c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8012b7e:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8012b80:	b091      	sub	sp, #68	; 0x44
 8012b82:	1828      	adds	r0, r5, r0
 8012b84:	18aa      	adds	r2, r5, r2
 8012b86:	1861      	adds	r1, r4, r1
 8012b88:	18e3      	adds	r3, r4, r3
 8012b8a:	4606      	mov	r6, r0
 8012b8c:	9002      	str	r0, [sp, #8]
 8012b8e:	a80e      	add	r0, sp, #56	; 0x38
 8012b90:	9201      	str	r2, [sp, #4]
 8012b92:	9107      	str	r1, [sp, #28]
 8012b94:	9308      	str	r3, [sp, #32]
 8012b96:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 8012b9a:	4614      	mov	r4, r2
 8012b9c:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8012ba0:	f8ad 103a 	strh.w	r1, [sp, #58]	; 0x3a
 8012ba4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8012ba8:	f7f9 fe16 	bl	800c7d8 <WM__InitIVRSearch>
 8012bac:	2800      	cmp	r0, #0
 8012bae:	f000 808f 	beq.w	8012cd0 <GUI_DrawGradientH+0x15c>
 8012bb2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012bb4:	f89d 706c 	ldrb.w	r7, [sp, #108]	; 0x6c
 8012bb8:	f3c2 2007 	ubfx	r0, r2, #8, #8
 8012bbc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8012bbe:	ebc6 0b04 	rsb	fp, r6, r4
 8012bc2:	f3c2 2607 	ubfx	r6, r2, #8, #8
 8012bc6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012bc8:	f89d 4068 	ldrb.w	r4, [sp, #104]	; 0x68
 8012bcc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8012bd0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8012bd2:	eb0b 73db 	add.w	r3, fp, fp, lsr #31
 8012bd6:	105b      	asrs	r3, r3, #1
 8012bd8:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 8012bdc:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012bde:	fb0b 3504 	mla	r5, fp, r4, r3
 8012be2:	1b3c      	subs	r4, r7, r4
 8012be4:	0e12      	lsrs	r2, r2, #24
 8012be6:	9406      	str	r4, [sp, #24]
 8012be8:	fb0b 3400 	mla	r4, fp, r0, r3
 8012bec:	1a30      	subs	r0, r6, r0
 8012bee:	9003      	str	r0, [sp, #12]
 8012bf0:	fb0b 3001 	mla	r0, fp, r1, r3
 8012bf4:	fb0b 3302 	mla	r3, fp, r2, r3
 8012bf8:	930d      	str	r3, [sp, #52]	; 0x34
 8012bfa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8012bfc:	950a      	str	r5, [sp, #40]	; 0x28
 8012bfe:	ebc1 010e 	rsb	r1, r1, lr
 8012c02:	ebc2 6313 	rsb	r3, r2, r3, lsr #24
 8012c06:	940b      	str	r4, [sp, #44]	; 0x2c
 8012c08:	900c      	str	r0, [sp, #48]	; 0x30
 8012c0a:	9104      	str	r1, [sp, #16]
 8012c0c:	9305      	str	r3, [sp, #20]
 8012c0e:	465e      	mov	r6, fp
 8012c10:	f7f2 fb8c 	bl	800532c <GUI_GetColor>
 8012c14:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8012c16:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8012c18:	9009      	str	r0, [sp, #36]	; 0x24
 8012c1a:	4293      	cmp	r3, r2
 8012c1c:	d068      	beq.n	8012cf0 <GUI_DrawGradientH+0x17c>
 8012c1e:	2e00      	cmp	r6, #0
 8012c20:	d052      	beq.n	8012cc8 <GUI_DrawGradientH+0x154>
 8012c22:	9d02      	ldr	r5, [sp, #8]
 8012c24:	9a01      	ldr	r2, [sp, #4]
 8012c26:	4295      	cmp	r5, r2
 8012c28:	dc5a      	bgt.n	8012ce0 <GUI_DrawGradientH+0x16c>
 8012c2a:	af0a      	add	r7, sp, #40	; 0x28
 8012c2c:	4602      	mov	r2, r0
 8012c2e:	e897 0780 	ldmia.w	r7, {r7, r8, r9, sl}
 8012c32:	f04f 0b01 	mov.w	fp, #1
 8012c36:	e006      	b.n	8012c46 <GUI_DrawGradientH+0xd2>
 8012c38:	f10b 0b01 	add.w	fp, fp, #1
 8012c3c:	9b01      	ldr	r3, [sp, #4]
 8012c3e:	3501      	adds	r5, #1
 8012c40:	42ab      	cmp	r3, r5
 8012c42:	4622      	mov	r2, r4
 8012c44:	db2f      	blt.n	8012ca6 <GUI_DrawGradientH+0x132>
 8012c46:	fb9a f3f6 	sdiv	r3, sl, r6
 8012c4a:	fb99 f4f6 	sdiv	r4, r9, r6
 8012c4e:	061b      	lsls	r3, r3, #24
 8012c50:	fb97 f1f6 	sdiv	r1, r7, r6
 8012c54:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8012c58:	fb98 f4f6 	sdiv	r4, r8, r6
 8012c5c:	ea41 2404 	orr.w	r4, r1, r4, lsl #8
 8012c60:	9905      	ldr	r1, [sp, #20]
 8012c62:	431c      	orrs	r4, r3
 8012c64:	9b03      	ldr	r3, [sp, #12]
 8012c66:	448a      	add	sl, r1
 8012c68:	9904      	ldr	r1, [sp, #16]
 8012c6a:	4498      	add	r8, r3
 8012c6c:	9b02      	ldr	r3, [sp, #8]
 8012c6e:	4489      	add	r9, r1
 8012c70:	9906      	ldr	r1, [sp, #24]
 8012c72:	42ab      	cmp	r3, r5
 8012c74:	4610      	mov	r0, r2
 8012c76:	440f      	add	r7, r1
 8012c78:	dae0      	bge.n	8012c3c <GUI_DrawGradientH+0xc8>
 8012c7a:	4294      	cmp	r4, r2
 8012c7c:	d0dc      	beq.n	8012c38 <GUI_DrawGradientH+0xc4>
 8012c7e:	f7f4 fe3f 	bl	8007900 <LCD_SetColor>
 8012c82:	f1bb 0f01 	cmp.w	fp, #1
 8012c86:	ebcb 0005 	rsb	r0, fp, r5
 8012c8a:	9b08      	ldr	r3, [sp, #32]
 8012c8c:	9907      	ldr	r1, [sp, #28]
 8012c8e:	f105 32ff 	add.w	r2, r5, #4294967295
 8012c92:	d020      	beq.n	8012cd6 <GUI_DrawGradientH+0x162>
 8012c94:	f7f4 faa0 	bl	80071d8 <LCD_FillRect>
 8012c98:	9b01      	ldr	r3, [sp, #4]
 8012c9a:	3501      	adds	r5, #1
 8012c9c:	42ab      	cmp	r3, r5
 8012c9e:	f04f 0b01 	mov.w	fp, #1
 8012ca2:	4622      	mov	r2, r4
 8012ca4:	dacf      	bge.n	8012c46 <GUI_DrawGradientH+0xd2>
 8012ca6:	4620      	mov	r0, r4
 8012ca8:	f7f4 fe2a 	bl	8007900 <LCD_SetColor>
 8012cac:	f1bb 0f01 	cmp.w	fp, #1
 8012cb0:	d018      	beq.n	8012ce4 <GUI_DrawGradientH+0x170>
 8012cb2:	9a01      	ldr	r2, [sp, #4]
 8012cb4:	9b08      	ldr	r3, [sp, #32]
 8012cb6:	9907      	ldr	r1, [sp, #28]
 8012cb8:	ebcb 0002 	rsb	r0, fp, r2
 8012cbc:	3001      	adds	r0, #1
 8012cbe:	f7f4 fa8b 	bl	80071d8 <LCD_FillRect>
 8012cc2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012cc4:	f7f4 fe1c 	bl	8007900 <LCD_SetColor>
 8012cc8:	f7f9 fc60 	bl	800c58c <WM__GetNextIVR>
 8012ccc:	2800      	cmp	r0, #0
 8012cce:	d19f      	bne.n	8012c10 <GUI_DrawGradientH+0x9c>
 8012cd0:	b011      	add	sp, #68	; 0x44
 8012cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012cd6:	461a      	mov	r2, r3
 8012cd8:	1e68      	subs	r0, r5, #1
 8012cda:	f7f4 fa53 	bl	8007184 <LCD_DrawVLine>
 8012cde:	e7ad      	b.n	8012c3c <GUI_DrawGradientH+0xc8>
 8012ce0:	f7f4 fe0e 	bl	8007900 <LCD_SetColor>
 8012ce4:	9a08      	ldr	r2, [sp, #32]
 8012ce6:	9907      	ldr	r1, [sp, #28]
 8012ce8:	9801      	ldr	r0, [sp, #4]
 8012cea:	f7f4 fa4b 	bl	8007184 <LCD_DrawVLine>
 8012cee:	e7e8      	b.n	8012cc2 <GUI_DrawGradientH+0x14e>
 8012cf0:	4618      	mov	r0, r3
 8012cf2:	f7f4 fe05 	bl	8007900 <LCD_SetColor>
 8012cf6:	9b08      	ldr	r3, [sp, #32]
 8012cf8:	9a01      	ldr	r2, [sp, #4]
 8012cfa:	9907      	ldr	r1, [sp, #28]
 8012cfc:	9802      	ldr	r0, [sp, #8]
 8012cfe:	f7f4 fa6b 	bl	80071d8 <LCD_FillRect>
 8012d02:	e7de      	b.n	8012cc2 <GUI_DrawGradientH+0x14e>
 8012d04:	20000018 	.word	0x20000018

08012d08 <GUI_DrawHLine>:
 8012d08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012d0a:	4f11      	ldr	r7, [pc, #68]	; (8012d50 <GUI_DrawHLine+0x48>)
 8012d0c:	683b      	ldr	r3, [r7, #0]
 8012d0e:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8012d10:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012d12:	b083      	sub	sp, #12
 8012d14:	4405      	add	r5, r0
 8012d16:	1866      	adds	r6, r4, r1
 8012d18:	b22b      	sxth	r3, r5
 8012d1a:	4414      	add	r4, r2
 8012d1c:	4668      	mov	r0, sp
 8012d1e:	f8ad 6000 	strh.w	r6, [sp]
 8012d22:	f8ad 4004 	strh.w	r4, [sp, #4]
 8012d26:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012d2a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012d2e:	f7f9 fd53 	bl	800c7d8 <WM__InitIVRSearch>
 8012d32:	b150      	cbz	r0, 8012d4a <GUI_DrawHLine+0x42>
 8012d34:	683b      	ldr	r3, [r7, #0]
 8012d36:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8012d38:	4622      	mov	r2, r4
 8012d3a:	681b      	ldr	r3, [r3, #0]
 8012d3c:	4629      	mov	r1, r5
 8012d3e:	4630      	mov	r0, r6
 8012d40:	4798      	blx	r3
 8012d42:	f7f9 fc23 	bl	800c58c <WM__GetNextIVR>
 8012d46:	2800      	cmp	r0, #0
 8012d48:	d1f4      	bne.n	8012d34 <GUI_DrawHLine+0x2c>
 8012d4a:	b003      	add	sp, #12
 8012d4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012d4e:	bf00      	nop
 8012d50:	20000018 	.word	0x20000018

08012d54 <GUI_DrawPixel>:
 8012d54:	b570      	push	{r4, r5, r6, lr}
 8012d56:	4e10      	ldr	r6, [pc, #64]	; (8012d98 <GUI_DrawPixel+0x44>)
 8012d58:	6833      	ldr	r3, [r6, #0]
 8012d5a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8012d5c:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8012d5e:	b082      	sub	sp, #8
 8012d60:	4405      	add	r5, r0
 8012d62:	440c      	add	r4, r1
 8012d64:	b22a      	sxth	r2, r5
 8012d66:	b223      	sxth	r3, r4
 8012d68:	4668      	mov	r0, sp
 8012d6a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012d6e:	f8ad 2000 	strh.w	r2, [sp]
 8012d72:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012d76:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012d7a:	f7f9 fd2d 	bl	800c7d8 <WM__InitIVRSearch>
 8012d7e:	b148      	cbz	r0, 8012d94 <GUI_DrawPixel+0x40>
 8012d80:	6833      	ldr	r3, [r6, #0]
 8012d82:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8012d84:	4621      	mov	r1, r4
 8012d86:	685b      	ldr	r3, [r3, #4]
 8012d88:	4628      	mov	r0, r5
 8012d8a:	4798      	blx	r3
 8012d8c:	f7f9 fbfe 	bl	800c58c <WM__GetNextIVR>
 8012d90:	2800      	cmp	r0, #0
 8012d92:	d1f5      	bne.n	8012d80 <GUI_DrawPixel+0x2c>
 8012d94:	b002      	add	sp, #8
 8012d96:	bd70      	pop	{r4, r5, r6, pc}
 8012d98:	20000018 	.word	0x20000018

08012d9c <GL_DrawPoint>:
 8012d9c:	4b06      	ldr	r3, [pc, #24]	; (8012db8 <GL_DrawPoint+0x1c>)
 8012d9e:	681b      	ldr	r3, [r3, #0]
 8012da0:	7e1a      	ldrb	r2, [r3, #24]
 8012da2:	2a01      	cmp	r2, #1
 8012da4:	d005      	beq.n	8012db2 <GL_DrawPoint+0x16>
 8012da6:	3a01      	subs	r2, #1
 8012da8:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8012dac:	1052      	asrs	r2, r2, #1
 8012dae:	f003 ba15 	b.w	80161dc <GL_FillCircle>
 8012db2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8012db4:	685b      	ldr	r3, [r3, #4]
 8012db6:	4718      	bx	r3
 8012db8:	20000018 	.word	0x20000018

08012dbc <GUI_DrawVLine>:
 8012dbc:	4b10      	ldr	r3, [pc, #64]	; (8012e00 <GUI_DrawVLine+0x44>)
 8012dbe:	b570      	push	{r4, r5, r6, lr}
 8012dc0:	681b      	ldr	r3, [r3, #0]
 8012dc2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8012dc4:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8012dc6:	b082      	sub	sp, #8
 8012dc8:	4405      	add	r5, r0
 8012dca:	1866      	adds	r6, r4, r1
 8012dcc:	b22b      	sxth	r3, r5
 8012dce:	4414      	add	r4, r2
 8012dd0:	4668      	mov	r0, sp
 8012dd2:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012dd6:	f8ad 4006 	strh.w	r4, [sp, #6]
 8012dda:	f8ad 3000 	strh.w	r3, [sp]
 8012dde:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012de2:	f7f9 fcf9 	bl	800c7d8 <WM__InitIVRSearch>
 8012de6:	b140      	cbz	r0, 8012dfa <GUI_DrawVLine+0x3e>
 8012de8:	4622      	mov	r2, r4
 8012dea:	4631      	mov	r1, r6
 8012dec:	4628      	mov	r0, r5
 8012dee:	f7f4 f9c9 	bl	8007184 <LCD_DrawVLine>
 8012df2:	f7f9 fbcb 	bl	800c58c <WM__GetNextIVR>
 8012df6:	2800      	cmp	r0, #0
 8012df8:	d1f6      	bne.n	8012de8 <GUI_DrawVLine+0x2c>
 8012dfa:	b002      	add	sp, #8
 8012dfc:	bd70      	pop	{r4, r5, r6, pc}
 8012dfe:	bf00      	nop
 8012e00:	20000018 	.word	0x20000018

08012e04 <GUI_FillRect>:
 8012e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e06:	4c10      	ldr	r4, [pc, #64]	; (8012e48 <GUI_FillRect+0x44>)
 8012e08:	6824      	ldr	r4, [r4, #0]
 8012e0a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8012e0c:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8012e0e:	b083      	sub	sp, #12
 8012e10:	182f      	adds	r7, r5, r0
 8012e12:	1866      	adds	r6, r4, r1
 8012e14:	4415      	add	r5, r2
 8012e16:	441c      	add	r4, r3
 8012e18:	4668      	mov	r0, sp
 8012e1a:	f8ad 7000 	strh.w	r7, [sp]
 8012e1e:	f8ad 5004 	strh.w	r5, [sp, #4]
 8012e22:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012e26:	f8ad 4006 	strh.w	r4, [sp, #6]
 8012e2a:	f7f9 fcd5 	bl	800c7d8 <WM__InitIVRSearch>
 8012e2e:	b148      	cbz	r0, 8012e44 <GUI_FillRect+0x40>
 8012e30:	4623      	mov	r3, r4
 8012e32:	462a      	mov	r2, r5
 8012e34:	4631      	mov	r1, r6
 8012e36:	4638      	mov	r0, r7
 8012e38:	f7f4 f9ce 	bl	80071d8 <LCD_FillRect>
 8012e3c:	f7f9 fba6 	bl	800c58c <WM__GetNextIVR>
 8012e40:	2800      	cmp	r0, #0
 8012e42:	d1f5      	bne.n	8012e30 <GUI_FillRect+0x2c>
 8012e44:	b003      	add	sp, #12
 8012e46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e48:	20000018 	.word	0x20000018

08012e4c <GUI_DrawFocusRect>:
 8012e4c:	b570      	push	{r4, r5, r6, lr}
 8012e4e:	b082      	sub	sp, #8
 8012e50:	460a      	mov	r2, r1
 8012e52:	4601      	mov	r1, r0
 8012e54:	4668      	mov	r0, sp
 8012e56:	f7f3 fea9 	bl	8006bac <GUI__ReduceRect>
 8012e5a:	4b27      	ldr	r3, [pc, #156]	; (8012ef8 <GUI_DrawFocusRect+0xac>)
 8012e5c:	f8bd 4000 	ldrh.w	r4, [sp]
 8012e60:	681b      	ldr	r3, [r3, #0]
 8012e62:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012e66:	f8b3 604c 	ldrh.w	r6, [r3, #76]	; 0x4c
 8012e6a:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 8012e6e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012e72:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012e76:	4434      	add	r4, r6
 8012e78:	4431      	add	r1, r6
 8012e7a:	442a      	add	r2, r5
 8012e7c:	442b      	add	r3, r5
 8012e7e:	4668      	mov	r0, sp
 8012e80:	f8ad 4000 	strh.w	r4, [sp]
 8012e84:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012e88:	f8ad 2002 	strh.w	r2, [sp, #2]
 8012e8c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012e90:	f7f9 fca2 	bl	800c7d8 <WM__InitIVRSearch>
 8012e94:	b368      	cbz	r0, 8012ef2 <GUI_DrawFocusRect+0xa6>
 8012e96:	f9bd 4000 	ldrsh.w	r4, [sp]
 8012e9a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8012e9e:	429c      	cmp	r4, r3
 8012ea0:	dc0e      	bgt.n	8012ec0 <GUI_DrawFocusRect+0x74>
 8012ea2:	4620      	mov	r0, r4
 8012ea4:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8012ea8:	f7f4 f90c 	bl	80070c4 <LCD_DrawPixel>
 8012eac:	4620      	mov	r0, r4
 8012eae:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 8012eb2:	f7f4 f907 	bl	80070c4 <LCD_DrawPixel>
 8012eb6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8012eba:	3402      	adds	r4, #2
 8012ebc:	429c      	cmp	r4, r3
 8012ebe:	ddf0      	ble.n	8012ea2 <GUI_DrawFocusRect+0x56>
 8012ec0:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
 8012ec4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8012ec8:	429c      	cmp	r4, r3
 8012eca:	dc0e      	bgt.n	8012eea <GUI_DrawFocusRect+0x9e>
 8012ecc:	4621      	mov	r1, r4
 8012ece:	f9bd 0000 	ldrsh.w	r0, [sp]
 8012ed2:	f7f4 f8f7 	bl	80070c4 <LCD_DrawPixel>
 8012ed6:	4621      	mov	r1, r4
 8012ed8:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8012edc:	f7f4 f8f2 	bl	80070c4 <LCD_DrawPixel>
 8012ee0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8012ee4:	3402      	adds	r4, #2
 8012ee6:	429c      	cmp	r4, r3
 8012ee8:	ddf0      	ble.n	8012ecc <GUI_DrawFocusRect+0x80>
 8012eea:	f7f9 fb4f 	bl	800c58c <WM__GetNextIVR>
 8012eee:	2800      	cmp	r0, #0
 8012ef0:	d1d1      	bne.n	8012e96 <GUI_DrawFocusRect+0x4a>
 8012ef2:	b002      	add	sp, #8
 8012ef4:	bd70      	pop	{r4, r5, r6, pc}
 8012ef6:	bf00      	nop
 8012ef8:	20000018 	.word	0x20000018

08012efc <GL_DrawLine1Ex>:
 8012efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f00:	1a16      	subs	r6, r2, r0
 8012f02:	b085      	sub	sp, #20
 8012f04:	1a5d      	subs	r5, r3, r1
 8012f06:	469e      	mov	lr, r3
 8012f08:	ea56 0305 	orrs.w	r3, r6, r5
 8012f0c:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 8012f10:	d078      	beq.n	8013004 <GL_DrawLine1Ex+0x108>
 8012f12:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
 8012f16:	ea85 74e5 	eor.w	r4, r5, r5, asr #31
 8012f1a:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
 8012f1e:	eba4 74e5 	sub.w	r4, r4, r5, asr #31
 8012f22:	429c      	cmp	r4, r3
 8012f24:	4607      	mov	r7, r0
 8012f26:	4689      	mov	r9, r1
 8012f28:	dc32      	bgt.n	8012f90 <GL_DrawLine1Ex+0x94>
 8012f2a:	461c      	mov	r4, r3
 8012f2c:	42a6      	cmp	r6, r4
 8012f2e:	f04f 0300 	mov.w	r3, #0
 8012f32:	9301      	str	r3, [sp, #4]
 8012f34:	d03a      	beq.n	8012fac <GL_DrawLine1Ex+0xb0>
 8012f36:	426d      	negs	r5, r5
 8012f38:	4639      	mov	r1, r7
 8012f3a:	f04f 33ff 	mov.w	r3, #4294967295
 8012f3e:	2d00      	cmp	r5, #0
 8012f40:	4617      	mov	r7, r2
 8012f42:	f1c6 0400 	rsb	r4, r6, #0
 8012f46:	460a      	mov	r2, r1
 8012f48:	46f1      	mov	r9, lr
 8012f4a:	9303      	str	r3, [sp, #12]
 8012f4c:	f8db 1000 	ldr.w	r1, [fp]
 8012f50:	d132      	bne.n	8012fb8 <GL_DrawLine1Ex+0xbc>
 8012f52:	f8df 8308 	ldr.w	r8, [pc, #776]	; 801325c <GL_DrawLine1Ex+0x360>
 8012f56:	9b01      	ldr	r3, [sp, #4]
 8012f58:	f8d8 e000 	ldr.w	lr, [r8]
 8012f5c:	4608      	mov	r0, r1
 8012f5e:	2b00      	cmp	r3, #0
 8012f60:	f000 80cf 	beq.w	8013102 <GL_DrawLine1Ex+0x206>
 8012f64:	f89e 301a 	ldrb.w	r3, [lr, #26]
 8012f68:	2b00      	cmp	r3, #0
 8012f6a:	f000 81c1 	beq.w	80132f0 <GL_DrawLine1Ex+0x3f4>
 8012f6e:	2c00      	cmp	r4, #0
 8012f70:	f2c0 81c5 	blt.w	80132fe <GL_DrawLine1Ex+0x402>
 8012f74:	4eb5      	ldr	r6, [pc, #724]	; (801324c <GL_DrawLine1Ex+0x350>)
 8012f76:	46aa      	mov	sl, r5
 8012f78:	4672      	mov	r2, lr
 8012f7a:	3b01      	subs	r3, #1
 8012f7c:	1c45      	adds	r5, r0, #1
 8012f7e:	2b03      	cmp	r3, #3
 8012f80:	f200 8132 	bhi.w	80131e8 <GL_DrawLine1Ex+0x2ec>
 8012f84:	e8df f013 	tbh	[pc, r3, lsl #1]
 8012f88:	013f014a 	.word	0x013f014a
 8012f8c:	011f0156 	.word	0x011f0156
 8012f90:	463b      	mov	r3, r7
 8012f92:	4630      	mov	r0, r6
 8012f94:	462e      	mov	r6, r5
 8012f96:	4611      	mov	r1, r2
 8012f98:	464f      	mov	r7, r9
 8012f9a:	42a6      	cmp	r6, r4
 8012f9c:	4699      	mov	r9, r3
 8012f9e:	f04f 0301 	mov.w	r3, #1
 8012fa2:	4672      	mov	r2, lr
 8012fa4:	4605      	mov	r5, r0
 8012fa6:	468e      	mov	lr, r1
 8012fa8:	9301      	str	r3, [sp, #4]
 8012faa:	d1c4      	bne.n	8012f36 <GL_DrawLine1Ex+0x3a>
 8012fac:	2301      	movs	r3, #1
 8012fae:	2d00      	cmp	r5, #0
 8012fb0:	9303      	str	r3, [sp, #12]
 8012fb2:	f8db 1000 	ldr.w	r1, [fp]
 8012fb6:	d0cc      	beq.n	8012f52 <GL_DrawLine1Ex+0x56>
 8012fb8:	f8df 82a0 	ldr.w	r8, [pc, #672]	; 801325c <GL_DrawLine1Ex+0x360>
 8012fbc:	f8d8 0000 	ldr.w	r0, [r8]
 8012fc0:	eb04 76d4 	add.w	r6, r4, r4, lsr #31
 8012fc4:	7e82      	ldrb	r2, [r0, #26]
 8012fc6:	ea4f 0666 	mov.w	r6, r6, asr #1
 8012fca:	bfb8      	it	lt
 8012fcc:	4276      	neglt	r6, r6
 8012fce:	b9f2      	cbnz	r2, 801300e <GL_DrawLine1Ex+0x112>
 8012fd0:	2c00      	cmp	r4, #0
 8012fd2:	db14      	blt.n	8012ffe <GL_DrawLine1Ex+0x102>
 8012fd4:	9b01      	ldr	r3, [sp, #4]
 8012fd6:	2b00      	cmp	r3, #0
 8012fd8:	f000 8151 	beq.w	801327e <GL_DrawLine1Ex+0x382>
 8012fdc:	4692      	mov	sl, r2
 8012fde:	e001      	b.n	8012fe4 <GL_DrawLine1Ex+0xe8>
 8012fe0:	f8d8 0000 	ldr.w	r0, [r8]
 8012fe4:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8012fe6:	fb96 f0f4 	sdiv	r0, r6, r4
 8012fea:	eb0a 0107 	add.w	r1, sl, r7
 8012fee:	685b      	ldr	r3, [r3, #4]
 8012ff0:	4448      	add	r0, r9
 8012ff2:	f10a 0a01 	add.w	sl, sl, #1
 8012ff6:	4798      	blx	r3
 8012ff8:	4554      	cmp	r4, sl
 8012ffa:	442e      	add	r6, r5
 8012ffc:	daf0      	bge.n	8012fe0 <GL_DrawLine1Ex+0xe4>
 8012ffe:	b005      	add	sp, #20
 8013000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013004:	b005      	add	sp, #20
 8013006:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801300a:	f7ff bec7 	b.w	8012d9c <GL_DrawPoint>
 801300e:	1c5a      	adds	r2, r3, #1
 8013010:	f000 812d 	beq.w	801326e <GL_DrawLine1Ex+0x372>
 8013014:	2c00      	cmp	r4, #0
 8013016:	db53      	blt.n	80130c0 <GL_DrawLine1Ex+0x1c4>
 8013018:	f8cd 9008 	str.w	r9, [sp, #8]
 801301c:	f04f 0a00 	mov.w	sl, #0
 8013020:	46c1      	mov	r9, r8
 8013022:	4698      	mov	r8, r3
 8013024:	4441      	add	r1, r8
 8013026:	f8cb 1000 	str.w	r1, [fp]
 801302a:	7e82      	ldrb	r2, [r0, #26]
 801302c:	3a01      	subs	r2, #1
 801302e:	2a03      	cmp	r2, #3
 8013030:	d815      	bhi.n	801305e <GL_DrawLine1Ex+0x162>
 8013032:	e8df f002 	tbb	[pc, r2]
 8013036:	4b57      	.short	0x4b57
 8013038:	022c      	.short	0x022c
 801303a:	4b85      	ldr	r3, [pc, #532]	; (8013250 <GL_DrawLine1Ex+0x354>)
 801303c:	ea4f 7ee1 	mov.w	lr, r1, asr #31
 8013040:	fb83 3201 	smull	r3, r2, r3, r1
 8013044:	ebce 02a2 	rsb	r2, lr, r2, asr #2
 8013048:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801304c:	eba1 02c2 	sub.w	r2, r1, r2, lsl #3
 8013050:	2a0b      	cmp	r2, #11
 8013052:	dd12      	ble.n	801307a <GL_DrawLine1Ex+0x17e>
 8013054:	f022 0204 	bic.w	r2, r2, #4
 8013058:	3a10      	subs	r2, #16
 801305a:	2a01      	cmp	r2, #1
 801305c:	d90d      	bls.n	801307a <GL_DrawLine1Ex+0x17e>
 801305e:	fb96 f1f4 	sdiv	r1, r6, r4
 8013062:	9b02      	ldr	r3, [sp, #8]
 8013064:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8013066:	4419      	add	r1, r3
 8013068:	9b01      	ldr	r3, [sp, #4]
 801306a:	2b00      	cmp	r3, #0
 801306c:	f040 80f8 	bne.w	8013260 <GL_DrawLine1Ex+0x364>
 8013070:	6852      	ldr	r2, [r2, #4]
 8013072:	4638      	mov	r0, r7
 8013074:	4790      	blx	r2
 8013076:	f8db 1000 	ldr.w	r1, [fp]
 801307a:	f10a 0a01 	add.w	sl, sl, #1
 801307e:	4554      	cmp	r4, sl
 8013080:	f107 0701 	add.w	r7, r7, #1
 8013084:	442e      	add	r6, r5
 8013086:	db16      	blt.n	80130b6 <GL_DrawLine1Ex+0x1ba>
 8013088:	f8d9 0000 	ldr.w	r0, [r9]
 801308c:	e7ca      	b.n	8013024 <GL_DrawLine1Ex+0x128>
 801308e:	4b6f      	ldr	r3, [pc, #444]	; (801324c <GL_DrawLine1Ex+0x350>)
 8013090:	ea4f 7ee1 	mov.w	lr, r1, asr #31
 8013094:	fb83 3201 	smull	r3, r2, r3, r1
 8013098:	ebce 02e2 	rsb	r2, lr, r2, asr #3
 801309c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80130a0:	eba1 0282 	sub.w	r2, r1, r2, lsl #2
 80130a4:	2a0b      	cmp	r2, #11
 80130a6:	dcd7      	bgt.n	8013058 <GL_DrawLine1Ex+0x15c>
 80130a8:	f10a 0a01 	add.w	sl, sl, #1
 80130ac:	4554      	cmp	r4, sl
 80130ae:	f107 0701 	add.w	r7, r7, #1
 80130b2:	442e      	add	r6, r5
 80130b4:	dae8      	bge.n	8013088 <GL_DrawLine1Ex+0x18c>
 80130b6:	9a03      	ldr	r2, [sp, #12]
 80130b8:	3201      	adds	r2, #1
 80130ba:	4643      	mov	r3, r8
 80130bc:	f000 80dd 	beq.w	801327a <GL_DrawLine1Ex+0x37e>
 80130c0:	1acb      	subs	r3, r1, r3
 80130c2:	f8cb 3000 	str.w	r3, [fp]
 80130c6:	b005      	add	sp, #20
 80130c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130cc:	4a61      	ldr	r2, [pc, #388]	; (8013254 <GL_DrawLine1Ex+0x358>)
 80130ce:	400a      	ands	r2, r1
 80130d0:	2a00      	cmp	r2, #0
 80130d2:	f2c0 80e6 	blt.w	80132a2 <GL_DrawLine1Ex+0x3a6>
 80130d6:	2a01      	cmp	r2, #1
 80130d8:	bfcc      	ite	gt
 80130da:	2200      	movgt	r2, #0
 80130dc:	2201      	movle	r2, #1
 80130de:	2a00      	cmp	r2, #0
 80130e0:	d1cb      	bne.n	801307a <GL_DrawLine1Ex+0x17e>
 80130e2:	e7bc      	b.n	801305e <GL_DrawLine1Ex+0x162>
 80130e4:	4a5c      	ldr	r2, [pc, #368]	; (8013258 <GL_DrawLine1Ex+0x35c>)
 80130e6:	f101 0e06 	add.w	lr, r1, #6
 80130ea:	ea0e 0202 	and.w	r2, lr, r2
 80130ee:	2a00      	cmp	r2, #0
 80130f0:	f2c0 80dc 	blt.w	80132ac <GL_DrawLine1Ex+0x3b0>
 80130f4:	2a0b      	cmp	r2, #11
 80130f6:	bfcc      	ite	gt
 80130f8:	2200      	movgt	r2, #0
 80130fa:	2201      	movle	r2, #1
 80130fc:	2a00      	cmp	r2, #0
 80130fe:	d1bc      	bne.n	801307a <GL_DrawLine1Ex+0x17e>
 8013100:	e7ad      	b.n	801305e <GL_DrawLine1Ex+0x162>
 8013102:	f89e 301a 	ldrb.w	r3, [lr, #26]
 8013106:	2b00      	cmp	r3, #0
 8013108:	f000 80e9 	beq.w	80132de <GL_DrawLine1Ex+0x3e2>
 801310c:	2c00      	cmp	r4, #0
 801310e:	f2c0 80f6 	blt.w	80132fe <GL_DrawLine1Ex+0x402>
 8013112:	f8dd a004 	ldr.w	sl, [sp, #4]
 8013116:	4e4e      	ldr	r6, [pc, #312]	; (8013250 <GL_DrawLine1Ex+0x354>)
 8013118:	4672      	mov	r2, lr
 801311a:	3b01      	subs	r3, #1
 801311c:	1c45      	adds	r5, r0, #1
 801311e:	2b03      	cmp	r3, #3
 8013120:	d813      	bhi.n	801314a <GL_DrawLine1Ex+0x24e>
 8013122:	e8df f003 	tbb	[pc, r3]
 8013126:	3743      	.short	0x3743
 8013128:	0221      	.short	0x0221
 801312a:	fb86 3100 	smull	r3, r1, r6, r0
 801312e:	17c3      	asrs	r3, r0, #31
 8013130:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
 8013134:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013138:	eba0 03c3 	sub.w	r3, r0, r3, lsl #3
 801313c:	2b0b      	cmp	r3, #11
 801313e:	dd0a      	ble.n	8013156 <GL_DrawLine1Ex+0x25a>
 8013140:	f023 0304 	bic.w	r3, r3, #4
 8013144:	3b10      	subs	r3, #16
 8013146:	2b01      	cmp	r3, #1
 8013148:	d905      	bls.n	8013156 <GL_DrawLine1Ex+0x25a>
 801314a:	6e53      	ldr	r3, [r2, #100]	; 0x64
 801314c:	4649      	mov	r1, r9
 801314e:	685b      	ldr	r3, [r3, #4]
 8013150:	eb07 000a 	add.w	r0, r7, sl
 8013154:	4798      	blx	r3
 8013156:	f10a 0a01 	add.w	sl, sl, #1
 801315a:	4554      	cmp	r4, sl
 801315c:	db14      	blt.n	8013188 <GL_DrawLine1Ex+0x28c>
 801315e:	f8d8 2000 	ldr.w	r2, [r8]
 8013162:	4628      	mov	r0, r5
 8013164:	7e93      	ldrb	r3, [r2, #26]
 8013166:	e7d8      	b.n	801311a <GL_DrawLine1Ex+0x21e>
 8013168:	4b38      	ldr	r3, [pc, #224]	; (801324c <GL_DrawLine1Ex+0x350>)
 801316a:	fb83 3100 	smull	r3, r1, r3, r0
 801316e:	17c3      	asrs	r3, r0, #31
 8013170:	ebc3 03e1 	rsb	r3, r3, r1, asr #3
 8013174:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8013178:	eba0 0383 	sub.w	r3, r0, r3, lsl #2
 801317c:	2b0b      	cmp	r3, #11
 801317e:	dce1      	bgt.n	8013144 <GL_DrawLine1Ex+0x248>
 8013180:	f10a 0a01 	add.w	sl, sl, #1
 8013184:	4554      	cmp	r4, sl
 8013186:	daea      	bge.n	801315e <GL_DrawLine1Ex+0x262>
 8013188:	1e69      	subs	r1, r5, #1
 801318a:	f8cb 1000 	str.w	r1, [fp]
 801318e:	b005      	add	sp, #20
 8013190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013194:	4b2f      	ldr	r3, [pc, #188]	; (8013254 <GL_DrawLine1Ex+0x358>)
 8013196:	4003      	ands	r3, r0
 8013198:	2b00      	cmp	r3, #0
 801319a:	f2c0 8096 	blt.w	80132ca <GL_DrawLine1Ex+0x3ce>
 801319e:	2b01      	cmp	r3, #1
 80131a0:	bfcc      	ite	gt
 80131a2:	2300      	movgt	r3, #0
 80131a4:	2301      	movle	r3, #1
 80131a6:	2b00      	cmp	r3, #0
 80131a8:	d1d5      	bne.n	8013156 <GL_DrawLine1Ex+0x25a>
 80131aa:	e7ce      	b.n	801314a <GL_DrawLine1Ex+0x24e>
 80131ac:	4b2a      	ldr	r3, [pc, #168]	; (8013258 <GL_DrawLine1Ex+0x35c>)
 80131ae:	1d69      	adds	r1, r5, #5
 80131b0:	400b      	ands	r3, r1
 80131b2:	2b00      	cmp	r3, #0
 80131b4:	f2c0 808e 	blt.w	80132d4 <GL_DrawLine1Ex+0x3d8>
 80131b8:	2b0b      	cmp	r3, #11
 80131ba:	bfcc      	ite	gt
 80131bc:	2300      	movgt	r3, #0
 80131be:	2301      	movle	r3, #1
 80131c0:	2b00      	cmp	r3, #0
 80131c2:	d1c8      	bne.n	8013156 <GL_DrawLine1Ex+0x25a>
 80131c4:	e7c1      	b.n	801314a <GL_DrawLine1Ex+0x24e>
 80131c6:	4b22      	ldr	r3, [pc, #136]	; (8013250 <GL_DrawLine1Ex+0x354>)
 80131c8:	fb83 3100 	smull	r3, r1, r3, r0
 80131cc:	17c3      	asrs	r3, r0, #31
 80131ce:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
 80131d2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80131d6:	eba0 03c3 	sub.w	r3, r0, r3, lsl #3
 80131da:	2b0b      	cmp	r3, #11
 80131dc:	dd0a      	ble.n	80131f4 <GL_DrawLine1Ex+0x2f8>
 80131de:	f023 0304 	bic.w	r3, r3, #4
 80131e2:	3b10      	subs	r3, #16
 80131e4:	2b01      	cmp	r3, #1
 80131e6:	d905      	bls.n	80131f4 <GL_DrawLine1Ex+0x2f8>
 80131e8:	6e53      	ldr	r3, [r2, #100]	; 0x64
 80131ea:	eb0a 0107 	add.w	r1, sl, r7
 80131ee:	685b      	ldr	r3, [r3, #4]
 80131f0:	4648      	mov	r0, r9
 80131f2:	4798      	blx	r3
 80131f4:	f10a 0a01 	add.w	sl, sl, #1
 80131f8:	4554      	cmp	r4, sl
 80131fa:	dbc5      	blt.n	8013188 <GL_DrawLine1Ex+0x28c>
 80131fc:	f8d8 2000 	ldr.w	r2, [r8]
 8013200:	4628      	mov	r0, r5
 8013202:	7e93      	ldrb	r3, [r2, #26]
 8013204:	e6b9      	b.n	8012f7a <GL_DrawLine1Ex+0x7e>
 8013206:	4b13      	ldr	r3, [pc, #76]	; (8013254 <GL_DrawLine1Ex+0x358>)
 8013208:	4003      	ands	r3, r0
 801320a:	2b00      	cmp	r3, #0
 801320c:	db53      	blt.n	80132b6 <GL_DrawLine1Ex+0x3ba>
 801320e:	2b01      	cmp	r3, #1
 8013210:	bfcc      	ite	gt
 8013212:	2300      	movgt	r3, #0
 8013214:	2301      	movle	r3, #1
 8013216:	2b00      	cmp	r3, #0
 8013218:	d1ec      	bne.n	80131f4 <GL_DrawLine1Ex+0x2f8>
 801321a:	e7e5      	b.n	80131e8 <GL_DrawLine1Ex+0x2ec>
 801321c:	4b0e      	ldr	r3, [pc, #56]	; (8013258 <GL_DrawLine1Ex+0x35c>)
 801321e:	1d69      	adds	r1, r5, #5
 8013220:	400b      	ands	r3, r1
 8013222:	2b00      	cmp	r3, #0
 8013224:	db4c      	blt.n	80132c0 <GL_DrawLine1Ex+0x3c4>
 8013226:	2b0b      	cmp	r3, #11
 8013228:	bfcc      	ite	gt
 801322a:	2300      	movgt	r3, #0
 801322c:	2301      	movle	r3, #1
 801322e:	2b00      	cmp	r3, #0
 8013230:	d1e0      	bne.n	80131f4 <GL_DrawLine1Ex+0x2f8>
 8013232:	e7d9      	b.n	80131e8 <GL_DrawLine1Ex+0x2ec>
 8013234:	fb86 3100 	smull	r3, r1, r6, r0
 8013238:	17c3      	asrs	r3, r0, #31
 801323a:	ebc3 03e1 	rsb	r3, r3, r1, asr #3
 801323e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8013242:	eba0 0383 	sub.w	r3, r0, r3, lsl #2
 8013246:	2b0b      	cmp	r3, #11
 8013248:	dccb      	bgt.n	80131e2 <GL_DrawLine1Ex+0x2e6>
 801324a:	e7d3      	b.n	80131f4 <GL_DrawLine1Ex+0x2f8>
 801324c:	66666667 	.word	0x66666667
 8013250:	2aaaaaab 	.word	0x2aaaaaab
 8013254:	80000003 	.word	0x80000003
 8013258:	8000000f 	.word	0x8000000f
 801325c:	20000018 	.word	0x20000018
 8013260:	4608      	mov	r0, r1
 8013262:	6852      	ldr	r2, [r2, #4]
 8013264:	4639      	mov	r1, r7
 8013266:	4790      	blx	r2
 8013268:	f8db 1000 	ldr.w	r1, [fp]
 801326c:	e705      	b.n	801307a <GL_DrawLine1Ex+0x17e>
 801326e:	4421      	add	r1, r4
 8013270:	2c00      	cmp	r4, #0
 8013272:	f8cb 1000 	str.w	r1, [fp]
 8013276:	f6bf aecf 	bge.w	8013018 <GL_DrawLine1Ex+0x11c>
 801327a:	4421      	add	r1, r4
 801327c:	e720      	b.n	80130c0 <GL_DrawLine1Ex+0x1c4>
 801327e:	469a      	mov	sl, r3
 8013280:	e001      	b.n	8013286 <GL_DrawLine1Ex+0x38a>
 8013282:	f8d8 0000 	ldr.w	r0, [r8]
 8013286:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8013288:	fb96 f1f4 	sdiv	r1, r6, r4
 801328c:	eb0a 0007 	add.w	r0, sl, r7
 8013290:	685b      	ldr	r3, [r3, #4]
 8013292:	4449      	add	r1, r9
 8013294:	f10a 0a01 	add.w	sl, sl, #1
 8013298:	4798      	blx	r3
 801329a:	4554      	cmp	r4, sl
 801329c:	442e      	add	r6, r5
 801329e:	daf0      	bge.n	8013282 <GL_DrawLine1Ex+0x386>
 80132a0:	e6ad      	b.n	8012ffe <GL_DrawLine1Ex+0x102>
 80132a2:	3a01      	subs	r2, #1
 80132a4:	f062 0203 	orn	r2, r2, #3
 80132a8:	3201      	adds	r2, #1
 80132aa:	e714      	b.n	80130d6 <GL_DrawLine1Ex+0x1da>
 80132ac:	3a01      	subs	r2, #1
 80132ae:	f062 020f 	orn	r2, r2, #15
 80132b2:	3201      	adds	r2, #1
 80132b4:	e71e      	b.n	80130f4 <GL_DrawLine1Ex+0x1f8>
 80132b6:	3b01      	subs	r3, #1
 80132b8:	f063 0303 	orn	r3, r3, #3
 80132bc:	3301      	adds	r3, #1
 80132be:	e7a6      	b.n	801320e <GL_DrawLine1Ex+0x312>
 80132c0:	3b01      	subs	r3, #1
 80132c2:	f063 030f 	orn	r3, r3, #15
 80132c6:	3301      	adds	r3, #1
 80132c8:	e7ad      	b.n	8013226 <GL_DrawLine1Ex+0x32a>
 80132ca:	3b01      	subs	r3, #1
 80132cc:	f063 0303 	orn	r3, r3, #3
 80132d0:	3301      	adds	r3, #1
 80132d2:	e764      	b.n	801319e <GL_DrawLine1Ex+0x2a2>
 80132d4:	3b01      	subs	r3, #1
 80132d6:	f063 030f 	orn	r3, r3, #15
 80132da:	3301      	adds	r3, #1
 80132dc:	e76c      	b.n	80131b8 <GL_DrawLine1Ex+0x2bc>
 80132de:	f8de 3064 	ldr.w	r3, [lr, #100]	; 0x64
 80132e2:	681b      	ldr	r3, [r3, #0]
 80132e4:	4649      	mov	r1, r9
 80132e6:	4638      	mov	r0, r7
 80132e8:	b005      	add	sp, #20
 80132ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132ee:	4718      	bx	r3
 80132f0:	4639      	mov	r1, r7
 80132f2:	4648      	mov	r0, r9
 80132f4:	b005      	add	sp, #20
 80132f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132fa:	f7f3 bf43 	b.w	8007184 <LCD_DrawVLine>
 80132fe:	460d      	mov	r5, r1
 8013300:	e742      	b.n	8013188 <GL_DrawLine1Ex+0x28c>
 8013302:	bf00      	nop

08013304 <GUI_DrawLine>:
 8013304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013308:	4db6      	ldr	r5, [pc, #728]	; (80135e4 <GUI_DrawLine+0x2e0>)
 801330a:	682c      	ldr	r4, [r5, #0]
 801330c:	b08d      	sub	sp, #52	; 0x34
 801330e:	4680      	mov	r8, r0
 8013310:	2000      	movs	r0, #0
 8013312:	6ce6      	ldr	r6, [r4, #76]	; 0x4c
 8013314:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8013316:	4689      	mov	r9, r1
 8013318:	4617      	mov	r7, r2
 801331a:	469a      	mov	sl, r3
 801331c:	f7f9 fa5c 	bl	800c7d8 <WM__InitIVRSearch>
 8013320:	2800      	cmp	r0, #0
 8013322:	f000 8126 	beq.w	8013572 <GUI_DrawLine+0x26e>
 8013326:	eb04 030a 	add.w	r3, r4, sl
 801332a:	44a1      	add	r9, r4
 801332c:	ebc3 0b09 	rsb	fp, r3, r9
 8013330:	eb06 0208 	add.w	r2, r6, r8
 8013334:	19f1      	adds	r1, r6, r7
 8013336:	f1cb 0800 	rsb	r8, fp, #0
 801333a:	ebc1 0a02 	rsb	sl, r1, r2
 801333e:	ea18 082b 	ands.w	r8, r8, fp, asr #32
 8013342:	bf38      	it	cc
 8013344:	46d8      	movcc	r8, fp
 8013346:	ea4a 070b 	orr.w	r7, sl, fp
 801334a:	f8cd b014 	str.w	fp, [sp, #20]
 801334e:	9304      	str	r3, [sp, #16]
 8013350:	9103      	str	r1, [sp, #12]
 8013352:	4ea5      	ldr	r6, [pc, #660]	; (80135e8 <GUI_DrawLine+0x2e4>)
 8013354:	4693      	mov	fp, r2
 8013356:	e004      	b.n	8013362 <GUI_DrawLine+0x5e>
 8013358:	f7f9 f918 	bl	800c58c <WM__GetNextIVR>
 801335c:	2800      	cmp	r0, #0
 801335e:	f000 8108 	beq.w	8013572 <GUI_DrawLine+0x26e>
 8013362:	682b      	ldr	r3, [r5, #0]
 8013364:	7e1c      	ldrb	r4, [r3, #24]
 8013366:	2300      	movs	r3, #0
 8013368:	2c01      	cmp	r4, #1
 801336a:	9307      	str	r3, [sp, #28]
 801336c:	f000 8130 	beq.w	80135d0 <GUI_DrawLine+0x2cc>
 8013370:	2f00      	cmp	r7, #0
 8013372:	d0f1      	beq.n	8013358 <GUI_DrawLine+0x54>
 8013374:	f1ba 0f00 	cmp.w	sl, #0
 8013378:	f104 34ff 	add.w	r4, r4, #4294967295
 801337c:	f2c0 8123 	blt.w	80135c6 <GUI_DrawLine+0x2c2>
 8013380:	4650      	mov	r0, sl
 8013382:	2202      	movs	r2, #2
 8013384:	9905      	ldr	r1, [sp, #20]
 8013386:	ea33 0321 	bics.w	r3, r3, r1, asr #32
 801338a:	bf28      	it	cs
 801338c:	4613      	movcs	r3, r2
 801338e:	4540      	cmp	r0, r8
 8013390:	f280 80f2 	bge.w	8013578 <GUI_DrawLine+0x274>
 8013394:	f043 0304 	orr.w	r3, r3, #4
 8013398:	4602      	mov	r2, r0
 801339a:	b2db      	uxtb	r3, r3
 801339c:	4640      	mov	r0, r8
 801339e:	1041      	asrs	r1, r0, #1
 80133a0:	eb01 2282 	add.w	r2, r1, r2, lsl #10
 80133a4:	fb92 f2f0 	sdiv	r2, r2, r0
 80133a8:	1191      	asrs	r1, r2, #6
 80133aa:	eb06 0041 	add.w	r0, r6, r1, lsl #1
 80133ae:	f3c2 0c83 	ubfx	ip, r2, #2, #4
 80133b2:	f1cc 0e10 	rsb	lr, ip, #16
 80133b6:	f9b0 0024 	ldrsh.w	r0, [r0, #36]	; 0x24
 80133ba:	f1be 0f10 	cmp.w	lr, #16
 80133be:	fb0e f000 	mul.w	r0, lr, r0
 80133c2:	d006      	beq.n	80133d2 <GUI_DrawLine+0xce>
 80133c4:	4a88      	ldr	r2, [pc, #544]	; (80135e8 <GUI_DrawLine+0x2e4>)
 80133c6:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80133ca:	f9b1 1026 	ldrsh.w	r1, [r1, #38]	; 0x26
 80133ce:	fb0c 0001 	mla	r0, ip, r1, r0
 80133d2:	f110 0108 	adds.w	r1, r0, #8
 80133d6:	bf48      	it	mi
 80133d8:	f100 0117 	addmi.w	r1, r0, #23
 80133dc:	1109      	asrs	r1, r1, #4
 80133de:	0758      	lsls	r0, r3, #29
 80133e0:	bf48      	it	mi
 80133e2:	f5c1 6180 	rsbmi	r1, r1, #1024	; 0x400
 80133e6:	07da      	lsls	r2, r3, #31
 80133e8:	bf48      	it	mi
 80133ea:	f5c1 6100 	rsbmi	r1, r1, #2048	; 0x800
 80133ee:	079b      	lsls	r3, r3, #30
 80133f0:	bf48      	it	mi
 80133f2:	f5c1 5180 	rsbmi	r1, r1, #4096	; 0x1000
 80133f6:	f501 6200 	add.w	r2, r1, #2048	; 0x800
 80133fa:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80133fe:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8013402:	bfc6      	itte	gt
 8013404:	f5a2 6200 	subgt.w	r2, r2, #2048	; 0x800
 8013408:	2001      	movgt	r0, #1
 801340a:	2000      	movle	r0, #0
 801340c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8013410:	bfc8      	it	gt
 8013412:	f5c2 6200 	rsbgt	r2, r2, #2048	; 0x800
 8013416:	f501 6380 	add.w	r3, r1, #1024	; 0x400
 801341a:	1191      	asrs	r1, r2, #6
 801341c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8013420:	f1c2 0240 	rsb	r2, r2, #64	; 0x40
 8013424:	b292      	uxth	r2, r2
 8013426:	f836 e011 	ldrh.w	lr, [r6, r1, lsl #1]
 801342a:	2a40      	cmp	r2, #64	; 0x40
 801342c:	fb02 fe0e 	mul.w	lr, r2, lr
 8013430:	d008      	beq.n	8013444 <GUI_DrawLine+0x140>
 8013432:	2910      	cmp	r1, #16
 8013434:	d006      	beq.n	8013444 <GUI_DrawLine+0x140>
 8013436:	3101      	adds	r1, #1
 8013438:	f1c2 0240 	rsb	r2, r2, #64	; 0x40
 801343c:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8013440:	fb02 ee01 	mla	lr, r2, r1, lr
 8013444:	f10e 0e20 	add.w	lr, lr, #32
 8013448:	ea4f 1e9e 	mov.w	lr, lr, lsr #6
 801344c:	2800      	cmp	r0, #0
 801344e:	f040 8095 	bne.w	801357c <GUI_DrawLine+0x278>
 8013452:	4670      	mov	r0, lr
 8013454:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8013458:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801345c:	bfc6      	itte	gt
 801345e:	f5a3 6300 	subgt.w	r3, r3, #2048	; 0x800
 8013462:	2201      	movgt	r2, #1
 8013464:	2200      	movle	r2, #0
 8013466:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801346a:	bfc8      	it	gt
 801346c:	f5c3 6300 	rsbgt	r3, r3, #2048	; 0x800
 8013470:	f003 0e3f 	and.w	lr, r3, #63	; 0x3f
 8013474:	1199      	asrs	r1, r3, #6
 8013476:	f1ce 0e40 	rsb	lr, lr, #64	; 0x40
 801347a:	fa1f fe8e 	uxth.w	lr, lr
 801347e:	f836 3011 	ldrh.w	r3, [r6, r1, lsl #1]
 8013482:	f1be 0f40 	cmp.w	lr, #64	; 0x40
 8013486:	fb00 f004 	mul.w	r0, r0, r4
 801348a:	fb0e f303 	mul.w	r3, lr, r3
 801348e:	d008      	beq.n	80134a2 <GUI_DrawLine+0x19e>
 8013490:	2910      	cmp	r1, #16
 8013492:	d006      	beq.n	80134a2 <GUI_DrawLine+0x19e>
 8013494:	3101      	adds	r1, #1
 8013496:	f1ce 0e40 	rsb	lr, lr, #64	; 0x40
 801349a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801349e:	fb0e 3301 	mla	r3, lr, r1, r3
 80134a2:	3320      	adds	r3, #32
 80134a4:	099b      	lsrs	r3, r3, #6
 80134a6:	b102      	cbz	r2, 80134aa <GUI_DrawLine+0x1a6>
 80134a8:	425b      	negs	r3, r3
 80134aa:	2800      	cmp	r0, #0
 80134ac:	fb03 f404 	mul.w	r4, r3, r4
 80134b0:	db67      	blt.n	8013582 <GUI_DrawLine+0x27e>
 80134b2:	f500 7000 	add.w	r0, r0, #512	; 0x200
 80134b6:	2c00      	cmp	r4, #0
 80134b8:	ea4f 20a0 	mov.w	r0, r0, asr #10
 80134bc:	db68      	blt.n	8013590 <GUI_DrawLine+0x28c>
 80134be:	f504 7400 	add.w	r4, r4, #512	; 0x200
 80134c2:	2800      	cmp	r0, #0
 80134c4:	ea4f 24a4 	mov.w	r4, r4, asr #10
 80134c8:	dd69      	ble.n	801359e <GUI_DrawLine+0x29a>
 80134ca:	f100 0c01 	add.w	ip, r0, #1
 80134ce:	2c00      	cmp	r4, #0
 80134d0:	ea4f 0c6c 	mov.w	ip, ip, asr #1
 80134d4:	ea4f 0060 	mov.w	r0, r0, asr #1
 80134d8:	dd6c      	ble.n	80135b4 <GUI_DrawLine+0x2b0>
 80134da:	f104 0e01 	add.w	lr, r4, #1
 80134de:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 80134e2:	1064      	asrs	r4, r4, #1
 80134e4:	fa1f fc8c 	uxth.w	ip, ip
 80134e8:	fa1f f28b 	uxth.w	r2, fp
 80134ec:	fa1f f38e 	uxth.w	r3, lr
 80134f0:	eb02 0e0c 	add.w	lr, r2, ip
 80134f4:	f8ad e020 	strh.w	lr, [sp, #32]
 80134f8:	f8bd e00c 	ldrh.w	lr, [sp, #12]
 80134fc:	b280      	uxth	r0, r0
 80134fe:	1a12      	subs	r2, r2, r0
 8013500:	44f4      	add	ip, lr
 8013502:	ebc0 000e 	rsb	r0, r0, lr
 8013506:	f8bd e010 	ldrh.w	lr, [sp, #16]
 801350a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801350e:	b2a4      	uxth	r4, r4
 8013510:	fa1f f189 	uxth.w	r1, r9
 8013514:	18ca      	adds	r2, r1, r3
 8013516:	1b09      	subs	r1, r1, r4
 8013518:	ebc4 040e 	rsb	r4, r4, lr
 801351c:	449e      	add	lr, r3
 801351e:	2300      	movs	r3, #0
 8013520:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 8013524:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8013528:	461a      	mov	r2, r3
 801352a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801352e:	2104      	movs	r1, #4
 8013530:	a808      	add	r0, sp, #32
 8013532:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8013536:	f8ad 402a 	strh.w	r4, [sp, #42]	; 0x2a
 801353a:	f8ad e02e 	strh.w	lr, [sp, #46]	; 0x2e
 801353e:	f000 f855 	bl	80135ec <GL_FillPolygon>
 8013542:	682b      	ldr	r3, [r5, #0]
 8013544:	7e5b      	ldrb	r3, [r3, #25]
 8013546:	2b00      	cmp	r3, #0
 8013548:	f47f af06 	bne.w	8013358 <GUI_DrawLine+0x54>
 801354c:	4649      	mov	r1, r9
 801354e:	4658      	mov	r0, fp
 8013550:	f7ff fc24 	bl	8012d9c <GL_DrawPoint>
 8013554:	4b23      	ldr	r3, [pc, #140]	; (80135e4 <GUI_DrawLine+0x2e0>)
 8013556:	681b      	ldr	r3, [r3, #0]
 8013558:	7e5b      	ldrb	r3, [r3, #25]
 801355a:	2b00      	cmp	r3, #0
 801355c:	f47f aefc 	bne.w	8013358 <GUI_DrawLine+0x54>
 8013560:	9904      	ldr	r1, [sp, #16]
 8013562:	9803      	ldr	r0, [sp, #12]
 8013564:	f7ff fc1a 	bl	8012d9c <GL_DrawPoint>
 8013568:	f7f9 f810 	bl	800c58c <WM__GetNextIVR>
 801356c:	2800      	cmp	r0, #0
 801356e:	f47f aef8 	bne.w	8013362 <GUI_DrawLine+0x5e>
 8013572:	b00d      	add	sp, #52	; 0x34
 8013574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013578:	4642      	mov	r2, r8
 801357a:	e710      	b.n	801339e <GUI_DrawLine+0x9a>
 801357c:	f1ce 0000 	rsb	r0, lr, #0
 8013580:	e768      	b.n	8013454 <GUI_DrawLine+0x150>
 8013582:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8013586:	1280      	asrs	r0, r0, #10
 8013588:	2c00      	cmp	r4, #0
 801358a:	f1c0 0000 	rsb	r0, r0, #0
 801358e:	da96      	bge.n	80134be <GUI_DrawLine+0x1ba>
 8013590:	f5c4 7400 	rsb	r4, r4, #512	; 0x200
 8013594:	12a4      	asrs	r4, r4, #10
 8013596:	2800      	cmp	r0, #0
 8013598:	f1c4 0400 	rsb	r4, r4, #0
 801359c:	dc95      	bgt.n	80134ca <GUI_DrawLine+0x1c6>
 801359e:	1e43      	subs	r3, r0, #1
 80135a0:	eb00 7cd0 	add.w	ip, r0, r0, lsr #31
 80135a4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80135a8:	2c00      	cmp	r4, #0
 80135aa:	ea4f 0063 	mov.w	r0, r3, asr #1
 80135ae:	ea4f 0c6c 	mov.w	ip, ip, asr #1
 80135b2:	dc92      	bgt.n	80134da <GUI_DrawLine+0x1d6>
 80135b4:	1e63      	subs	r3, r4, #1
 80135b6:	eb04 7ed4 	add.w	lr, r4, r4, lsr #31
 80135ba:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80135be:	105c      	asrs	r4, r3, #1
 80135c0:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 80135c4:	e78e      	b.n	80134e4 <GUI_DrawLine+0x1e0>
 80135c6:	f1ca 0000 	rsb	r0, sl, #0
 80135ca:	2203      	movs	r2, #3
 80135cc:	2301      	movs	r3, #1
 80135ce:	e6d9      	b.n	8013384 <GUI_DrawLine+0x80>
 80135d0:	ab07      	add	r3, sp, #28
 80135d2:	9300      	str	r3, [sp, #0]
 80135d4:	9a03      	ldr	r2, [sp, #12]
 80135d6:	9b04      	ldr	r3, [sp, #16]
 80135d8:	4649      	mov	r1, r9
 80135da:	4658      	mov	r0, fp
 80135dc:	f7ff fc8e 	bl	8012efc <GL_DrawLine1Ex>
 80135e0:	e6ba      	b.n	8013358 <GUI_DrawLine+0x54>
 80135e2:	bf00      	nop
 80135e4:	20000018 	.word	0x20000018
 80135e8:	0801bba0 	.word	0x0801bba0

080135ec <GL_FillPolygon>:
 80135ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135f0:	2900      	cmp	r1, #0
 80135f2:	b087      	sub	sp, #28
 80135f4:	4c1f      	ldr	r4, [pc, #124]	; (8013674 <GL_FillPolygon+0x88>)
 80135f6:	f340 82d5 	ble.w	8013ba4 <GL_FillPolygon+0x5b8>
 80135fa:	4627      	mov	r7, r4
 80135fc:	4605      	mov	r5, r0
 80135fe:	eb00 0e81 	add.w	lr, r0, r1, lsl #2
 8013602:	f643 74ff 	movw	r4, #16383	; 0x3fff
 8013606:	f9b5 6002 	ldrsh.w	r6, [r5, #2]
 801360a:	42b4      	cmp	r4, r6
 801360c:	f105 0504 	add.w	r5, r5, #4
 8013610:	bfa8      	it	ge
 8013612:	4634      	movge	r4, r6
 8013614:	42b7      	cmp	r7, r6
 8013616:	bfb8      	it	lt
 8013618:	4637      	movlt	r7, r6
 801361a:	45ae      	cmp	lr, r5
 801361c:	d1f3      	bne.n	8013606 <GL_FillPolygon+0x1a>
 801361e:	9704      	str	r7, [sp, #16]
 8013620:	4d15      	ldr	r5, [pc, #84]	; (8013678 <GL_FillPolygon+0x8c>)
 8013622:	682d      	ldr	r5, [r5, #0]
 8013624:	696d      	ldr	r5, [r5, #20]
 8013626:	b16d      	cbz	r5, 8013644 <GL_FillPolygon+0x58>
 8013628:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 801362c:	9f04      	ldr	r7, [sp, #16]
 801362e:	f9b5 5002 	ldrsh.w	r5, [r5, #2]
 8013632:	1af6      	subs	r6, r6, r3
 8013634:	1aed      	subs	r5, r5, r3
 8013636:	42b7      	cmp	r7, r6
 8013638:	bfa8      	it	ge
 801363a:	4637      	movge	r7, r6
 801363c:	42ac      	cmp	r4, r5
 801363e:	9704      	str	r7, [sp, #16]
 8013640:	bfb8      	it	lt
 8013642:	462c      	movlt	r4, r5
 8013644:	9d04      	ldr	r5, [sp, #16]
 8013646:	42ac      	cmp	r4, r5
 8013648:	f300 818e 	bgt.w	8013968 <GL_FillPolygon+0x37c>
 801364c:	f8df 802c 	ldr.w	r8, [pc, #44]	; 801367c <GL_FillPolygon+0x90>
 8013650:	9305      	str	r3, [sp, #20]
 8013652:	4693      	mov	fp, r2
 8013654:	4606      	mov	r6, r0
 8013656:	1e4d      	subs	r5, r1, #1
 8013658:	468a      	mov	sl, r1
 801365a:	2000      	movs	r0, #0
 801365c:	4b07      	ldr	r3, [pc, #28]	; (801367c <GL_FillPolygon+0x90>)
 801365e:	4582      	cmp	sl, r0
 8013660:	6018      	str	r0, [r3, #0]
 8013662:	f340 817c 	ble.w	801395e <GL_FillPolygon+0x372>
 8013666:	9b05      	ldr	r3, [sp, #20]
 8013668:	f8cd b00c 	str.w	fp, [sp, #12]
 801366c:	4423      	add	r3, r4
 801366e:	9302      	str	r3, [sp, #8]
 8013670:	e019      	b.n	80136a6 <GL_FillPolygon+0xba>
 8013672:	bf00      	nop
 8013674:	ffffc001 	.word	0xffffc001
 8013678:	20000018 	.word	0x20000018
 801367c:	20000604 	.word	0x20000604
 8013680:	45a6      	cmp	lr, r4
 8013682:	d00c      	beq.n	801369e <GL_FillPolygon+0xb2>
 8013684:	f2c0 8173 	blt.w	801396e <GL_FillPolygon+0x382>
 8013688:	45a4      	cmp	ip, r4
 801368a:	f300 8185 	bgt.w	8013998 <GL_FillPolygon+0x3ac>
 801368e:	45f4      	cmp	ip, lr
 8013690:	f340 8178 	ble.w	8013984 <GL_FillPolygon+0x398>
 8013694:	45a6      	cmp	lr, r4
 8013696:	dc02      	bgt.n	801369e <GL_FillPolygon+0xb2>
 8013698:	45a4      	cmp	ip, r4
 801369a:	f280 8182 	bge.w	80139a2 <GL_FillPolygon+0x3b6>
 801369e:	45ba      	cmp	sl, r7
 80136a0:	4638      	mov	r0, r7
 80136a2:	f340 80ec 	ble.w	801387e <GL_FillPolygon+0x292>
 80136a6:	eb06 0180 	add.w	r1, r6, r0, lsl #2
 80136aa:	42a8      	cmp	r0, r5
 80136ac:	f100 0701 	add.w	r7, r0, #1
 80136b0:	bfac      	ite	ge
 80136b2:	2300      	movge	r3, #0
 80136b4:	00bb      	lsllt	r3, r7, #2
 80136b6:	f9b1 c002 	ldrsh.w	ip, [r1, #2]
 80136ba:	4433      	add	r3, r6
 80136bc:	45a4      	cmp	ip, r4
 80136be:	4602      	mov	r2, r0
 80136c0:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80136c4:	d1dc      	bne.n	8013680 <GL_FillPolygon+0x94>
 80136c6:	45a6      	cmp	lr, r4
 80136c8:	f000 823e 	beq.w	8013b48 <GL_FillPolygon+0x55c>
 80136cc:	2d00      	cmp	r5, #0
 80136ce:	bfc8      	it	gt
 80136d0:	2100      	movgt	r1, #0
 80136d2:	dde4      	ble.n	801369e <GL_FillPolygon+0xb2>
 80136d4:	b15a      	cbz	r2, 80136ee <GL_FillPolygon+0x102>
 80136d6:	3a01      	subs	r2, #1
 80136d8:	eb06 0382 	add.w	r3, r6, r2, lsl #2
 80136dc:	3101      	adds	r1, #1
 80136de:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80136e2:	42a3      	cmp	r3, r4
 80136e4:	d10b      	bne.n	80136fe <GL_FillPolygon+0x112>
 80136e6:	42a9      	cmp	r1, r5
 80136e8:	d0d9      	beq.n	801369e <GL_FillPolygon+0xb2>
 80136ea:	2a00      	cmp	r2, #0
 80136ec:	d1f3      	bne.n	80136d6 <GL_FillPolygon+0xea>
 80136ee:	462a      	mov	r2, r5
 80136f0:	eb06 0382 	add.w	r3, r6, r2, lsl #2
 80136f4:	3101      	adds	r1, #1
 80136f6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80136fa:	42a3      	cmp	r3, r4
 80136fc:	d0f3      	beq.n	80136e6 <GL_FillPolygon+0xfa>
 80136fe:	1b1b      	subs	r3, r3, r4
 8013700:	ebc4 0e0e 	rsb	lr, r4, lr
 8013704:	ea93 0f0e 	teq	r3, lr
 8013708:	f936 2020 	ldrsh.w	r2, [r6, r0, lsl #2]
 801370c:	f140 8212 	bpl.w	8013b34 <GL_FillPolygon+0x548>
 8013710:	4b9f      	ldr	r3, [pc, #636]	; (8013990 <GL_FillPolygon+0x3a4>)
 8013712:	681b      	ldr	r3, [r3, #0]
 8013714:	2b0b      	cmp	r3, #11
 8013716:	dcc2      	bgt.n	801369e <GL_FillPolygon+0xb2>
 8013718:	2b00      	cmp	r3, #0
 801371a:	f340 822b 	ble.w	8013b74 <GL_FillPolygon+0x588>
 801371e:	1e58      	subs	r0, r3, #1
 8013720:	0041      	lsls	r1, r0, #1
 8013722:	eb08 0c01 	add.w	ip, r8, r1
 8013726:	f9bc e004 	ldrsh.w	lr, [ip, #4]
 801372a:	4572      	cmp	r2, lr
 801372c:	f300 8231 	bgt.w	8013b92 <GL_FillPolygon+0x5a6>
 8013730:	eb08 0943 	add.w	r9, r8, r3, lsl #1
 8013734:	f8a9 e004 	strh.w	lr, [r9, #4]
 8013738:	2800      	cmp	r0, #0
 801373a:	f000 821b 	beq.w	8013b74 <GL_FillPolygon+0x588>
 801373e:	1e98      	subs	r0, r3, #2
 8013740:	ea4f 0940 	mov.w	r9, r0, lsl #1
 8013744:	eb08 0e09 	add.w	lr, r8, r9
 8013748:	f9be b004 	ldrsh.w	fp, [lr, #4]
 801374c:	455a      	cmp	r2, fp
 801374e:	f300 808d 	bgt.w	801386c <GL_FillPolygon+0x280>
 8013752:	f8ac b004 	strh.w	fp, [ip, #4]
 8013756:	2800      	cmp	r0, #0
 8013758:	f000 820c 	beq.w	8013b74 <GL_FillPolygon+0x588>
 801375c:	1ed8      	subs	r0, r3, #3
 801375e:	0041      	lsls	r1, r0, #1
 8013760:	eb08 0c01 	add.w	ip, r8, r1
 8013764:	f9bc c004 	ldrsh.w	ip, [ip, #4]
 8013768:	4562      	cmp	r2, ip
 801376a:	f300 8214 	bgt.w	8013b96 <GL_FillPolygon+0x5aa>
 801376e:	f8ae c004 	strh.w	ip, [lr, #4]
 8013772:	2800      	cmp	r0, #0
 8013774:	f000 81fe 	beq.w	8013b74 <GL_FillPolygon+0x588>
 8013778:	f1a3 0904 	sub.w	r9, r3, #4
 801377c:	4884      	ldr	r0, [pc, #528]	; (8013990 <GL_FillPolygon+0x3a4>)
 801377e:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 8013782:	eb00 0e0b 	add.w	lr, r0, fp
 8013786:	f9be c004 	ldrsh.w	ip, [lr, #4]
 801378a:	4562      	cmp	r2, ip
 801378c:	dc6e      	bgt.n	801386c <GL_FillPolygon+0x280>
 801378e:	4441      	add	r1, r8
 8013790:	f8a1 c004 	strh.w	ip, [r1, #4]
 8013794:	f1b9 0f00 	cmp.w	r9, #0
 8013798:	f000 81ec 	beq.w	8013b74 <GL_FillPolygon+0x588>
 801379c:	1f58      	subs	r0, r3, #5
 801379e:	0041      	lsls	r1, r0, #1
 80137a0:	eb08 0c01 	add.w	ip, r8, r1
 80137a4:	f9bc 9004 	ldrsh.w	r9, [ip, #4]
 80137a8:	454a      	cmp	r2, r9
 80137aa:	f300 81e7 	bgt.w	8013b7c <GL_FillPolygon+0x590>
 80137ae:	f8ae 9004 	strh.w	r9, [lr, #4]
 80137b2:	2800      	cmp	r0, #0
 80137b4:	f000 81de 	beq.w	8013b74 <GL_FillPolygon+0x588>
 80137b8:	1f98      	subs	r0, r3, #6
 80137ba:	ea4f 0b40 	mov.w	fp, r0, lsl #1
 80137be:	eb08 0e0b 	add.w	lr, r8, fp
 80137c2:	f9be 9004 	ldrsh.w	r9, [lr, #4]
 80137c6:	454a      	cmp	r2, r9
 80137c8:	dc50      	bgt.n	801386c <GL_FillPolygon+0x280>
 80137ca:	f8ac 9004 	strh.w	r9, [ip, #4]
 80137ce:	2800      	cmp	r0, #0
 80137d0:	f000 81d0 	beq.w	8013b74 <GL_FillPolygon+0x588>
 80137d4:	1fd8      	subs	r0, r3, #7
 80137d6:	0041      	lsls	r1, r0, #1
 80137d8:	eb08 0901 	add.w	r9, r8, r1
 80137dc:	f9b9 c004 	ldrsh.w	ip, [r9, #4]
 80137e0:	4562      	cmp	r2, ip
 80137e2:	f300 81cb 	bgt.w	8013b7c <GL_FillPolygon+0x590>
 80137e6:	f8ae c004 	strh.w	ip, [lr, #4]
 80137ea:	2800      	cmp	r0, #0
 80137ec:	f000 81c2 	beq.w	8013b74 <GL_FillPolygon+0x588>
 80137f0:	f1a3 0c08 	sub.w	ip, r3, #8
 80137f4:	ea4f 0e4c 	mov.w	lr, ip, lsl #1
 80137f8:	eb08 000e 	add.w	r0, r8, lr
 80137fc:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8013800:	4282      	cmp	r2, r0
 8013802:	dc33      	bgt.n	801386c <GL_FillPolygon+0x280>
 8013804:	f8a9 0004 	strh.w	r0, [r9, #4]
 8013808:	f1bc 0f00 	cmp.w	ip, #0
 801380c:	f000 81b2 	beq.w	8013b74 <GL_FillPolygon+0x588>
 8013810:	f1a3 0009 	sub.w	r0, r3, #9
 8013814:	0041      	lsls	r1, r0, #1
 8013816:	9001      	str	r0, [sp, #4]
 8013818:	485d      	ldr	r0, [pc, #372]	; (8013990 <GL_FillPolygon+0x3a4>)
 801381a:	eb00 0901 	add.w	r9, r0, r1
 801381e:	f9b9 b004 	ldrsh.w	fp, [r9, #4]
 8013822:	455a      	cmp	r2, fp
 8013824:	f300 81bb 	bgt.w	8013b9e <GL_FillPolygon+0x5b2>
 8013828:	44c6      	add	lr, r8
 801382a:	9801      	ldr	r0, [sp, #4]
 801382c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013830:	2800      	cmp	r0, #0
 8013832:	f000 819f 	beq.w	8013b74 <GL_FillPolygon+0x588>
 8013836:	f1a3 000a 	sub.w	r0, r3, #10
 801383a:	ea4f 0c40 	mov.w	ip, r0, lsl #1
 801383e:	eb08 0e0c 	add.w	lr, r8, ip
 8013842:	f9be b004 	ldrsh.w	fp, [lr, #4]
 8013846:	455a      	cmp	r2, fp
 8013848:	dc10      	bgt.n	801386c <GL_FillPolygon+0x280>
 801384a:	f8a9 b004 	strh.w	fp, [r9, #4]
 801384e:	2800      	cmp	r0, #0
 8013850:	f000 8190 	beq.w	8013b74 <GL_FillPolygon+0x588>
 8013854:	f1a3 010b 	sub.w	r1, r3, #11
 8013858:	0049      	lsls	r1, r1, #1
 801385a:	eb08 0001 	add.w	r0, r8, r1
 801385e:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8013862:	4282      	cmp	r2, r0
 8013864:	f300 8199 	bgt.w	8013b9a <GL_FillPolygon+0x5ae>
 8013868:	f8ae 0004 	strh.w	r0, [lr, #4]
 801386c:	4848      	ldr	r0, [pc, #288]	; (8013990 <GL_FillPolygon+0x3a4>)
 801386e:	4401      	add	r1, r0
 8013870:	3301      	adds	r3, #1
 8013872:	45ba      	cmp	sl, r7
 8013874:	6003      	str	r3, [r0, #0]
 8013876:	808a      	strh	r2, [r1, #4]
 8013878:	4638      	mov	r0, r7
 801387a:	f73f af14 	bgt.w	80136a6 <GL_FillPolygon+0xba>
 801387e:	4b44      	ldr	r3, [pc, #272]	; (8013990 <GL_FillPolygon+0x3a4>)
 8013880:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8013884:	681b      	ldr	r3, [r3, #0]
 8013886:	2b00      	cmp	r3, #0
 8013888:	dd69      	ble.n	801395e <GL_FillPolygon+0x372>
 801388a:	2b01      	cmp	r3, #1
 801388c:	f9b8 0004 	ldrsh.w	r0, [r8, #4]
 8013890:	d065      	beq.n	801395e <GL_FillPolygon+0x372>
 8013892:	4b40      	ldr	r3, [pc, #256]	; (8013994 <GL_FillPolygon+0x3a8>)
 8013894:	f9b8 2006 	ldrsh.w	r2, [r8, #6]
 8013898:	681b      	ldr	r3, [r3, #0]
 801389a:	9f02      	ldr	r7, [sp, #8]
 801389c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801389e:	4458      	add	r0, fp
 80138a0:	681b      	ldr	r3, [r3, #0]
 80138a2:	445a      	add	r2, fp
 80138a4:	4639      	mov	r1, r7
 80138a6:	4798      	blx	r3
 80138a8:	f8d8 3000 	ldr.w	r3, [r8]
 80138ac:	2b02      	cmp	r3, #2
 80138ae:	dd56      	ble.n	801395e <GL_FillPolygon+0x372>
 80138b0:	2b03      	cmp	r3, #3
 80138b2:	f9b8 0008 	ldrsh.w	r0, [r8, #8]
 80138b6:	d052      	beq.n	801395e <GL_FillPolygon+0x372>
 80138b8:	4b36      	ldr	r3, [pc, #216]	; (8013994 <GL_FillPolygon+0x3a8>)
 80138ba:	f9b8 200a 	ldrsh.w	r2, [r8, #10]
 80138be:	681b      	ldr	r3, [r3, #0]
 80138c0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80138c2:	4458      	add	r0, fp
 80138c4:	681b      	ldr	r3, [r3, #0]
 80138c6:	445a      	add	r2, fp
 80138c8:	4639      	mov	r1, r7
 80138ca:	4798      	blx	r3
 80138cc:	f8d8 3000 	ldr.w	r3, [r8]
 80138d0:	2b04      	cmp	r3, #4
 80138d2:	dd44      	ble.n	801395e <GL_FillPolygon+0x372>
 80138d4:	2b05      	cmp	r3, #5
 80138d6:	f9b8 000c 	ldrsh.w	r0, [r8, #12]
 80138da:	d040      	beq.n	801395e <GL_FillPolygon+0x372>
 80138dc:	4b2d      	ldr	r3, [pc, #180]	; (8013994 <GL_FillPolygon+0x3a8>)
 80138de:	f9b8 200e 	ldrsh.w	r2, [r8, #14]
 80138e2:	681b      	ldr	r3, [r3, #0]
 80138e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80138e6:	4458      	add	r0, fp
 80138e8:	681b      	ldr	r3, [r3, #0]
 80138ea:	445a      	add	r2, fp
 80138ec:	4639      	mov	r1, r7
 80138ee:	4798      	blx	r3
 80138f0:	f8d8 3000 	ldr.w	r3, [r8]
 80138f4:	2b06      	cmp	r3, #6
 80138f6:	dd32      	ble.n	801395e <GL_FillPolygon+0x372>
 80138f8:	2b07      	cmp	r3, #7
 80138fa:	f9b8 0010 	ldrsh.w	r0, [r8, #16]
 80138fe:	d02e      	beq.n	801395e <GL_FillPolygon+0x372>
 8013900:	4b24      	ldr	r3, [pc, #144]	; (8013994 <GL_FillPolygon+0x3a8>)
 8013902:	f9b8 2012 	ldrsh.w	r2, [r8, #18]
 8013906:	681b      	ldr	r3, [r3, #0]
 8013908:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801390a:	4458      	add	r0, fp
 801390c:	681b      	ldr	r3, [r3, #0]
 801390e:	445a      	add	r2, fp
 8013910:	4639      	mov	r1, r7
 8013912:	4798      	blx	r3
 8013914:	f8d8 3000 	ldr.w	r3, [r8]
 8013918:	2b08      	cmp	r3, #8
 801391a:	dd20      	ble.n	801395e <GL_FillPolygon+0x372>
 801391c:	4a1c      	ldr	r2, [pc, #112]	; (8013990 <GL_FillPolygon+0x3a4>)
 801391e:	2b09      	cmp	r3, #9
 8013920:	f9b2 0014 	ldrsh.w	r0, [r2, #20]
 8013924:	d01b      	beq.n	801395e <GL_FillPolygon+0x372>
 8013926:	4b1b      	ldr	r3, [pc, #108]	; (8013994 <GL_FillPolygon+0x3a8>)
 8013928:	f9b8 2016 	ldrsh.w	r2, [r8, #22]
 801392c:	681b      	ldr	r3, [r3, #0]
 801392e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013930:	4458      	add	r0, fp
 8013932:	681b      	ldr	r3, [r3, #0]
 8013934:	445a      	add	r2, fp
 8013936:	4639      	mov	r1, r7
 8013938:	4798      	blx	r3
 801393a:	f8d8 3000 	ldr.w	r3, [r8]
 801393e:	2b0a      	cmp	r3, #10
 8013940:	dd0d      	ble.n	801395e <GL_FillPolygon+0x372>
 8013942:	2b0b      	cmp	r3, #11
 8013944:	f9b8 0018 	ldrsh.w	r0, [r8, #24]
 8013948:	d009      	beq.n	801395e <GL_FillPolygon+0x372>
 801394a:	4b12      	ldr	r3, [pc, #72]	; (8013994 <GL_FillPolygon+0x3a8>)
 801394c:	f9b8 201a 	ldrsh.w	r2, [r8, #26]
 8013950:	681b      	ldr	r3, [r3, #0]
 8013952:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013954:	4639      	mov	r1, r7
 8013956:	4458      	add	r0, fp
 8013958:	681b      	ldr	r3, [r3, #0]
 801395a:	445a      	add	r2, fp
 801395c:	4798      	blx	r3
 801395e:	9b04      	ldr	r3, [sp, #16]
 8013960:	3401      	adds	r4, #1
 8013962:	42a3      	cmp	r3, r4
 8013964:	f6bf ae79 	bge.w	801365a <GL_FillPolygon+0x6e>
 8013968:	b007      	add	sp, #28
 801396a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801396e:	45a4      	cmp	ip, r4
 8013970:	f6ff ae95 	blt.w	801369e <GL_FillPolygon+0xb2>
 8013974:	45f4      	cmp	ip, lr
 8013976:	dc14      	bgt.n	80139a2 <GL_FillPolygon+0x3b6>
 8013978:	45a4      	cmp	ip, r4
 801397a:	f73f ae90 	bgt.w	801369e <GL_FillPolygon+0xb2>
 801397e:	45a6      	cmp	lr, r4
 8013980:	f6ff ae8d 	blt.w	801369e <GL_FillPolygon+0xb2>
 8013984:	f936 2020 	ldrsh.w	r2, [r6, r0, lsl #2]
 8013988:	f9b3 3000 	ldrsh.w	r3, [r3]
 801398c:	e010      	b.n	80139b0 <GL_FillPolygon+0x3c4>
 801398e:	bf00      	nop
 8013990:	20000604 	.word	0x20000604
 8013994:	20000018 	.word	0x20000018
 8013998:	45a6      	cmp	lr, r4
 801399a:	f73f ae80 	bgt.w	801369e <GL_FillPolygon+0xb2>
 801399e:	45f4      	cmp	ip, lr
 80139a0:	ddea      	ble.n	8013978 <GL_FillPolygon+0x38c>
 80139a2:	4661      	mov	r1, ip
 80139a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80139a8:	f936 3020 	ldrsh.w	r3, [r6, r0, lsl #2]
 80139ac:	46f4      	mov	ip, lr
 80139ae:	468e      	mov	lr, r1
 80139b0:	1a99      	subs	r1, r3, r2
 80139b2:	ebcc 0304 	rsb	r3, ip, r4
 80139b6:	fb03 f301 	mul.w	r3, r3, r1
 80139ba:	2b00      	cmp	r3, #0
 80139bc:	ebcc 0e0e 	rsb	lr, ip, lr
 80139c0:	bfdb      	ittet	le
 80139c2:	ea4f 016e 	movle.w	r1, lr, asr #1
 80139c6:	f101 31ff 	addle.w	r1, r1, #4294967295
 80139ca:	eb03 016e 	addgt.w	r1, r3, lr, asr #1
 80139ce:	1a59      	suble	r1, r3, r1
 80139d0:	4b76      	ldr	r3, [pc, #472]	; (8013bac <GL_FillPolygon+0x5c0>)
 80139d2:	681b      	ldr	r3, [r3, #0]
 80139d4:	2b0b      	cmp	r3, #11
 80139d6:	f73f ae62 	bgt.w	801369e <GL_FillPolygon+0xb2>
 80139da:	fb91 f1fe 	sdiv	r1, r1, lr
 80139de:	2b00      	cmp	r3, #0
 80139e0:	440a      	add	r2, r1
 80139e2:	9201      	str	r2, [sp, #4]
 80139e4:	f340 80c4 	ble.w	8013b70 <GL_FillPolygon+0x584>
 80139e8:	1e58      	subs	r0, r3, #1
 80139ea:	4611      	mov	r1, r2
 80139ec:	0042      	lsls	r2, r0, #1
 80139ee:	eb08 0e02 	add.w	lr, r8, r2
 80139f2:	f9be c004 	ldrsh.w	ip, [lr, #4]
 80139f6:	4561      	cmp	r1, ip
 80139f8:	f300 80c2 	bgt.w	8013b80 <GL_FillPolygon+0x594>
 80139fc:	eb08 0943 	add.w	r9, r8, r3, lsl #1
 8013a00:	f8a9 c004 	strh.w	ip, [r9, #4]
 8013a04:	2800      	cmp	r0, #0
 8013a06:	f000 80b3 	beq.w	8013b70 <GL_FillPolygon+0x584>
 8013a0a:	1e98      	subs	r0, r3, #2
 8013a0c:	ea4f 0b40 	mov.w	fp, r0, lsl #1
 8013a10:	eb08 0c0b 	add.w	ip, r8, fp
 8013a14:	f9bc 9004 	ldrsh.w	r9, [ip, #4]
 8013a18:	4549      	cmp	r1, r9
 8013a1a:	f300 8083 	bgt.w	8013b24 <GL_FillPolygon+0x538>
 8013a1e:	f8ae 9004 	strh.w	r9, [lr, #4]
 8013a22:	2800      	cmp	r0, #0
 8013a24:	f000 80a4 	beq.w	8013b70 <GL_FillPolygon+0x584>
 8013a28:	1ed8      	subs	r0, r3, #3
 8013a2a:	0042      	lsls	r2, r0, #1
 8013a2c:	eb08 0902 	add.w	r9, r8, r2
 8013a30:	f9b9 e004 	ldrsh.w	lr, [r9, #4]
 8013a34:	4571      	cmp	r1, lr
 8013a36:	f300 809f 	bgt.w	8013b78 <GL_FillPolygon+0x58c>
 8013a3a:	f8ac e004 	strh.w	lr, [ip, #4]
 8013a3e:	2800      	cmp	r0, #0
 8013a40:	f000 8096 	beq.w	8013b70 <GL_FillPolygon+0x584>
 8013a44:	f1a3 0c04 	sub.w	ip, r3, #4
 8013a48:	ea4f 0e4c 	mov.w	lr, ip, lsl #1
 8013a4c:	eb08 000e 	add.w	r0, r8, lr
 8013a50:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8013a54:	4281      	cmp	r1, r0
 8013a56:	dc65      	bgt.n	8013b24 <GL_FillPolygon+0x538>
 8013a58:	f8a9 0004 	strh.w	r0, [r9, #4]
 8013a5c:	f1bc 0f00 	cmp.w	ip, #0
 8013a60:	f000 8086 	beq.w	8013b70 <GL_FillPolygon+0x584>
 8013a64:	4951      	ldr	r1, [pc, #324]	; (8013bac <GL_FillPolygon+0x5c0>)
 8013a66:	1f58      	subs	r0, r3, #5
 8013a68:	0042      	lsls	r2, r0, #1
 8013a6a:	eb01 0902 	add.w	r9, r1, r2
 8013a6e:	9901      	ldr	r1, [sp, #4]
 8013a70:	f9b9 b004 	ldrsh.w	fp, [r9, #4]
 8013a74:	4559      	cmp	r1, fp
 8013a76:	f300 8087 	bgt.w	8013b88 <GL_FillPolygon+0x59c>
 8013a7a:	44c6      	add	lr, r8
 8013a7c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013a80:	2800      	cmp	r0, #0
 8013a82:	d075      	beq.n	8013b70 <GL_FillPolygon+0x584>
 8013a84:	1f98      	subs	r0, r3, #6
 8013a86:	ea4f 0b40 	mov.w	fp, r0, lsl #1
 8013a8a:	eb08 0e0b 	add.w	lr, r8, fp
 8013a8e:	f9be c004 	ldrsh.w	ip, [lr, #4]
 8013a92:	4561      	cmp	r1, ip
 8013a94:	dc46      	bgt.n	8013b24 <GL_FillPolygon+0x538>
 8013a96:	f8a9 c004 	strh.w	ip, [r9, #4]
 8013a9a:	2800      	cmp	r0, #0
 8013a9c:	d068      	beq.n	8013b70 <GL_FillPolygon+0x584>
 8013a9e:	1fd8      	subs	r0, r3, #7
 8013aa0:	0042      	lsls	r2, r0, #1
 8013aa2:	eb08 0c02 	add.w	ip, r8, r2
 8013aa6:	f9bc 9004 	ldrsh.w	r9, [ip, #4]
 8013aaa:	4549      	cmp	r1, r9
 8013aac:	dc64      	bgt.n	8013b78 <GL_FillPolygon+0x58c>
 8013aae:	f8ae 9004 	strh.w	r9, [lr, #4]
 8013ab2:	2800      	cmp	r0, #0
 8013ab4:	d05c      	beq.n	8013b70 <GL_FillPolygon+0x584>
 8013ab6:	f1a3 0008 	sub.w	r0, r3, #8
 8013aba:	ea4f 0940 	mov.w	r9, r0, lsl #1
 8013abe:	eb08 0e09 	add.w	lr, r8, r9
 8013ac2:	f9be b004 	ldrsh.w	fp, [lr, #4]
 8013ac6:	4559      	cmp	r1, fp
 8013ac8:	dc2c      	bgt.n	8013b24 <GL_FillPolygon+0x538>
 8013aca:	f8ac b004 	strh.w	fp, [ip, #4]
 8013ace:	2800      	cmp	r0, #0
 8013ad0:	d04e      	beq.n	8013b70 <GL_FillPolygon+0x584>
 8013ad2:	f1a3 0009 	sub.w	r0, r3, #9
 8013ad6:	0042      	lsls	r2, r0, #1
 8013ad8:	eb08 0c02 	add.w	ip, r8, r2
 8013adc:	f9bc c004 	ldrsh.w	ip, [ip, #4]
 8013ae0:	4561      	cmp	r1, ip
 8013ae2:	dc54      	bgt.n	8013b8e <GL_FillPolygon+0x5a2>
 8013ae4:	f8ae c004 	strh.w	ip, [lr, #4]
 8013ae8:	2800      	cmp	r0, #0
 8013aea:	d041      	beq.n	8013b70 <GL_FillPolygon+0x584>
 8013aec:	492f      	ldr	r1, [pc, #188]	; (8013bac <GL_FillPolygon+0x5c0>)
 8013aee:	f1a3 000a 	sub.w	r0, r3, #10
 8013af2:	ea4f 0c40 	mov.w	ip, r0, lsl #1
 8013af6:	eb01 0e0c 	add.w	lr, r1, ip
 8013afa:	9901      	ldr	r1, [sp, #4]
 8013afc:	f9be 9004 	ldrsh.w	r9, [lr, #4]
 8013b00:	4549      	cmp	r1, r9
 8013b02:	dc0f      	bgt.n	8013b24 <GL_FillPolygon+0x538>
 8013b04:	4442      	add	r2, r8
 8013b06:	f8a2 9004 	strh.w	r9, [r2, #4]
 8013b0a:	2800      	cmp	r0, #0
 8013b0c:	d030      	beq.n	8013b70 <GL_FillPolygon+0x584>
 8013b0e:	f1a3 000b 	sub.w	r0, r3, #11
 8013b12:	0042      	lsls	r2, r0, #1
 8013b14:	eb08 0002 	add.w	r0, r8, r2
 8013b18:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8013b1c:	4281      	cmp	r1, r0
 8013b1e:	dc31      	bgt.n	8013b84 <GL_FillPolygon+0x598>
 8013b20:	f8ae 0004 	strh.w	r0, [lr, #4]
 8013b24:	4821      	ldr	r0, [pc, #132]	; (8013bac <GL_FillPolygon+0x5c0>)
 8013b26:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8013b2a:	4402      	add	r2, r0
 8013b2c:	3301      	adds	r3, #1
 8013b2e:	8091      	strh	r1, [r2, #4]
 8013b30:	6003      	str	r3, [r0, #0]
 8013b32:	e5b4      	b.n	801369e <GL_FillPolygon+0xb2>
 8013b34:	4b1e      	ldr	r3, [pc, #120]	; (8013bb0 <GL_FillPolygon+0x5c4>)
 8013b36:	9903      	ldr	r1, [sp, #12]
 8013b38:	681b      	ldr	r3, [r3, #0]
 8013b3a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013b3c:	440a      	add	r2, r1
 8013b3e:	681b      	ldr	r3, [r3, #0]
 8013b40:	9902      	ldr	r1, [sp, #8]
 8013b42:	4610      	mov	r0, r2
 8013b44:	4798      	blx	r3
 8013b46:	e5aa      	b.n	801369e <GL_FillPolygon+0xb2>
 8013b48:	f936 1020 	ldrsh.w	r1, [r6, r0, lsl #2]
 8013b4c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b50:	9803      	ldr	r0, [sp, #12]
 8013b52:	4401      	add	r1, r0
 8013b54:	4602      	mov	r2, r0
 8013b56:	1818      	adds	r0, r3, r0
 8013b58:	4b15      	ldr	r3, [pc, #84]	; (8013bb0 <GL_FillPolygon+0x5c4>)
 8013b5a:	681b      	ldr	r3, [r3, #0]
 8013b5c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8013b5e:	4281      	cmp	r1, r0
 8013b60:	bfb6      	itet	lt
 8013b62:	4602      	movlt	r2, r0
 8013b64:	460a      	movge	r2, r1
 8013b66:	4608      	movlt	r0, r1
 8013b68:	681b      	ldr	r3, [r3, #0]
 8013b6a:	9902      	ldr	r1, [sp, #8]
 8013b6c:	4798      	blx	r3
 8013b6e:	e596      	b.n	801369e <GL_FillPolygon+0xb2>
 8013b70:	2200      	movs	r2, #0
 8013b72:	e7d7      	b.n	8013b24 <GL_FillPolygon+0x538>
 8013b74:	2100      	movs	r1, #0
 8013b76:	e679      	b.n	801386c <GL_FillPolygon+0x280>
 8013b78:	465a      	mov	r2, fp
 8013b7a:	e7d3      	b.n	8013b24 <GL_FillPolygon+0x538>
 8013b7c:	4659      	mov	r1, fp
 8013b7e:	e675      	b.n	801386c <GL_FillPolygon+0x280>
 8013b80:	005a      	lsls	r2, r3, #1
 8013b82:	e7cf      	b.n	8013b24 <GL_FillPolygon+0x538>
 8013b84:	4662      	mov	r2, ip
 8013b86:	e7cd      	b.n	8013b24 <GL_FillPolygon+0x538>
 8013b88:	ea4f 024c 	mov.w	r2, ip, lsl #1
 8013b8c:	e7ca      	b.n	8013b24 <GL_FillPolygon+0x538>
 8013b8e:	464a      	mov	r2, r9
 8013b90:	e7c8      	b.n	8013b24 <GL_FillPolygon+0x538>
 8013b92:	0059      	lsls	r1, r3, #1
 8013b94:	e66a      	b.n	801386c <GL_FillPolygon+0x280>
 8013b96:	4649      	mov	r1, r9
 8013b98:	e668      	b.n	801386c <GL_FillPolygon+0x280>
 8013b9a:	4661      	mov	r1, ip
 8013b9c:	e666      	b.n	801386c <GL_FillPolygon+0x280>
 8013b9e:	ea4f 014c 	mov.w	r1, ip, lsl #1
 8013ba2:	e663      	b.n	801386c <GL_FillPolygon+0x280>
 8013ba4:	9404      	str	r4, [sp, #16]
 8013ba6:	f643 74ff 	movw	r4, #16383	; 0x3fff
 8013baa:	e539      	b.n	8013620 <GL_FillPolygon+0x34>
 8013bac:	20000604 	.word	0x20000604
 8013bb0:	20000018 	.word	0x20000018

08013bb4 <_CreateBuffer.isra.4>:
 8013bb4:	680b      	ldr	r3, [r1, #0]
 8013bb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013bba:	4680      	mov	r8, r0
 8013bbc:	8818      	ldrh	r0, [r3, #0]
 8013bbe:	300d      	adds	r0, #13
 8013bc0:	0080      	lsls	r0, r0, #2
 8013bc2:	460d      	mov	r5, r1
 8013bc4:	4616      	mov	r6, r2
 8013bc6:	f7f1 f947 	bl	8004e58 <GUI_ALLOC_AllocNoInit>
 8013bca:	2800      	cmp	r0, #0
 8013bcc:	d03d      	beq.n	8013c4a <_CreateBuffer.isra.4+0x96>
 8013bce:	4607      	mov	r7, r0
 8013bd0:	f7f1 f950 	bl	8004e74 <GUI_ALLOC_LockH>
 8013bd4:	f8d8 3000 	ldr.w	r3, [r8]
 8013bd8:	4604      	mov	r4, r0
 8013bda:	6998      	ldr	r0, [r3, #24]
 8013bdc:	f7f1 fedc 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8013be0:	2800      	cmp	r0, #0
 8013be2:	d032      	beq.n	8013c4a <_CreateBuffer.isra.4+0x96>
 8013be4:	68c3      	ldr	r3, [r0, #12]
 8013be6:	2108      	movs	r1, #8
 8013be8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013bea:	4798      	blx	r3
 8013bec:	2802      	cmp	r0, #2
 8013bee:	dc22      	bgt.n	8013c36 <_CreateBuffer.isra.4+0x82>
 8013bf0:	61a0      	str	r0, [r4, #24]
 8013bf2:	2201      	movs	r2, #1
 8013bf4:	682b      	ldr	r3, [r5, #0]
 8013bf6:	6122      	str	r2, [r4, #16]
 8013bf8:	881b      	ldrh	r3, [r3, #0]
 8013bfa:	61e3      	str	r3, [r4, #28]
 8013bfc:	fb03 f302 	mul.w	r3, r3, r2
 8013c00:	6163      	str	r3, [r4, #20]
 8013c02:	f7f1 f963 	bl	8004ecc <GUI_ALLOC_GetMaxSize>
 8013c06:	6963      	ldr	r3, [r4, #20]
 8013c08:	60a7      	str	r7, [r4, #8]
 8013c0a:	4298      	cmp	r0, r3
 8013c0c:	bfb8      	it	lt
 8013c0e:	6160      	strlt	r0, [r4, #20]
 8013c10:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8013c14:	2300      	movs	r3, #0
 8013c16:	2e01      	cmp	r6, #1
 8013c18:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
 8013c1c:	6022      	str	r2, [r4, #0]
 8013c1e:	60e3      	str	r3, [r4, #12]
 8013c20:	d018      	beq.n	8013c54 <_CreateBuffer.isra.4+0xa0>
 8013c22:	69e3      	ldr	r3, [r4, #28]
 8013c24:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013c28:	3b01      	subs	r3, #1
 8013c2a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013c2e:	6063      	str	r3, [r4, #4]
 8013c30:	4620      	mov	r0, r4
 8013c32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c36:	2804      	cmp	r0, #4
 8013c38:	dd0a      	ble.n	8013c50 <_CreateBuffer.isra.4+0x9c>
 8013c3a:	2808      	cmp	r0, #8
 8013c3c:	dd0e      	ble.n	8013c5c <_CreateBuffer.isra.4+0xa8>
 8013c3e:	2810      	cmp	r0, #16
 8013c40:	dd0e      	ble.n	8013c60 <_CreateBuffer.isra.4+0xac>
 8013c42:	2320      	movs	r3, #32
 8013c44:	61a3      	str	r3, [r4, #24]
 8013c46:	2204      	movs	r2, #4
 8013c48:	e7d4      	b.n	8013bf4 <_CreateBuffer.isra.4+0x40>
 8013c4a:	2000      	movs	r0, #0
 8013c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c50:	2004      	movs	r0, #4
 8013c52:	e7cd      	b.n	8013bf0 <_CreateBuffer.isra.4+0x3c>
 8013c54:	6062      	str	r2, [r4, #4]
 8013c56:	4620      	mov	r0, r4
 8013c58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c5c:	2008      	movs	r0, #8
 8013c5e:	e7c7      	b.n	8013bf0 <_CreateBuffer.isra.4+0x3c>
 8013c60:	2310      	movs	r3, #16
 8013c62:	61a3      	str	r3, [r4, #24]
 8013c64:	2202      	movs	r2, #2
 8013c66:	e7c5      	b.n	8013bf4 <_CreateBuffer.isra.4+0x40>

08013c68 <_SetBkIndexBuffered>:
 8013c68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013c6c:	b086      	sub	sp, #24
 8013c6e:	460e      	mov	r6, r1
 8013c70:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013c72:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8013c74:	428d      	cmp	r5, r1
 8013c76:	4607      	mov	r7, r0
 8013c78:	4690      	mov	r8, r2
 8013c7a:	d040      	beq.n	8013cfe <_SetBkIndexBuffered+0x96>
 8013c7c:	68e1      	ldr	r1, [r4, #12]
 8013c7e:	b369      	cbz	r1, 8013cdc <_SetBkIndexBuffered+0x74>
 8013c80:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8013c84:	2a01      	cmp	r2, #1
 8013c86:	d04d      	beq.n	8013d24 <_SetBkIndexBuffered+0xbc>
 8013c88:	69e2      	ldr	r2, [r4, #28]
 8013c8a:	6825      	ldr	r5, [r4, #0]
 8013c8c:	6860      	ldr	r0, [r4, #4]
 8013c8e:	f8d4 9020 	ldr.w	r9, [r4, #32]
 8013c92:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8013c96:	3a01      	subs	r2, #1
 8013c98:	eb05 0282 	add.w	r2, r5, r2, lsl #2
 8013c9c:	1d05      	adds	r5, r0, #4
 8013c9e:	6062      	str	r2, [r4, #4]
 8013ca0:	f8d3 a000 	ldr.w	sl, [r3]
 8013ca4:	f1ba 0f00 	cmp.w	sl, #0
 8013ca8:	d019      	beq.n	8013cde <_SetBkIndexBuffered+0x76>
 8013caa:	69a2      	ldr	r2, [r4, #24]
 8013cac:	4628      	mov	r0, r5
 8013cae:	f000 fdb3 	bl	8014818 <GUI__CompactPixelIndices>
 8013cb2:	f8d4 c014 	ldr.w	ip, [r4, #20]
 8013cb6:	f8da e00c 	ldr.w	lr, [sl, #12]
 8013cba:	69a0      	ldr	r0, [r4, #24]
 8013cbc:	68e3      	ldr	r3, [r4, #12]
 8013cbe:	9503      	str	r5, [sp, #12]
 8013cc0:	2200      	movs	r2, #0
 8013cc2:	9205      	str	r2, [sp, #20]
 8013cc4:	9204      	str	r2, [sp, #16]
 8013cc6:	2101      	movs	r1, #1
 8013cc8:	f8cd c008 	str.w	ip, [sp, #8]
 8013ccc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013cce:	9001      	str	r0, [sp, #4]
 8013cd0:	9100      	str	r1, [sp, #0]
 8013cd2:	4650      	mov	r0, sl
 8013cd4:	4649      	mov	r1, r9
 8013cd6:	f8de 5004 	ldr.w	r5, [lr, #4]
 8013cda:	47a8      	blx	r5
 8013cdc:	6862      	ldr	r2, [r4, #4]
 8013cde:	f8c2 8000 	str.w	r8, [r2]
 8013ce2:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 8013ce6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8013cea:	6062      	str	r2, [r4, #4]
 8013cec:	2301      	movs	r3, #1
 8013cee:	62a7      	str	r7, [r4, #40]	; 0x28
 8013cf0:	62e6      	str	r6, [r4, #44]	; 0x2c
 8013cf2:	60e3      	str	r3, [r4, #12]
 8013cf4:	6227      	str	r7, [r4, #32]
 8013cf6:	6266      	str	r6, [r4, #36]	; 0x24
 8013cf8:	b006      	add	sp, #24
 8013cfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013cfe:	f994 1030 	ldrsb.w	r1, [r4, #48]	; 0x30
 8013d02:	6a22      	ldr	r2, [r4, #32]
 8013d04:	440a      	add	r2, r1
 8013d06:	4282      	cmp	r2, r0
 8013d08:	d1b8      	bne.n	8013c7c <_SetBkIndexBuffered+0x14>
 8013d0a:	6863      	ldr	r3, [r4, #4]
 8013d0c:	68e2      	ldr	r2, [r4, #12]
 8013d0e:	f8c3 8000 	str.w	r8, [r3]
 8013d12:	f994 1030 	ldrsb.w	r1, [r4, #48]	; 0x30
 8013d16:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8013d1a:	6063      	str	r3, [r4, #4]
 8013d1c:	1c53      	adds	r3, r2, #1
 8013d1e:	2a00      	cmp	r2, #0
 8013d20:	d1e7      	bne.n	8013cf2 <_SetBkIndexBuffered+0x8a>
 8013d22:	e7e4      	b.n	8013cee <_SetBkIndexBuffered+0x86>
 8013d24:	6825      	ldr	r5, [r4, #0]
 8013d26:	f8d4 9028 	ldr.w	r9, [r4, #40]	; 0x28
 8013d2a:	462a      	mov	r2, r5
 8013d2c:	e7b7      	b.n	8013c9e <_SetBkIndexBuffered+0x36>
 8013d2e:	bf00      	nop

08013d30 <_ReleaseBuffer.isra.7>:
 8013d30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013d32:	68ca      	ldr	r2, [r1, #12]
 8013d34:	b089      	sub	sp, #36	; 0x24
 8013d36:	460c      	mov	r4, r1
 8013d38:	9107      	str	r1, [sp, #28]
 8013d3a:	2a00      	cmp	r2, #0
 8013d3c:	d02c      	beq.n	8013d98 <_ReleaseBuffer.isra.7+0x68>
 8013d3e:	f991 3030 	ldrsb.w	r3, [r1, #48]	; 0x30
 8013d42:	2b01      	cmp	r3, #1
 8013d44:	d031      	beq.n	8013daa <_ReleaseBuffer.isra.7+0x7a>
 8013d46:	69cb      	ldr	r3, [r1, #28]
 8013d48:	6a27      	ldr	r7, [r4, #32]
 8013d4a:	c942      	ldmia	r1, {r1, r6}
 8013d4c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013d50:	3b01      	subs	r3, #1
 8013d52:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013d56:	6063      	str	r3, [r4, #4]
 8013d58:	6805      	ldr	r5, [r0, #0]
 8013d5a:	3604      	adds	r6, #4
 8013d5c:	2d00      	cmp	r5, #0
 8013d5e:	d02b      	beq.n	8013db8 <_ReleaseBuffer.isra.7+0x88>
 8013d60:	4611      	mov	r1, r2
 8013d62:	4630      	mov	r0, r6
 8013d64:	69a2      	ldr	r2, [r4, #24]
 8013d66:	f000 fd57 	bl	8014818 <GUI__CompactPixelIndices>
 8013d6a:	2100      	movs	r1, #0
 8013d6c:	68e3      	ldr	r3, [r4, #12]
 8013d6e:	f8d5 e00c 	ldr.w	lr, [r5, #12]
 8013d72:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013d74:	9105      	str	r1, [sp, #20]
 8013d76:	9104      	str	r1, [sp, #16]
 8013d78:	9603      	str	r6, [sp, #12]
 8013d7a:	6961      	ldr	r1, [r4, #20]
 8013d7c:	9102      	str	r1, [sp, #8]
 8013d7e:	69a1      	ldr	r1, [r4, #24]
 8013d80:	9101      	str	r1, [sp, #4]
 8013d82:	2101      	movs	r1, #1
 8013d84:	9100      	str	r1, [sp, #0]
 8013d86:	4628      	mov	r0, r5
 8013d88:	4639      	mov	r1, r7
 8013d8a:	f8de 5004 	ldr.w	r5, [lr, #4]
 8013d8e:	47a8      	blx	r5
 8013d90:	9b07      	ldr	r3, [sp, #28]
 8013d92:	2200      	movs	r2, #0
 8013d94:	60e2      	str	r2, [r4, #12]
 8013d96:	461c      	mov	r4, r3
 8013d98:	68a4      	ldr	r4, [r4, #8]
 8013d9a:	a807      	add	r0, sp, #28
 8013d9c:	f7f1 f87c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8013da0:	4620      	mov	r0, r4
 8013da2:	f7f1 f9f1 	bl	8005188 <GUI_ALLOC_Free>
 8013da6:	b009      	add	sp, #36	; 0x24
 8013da8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013daa:	680e      	ldr	r6, [r1, #0]
 8013dac:	6a8f      	ldr	r7, [r1, #40]	; 0x28
 8013dae:	4633      	mov	r3, r6
 8013db0:	6063      	str	r3, [r4, #4]
 8013db2:	6805      	ldr	r5, [r0, #0]
 8013db4:	2d00      	cmp	r5, #0
 8013db6:	d1d3      	bne.n	8013d60 <_ReleaseBuffer.isra.7+0x30>
 8013db8:	4623      	mov	r3, r4
 8013dba:	e7ea      	b.n	8013d92 <_ReleaseBuffer.isra.7+0x62>

08013dbc <GUI_SPRITE_SetPosition>:
 8013dbc:	b900      	cbnz	r0, 8013dc0 <GUI_SPRITE_SetPosition+0x4>
 8013dbe:	4770      	bx	lr
 8013dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013dc4:	b0ab      	sub	sp, #172	; 0xac
 8013dc6:	460d      	mov	r5, r1
 8013dc8:	4616      	mov	r6, r2
 8013dca:	921d      	str	r2, [sp, #116]	; 0x74
 8013dcc:	911c      	str	r1, [sp, #112]	; 0x70
 8013dce:	f7f1 f851 	bl	8004e74 <GUI_ALLOC_LockH>
 8013dd2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013dd6:	6804      	ldr	r4, [r0, #0]
 8013dd8:	9027      	str	r0, [sp, #156]	; 0x9c
 8013dda:	429d      	cmp	r5, r3
 8013ddc:	9412      	str	r4, [sp, #72]	; 0x48
 8013dde:	f000 8181 	beq.w	80140e4 <GUI_SPRITE_SetPosition+0x328>
 8013de2:	2000      	movs	r0, #0
 8013de4:	f001 fa64 	bl	80152b0 <GUI_MEMDEV_Select>
 8013de8:	4b9f      	ldr	r3, [pc, #636]	; (8014068 <GUI_SPRITE_SetPosition+0x2ac>)
 8013dea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013dec:	681b      	ldr	r3, [r3, #0]
 8013dee:	6992      	ldr	r2, [r2, #24]
 8013df0:	7c59      	ldrb	r1, [r3, #17]
 8013df2:	9020      	str	r0, [sp, #128]	; 0x80
 8013df4:	4608      	mov	r0, r1
 8013df6:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8013df8:	9121      	str	r1, [sp, #132]	; 0x84
 8013dfa:	4282      	cmp	r2, r0
 8013dfc:	bf18      	it	ne
 8013dfe:	745a      	strbne	r2, [r3, #17]
 8013e00:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013e04:	9307      	str	r3, [sp, #28]
 8013e06:	4618      	mov	r0, r3
 8013e08:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8013e0c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013e10:	9219      	str	r2, [sp, #100]	; 0x64
 8013e12:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8013e16:	9313      	str	r3, [sp, #76]	; 0x4c
 8013e18:	461c      	mov	r4, r3
 8013e1a:	1a09      	subs	r1, r1, r0
 8013e1c:	1b12      	subs	r2, r2, r4
 8013e1e:	460e      	mov	r6, r1
 8013e20:	910b      	str	r1, [sp, #44]	; 0x2c
 8013e22:	921a      	str	r2, [sp, #104]	; 0x68
 8013e24:	4621      	mov	r1, r4
 8013e26:	4614      	mov	r4, r2
 8013e28:	4632      	mov	r2, r6
 8013e2a:	3201      	adds	r2, #1
 8013e2c:	8a2b      	ldrh	r3, [r5, #16]
 8013e2e:	921b      	str	r2, [sp, #108]	; 0x6c
 8013e30:	4622      	mov	r2, r4
 8013e32:	3201      	adds	r2, #1
 8013e34:	079b      	lsls	r3, r3, #30
 8013e36:	921e      	str	r2, [sp, #120]	; 0x78
 8013e38:	f140 8137 	bpl.w	80140aa <GUI_SPRITE_SetPosition+0x2ee>
 8013e3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013e3e:	696a      	ldr	r2, [r5, #20]
 8013e40:	9203      	str	r2, [sp, #12]
 8013e42:	1a1b      	subs	r3, r3, r0
 8013e44:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013e46:	9314      	str	r3, [sp, #80]	; 0x50
 8013e48:	2b00      	cmp	r3, #0
 8013e4a:	eba2 0401 	sub.w	r4, r2, r1
 8013e4e:	f340 81bb 	ble.w	80141c8 <GUI_SPRITE_SetPosition+0x40c>
 8013e52:	9309      	str	r3, [sp, #36]	; 0x24
 8013e54:	f8dd 906c 	ldr.w	r9, [sp, #108]	; 0x6c
 8013e58:	2300      	movs	r3, #0
 8013e5a:	f04f 0a01 	mov.w	sl, #1
 8013e5e:	9311      	str	r3, [sp, #68]	; 0x44
 8013e60:	2c00      	cmp	r4, #0
 8013e62:	f340 81bc 	ble.w	80141de <GUI_SPRITE_SetPosition+0x422>
 8013e66:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8013e68:	9316      	str	r3, [sp, #88]	; 0x58
 8013e6a:	2301      	movs	r3, #1
 8013e6c:	9417      	str	r4, [sp, #92]	; 0x5c
 8013e6e:	9315      	str	r3, [sp, #84]	; 0x54
 8013e70:	f04f 0b00 	mov.w	fp, #0
 8013e74:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013e76:	4b7d      	ldr	r3, [pc, #500]	; (801406c <GUI_SPRITE_SetPosition+0x2b0>)
 8013e78:	69b0      	ldr	r0, [r6, #24]
 8013e7a:	561b      	ldrsb	r3, [r3, r0]
 8013e7c:	2b01      	cmp	r3, #1
 8013e7e:	f340 819d 	ble.w	80141bc <GUI_SPRITE_SetPosition+0x400>
 8013e82:	2300      	movs	r3, #0
 8013e84:	f8ad 30a2 	strh.w	r3, [sp, #162]	; 0xa2
 8013e88:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8013e8c:	f7f3 fdf6 	bl	8007a7c <LCD_GetXSizeEx>
 8013e90:	1e43      	subs	r3, r0, #1
 8013e92:	69b0      	ldr	r0, [r6, #24]
 8013e94:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8013e98:	f7f3 fe00 	bl	8007a9c <LCD_GetYSizeEx>
 8013e9c:	3801      	subs	r0, #1
 8013e9e:	f8ad 00a6 	strh.w	r0, [sp, #166]	; 0xa6
 8013ea2:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8013ea4:	4652      	mov	r2, sl
 8013ea6:	f100 0114 	add.w	r1, r0, #20
 8013eaa:	f7ff fe83 	bl	8013bb4 <_CreateBuffer.isra.4>
 8013eae:	9022      	str	r0, [sp, #136]	; 0x88
 8013eb0:	2800      	cmp	r0, #0
 8013eb2:	f000 80f9 	beq.w	80140a8 <GUI_SPRITE_SetPosition+0x2ec>
 8013eb6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8013eb8:	4652      	mov	r2, sl
 8013eba:	f100 0114 	add.w	r1, r0, #20
 8013ebe:	f7ff fe79 	bl	8013bb4 <_CreateBuffer.isra.4>
 8013ec2:	9024      	str	r0, [sp, #144]	; 0x90
 8013ec4:	2800      	cmp	r0, #0
 8013ec6:	f000 80ea 	beq.w	801409e <GUI_SPRITE_SetPosition+0x2e2>
 8013eca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013ecc:	68d8      	ldr	r0, [r3, #12]
 8013ece:	2800      	cmp	r0, #0
 8013ed0:	f040 8195 	bne.w	80141fe <GUI_SPRITE_SetPosition+0x442>
 8013ed4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8013ed6:	455a      	cmp	r2, fp
 8013ed8:	f000 80dd 	beq.w	8014096 <GUI_SPRITE_SetPosition+0x2da>
 8013edc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8013ede:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013ee0:	9023      	str	r0, [sp, #140]	; 0x8c
 8013ee2:	009a      	lsls	r2, r3, #2
 8013ee4:	fb0b 1303 	mla	r3, fp, r3, r1
 8013ee8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8013eec:	930e      	str	r3, [sp, #56]	; 0x38
 8013eee:	ebc4 030b 	rsb	r3, r4, fp
 8013ef2:	930c      	str	r3, [sp, #48]	; 0x30
 8013ef4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013ef6:	9915      	ldr	r1, [sp, #84]	; 0x54
 8013ef8:	4423      	add	r3, r4
 8013efa:	9318      	str	r3, [sp, #96]	; 0x60
 8013efc:	ea4f 038a 	mov.w	r3, sl, lsl #2
 8013f00:	fb01 f202 	mul.w	r2, r1, r2
 8013f04:	9304      	str	r3, [sp, #16]
 8013f06:	465b      	mov	r3, fp
 8013f08:	921f      	str	r2, [sp, #124]	; 0x7c
 8013f0a:	46d3      	mov	fp, sl
 8013f0c:	46c8      	mov	r8, r9
 8013f0e:	469a      	mov	sl, r3
 8013f10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8013f12:	4553      	cmp	r3, sl
 8013f14:	f300 8107 	bgt.w	8014126 <GUI_SPRITE_SetPosition+0x36a>
 8013f18:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8013f1a:	4553      	cmp	r3, sl
 8013f1c:	bfb4      	ite	lt
 8013f1e:	2300      	movlt	r3, #0
 8013f20:	2301      	movge	r3, #1
 8013f22:	9310      	str	r3, [sp, #64]	; 0x40
 8013f24:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013f26:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8013f28:	4453      	add	r3, sl
 8013f2a:	930f      	str	r3, [sp, #60]	; 0x3c
 8013f2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8013f2e:	45a0      	cmp	r8, r4
 8013f30:	4453      	add	r3, sl
 8013f32:	9308      	str	r3, [sp, #32]
 8013f34:	f000 80a0 	beq.w	8014078 <GUI_SPRITE_SetPosition+0x2bc>
 8013f38:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013f3a:	9b07      	ldr	r3, [sp, #28]
 8013f3c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013f3e:	4403      	add	r3, r0
 8013f40:	ebc0 0904 	rsb	r9, r0, r4
 8013f44:	930a      	str	r3, [sp, #40]	; 0x28
 8013f46:	e05f      	b.n	8014008 <GUI_SPRITE_SetPosition+0x24c>
 8013f48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013f4a:	42a3      	cmp	r3, r4
 8013f4c:	db6c      	blt.n	8014028 <GUI_SPRITE_SetPosition+0x26c>
 8013f4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f50:	2b00      	cmp	r3, #0
 8013f52:	d069      	beq.n	8014028 <GUI_SPRITE_SetPosition+0x26c>
 8013f54:	f9bd 20a0 	ldrsh.w	r2, [sp, #160]	; 0xa0
 8013f58:	42ba      	cmp	r2, r7
 8013f5a:	f340 8275 	ble.w	8014448 <GUI_SPRITE_SetPosition+0x68c>
 8013f5e:	2300      	movs	r3, #0
 8013f60:	9305      	str	r3, [sp, #20]
 8013f62:	f1b9 0f00 	cmp.w	r9, #0
 8013f66:	f2c0 80ca 	blt.w	80140fe <GUI_SPRITE_SetPosition+0x342>
 8013f6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f6c:	2b00      	cmp	r3, #0
 8013f6e:	f2c0 80c6 	blt.w	80140fe <GUI_SPRITE_SetPosition+0x342>
 8013f72:	461a      	mov	r2, r3
 8013f74:	4649      	mov	r1, r9
 8013f76:	9803      	ldr	r0, [sp, #12]
 8013f78:	f7f1 fa7a 	bl	8005470 <GUI_GetBitmapPixelIndex>
 8013f7c:	0e03      	lsrs	r3, r0, #24
 8013f7e:	f040 80be 	bne.w	80140fe <GUI_SPRITE_SetPosition+0x342>
 8013f82:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 8013f86:	9a06      	ldr	r2, [sp, #24]
 8013f88:	429a      	cmp	r2, r3
 8013f8a:	db0f      	blt.n	8013fac <GUI_SPRITE_SetPosition+0x1f0>
 8013f8c:	f9bd 20a2 	ldrsh.w	r2, [sp, #162]	; 0xa2
 8013f90:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8013f92:	428a      	cmp	r2, r1
 8013f94:	dc0a      	bgt.n	8013fac <GUI_SPRITE_SetPosition+0x1f0>
 8013f96:	f9bd 20a4 	ldrsh.w	r2, [sp, #164]	; 0xa4
 8013f9a:	9906      	ldr	r1, [sp, #24]
 8013f9c:	428a      	cmp	r2, r1
 8013f9e:	db05      	blt.n	8013fac <GUI_SPRITE_SetPosition+0x1f0>
 8013fa0:	f9bd 20a6 	ldrsh.w	r2, [sp, #166]	; 0xa6
 8013fa4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8013fa6:	428a      	cmp	r2, r1
 8013fa8:	f280 80a2 	bge.w	80140f0 <GUI_SPRITE_SetPosition+0x334>
 8013fac:	429f      	cmp	r7, r3
 8013fae:	db23      	blt.n	8013ff8 <GUI_SPRITE_SetPosition+0x23c>
 8013fb0:	f9bd 30a2 	ldrsh.w	r3, [sp, #162]	; 0xa2
 8013fb4:	9808      	ldr	r0, [sp, #32]
 8013fb6:	4283      	cmp	r3, r0
 8013fb8:	dc1e      	bgt.n	8013ff8 <GUI_SPRITE_SetPosition+0x23c>
 8013fba:	f9bd 30a4 	ldrsh.w	r3, [sp, #164]	; 0xa4
 8013fbe:	42bb      	cmp	r3, r7
 8013fc0:	db1a      	blt.n	8013ff8 <GUI_SPRITE_SetPosition+0x23c>
 8013fc2:	f9bd 30a6 	ldrsh.w	r3, [sp, #166]	; 0xa6
 8013fc6:	4283      	cmp	r3, r0
 8013fc8:	db16      	blt.n	8013ff8 <GUI_SPRITE_SetPosition+0x23c>
 8013fca:	4630      	mov	r0, r6
 8013fcc:	4b28      	ldr	r3, [pc, #160]	; (8014070 <GUI_SPRITE_SetPosition+0x2b4>)
 8013fce:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8013fd0:	681b      	ldr	r3, [r3, #0]
 8013fd2:	f046 417f 	orr.w	r1, r6, #4278190080	; 0xff000000
 8013fd6:	22ff      	movs	r2, #255	; 0xff
 8013fd8:	4798      	blx	r3
 8013fda:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8013fdc:	4b25      	ldr	r3, [pc, #148]	; (8014074 <GUI_SPRITE_SetPosition+0x2b8>)
 8013fde:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013fe2:	691b      	ldr	r3, [r3, #16]
 8013fe4:	681b      	ldr	r3, [r3, #0]
 8013fe6:	4798      	blx	r3
 8013fe8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8013fea:	9300      	str	r3, [sp, #0]
 8013fec:	4602      	mov	r2, r0
 8013fee:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013ff0:	9908      	ldr	r1, [sp, #32]
 8013ff2:	4638      	mov	r0, r7
 8013ff4:	f7ff fe38 	bl	8013c68 <_SetBkIndexBuffered>
 8013ff8:	9b05      	ldr	r3, [sp, #20]
 8013ffa:	622b      	str	r3, [r5, #32]
 8013ffc:	445c      	add	r4, fp
 8013ffe:	9b04      	ldr	r3, [sp, #16]
 8014000:	45a0      	cmp	r8, r4
 8014002:	441d      	add	r5, r3
 8014004:	44d9      	add	r9, fp
 8014006:	d037      	beq.n	8014078 <GUI_SPRITE_SetPosition+0x2bc>
 8014008:	4652      	mov	r2, sl
 801400a:	4621      	mov	r1, r4
 801400c:	9803      	ldr	r0, [sp, #12]
 801400e:	f7f1 fa2f 	bl	8005470 <GUI_GetBitmapPixelIndex>
 8014012:	0e03      	lsrs	r3, r0, #24
 8014014:	4606      	mov	r6, r0
 8014016:	d0f1      	beq.n	8013ffc <GUI_SPRITE_SetPosition+0x240>
 8014018:	9b07      	ldr	r3, [sp, #28]
 801401a:	18e3      	adds	r3, r4, r3
 801401c:	9306      	str	r3, [sp, #24]
 801401e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014020:	191f      	adds	r7, r3, r4
 8014022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014024:	42a3      	cmp	r3, r4
 8014026:	dd8f      	ble.n	8013f48 <GUI_SPRITE_SetPosition+0x18c>
 8014028:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 801402c:	42bb      	cmp	r3, r7
 801402e:	461a      	mov	r2, r3
 8014030:	dc68      	bgt.n	8014104 <GUI_SPRITE_SetPosition+0x348>
 8014032:	f9bd 30a2 	ldrsh.w	r3, [sp, #162]	; 0xa2
 8014036:	9908      	ldr	r1, [sp, #32]
 8014038:	428b      	cmp	r3, r1
 801403a:	f04f 0300 	mov.w	r3, #0
 801403e:	dc6f      	bgt.n	8014120 <GUI_SPRITE_SetPosition+0x364>
 8014040:	930d      	str	r3, [sp, #52]	; 0x34
 8014042:	f9bd 30a4 	ldrsh.w	r3, [sp, #164]	; 0xa4
 8014046:	42bb      	cmp	r3, r7
 8014048:	db04      	blt.n	8014054 <GUI_SPRITE_SetPosition+0x298>
 801404a:	f9bd 30a6 	ldrsh.w	r3, [sp, #166]	; 0xa6
 801404e:	9a08      	ldr	r2, [sp, #32]
 8014050:	4293      	cmp	r3, r2
 8014052:	da6b      	bge.n	801412c <GUI_SPRITE_SetPosition+0x370>
 8014054:	2300      	movs	r3, #0
 8014056:	9305      	str	r3, [sp, #20]
 8014058:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801405a:	2b00      	cmp	r3, #0
 801405c:	d181      	bne.n	8013f62 <GUI_SPRITE_SetPosition+0x1a6>
 801405e:	f9bd 20a0 	ldrsh.w	r2, [sp, #160]	; 0xa0
 8014062:	4613      	mov	r3, r2
 8014064:	e78f      	b.n	8013f86 <GUI_SPRITE_SetPosition+0x1ca>
 8014066:	bf00      	nop
 8014068:	20000018 	.word	0x20000018
 801406c:	2001c14c 	.word	0x2001c14c
 8014070:	20000030 	.word	0x20000030
 8014074:	2001c19c 	.word	0x2001c19c
 8014078:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801407a:	991f      	ldr	r1, [sp, #124]	; 0x7c
 801407c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801407e:	440b      	add	r3, r1
 8014080:	930e      	str	r3, [sp, #56]	; 0x38
 8014082:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014084:	4619      	mov	r1, r3
 8014086:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014088:	4492      	add	sl, r2
 801408a:	4411      	add	r1, r2
 801408c:	4553      	cmp	r3, sl
 801408e:	910c      	str	r1, [sp, #48]	; 0x30
 8014090:	f47f af3e 	bne.w	8013f10 <GUI_SPRITE_SetPosition+0x154>
 8014094:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014096:	6818      	ldr	r0, [r3, #0]
 8014098:	9924      	ldr	r1, [sp, #144]	; 0x90
 801409a:	f7ff fe49 	bl	8013d30 <_ReleaseBuffer.isra.7>
 801409e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80140a0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80140a2:	6818      	ldr	r0, [r3, #0]
 80140a4:	f7ff fe44 	bl	8013d30 <_ReleaseBuffer.isra.7>
 80140a8:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80140aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80140ac:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80140ae:	991d      	ldr	r1, [sp, #116]	; 0x74
 80140b0:	80ab      	strh	r3, [r5, #4]
 80140b2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80140b4:	80e9      	strh	r1, [r5, #6]
 80140b6:	4413      	add	r3, r2
 80140b8:	3b01      	subs	r3, #1
 80140ba:	1e4a      	subs	r2, r1, #1
 80140bc:	4402      	add	r2, r0
 80140be:	812b      	strh	r3, [r5, #8]
 80140c0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80140c2:	816a      	strh	r2, [r5, #10]
 80140c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80140c6:	4619      	mov	r1, r3
 80140c8:	4291      	cmp	r1, r2
 80140ca:	d002      	beq.n	80140d2 <GUI_SPRITE_SetPosition+0x316>
 80140cc:	4ba5      	ldr	r3, [pc, #660]	; (8014364 <GUI_SPRITE_SetPosition+0x5a8>)
 80140ce:	681b      	ldr	r3, [r3, #0]
 80140d0:	745a      	strb	r2, [r3, #17]
 80140d2:	9820      	ldr	r0, [sp, #128]	; 0x80
 80140d4:	f001 f8ec 	bl	80152b0 <GUI_MEMDEV_Select>
 80140d8:	a827      	add	r0, sp, #156	; 0x9c
 80140da:	f7f0 fedd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80140de:	b02b      	add	sp, #172	; 0xac
 80140e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140e4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80140e8:	429e      	cmp	r6, r3
 80140ea:	f47f ae7a 	bne.w	8013de2 <GUI_SPRITE_SetPosition+0x26>
 80140ee:	e7f3      	b.n	80140d8 <GUI_SPRITE_SetPosition+0x31c>
 80140f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80140f2:	6a2a      	ldr	r2, [r5, #32]
 80140f4:	9806      	ldr	r0, [sp, #24]
 80140f6:	9300      	str	r3, [sp, #0]
 80140f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80140fa:	f7ff fdb5 	bl	8013c68 <_SetBkIndexBuffered>
 80140fe:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 8014102:	e753      	b.n	8013fac <GUI_SPRITE_SetPosition+0x1f0>
 8014104:	9a06      	ldr	r2, [sp, #24]
 8014106:	4293      	cmp	r3, r2
 8014108:	dc07      	bgt.n	801411a <GUI_SPRITE_SetPosition+0x35e>
 801410a:	f9bd 20a2 	ldrsh.w	r2, [sp, #162]	; 0xa2
 801410e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8014110:	4291      	cmp	r1, r2
 8014112:	db02      	blt.n	801411a <GUI_SPRITE_SetPosition+0x35e>
 8014114:	2200      	movs	r2, #0
 8014116:	9205      	str	r2, [sp, #20]
 8014118:	e73d      	b.n	8013f96 <GUI_SPRITE_SetPosition+0x1da>
 801411a:	2300      	movs	r3, #0
 801411c:	9305      	str	r3, [sp, #20]
 801411e:	e76b      	b.n	8013ff8 <GUI_SPRITE_SetPosition+0x23c>
 8014120:	9305      	str	r3, [sp, #20]
 8014122:	4613      	mov	r3, r2
 8014124:	e72f      	b.n	8013f86 <GUI_SPRITE_SetPosition+0x1ca>
 8014126:	2300      	movs	r3, #0
 8014128:	9310      	str	r3, [sp, #64]	; 0x40
 801412a:	e6fb      	b.n	8013f24 <GUI_SPRITE_SetPosition+0x168>
 801412c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801412e:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8014132:	42ba      	cmp	r2, r7
 8014134:	dc2d      	bgt.n	8014192 <GUI_SPRITE_SetPosition+0x3d6>
 8014136:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801413a:	42b9      	cmp	r1, r7
 801413c:	db29      	blt.n	8014192 <GUI_SPRITE_SetPosition+0x3d6>
 801413e:	f9b3 e006 	ldrsh.w	lr, [r3, #6]
 8014142:	9808      	ldr	r0, [sp, #32]
 8014144:	4586      	cmp	lr, r0
 8014146:	dc24      	bgt.n	8014192 <GUI_SPRITE_SetPosition+0x3d6>
 8014148:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 801414c:	4281      	cmp	r1, r0
 801414e:	db20      	blt.n	8014192 <GUI_SPRITE_SetPosition+0x3d6>
 8014150:	6958      	ldr	r0, [r3, #20]
 8014152:	9325      	str	r3, [sp, #148]	; 0x94
 8014154:	b1e8      	cbz	r0, 8014192 <GUI_SPRITE_SetPosition+0x3d6>
 8014156:	1abb      	subs	r3, r7, r2
 8014158:	4619      	mov	r1, r3
 801415a:	9305      	str	r3, [sp, #20]
 801415c:	9b08      	ldr	r3, [sp, #32]
 801415e:	ebce 0303 	rsb	r3, lr, r3
 8014162:	461a      	mov	r2, r3
 8014164:	9323      	str	r3, [sp, #140]	; 0x8c
 8014166:	f7f1 f983 	bl	8005470 <GUI_GetBitmapPixelIndex>
 801416a:	0e03      	lsrs	r3, r0, #24
 801416c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801416e:	d010      	beq.n	8014192 <GUI_SPRITE_SetPosition+0x3d6>
 8014170:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014174:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8014178:	1a52      	subs	r2, r2, r1
 801417a:	9923      	ldr	r1, [sp, #140]	; 0x8c
 801417c:	fb02 1201 	mla	r2, r2, r1, r1
 8014180:	9905      	ldr	r1, [sp, #20]
 8014182:	440a      	add	r2, r1
 8014184:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8014188:	6a1b      	ldr	r3, [r3, #32]
 801418a:	9305      	str	r3, [sp, #20]
 801418c:	f043 407f 	orr.w	r0, r3, #4278190080	; 0xff000000
 8014190:	e00b      	b.n	80141aa <GUI_SPRITE_SetPosition+0x3ee>
 8014192:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014194:	6818      	ldr	r0, [r3, #0]
 8014196:	2800      	cmp	r0, #0
 8014198:	d02d      	beq.n	80141f6 <GUI_SPRITE_SetPosition+0x43a>
 801419a:	68c3      	ldr	r3, [r0, #12]
 801419c:	9a08      	ldr	r2, [sp, #32]
 801419e:	695b      	ldr	r3, [r3, #20]
 80141a0:	4639      	mov	r1, r7
 80141a2:	4798      	blx	r3
 80141a4:	9005      	str	r0, [sp, #20]
 80141a6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80141aa:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80141ac:	4b6e      	ldr	r3, [pc, #440]	; (8014368 <GUI_SPRITE_SetPosition+0x5ac>)
 80141ae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80141b2:	691b      	ldr	r3, [r3, #16]
 80141b4:	685b      	ldr	r3, [r3, #4]
 80141b6:	4798      	blx	r3
 80141b8:	9023      	str	r0, [sp, #140]	; 0x8c
 80141ba:	e74d      	b.n	8014058 <GUI_SPRITE_SetPosition+0x29c>
 80141bc:	68f3      	ldr	r3, [r6, #12]
 80141be:	4630      	mov	r0, r6
 80141c0:	a928      	add	r1, sp, #160	; 0xa0
 80141c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80141c4:	4798      	blx	r3
 80141c6:	e66c      	b.n	8013ea2 <GUI_SPRITE_SetPosition+0xe6>
 80141c8:	2200      	movs	r2, #0
 80141ca:	9209      	str	r2, [sp, #36]	; 0x24
 80141cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80141ce:	9611      	str	r6, [sp, #68]	; 0x44
 80141d0:	4633      	mov	r3, r6
 80141d2:	f04f 39ff 	mov.w	r9, #4294967295
 80141d6:	4413      	add	r3, r2
 80141d8:	46ca      	mov	sl, r9
 80141da:	930b      	str	r3, [sp, #44]	; 0x2c
 80141dc:	e640      	b.n	8013e60 <GUI_SPRITE_SetPosition+0xa4>
 80141de:	f04f 33ff 	mov.w	r3, #4294967295
 80141e2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80141e4:	9316      	str	r3, [sp, #88]	; 0x58
 80141e6:	9315      	str	r3, [sp, #84]	; 0x54
 80141e8:	2300      	movs	r3, #0
 80141ea:	9317      	str	r3, [sp, #92]	; 0x5c
 80141ec:	4613      	mov	r3, r2
 80141ee:	4423      	add	r3, r4
 80141f0:	4693      	mov	fp, r2
 80141f2:	931a      	str	r3, [sp, #104]	; 0x68
 80141f4:	e63e      	b.n	8013e74 <GUI_SPRITE_SetPosition+0xb8>
 80141f6:	9005      	str	r0, [sp, #20]
 80141f8:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80141fc:	e7d5      	b.n	80141aa <GUI_SPRITE_SetPosition+0x3ee>
 80141fe:	f7f0 fe39 	bl	8004e74 <GUI_ALLOC_LockH>
 8014202:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014204:	9026      	str	r0, [sp, #152]	; 0x98
 8014206:	455b      	cmp	r3, fp
 8014208:	f000 80a6 	beq.w	8014358 <GUI_SPRITE_SetPosition+0x59c>
 801420c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801420e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014210:	009a      	lsls	r2, r3, #2
 8014212:	fb0b 1303 	mla	r3, fp, r3, r1
 8014216:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801421a:	930d      	str	r3, [sp, #52]	; 0x34
 801421c:	ebc4 030b 	rsb	r3, r4, fp
 8014220:	930c      	str	r3, [sp, #48]	; 0x30
 8014222:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014224:	9915      	ldr	r1, [sp, #84]	; 0x54
 8014226:	4423      	add	r3, r4
 8014228:	fb01 f202 	mul.w	r2, r1, r2
 801422c:	9318      	str	r3, [sp, #96]	; 0x60
 801422e:	ea4f 038a 	mov.w	r3, sl, lsl #2
 8014232:	9210      	str	r2, [sp, #64]	; 0x40
 8014234:	9304      	str	r3, [sp, #16]
 8014236:	9a07      	ldr	r2, [sp, #28]
 8014238:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801423a:	4413      	add	r3, r2
 801423c:	46c8      	mov	r8, r9
 801423e:	930a      	str	r3, [sp, #40]	; 0x28
 8014240:	46d9      	mov	r9, fp
 8014242:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8014244:	454b      	cmp	r3, r9
 8014246:	f300 80af 	bgt.w	80143a8 <GUI_SPRITE_SetPosition+0x5ec>
 801424a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801424c:	454b      	cmp	r3, r9
 801424e:	bfb4      	ite	lt
 8014250:	2300      	movlt	r3, #0
 8014252:	2301      	movge	r3, #1
 8014254:	930f      	str	r3, [sp, #60]	; 0x3c
 8014256:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014258:	444b      	add	r3, r9
 801425a:	930e      	str	r3, [sp, #56]	; 0x38
 801425c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801425e:	444b      	add	r3, r9
 8014260:	9308      	str	r3, [sp, #32]
 8014262:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014264:	4598      	cmp	r8, r3
 8014266:	d069      	beq.n	801433c <GUI_SPRITE_SetPosition+0x580>
 8014268:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801426a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801426c:	461c      	mov	r4, r3
 801426e:	ebc2 0b03 	rsb	fp, r2, r3
 8014272:	464a      	mov	r2, r9
 8014274:	4621      	mov	r1, r4
 8014276:	9803      	ldr	r0, [sp, #12]
 8014278:	f7f1 f8fa 	bl	8005470 <GUI_GetBitmapPixelIndex>
 801427c:	4606      	mov	r6, r0
 801427e:	2800      	cmp	r0, #0
 8014280:	d056      	beq.n	8014330 <GUI_SPRITE_SetPosition+0x574>
 8014282:	9b07      	ldr	r3, [sp, #28]
 8014284:	18e3      	adds	r3, r4, r3
 8014286:	9306      	str	r3, [sp, #24]
 8014288:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801428a:	191f      	adds	r7, r3, r4
 801428c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801428e:	42a3      	cmp	r3, r4
 8014290:	dc6c      	bgt.n	801436c <GUI_SPRITE_SetPosition+0x5b0>
 8014292:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014294:	42a3      	cmp	r3, r4
 8014296:	db69      	blt.n	801436c <GUI_SPRITE_SetPosition+0x5b0>
 8014298:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801429a:	2b00      	cmp	r3, #0
 801429c:	d066      	beq.n	801436c <GUI_SPRITE_SetPosition+0x5b0>
 801429e:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 80142a2:	42bb      	cmp	r3, r7
 80142a4:	bfd8      	it	le
 80142a6:	2301      	movle	r3, #1
 80142a8:	f300 80cb 	bgt.w	8014442 <GUI_SPRITE_SetPosition+0x686>
 80142ac:	f9bd 20a2 	ldrsh.w	r2, [sp, #162]	; 0xa2
 80142b0:	9908      	ldr	r1, [sp, #32]
 80142b2:	428a      	cmp	r2, r1
 80142b4:	dc07      	bgt.n	80142c6 <GUI_SPRITE_SetPosition+0x50a>
 80142b6:	f9bd 20a4 	ldrsh.w	r2, [sp, #164]	; 0xa4
 80142ba:	42ba      	cmp	r2, r7
 80142bc:	db03      	blt.n	80142c6 <GUI_SPRITE_SetPosition+0x50a>
 80142be:	f9bd 20a6 	ldrsh.w	r2, [sp, #166]	; 0xa6
 80142c2:	428a      	cmp	r2, r1
 80142c4:	da7d      	bge.n	80143c2 <GUI_SPRITE_SetPosition+0x606>
 80142c6:	2200      	movs	r2, #0
 80142c8:	9205      	str	r2, [sp, #20]
 80142ca:	b163      	cbz	r3, 80142e6 <GUI_SPRITE_SetPosition+0x52a>
 80142cc:	f1bb 0f00 	cmp.w	fp, #0
 80142d0:	db62      	blt.n	8014398 <GUI_SPRITE_SetPosition+0x5dc>
 80142d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80142d4:	2b00      	cmp	r3, #0
 80142d6:	db5f      	blt.n	8014398 <GUI_SPRITE_SetPosition+0x5dc>
 80142d8:	461a      	mov	r2, r3
 80142da:	4659      	mov	r1, fp
 80142dc:	9803      	ldr	r0, [sp, #12]
 80142de:	f7f1 f8c7 	bl	8005470 <GUI_GetBitmapPixelIndex>
 80142e2:	2800      	cmp	r0, #0
 80142e4:	d158      	bne.n	8014398 <GUI_SPRITE_SetPosition+0x5dc>
 80142e6:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 80142ea:	9a06      	ldr	r2, [sp, #24]
 80142ec:	429a      	cmp	r2, r3
 80142ee:	db0e      	blt.n	801430e <GUI_SPRITE_SetPosition+0x552>
 80142f0:	f9bd 20a2 	ldrsh.w	r2, [sp, #162]	; 0xa2
 80142f4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80142f6:	428a      	cmp	r2, r1
 80142f8:	dc09      	bgt.n	801430e <GUI_SPRITE_SetPosition+0x552>
 80142fa:	f9bd 20a4 	ldrsh.w	r2, [sp, #164]	; 0xa4
 80142fe:	9906      	ldr	r1, [sp, #24]
 8014300:	428a      	cmp	r2, r1
 8014302:	db04      	blt.n	801430e <GUI_SPRITE_SetPosition+0x552>
 8014304:	f9bd 20a6 	ldrsh.w	r2, [sp, #166]	; 0xa6
 8014308:	990e      	ldr	r1, [sp, #56]	; 0x38
 801430a:	428a      	cmp	r2, r1
 801430c:	da3d      	bge.n	801438a <GUI_SPRITE_SetPosition+0x5ce>
 801430e:	429f      	cmp	r7, r3
 8014310:	db0c      	blt.n	801432c <GUI_SPRITE_SetPosition+0x570>
 8014312:	f9bd 30a2 	ldrsh.w	r3, [sp, #162]	; 0xa2
 8014316:	9908      	ldr	r1, [sp, #32]
 8014318:	428b      	cmp	r3, r1
 801431a:	dc07      	bgt.n	801432c <GUI_SPRITE_SetPosition+0x570>
 801431c:	f9bd 30a4 	ldrsh.w	r3, [sp, #164]	; 0xa4
 8014320:	42bb      	cmp	r3, r7
 8014322:	db03      	blt.n	801432c <GUI_SPRITE_SetPosition+0x570>
 8014324:	f9bd 30a6 	ldrsh.w	r3, [sp, #166]	; 0xa6
 8014328:	428b      	cmp	r3, r1
 801432a:	da40      	bge.n	80143ae <GUI_SPRITE_SetPosition+0x5f2>
 801432c:	9b05      	ldr	r3, [sp, #20]
 801432e:	622b      	str	r3, [r5, #32]
 8014330:	4454      	add	r4, sl
 8014332:	9b04      	ldr	r3, [sp, #16]
 8014334:	4544      	cmp	r4, r8
 8014336:	441d      	add	r5, r3
 8014338:	44d3      	add	fp, sl
 801433a:	d19a      	bne.n	8014272 <GUI_SPRITE_SetPosition+0x4b6>
 801433c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801433e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014340:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014342:	440b      	add	r3, r1
 8014344:	930d      	str	r3, [sp, #52]	; 0x34
 8014346:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014348:	4619      	mov	r1, r3
 801434a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801434c:	4491      	add	r9, r2
 801434e:	4411      	add	r1, r2
 8014350:	4599      	cmp	r9, r3
 8014352:	910c      	str	r1, [sp, #48]	; 0x30
 8014354:	f47f af75 	bne.w	8014242 <GUI_SPRITE_SetPosition+0x486>
 8014358:	a826      	add	r0, sp, #152	; 0x98
 801435a:	f7f0 fd9d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801435e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014360:	e699      	b.n	8014096 <GUI_SPRITE_SetPosition+0x2da>
 8014362:	bf00      	nop
 8014364:	20000018 	.word	0x20000018
 8014368:	2001c19c 	.word	0x2001c19c
 801436c:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 8014370:	42bb      	cmp	r3, r7
 8014372:	dd17      	ble.n	80143a4 <GUI_SPRITE_SetPosition+0x5e8>
 8014374:	9a06      	ldr	r2, [sp, #24]
 8014376:	4293      	cmp	r3, r2
 8014378:	dc11      	bgt.n	801439e <GUI_SPRITE_SetPosition+0x5e2>
 801437a:	f9bd 20a2 	ldrsh.w	r2, [sp, #162]	; 0xa2
 801437e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014380:	4291      	cmp	r1, r2
 8014382:	db0c      	blt.n	801439e <GUI_SPRITE_SetPosition+0x5e2>
 8014384:	2200      	movs	r2, #0
 8014386:	9205      	str	r2, [sp, #20]
 8014388:	e7b7      	b.n	80142fa <GUI_SPRITE_SetPosition+0x53e>
 801438a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801438c:	6a2a      	ldr	r2, [r5, #32]
 801438e:	9806      	ldr	r0, [sp, #24]
 8014390:	9300      	str	r3, [sp, #0]
 8014392:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014394:	f7ff fc68 	bl	8013c68 <_SetBkIndexBuffered>
 8014398:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 801439c:	e7b7      	b.n	801430e <GUI_SPRITE_SetPosition+0x552>
 801439e:	2300      	movs	r3, #0
 80143a0:	9305      	str	r3, [sp, #20]
 80143a2:	e7c3      	b.n	801432c <GUI_SPRITE_SetPosition+0x570>
 80143a4:	2300      	movs	r3, #0
 80143a6:	e781      	b.n	80142ac <GUI_SPRITE_SetPosition+0x4f0>
 80143a8:	2300      	movs	r3, #0
 80143aa:	930f      	str	r3, [sp, #60]	; 0x3c
 80143ac:	e753      	b.n	8014256 <GUI_SPRITE_SetPosition+0x49a>
 80143ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80143b0:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
 80143b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80143b6:	9300      	str	r3, [sp, #0]
 80143b8:	4638      	mov	r0, r7
 80143ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80143bc:	f7ff fc54 	bl	8013c68 <_SetBkIndexBuffered>
 80143c0:	e7b4      	b.n	801432c <GUI_SPRITE_SetPosition+0x570>
 80143c2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80143c4:	9205      	str	r2, [sp, #20]
 80143c6:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 80143ca:	42ba      	cmp	r2, r7
 80143cc:	dc0d      	bgt.n	80143ea <GUI_SPRITE_SetPosition+0x62e>
 80143ce:	9805      	ldr	r0, [sp, #20]
 80143d0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80143d4:	42b9      	cmp	r1, r7
 80143d6:	db08      	blt.n	80143ea <GUI_SPRITE_SetPosition+0x62e>
 80143d8:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80143dc:	9908      	ldr	r1, [sp, #32]
 80143de:	458e      	cmp	lr, r1
 80143e0:	dc03      	bgt.n	80143ea <GUI_SPRITE_SetPosition+0x62e>
 80143e2:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 80143e6:	4288      	cmp	r0, r1
 80143e8:	da0d      	bge.n	8014406 <GUI_SPRITE_SetPosition+0x64a>
 80143ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80143ec:	6810      	ldr	r0, [r2, #0]
 80143ee:	2800      	cmp	r0, #0
 80143f0:	f43f af69 	beq.w	80142c6 <GUI_SPRITE_SetPosition+0x50a>
 80143f4:	68c2      	ldr	r2, [r0, #12]
 80143f6:	931f      	str	r3, [sp, #124]	; 0x7c
 80143f8:	4639      	mov	r1, r7
 80143fa:	6953      	ldr	r3, [r2, #20]
 80143fc:	9a08      	ldr	r2, [sp, #32]
 80143fe:	4798      	blx	r3
 8014400:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8014402:	9005      	str	r0, [sp, #20]
 8014404:	e761      	b.n	80142ca <GUI_SPRITE_SetPosition+0x50e>
 8014406:	9325      	str	r3, [sp, #148]	; 0x94
 8014408:	1abb      	subs	r3, r7, r2
 801440a:	931f      	str	r3, [sp, #124]	; 0x7c
 801440c:	ebce 0201 	rsb	r2, lr, r1
 8014410:	4619      	mov	r1, r3
 8014412:	9b05      	ldr	r3, [sp, #20]
 8014414:	9223      	str	r2, [sp, #140]	; 0x8c
 8014416:	6958      	ldr	r0, [r3, #20]
 8014418:	f7f1 f82a 	bl	8005470 <GUI_GetBitmapPixelIndex>
 801441c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801441e:	2800      	cmp	r0, #0
 8014420:	d0e3      	beq.n	80143ea <GUI_SPRITE_SetPosition+0x62e>
 8014422:	9805      	ldr	r0, [sp, #20]
 8014424:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014428:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801442c:	1a52      	subs	r2, r2, r1
 801442e:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8014430:	fb02 1201 	mla	r2, r2, r1, r1
 8014434:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8014436:	440a      	add	r2, r1
 8014438:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 801443c:	6a12      	ldr	r2, [r2, #32]
 801443e:	9205      	str	r2, [sp, #20]
 8014440:	e743      	b.n	80142ca <GUI_SPRITE_SetPosition+0x50e>
 8014442:	2300      	movs	r3, #0
 8014444:	9305      	str	r3, [sp, #20]
 8014446:	e741      	b.n	80142cc <GUI_SPRITE_SetPosition+0x510>
 8014448:	f9bd 30a2 	ldrsh.w	r3, [sp, #162]	; 0xa2
 801444c:	9a08      	ldr	r2, [sp, #32]
 801444e:	4293      	cmp	r3, r2
 8014450:	f73f ad85 	bgt.w	8013f5e <GUI_SPRITE_SetPosition+0x1a2>
 8014454:	2301      	movs	r3, #1
 8014456:	930d      	str	r3, [sp, #52]	; 0x34
 8014458:	e5f3      	b.n	8014042 <GUI_SPRITE_SetPosition+0x286>
 801445a:	bf00      	nop

0801445c <_OnExit>:
 801445c:	4b02      	ldr	r3, [pc, #8]	; (8014468 <_OnExit+0xc>)
 801445e:	2200      	movs	r2, #0
 8014460:	601a      	str	r2, [r3, #0]
 8014462:	605a      	str	r2, [r3, #4]
 8014464:	609a      	str	r2, [r3, #8]
 8014466:	4770      	bx	lr
 8014468:	20000620 	.word	0x20000620

0801446c <GUI_TIMER_Exec>:
 801446c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014470:	4d1c      	ldr	r5, [pc, #112]	; (80144e4 <GUI_TIMER_Exec+0x78>)
 8014472:	686f      	ldr	r7, [r5, #4]
 8014474:	b085      	sub	sp, #20
 8014476:	462c      	mov	r4, r5
 8014478:	463b      	mov	r3, r7
 801447a:	2600      	movs	r6, #0
 801447c:	b333      	cbz	r3, 80144cc <GUI_TIMER_Exec+0x60>
 801447e:	f7f1 ff4b 	bl	8006318 <GUI_GetTime>
 8014482:	4680      	mov	r8, r0
 8014484:	6868      	ldr	r0, [r5, #4]
 8014486:	f7f0 fcf5 	bl	8004e74 <GUI_ALLOC_LockH>
 801448a:	4603      	mov	r3, r0
 801448c:	9300      	str	r3, [sp, #0]
 801448e:	695a      	ldr	r2, [r3, #20]
 8014490:	ebc8 0202 	rsb	r2, r8, r2
 8014494:	2a00      	cmp	r2, #0
 8014496:	4668      	mov	r0, sp
 8014498:	dc1c      	bgt.n	80144d4 <GUI_TIMER_Exec+0x68>
 801449a:	f8d3 9004 	ldr.w	r9, [r3, #4]
 801449e:	6861      	ldr	r1, [r4, #4]
 80144a0:	691a      	ldr	r2, [r3, #16]
 80144a2:	f8cd 8004 	str.w	r8, [sp, #4]
 80144a6:	9103      	str	r1, [sp, #12]
 80144a8:	9202      	str	r2, [sp, #8]
 80144aa:	f8c4 9004 	str.w	r9, [r4, #4]
 80144ae:	f8d3 8000 	ldr.w	r8, [r3]
 80144b2:	f7f0 fcf1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80144b6:	a801      	add	r0, sp, #4
 80144b8:	47c0      	blx	r8
 80144ba:	f1b9 0f00 	cmp.w	r9, #0
 80144be:	d005      	beq.n	80144cc <GUI_TIMER_Exec+0x60>
 80144c0:	6863      	ldr	r3, [r4, #4]
 80144c2:	429f      	cmp	r7, r3
 80144c4:	f04f 0601 	mov.w	r6, #1
 80144c8:	d1d8      	bne.n	801447c <GUI_TIMER_Exec+0x10>
 80144ca:	2600      	movs	r6, #0
 80144cc:	4630      	mov	r0, r6
 80144ce:	b005      	add	sp, #20
 80144d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80144d4:	4668      	mov	r0, sp
 80144d6:	f7f0 fcdf 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80144da:	4630      	mov	r0, r6
 80144dc:	b005      	add	sp, #20
 80144de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80144e2:	bf00      	nop
 80144e4:	20000620 	.word	0x20000620

080144e8 <_Link>:
 80144e8:	b570      	push	{r4, r5, r6, lr}
 80144ea:	4c25      	ldr	r4, [pc, #148]	; (8014580 <_Link+0x98>)
 80144ec:	b084      	sub	sp, #16
 80144ee:	4605      	mov	r5, r0
 80144f0:	f7f0 fcc0 	bl	8004e74 <GUI_ALLOC_LockH>
 80144f4:	6863      	ldr	r3, [r4, #4]
 80144f6:	9001      	str	r0, [sp, #4]
 80144f8:	b933      	cbnz	r3, 8014508 <_Link+0x20>
 80144fa:	6065      	str	r5, [r4, #4]
 80144fc:	6043      	str	r3, [r0, #4]
 80144fe:	a801      	add	r0, sp, #4
 8014500:	f7f0 fcca 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014504:	b004      	add	sp, #16
 8014506:	bd70      	pop	{r4, r5, r6, pc}
 8014508:	4618      	mov	r0, r3
 801450a:	f7f0 fcb3 	bl	8004e74 <GUI_ALLOC_LockH>
 801450e:	aa04      	add	r2, sp, #16
 8014510:	6946      	ldr	r6, [r0, #20]
 8014512:	f842 0d10 	str.w	r0, [r2, #-16]!
 8014516:	4610      	mov	r0, r2
 8014518:	f7f0 fcbe 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801451c:	9a01      	ldr	r2, [sp, #4]
 801451e:	6953      	ldr	r3, [r2, #20]
 8014520:	1b9b      	subs	r3, r3, r6
 8014522:	2b00      	cmp	r3, #0
 8014524:	dd27      	ble.n	8014576 <_Link+0x8e>
 8014526:	6864      	ldr	r4, [r4, #4]
 8014528:	e011      	b.n	801454e <_Link+0x66>
 801452a:	f7f0 fca3 	bl	8004e74 <GUI_ALLOC_LockH>
 801452e:	4603      	mov	r3, r0
 8014530:	a803      	add	r0, sp, #12
 8014532:	695e      	ldr	r6, [r3, #20]
 8014534:	9303      	str	r3, [sp, #12]
 8014536:	f7f0 fcaf 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801453a:	9a01      	ldr	r2, [sp, #4]
 801453c:	6953      	ldr	r3, [r2, #20]
 801453e:	1b9b      	subs	r3, r3, r6
 8014540:	2b00      	cmp	r3, #0
 8014542:	a802      	add	r0, sp, #8
 8014544:	9b02      	ldr	r3, [sp, #8]
 8014546:	dd0d      	ble.n	8014564 <_Link+0x7c>
 8014548:	685c      	ldr	r4, [r3, #4]
 801454a:	f7f0 fca5 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801454e:	4620      	mov	r0, r4
 8014550:	f7f0 fc90 	bl	8004e74 <GUI_ALLOC_LockH>
 8014554:	6844      	ldr	r4, [r0, #4]
 8014556:	9002      	str	r0, [sp, #8]
 8014558:	4603      	mov	r3, r0
 801455a:	4620      	mov	r0, r4
 801455c:	2c00      	cmp	r4, #0
 801455e:	d1e4      	bne.n	801452a <_Link+0x42>
 8014560:	9a01      	ldr	r2, [sp, #4]
 8014562:	a802      	add	r0, sp, #8
 8014564:	6054      	str	r4, [r2, #4]
 8014566:	605d      	str	r5, [r3, #4]
 8014568:	f7f0 fc96 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801456c:	a801      	add	r0, sp, #4
 801456e:	f7f0 fc93 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014572:	b004      	add	sp, #16
 8014574:	bd70      	pop	{r4, r5, r6, pc}
 8014576:	6863      	ldr	r3, [r4, #4]
 8014578:	6053      	str	r3, [r2, #4]
 801457a:	6065      	str	r5, [r4, #4]
 801457c:	e7bf      	b.n	80144fe <_Link+0x16>
 801457e:	bf00      	nop
 8014580:	20000620 	.word	0x20000620

08014584 <GUI_TIMER__GetFirstTimer>:
 8014584:	b530      	push	{r4, r5, lr}
 8014586:	4b0a      	ldr	r3, [pc, #40]	; (80145b0 <GUI_TIMER__GetFirstTimer+0x2c>)
 8014588:	681c      	ldr	r4, [r3, #0]
 801458a:	2300      	movs	r3, #0
 801458c:	b083      	sub	sp, #12
 801458e:	6003      	str	r3, [r0, #0]
 8014590:	b15c      	cbz	r4, 80145aa <GUI_TIMER__GetFirstTimer+0x26>
 8014592:	4605      	mov	r5, r0
 8014594:	4620      	mov	r0, r4
 8014596:	f7f0 fc6d 	bl	8004e74 <GUI_ALLOC_LockH>
 801459a:	ab02      	add	r3, sp, #8
 801459c:	6902      	ldr	r2, [r0, #16]
 801459e:	f843 0d04 	str.w	r0, [r3, #-4]!
 80145a2:	602a      	str	r2, [r5, #0]
 80145a4:	4618      	mov	r0, r3
 80145a6:	f7f0 fc77 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80145aa:	4620      	mov	r0, r4
 80145ac:	b003      	add	sp, #12
 80145ae:	bd30      	pop	{r4, r5, pc}
 80145b0:	20000620 	.word	0x20000620

080145b4 <GUI_TIMER__GetNextTimerLin>:
 80145b4:	b570      	push	{r4, r5, r6, lr}
 80145b6:	2300      	movs	r3, #0
 80145b8:	b082      	sub	sp, #8
 80145ba:	600b      	str	r3, [r1, #0]
 80145bc:	b918      	cbnz	r0, 80145c6 <GUI_TIMER__GetNextTimerLin+0x12>
 80145be:	4604      	mov	r4, r0
 80145c0:	4620      	mov	r0, r4
 80145c2:	b002      	add	sp, #8
 80145c4:	bd70      	pop	{r4, r5, r6, pc}
 80145c6:	460d      	mov	r5, r1
 80145c8:	f7f0 fc54 	bl	8004e74 <GUI_ALLOC_LockH>
 80145cc:	6884      	ldr	r4, [r0, #8]
 80145ce:	9001      	str	r0, [sp, #4]
 80145d0:	ae01      	add	r6, sp, #4
 80145d2:	b92c      	cbnz	r4, 80145e0 <GUI_TIMER__GetNextTimerLin+0x2c>
 80145d4:	4630      	mov	r0, r6
 80145d6:	f7f0 fc5f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80145da:	4620      	mov	r0, r4
 80145dc:	b002      	add	sp, #8
 80145de:	bd70      	pop	{r4, r5, r6, pc}
 80145e0:	4630      	mov	r0, r6
 80145e2:	f7f0 fc59 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80145e6:	4620      	mov	r0, r4
 80145e8:	f7f0 fc44 	bl	8004e74 <GUI_ALLOC_LockH>
 80145ec:	6903      	ldr	r3, [r0, #16]
 80145ee:	9001      	str	r0, [sp, #4]
 80145f0:	602b      	str	r3, [r5, #0]
 80145f2:	e7ef      	b.n	80145d4 <GUI_TIMER__GetNextTimerLin+0x20>

080145f4 <GUI_TIMER_Create>:
 80145f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80145f8:	4680      	mov	r8, r0
 80145fa:	b082      	sub	sp, #8
 80145fc:	201c      	movs	r0, #28
 80145fe:	460d      	mov	r5, r1
 8014600:	4617      	mov	r7, r2
 8014602:	461e      	mov	r6, r3
 8014604:	f7f0 fe26 	bl	8005254 <GUI_ALLOC_AllocZero>
 8014608:	4604      	mov	r4, r0
 801460a:	b918      	cbnz	r0, 8014614 <GUI_TIMER_Create+0x20>
 801460c:	4620      	mov	r0, r4
 801460e:	b002      	add	sp, #8
 8014610:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014614:	4b18      	ldr	r3, [pc, #96]	; (8014678 <GUI_TIMER_Create+0x84>)
 8014616:	4a19      	ldr	r2, [pc, #100]	; (801467c <GUI_TIMER_Create+0x88>)
 8014618:	601a      	str	r2, [r3, #0]
 801461a:	f7f0 fc2b 	bl	8004e74 <GUI_ALLOC_LockH>
 801461e:	9000      	str	r0, [sp, #0]
 8014620:	b32d      	cbz	r5, 801466e <GUI_TIMER_Create+0x7a>
 8014622:	6145      	str	r5, [r0, #20]
 8014624:	f8c0 8000 	str.w	r8, [r0]
 8014628:	6107      	str	r7, [r0, #16]
 801462a:	8186      	strh	r6, [r0, #12]
 801462c:	4d14      	ldr	r5, [pc, #80]	; (8014680 <GUI_TIMER_Create+0x8c>)
 801462e:	4668      	mov	r0, sp
 8014630:	f7f0 fc32 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014634:	4620      	mov	r0, r4
 8014636:	f7ff ff57 	bl	80144e8 <_Link>
 801463a:	68ab      	ldr	r3, [r5, #8]
 801463c:	b93b      	cbnz	r3, 801464e <GUI_TIMER_Create+0x5a>
 801463e:	4628      	mov	r0, r5
 8014640:	4b10      	ldr	r3, [pc, #64]	; (8014684 <GUI_TIMER_Create+0x90>)
 8014642:	f840 3f0c 	str.w	r3, [r0, #12]!
 8014646:	2301      	movs	r3, #1
 8014648:	60ab      	str	r3, [r5, #8]
 801464a:	f7f1 f991 	bl	8005970 <GUI__RegisterExit>
 801464e:	4620      	mov	r0, r4
 8014650:	f7f0 fc10 	bl	8004e74 <GUI_ALLOC_LockH>
 8014654:	ab02      	add	r3, sp, #8
 8014656:	682a      	ldr	r2, [r5, #0]
 8014658:	f843 0d04 	str.w	r0, [r3, #-4]!
 801465c:	6082      	str	r2, [r0, #8]
 801465e:	4618      	mov	r0, r3
 8014660:	602c      	str	r4, [r5, #0]
 8014662:	f7f0 fc19 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014666:	4620      	mov	r0, r4
 8014668:	b002      	add	sp, #8
 801466a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801466e:	f7f1 fe53 	bl	8006318 <GUI_GetTime>
 8014672:	4605      	mov	r5, r0
 8014674:	9800      	ldr	r0, [sp, #0]
 8014676:	e7d4      	b.n	8014622 <GUI_TIMER_Create+0x2e>
 8014678:	2001c170 	.word	0x2001c170
 801467c:	0801446d 	.word	0x0801446d
 8014680:	20000620 	.word	0x20000620
 8014684:	0801445d 	.word	0x0801445d

08014688 <GUI_TIMER_Delete>:
 8014688:	b900      	cbnz	r0, 801468c <GUI_TIMER_Delete+0x4>
 801468a:	4770      	bx	lr
 801468c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014690:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8014748 <GUI_TIMER_Delete+0xc0>
 8014694:	f8d8 4000 	ldr.w	r4, [r8]
 8014698:	42a0      	cmp	r0, r4
 801469a:	b082      	sub	sp, #8
 801469c:	4605      	mov	r5, r0
 801469e:	d040      	beq.n	8014722 <GUI_TIMER_Delete+0x9a>
 80146a0:	466f      	mov	r7, sp
 80146a2:	b91c      	cbnz	r4, 80146ac <GUI_TIMER_Delete+0x24>
 80146a4:	e017      	b.n	80146d6 <GUI_TIMER_Delete+0x4e>
 80146a6:	f7f0 fbf7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80146aa:	b1a4      	cbz	r4, 80146d6 <GUI_TIMER_Delete+0x4e>
 80146ac:	4620      	mov	r0, r4
 80146ae:	f7f0 fbe1 	bl	8004e74 <GUI_ALLOC_LockH>
 80146b2:	6884      	ldr	r4, [r0, #8]
 80146b4:	9000      	str	r0, [sp, #0]
 80146b6:	42a5      	cmp	r5, r4
 80146b8:	4638      	mov	r0, r7
 80146ba:	d1f4      	bne.n	80146a6 <GUI_TIMER_Delete+0x1e>
 80146bc:	4628      	mov	r0, r5
 80146be:	f7f0 fbd9 	bl	8004e74 <GUI_ALLOC_LockH>
 80146c2:	9b00      	ldr	r3, [sp, #0]
 80146c4:	6882      	ldr	r2, [r0, #8]
 80146c6:	9001      	str	r0, [sp, #4]
 80146c8:	a801      	add	r0, sp, #4
 80146ca:	609a      	str	r2, [r3, #8]
 80146cc:	f7f0 fbe4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80146d0:	4638      	mov	r0, r7
 80146d2:	f7f0 fbe1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80146d6:	4628      	mov	r0, r5
 80146d8:	f7f0 fbcc 	bl	8004e74 <GUI_ALLOC_LockH>
 80146dc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80146e0:	9000      	str	r0, [sp, #0]
 80146e2:	42a5      	cmp	r5, r4
 80146e4:	4b18      	ldr	r3, [pc, #96]	; (8014748 <GUI_TIMER_Delete+0xc0>)
 80146e6:	d029      	beq.n	801473c <GUI_TIMER_Delete+0xb4>
 80146e8:	ae01      	add	r6, sp, #4
 80146ea:	b91c      	cbnz	r4, 80146f4 <GUI_TIMER_Delete+0x6c>
 80146ec:	e010      	b.n	8014710 <GUI_TIMER_Delete+0x88>
 80146ee:	f7f0 fbd3 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80146f2:	b16c      	cbz	r4, 8014710 <GUI_TIMER_Delete+0x88>
 80146f4:	4620      	mov	r0, r4
 80146f6:	f7f0 fbbd 	bl	8004e74 <GUI_ALLOC_LockH>
 80146fa:	6844      	ldr	r4, [r0, #4]
 80146fc:	9001      	str	r0, [sp, #4]
 80146fe:	42a5      	cmp	r5, r4
 8014700:	4603      	mov	r3, r0
 8014702:	4630      	mov	r0, r6
 8014704:	d1f3      	bne.n	80146ee <GUI_TIMER_Delete+0x66>
 8014706:	9a00      	ldr	r2, [sp, #0]
 8014708:	6852      	ldr	r2, [r2, #4]
 801470a:	605a      	str	r2, [r3, #4]
 801470c:	f7f0 fbc4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014710:	4638      	mov	r0, r7
 8014712:	f7f0 fbc1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014716:	4628      	mov	r0, r5
 8014718:	f7f0 fd36 	bl	8005188 <GUI_ALLOC_Free>
 801471c:	b002      	add	sp, #8
 801471e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014722:	f7f0 fba7 	bl	8004e74 <GUI_ALLOC_LockH>
 8014726:	ae02      	add	r6, sp, #8
 8014728:	6883      	ldr	r3, [r0, #8]
 801472a:	f846 0d04 	str.w	r0, [r6, #-4]!
 801472e:	4630      	mov	r0, r6
 8014730:	f8c8 3000 	str.w	r3, [r8]
 8014734:	466f      	mov	r7, sp
 8014736:	f7f0 fbaf 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801473a:	e7cc      	b.n	80146d6 <GUI_TIMER_Delete+0x4e>
 801473c:	6842      	ldr	r2, [r0, #4]
 801473e:	605a      	str	r2, [r3, #4]
 8014740:	4638      	mov	r0, r7
 8014742:	f7f0 fba9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014746:	e7e6      	b.n	8014716 <GUI_TIMER_Delete+0x8e>
 8014748:	20000620 	.word	0x20000620

0801474c <GUI_TIMER_SetPeriod>:
 801474c:	b900      	cbnz	r0, 8014750 <GUI_TIMER_SetPeriod+0x4>
 801474e:	4770      	bx	lr
 8014750:	b510      	push	{r4, lr}
 8014752:	b082      	sub	sp, #8
 8014754:	460c      	mov	r4, r1
 8014756:	f7f0 fb8d 	bl	8004e74 <GUI_ALLOC_LockH>
 801475a:	ab02      	add	r3, sp, #8
 801475c:	6184      	str	r4, [r0, #24]
 801475e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8014762:	4618      	mov	r0, r3
 8014764:	f7f0 fb98 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014768:	b002      	add	sp, #8
 801476a:	bd10      	pop	{r4, pc}

0801476c <GUI_TIMER_Restart>:
 801476c:	b900      	cbnz	r0, 8014770 <GUI_TIMER_Restart+0x4>
 801476e:	4770      	bx	lr
 8014770:	b530      	push	{r4, r5, lr}
 8014772:	b085      	sub	sp, #20
 8014774:	4605      	mov	r5, r0
 8014776:	f7f0 fb7d 	bl	8004e74 <GUI_ALLOC_LockH>
 801477a:	9001      	str	r0, [sp, #4]
 801477c:	f7f1 fdcc 	bl	8006318 <GUI_GetTime>
 8014780:	ab04      	add	r3, sp, #16
 8014782:	f853 1d0c 	ldr.w	r1, [r3, #-12]!
 8014786:	698a      	ldr	r2, [r1, #24]
 8014788:	4410      	add	r0, r2
 801478a:	6148      	str	r0, [r1, #20]
 801478c:	4618      	mov	r0, r3
 801478e:	f7f0 fb83 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014792:	4628      	mov	r0, r5
 8014794:	f7f0 fb6e 	bl	8004e74 <GUI_ALLOC_LockH>
 8014798:	4b12      	ldr	r3, [pc, #72]	; (80147e4 <GUI_TIMER_Restart+0x78>)
 801479a:	9002      	str	r0, [sp, #8]
 801479c:	685c      	ldr	r4, [r3, #4]
 801479e:	42a5      	cmp	r5, r4
 80147a0:	d019      	beq.n	80147d6 <GUI_TIMER_Restart+0x6a>
 80147a2:	b184      	cbz	r4, 80147c6 <GUI_TIMER_Restart+0x5a>
 80147a4:	4620      	mov	r0, r4
 80147a6:	f7f0 fb65 	bl	8004e74 <GUI_ALLOC_LockH>
 80147aa:	6844      	ldr	r4, [r0, #4]
 80147ac:	9003      	str	r0, [sp, #12]
 80147ae:	42a5      	cmp	r5, r4
 80147b0:	4603      	mov	r3, r0
 80147b2:	a803      	add	r0, sp, #12
 80147b4:	d002      	beq.n	80147bc <GUI_TIMER_Restart+0x50>
 80147b6:	f7f0 fb6f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80147ba:	e7f2      	b.n	80147a2 <GUI_TIMER_Restart+0x36>
 80147bc:	9a02      	ldr	r2, [sp, #8]
 80147be:	6852      	ldr	r2, [r2, #4]
 80147c0:	605a      	str	r2, [r3, #4]
 80147c2:	f7f0 fb69 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80147c6:	a802      	add	r0, sp, #8
 80147c8:	f7f0 fb66 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80147cc:	4628      	mov	r0, r5
 80147ce:	f7ff fe8b 	bl	80144e8 <_Link>
 80147d2:	b005      	add	sp, #20
 80147d4:	bd30      	pop	{r4, r5, pc}
 80147d6:	6842      	ldr	r2, [r0, #4]
 80147d8:	605a      	str	r2, [r3, #4]
 80147da:	a802      	add	r0, sp, #8
 80147dc:	f7f0 fb5c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80147e0:	e7f4      	b.n	80147cc <GUI_TIMER_Restart+0x60>
 80147e2:	bf00      	nop
 80147e4:	20000620 	.word	0x20000620

080147e8 <GUI_TIMER_GetFlag>:
 80147e8:	b510      	push	{r4, lr}
 80147ea:	b082      	sub	sp, #8
 80147ec:	b918      	cbnz	r0, 80147f6 <GUI_TIMER_GetFlag+0xe>
 80147ee:	2401      	movs	r4, #1
 80147f0:	4620      	mov	r0, r4
 80147f2:	b002      	add	sp, #8
 80147f4:	bd10      	pop	{r4, pc}
 80147f6:	460c      	mov	r4, r1
 80147f8:	f7f0 fb3c 	bl	8004e74 <GUI_ALLOC_LockH>
 80147fc:	ab02      	add	r3, sp, #8
 80147fe:	8982      	ldrh	r2, [r0, #12]
 8014800:	f843 0d04 	str.w	r0, [r3, #-4]!
 8014804:	4222      	tst	r2, r4
 8014806:	4618      	mov	r0, r3
 8014808:	bf14      	ite	ne
 801480a:	2401      	movne	r4, #1
 801480c:	2400      	moveq	r4, #0
 801480e:	f7f0 fb43 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014812:	4620      	mov	r0, r4
 8014814:	b002      	add	sp, #8
 8014816:	bd10      	pop	{r4, pc}

08014818 <GUI__CompactPixelIndices>:
 8014818:	2a08      	cmp	r2, #8
 801481a:	b410      	push	{r4}
 801481c:	dd0e      	ble.n	801483c <GUI__CompactPixelIndices+0x24>
 801481e:	2a10      	cmp	r2, #16
 8014820:	dc1c      	bgt.n	801485c <GUI__CompactPixelIndices+0x44>
 8014822:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014826:	4603      	mov	r3, r0
 8014828:	f850 2b04 	ldr.w	r2, [r0], #4
 801482c:	f823 2b02 	strh.w	r2, [r3], #2
 8014830:	4299      	cmp	r1, r3
 8014832:	d1f9      	bne.n	8014828 <GUI__CompactPixelIndices+0x10>
 8014834:	2001      	movs	r0, #1
 8014836:	f85d 4b04 	ldr.w	r4, [sp], #4
 801483a:	4770      	bx	lr
 801483c:	2a02      	cmp	r2, #2
 801483e:	d011      	beq.n	8014864 <GUI__CompactPixelIndices+0x4c>
 8014840:	2a04      	cmp	r2, #4
 8014842:	f000 8090 	beq.w	8014966 <GUI__CompactPixelIndices+0x14e>
 8014846:	2a01      	cmp	r2, #1
 8014848:	d03c      	beq.n	80148c4 <GUI__CompactPixelIndices+0xac>
 801484a:	4401      	add	r1, r0
 801484c:	4603      	mov	r3, r0
 801484e:	f850 2b04 	ldr.w	r2, [r0], #4
 8014852:	f803 2b01 	strb.w	r2, [r3], #1
 8014856:	4299      	cmp	r1, r3
 8014858:	d1f9      	bne.n	801484e <GUI__CompactPixelIndices+0x36>
 801485a:	e7eb      	b.n	8014834 <GUI__CompactPixelIndices+0x1c>
 801485c:	2000      	movs	r0, #0
 801485e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014862:	4770      	bx	lr
 8014864:	f100 0210 	add.w	r2, r0, #16
 8014868:	f852 3c10 	ldr.w	r3, [r2, #-16]
 801486c:	2901      	cmp	r1, #1
 801486e:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8014872:	b2db      	uxtb	r3, r3
 8014874:	d023      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 8014876:	f852 4c0c 	ldr.w	r4, [r2, #-12]
 801487a:	0124      	lsls	r4, r4, #4
 801487c:	f004 0430 	and.w	r4, r4, #48	; 0x30
 8014880:	2902      	cmp	r1, #2
 8014882:	ea43 0304 	orr.w	r3, r3, r4
 8014886:	d01a      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 8014888:	f852 4c08 	ldr.w	r4, [r2, #-8]
 801488c:	00a4      	lsls	r4, r4, #2
 801488e:	f004 040c 	and.w	r4, r4, #12
 8014892:	2903      	cmp	r1, #3
 8014894:	ea43 0304 	orr.w	r3, r3, r4
 8014898:	d011      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 801489a:	f852 4c04 	ldr.w	r4, [r2, #-4]
 801489e:	f004 0403 	and.w	r4, r4, #3
 80148a2:	4323      	orrs	r3, r4
 80148a4:	3904      	subs	r1, #4
 80148a6:	f800 3b01 	strb.w	r3, [r0], #1
 80148aa:	f102 0210 	add.w	r2, r2, #16
 80148ae:	d0c1      	beq.n	8014834 <GUI__CompactPixelIndices+0x1c>
 80148b0:	f852 3c10 	ldr.w	r3, [r2, #-16]
 80148b4:	2901      	cmp	r1, #1
 80148b6:	ea4f 1383 	mov.w	r3, r3, lsl #6
 80148ba:	b2db      	uxtb	r3, r3
 80148bc:	d1db      	bne.n	8014876 <GUI__CompactPixelIndices+0x5e>
 80148be:	7003      	strb	r3, [r0, #0]
 80148c0:	2001      	movs	r0, #1
 80148c2:	e7b8      	b.n	8014836 <GUI__CompactPixelIndices+0x1e>
 80148c4:	f100 0220 	add.w	r2, r0, #32
 80148c8:	f852 3c20 	ldr.w	r3, [r2, #-32]
 80148cc:	2901      	cmp	r1, #1
 80148ce:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 80148d2:	b2db      	uxtb	r3, r3
 80148d4:	d0f3      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 80148d6:	f852 4c1c 	ldr.w	r4, [r2, #-28]
 80148da:	01a4      	lsls	r4, r4, #6
 80148dc:	f004 0440 	and.w	r4, r4, #64	; 0x40
 80148e0:	2902      	cmp	r1, #2
 80148e2:	ea43 0304 	orr.w	r3, r3, r4
 80148e6:	d0ea      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 80148e8:	f852 4c18 	ldr.w	r4, [r2, #-24]
 80148ec:	0164      	lsls	r4, r4, #5
 80148ee:	f004 0420 	and.w	r4, r4, #32
 80148f2:	2903      	cmp	r1, #3
 80148f4:	ea43 0304 	orr.w	r3, r3, r4
 80148f8:	d0e1      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 80148fa:	f852 4c14 	ldr.w	r4, [r2, #-20]
 80148fe:	0124      	lsls	r4, r4, #4
 8014900:	f004 0410 	and.w	r4, r4, #16
 8014904:	2904      	cmp	r1, #4
 8014906:	ea43 0304 	orr.w	r3, r3, r4
 801490a:	d0d8      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 801490c:	f852 4c10 	ldr.w	r4, [r2, #-16]
 8014910:	00e4      	lsls	r4, r4, #3
 8014912:	f004 0408 	and.w	r4, r4, #8
 8014916:	2905      	cmp	r1, #5
 8014918:	ea43 0304 	orr.w	r3, r3, r4
 801491c:	d0cf      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 801491e:	f852 4c0c 	ldr.w	r4, [r2, #-12]
 8014922:	00a4      	lsls	r4, r4, #2
 8014924:	f004 0404 	and.w	r4, r4, #4
 8014928:	2906      	cmp	r1, #6
 801492a:	ea43 0304 	orr.w	r3, r3, r4
 801492e:	d0c6      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 8014930:	f852 4c08 	ldr.w	r4, [r2, #-8]
 8014934:	0064      	lsls	r4, r4, #1
 8014936:	f004 0402 	and.w	r4, r4, #2
 801493a:	3907      	subs	r1, #7
 801493c:	ea43 0304 	orr.w	r3, r3, r4
 8014940:	f102 0220 	add.w	r2, r2, #32
 8014944:	d0bb      	beq.n	80148be <GUI__CompactPixelIndices+0xa6>
 8014946:	f852 4c24 	ldr.w	r4, [r2, #-36]
 801494a:	f004 0401 	and.w	r4, r4, #1
 801494e:	4323      	orrs	r3, r4
 8014950:	f800 3b01 	strb.w	r3, [r0], #1
 8014954:	f852 3c20 	ldr.w	r3, [r2, #-32]
 8014958:	2901      	cmp	r1, #1
 801495a:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 801495e:	b2db      	uxtb	r3, r3
 8014960:	d1b9      	bne.n	80148d6 <GUI__CompactPixelIndices+0xbe>
 8014962:	7003      	strb	r3, [r0, #0]
 8014964:	e7ac      	b.n	80148c0 <GUI__CompactPixelIndices+0xa8>
 8014966:	f100 0408 	add.w	r4, r0, #8
 801496a:	f854 3c08 	ldr.w	r3, [r4, #-8]
 801496e:	2901      	cmp	r1, #1
 8014970:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8014974:	b2db      	uxtb	r3, r3
 8014976:	d012      	beq.n	801499e <GUI__CompactPixelIndices+0x186>
 8014978:	f854 2c04 	ldr.w	r2, [r4, #-4]
 801497c:	f002 020f 	and.w	r2, r2, #15
 8014980:	4313      	orrs	r3, r2
 8014982:	3902      	subs	r1, #2
 8014984:	f800 3b01 	strb.w	r3, [r0], #1
 8014988:	f104 0408 	add.w	r4, r4, #8
 801498c:	f43f af52 	beq.w	8014834 <GUI__CompactPixelIndices+0x1c>
 8014990:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8014994:	2901      	cmp	r1, #1
 8014996:	ea4f 1303 	mov.w	r3, r3, lsl #4
 801499a:	b2db      	uxtb	r3, r3
 801499c:	d1ec      	bne.n	8014978 <GUI__CompactPixelIndices+0x160>
 801499e:	7003      	strb	r3, [r0, #0]
 80149a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80149a4:	4608      	mov	r0, r1
 80149a6:	4770      	bx	lr

080149a8 <GUI__CompactPixelIndicesEx>:
 80149a8:	2a08      	cmp	r2, #8
 80149aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80149ae:	460c      	mov	r4, r1
 80149b0:	681f      	ldr	r7, [r3, #0]
 80149b2:	4605      	mov	r5, r0
 80149b4:	dd0c      	ble.n	80149d0 <GUI__CompactPixelIndicesEx+0x28>
 80149b6:	2a10      	cmp	r2, #16
 80149b8:	dc21      	bgt.n	80149fe <GUI__CompactPixelIndicesEx+0x56>
 80149ba:	691e      	ldr	r6, [r3, #16]
 80149bc:	2e00      	cmp	r6, #0
 80149be:	f000 8091 	beq.w	8014ae4 <GUI__CompactPixelIndicesEx+0x13c>
 80149c2:	4622      	mov	r2, r4
 80149c4:	4629      	mov	r1, r5
 80149c6:	2302      	movs	r3, #2
 80149c8:	47b0      	blx	r6
 80149ca:	2001      	movs	r0, #1
 80149cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80149d0:	3a01      	subs	r2, #1
 80149d2:	2a07      	cmp	r2, #7
 80149d4:	d810      	bhi.n	80149f8 <GUI__CompactPixelIndicesEx+0x50>
 80149d6:	e8df f002 	tbb	[pc, r2]
 80149da:	5104      	.short	0x5104
 80149dc:	0f0f770f 	.word	0x0f0f770f
 80149e0:	9a0f      	.short	0x9a0f
 80149e2:	f100 0820 	add.w	r8, r0, #32
 80149e6:	f858 0c20 	ldr.w	r0, [r8, #-32]
 80149ea:	47b8      	blx	r7
 80149ec:	2c01      	cmp	r4, #1
 80149ee:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 80149f2:	b2c6      	uxtb	r6, r0
 80149f4:	d106      	bne.n	8014a04 <GUI__CompactPixelIndicesEx+0x5c>
 80149f6:	702e      	strb	r6, [r5, #0]
 80149f8:	2001      	movs	r0, #1
 80149fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80149fe:	2000      	movs	r0, #0
 8014a00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014a04:	f858 0c1c 	ldr.w	r0, [r8, #-28]
 8014a08:	47b8      	blx	r7
 8014a0a:	2c02      	cmp	r4, #2
 8014a0c:	ea46 1080 	orr.w	r0, r6, r0, lsl #6
 8014a10:	b2c6      	uxtb	r6, r0
 8014a12:	d0f0      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014a14:	f858 0c18 	ldr.w	r0, [r8, #-24]
 8014a18:	47b8      	blx	r7
 8014a1a:	2c03      	cmp	r4, #3
 8014a1c:	ea46 1040 	orr.w	r0, r6, r0, lsl #5
 8014a20:	b2c6      	uxtb	r6, r0
 8014a22:	d0e8      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014a24:	f858 0c14 	ldr.w	r0, [r8, #-20]
 8014a28:	47b8      	blx	r7
 8014a2a:	2c04      	cmp	r4, #4
 8014a2c:	ea46 1000 	orr.w	r0, r6, r0, lsl #4
 8014a30:	b2c6      	uxtb	r6, r0
 8014a32:	d0e0      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014a34:	f858 0c10 	ldr.w	r0, [r8, #-16]
 8014a38:	47b8      	blx	r7
 8014a3a:	2c05      	cmp	r4, #5
 8014a3c:	ea46 00c0 	orr.w	r0, r6, r0, lsl #3
 8014a40:	b2c6      	uxtb	r6, r0
 8014a42:	d0d8      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014a44:	f858 0c0c 	ldr.w	r0, [r8, #-12]
 8014a48:	47b8      	blx	r7
 8014a4a:	2c06      	cmp	r4, #6
 8014a4c:	ea46 0080 	orr.w	r0, r6, r0, lsl #2
 8014a50:	b2c6      	uxtb	r6, r0
 8014a52:	d0d0      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014a54:	f858 0c08 	ldr.w	r0, [r8, #-8]
 8014a58:	47b8      	blx	r7
 8014a5a:	2c07      	cmp	r4, #7
 8014a5c:	ea46 0040 	orr.w	r0, r6, r0, lsl #1
 8014a60:	b2c6      	uxtb	r6, r0
 8014a62:	d0c8      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014a64:	f858 0c04 	ldr.w	r0, [r8, #-4]
 8014a68:	47b8      	blx	r7
 8014a6a:	3c08      	subs	r4, #8
 8014a6c:	ea40 0006 	orr.w	r0, r0, r6
 8014a70:	f805 0b01 	strb.w	r0, [r5], #1
 8014a74:	f108 0820 	add.w	r8, r8, #32
 8014a78:	d1b5      	bne.n	80149e6 <GUI__CompactPixelIndicesEx+0x3e>
 8014a7a:	e7bd      	b.n	80149f8 <GUI__CompactPixelIndicesEx+0x50>
 8014a7c:	f100 0810 	add.w	r8, r0, #16
 8014a80:	f858 0c10 	ldr.w	r0, [r8, #-16]
 8014a84:	47b8      	blx	r7
 8014a86:	2c01      	cmp	r4, #1
 8014a88:	ea4f 1080 	mov.w	r0, r0, lsl #6
 8014a8c:	b2c6      	uxtb	r6, r0
 8014a8e:	d0b2      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014a90:	f858 0c0c 	ldr.w	r0, [r8, #-12]
 8014a94:	47b8      	blx	r7
 8014a96:	2c02      	cmp	r4, #2
 8014a98:	ea46 1000 	orr.w	r0, r6, r0, lsl #4
 8014a9c:	b2c6      	uxtb	r6, r0
 8014a9e:	d0aa      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014aa0:	f858 0c08 	ldr.w	r0, [r8, #-8]
 8014aa4:	47b8      	blx	r7
 8014aa6:	2c03      	cmp	r4, #3
 8014aa8:	ea46 0080 	orr.w	r0, r6, r0, lsl #2
 8014aac:	b2c6      	uxtb	r6, r0
 8014aae:	d0a2      	beq.n	80149f6 <GUI__CompactPixelIndicesEx+0x4e>
 8014ab0:	f858 0c04 	ldr.w	r0, [r8, #-4]
 8014ab4:	47b8      	blx	r7
 8014ab6:	3c04      	subs	r4, #4
 8014ab8:	ea40 0006 	orr.w	r0, r0, r6
 8014abc:	f805 0b01 	strb.w	r0, [r5], #1
 8014ac0:	f108 0810 	add.w	r8, r8, #16
 8014ac4:	d1dc      	bne.n	8014a80 <GUI__CompactPixelIndicesEx+0xd8>
 8014ac6:	e797      	b.n	80149f8 <GUI__CompactPixelIndicesEx+0x50>
 8014ac8:	f100 0808 	add.w	r8, r0, #8
 8014acc:	f858 0c08 	ldr.w	r0, [r8, #-8]
 8014ad0:	47b8      	blx	r7
 8014ad2:	2c01      	cmp	r4, #1
 8014ad4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8014ad8:	b2c6      	uxtb	r6, r0
 8014ada:	d10c      	bne.n	8014af6 <GUI__CompactPixelIndicesEx+0x14e>
 8014adc:	702e      	strb	r6, [r5, #0]
 8014ade:	4620      	mov	r0, r4
 8014ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014ae4:	1e86      	subs	r6, r0, #2
 8014ae6:	f855 0b04 	ldr.w	r0, [r5], #4
 8014aea:	47b8      	blx	r7
 8014aec:	3c01      	subs	r4, #1
 8014aee:	f826 0f02 	strh.w	r0, [r6, #2]!
 8014af2:	d1f8      	bne.n	8014ae6 <GUI__CompactPixelIndicesEx+0x13e>
 8014af4:	e780      	b.n	80149f8 <GUI__CompactPixelIndicesEx+0x50>
 8014af6:	f858 0c04 	ldr.w	r0, [r8, #-4]
 8014afa:	47b8      	blx	r7
 8014afc:	3c02      	subs	r4, #2
 8014afe:	ea40 0006 	orr.w	r0, r0, r6
 8014b02:	f805 0b01 	strb.w	r0, [r5], #1
 8014b06:	f108 0808 	add.w	r8, r8, #8
 8014b0a:	d1df      	bne.n	8014acc <GUI__CompactPixelIndicesEx+0x124>
 8014b0c:	e774      	b.n	80149f8 <GUI__CompactPixelIndicesEx+0x50>
 8014b0e:	691e      	ldr	r6, [r3, #16]
 8014b10:	b13e      	cbz	r6, 8014b22 <GUI__CompactPixelIndicesEx+0x17a>
 8014b12:	4628      	mov	r0, r5
 8014b14:	4622      	mov	r2, r4
 8014b16:	2301      	movs	r3, #1
 8014b18:	4629      	mov	r1, r5
 8014b1a:	47b0      	blx	r6
 8014b1c:	2001      	movs	r0, #1
 8014b1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014b22:	1e6e      	subs	r6, r5, #1
 8014b24:	f855 0b04 	ldr.w	r0, [r5], #4
 8014b28:	47b8      	blx	r7
 8014b2a:	3c01      	subs	r4, #1
 8014b2c:	f806 0f01 	strb.w	r0, [r6, #1]!
 8014b30:	d1f8      	bne.n	8014b24 <GUI__CompactPixelIndicesEx+0x17c>
 8014b32:	e761      	b.n	80149f8 <GUI__CompactPixelIndicesEx+0x50>

08014b34 <GUI__DrawTwinArc4>:
 8014b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b38:	4c9f      	ldr	r4, [pc, #636]	; (8014db8 <GUI__DrawTwinArc4+0x284>)
 8014b3a:	6825      	ldr	r5, [r4, #0]
 8014b3c:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 8014b3e:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 8014b40:	b093      	sub	sp, #76	; 0x4c
 8014b42:	1820      	adds	r0, r4, r0
 8014b44:	18a2      	adds	r2, r4, r2
 8014b46:	4606      	mov	r6, r0
 8014b48:	18eb      	adds	r3, r5, r3
 8014b4a:	9009      	str	r0, [sp, #36]	; 0x24
 8014b4c:	186c      	adds	r4, r5, r1
 8014b4e:	a810      	add	r0, sp, #64	; 0x40
 8014b50:	920a      	str	r2, [sp, #40]	; 0x28
 8014b52:	930b      	str	r3, [sp, #44]	; 0x2c
 8014b54:	f8ad 6040 	strh.w	r6, [sp, #64]	; 0x40
 8014b58:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8014b5c:	f8ad 4042 	strh.w	r4, [sp, #66]	; 0x42
 8014b60:	f8ad 3046 	strh.w	r3, [sp, #70]	; 0x46
 8014b64:	f7f7 fe38 	bl	800c7d8 <WM__InitIVRSearch>
 8014b68:	2800      	cmp	r0, #0
 8014b6a:	d07e      	beq.n	8014c6a <GUI__DrawTwinArc4+0x136>
 8014b6c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014b6e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014b70:	3b01      	subs	r3, #1
 8014b72:	fb02 f202 	mul.w	r2, r2, r2
 8014b76:	9302      	str	r3, [sp, #8]
 8014b78:	fb03 f303 	mul.w	r3, r3, r3
 8014b7c:	9308      	str	r3, [sp, #32]
 8014b7e:	1ad3      	subs	r3, r2, r3
 8014b80:	930d      	str	r3, [sp, #52]	; 0x34
 8014b82:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014b84:	9203      	str	r2, [sp, #12]
 8014b86:	3b02      	subs	r3, #2
 8014b88:	9304      	str	r3, [sp, #16]
 8014b8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014b8c:	3b03      	subs	r3, #3
 8014b8e:	930f      	str	r3, [sp, #60]	; 0x3c
 8014b90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014b92:	18e3      	adds	r3, r4, r3
 8014b94:	930c      	str	r3, [sp, #48]	; 0x30
 8014b96:	1ca3      	adds	r3, r4, #2
 8014b98:	930e      	str	r3, [sp, #56]	; 0x38
 8014b9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014b9c:	2b00      	cmp	r3, #0
 8014b9e:	dd60      	ble.n	8014c62 <GUI__DrawTwinArc4+0x12e>
 8014ba0:	981d      	ldr	r0, [sp, #116]	; 0x74
 8014ba2:	f7f0 fcff 	bl	80055a4 <GUI_SetColor>
 8014ba6:	9b02      	ldr	r3, [sp, #8]
 8014ba8:	2b00      	cmp	r3, #0
 8014baa:	d061      	beq.n	8014c70 <GUI__DrawTwinArc4+0x13c>
 8014bac:	461d      	mov	r5, r3
 8014bae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014bb0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014bb2:	461a      	mov	r2, r3
 8014bb4:	ebc5 0802 	rsb	r8, r5, r2
 8014bb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014bba:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014bbc:	1a9b      	subs	r3, r3, r2
 8014bbe:	461a      	mov	r2, r3
 8014bc0:	9306      	str	r3, [sp, #24]
 8014bc2:	462b      	mov	r3, r5
 8014bc4:	4413      	add	r3, r2
 8014bc6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014bc8:	9305      	str	r3, [sp, #20]
 8014bca:	ebc8 0202 	rsb	r2, r8, r2
 8014bce:	9207      	str	r2, [sp, #28]
 8014bd0:	4699      	mov	r9, r3
 8014bd2:	f7f2 f867 	bl	8006ca4 <GUI__sqrt32>
 8014bd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014bd8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014bda:	eb03 0b02 	add.w	fp, r3, r2
 8014bde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014be0:	4606      	mov	r6, r0
 8014be2:	ebc2 0a03 	rsb	sl, r2, r3
 8014be6:	2000      	movs	r0, #0
 8014be8:	ebc0 070b 	rsb	r7, r0, fp
 8014bec:	ebc6 030b 	rsb	r3, r6, fp
 8014bf0:	3f01      	subs	r7, #1
 8014bf2:	4450      	add	r0, sl
 8014bf4:	1c44      	adds	r4, r0, #1
 8014bf6:	4641      	mov	r1, r8
 8014bf8:	4618      	mov	r0, r3
 8014bfa:	463a      	mov	r2, r7
 8014bfc:	4456      	add	r6, sl
 8014bfe:	9301      	str	r3, [sp, #4]
 8014c00:	f7f2 fa96 	bl	8007130 <LCD_DrawHLine>
 8014c04:	4641      	mov	r1, r8
 8014c06:	4620      	mov	r0, r4
 8014c08:	4632      	mov	r2, r6
 8014c0a:	f7f2 fa91 	bl	8007130 <LCD_DrawHLine>
 8014c0e:	9b01      	ldr	r3, [sp, #4]
 8014c10:	4649      	mov	r1, r9
 8014c12:	4618      	mov	r0, r3
 8014c14:	463a      	mov	r2, r7
 8014c16:	f7f2 fa8b 	bl	8007130 <LCD_DrawHLine>
 8014c1a:	4620      	mov	r0, r4
 8014c1c:	4632      	mov	r2, r6
 8014c1e:	4649      	mov	r1, r9
 8014c20:	f7f2 fa86 	bl	8007130 <LCD_DrawHLine>
 8014c24:	9a04      	ldr	r2, [sp, #16]
 8014c26:	9b06      	ldr	r3, [sp, #24]
 8014c28:	4413      	add	r3, r2
 8014c2a:	9a05      	ldr	r2, [sp, #20]
 8014c2c:	1a9b      	subs	r3, r3, r2
 8014c2e:	3d01      	subs	r5, #1
 8014c30:	9a03      	ldr	r2, [sp, #12]
 8014c32:	4499      	add	r9, r3
 8014c34:	9b07      	ldr	r3, [sp, #28]
 8014c36:	fb05 f405 	mul.w	r4, r5, r5
 8014c3a:	eba2 0004 	sub.w	r0, r2, r4
 8014c3e:	4498      	add	r8, r3
 8014c40:	d016      	beq.n	8014c70 <GUI__DrawTwinArc4+0x13c>
 8014c42:	f7f2 f82f 	bl	8006ca4 <GUI__sqrt32>
 8014c46:	9b02      	ldr	r3, [sp, #8]
 8014c48:	42ab      	cmp	r3, r5
 8014c4a:	4606      	mov	r6, r0
 8014c4c:	dc01      	bgt.n	8014c52 <GUI__DrawTwinArc4+0x11e>
 8014c4e:	2000      	movs	r0, #0
 8014c50:	e7ca      	b.n	8014be8 <GUI__DrawTwinArc4+0xb4>
 8014c52:	9b08      	ldr	r3, [sp, #32]
 8014c54:	1b18      	subs	r0, r3, r4
 8014c56:	f7f2 f825 	bl	8006ca4 <GUI__sqrt32>
 8014c5a:	e7c5      	b.n	8014be8 <GUI__DrawTwinArc4+0xb4>
 8014c5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014c5e:	2b02      	cmp	r3, #2
 8014c60:	d15d      	bne.n	8014d1e <GUI__DrawTwinArc4+0x1ea>
 8014c62:	f7f7 fc93 	bl	800c58c <WM__GetNextIVR>
 8014c66:	2800      	cmp	r0, #0
 8014c68:	d197      	bne.n	8014b9a <GUI__DrawTwinArc4+0x66>
 8014c6a:	b013      	add	sp, #76	; 0x4c
 8014c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c70:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014c72:	2b01      	cmp	r3, #1
 8014c74:	d0f5      	beq.n	8014c62 <GUI__DrawTwinArc4+0x12e>
 8014c76:	981e      	ldr	r0, [sp, #120]	; 0x78
 8014c78:	f7f0 fc94 	bl	80055a4 <GUI_SetColor>
 8014c7c:	9b04      	ldr	r3, [sp, #16]
 8014c7e:	2b00      	cmp	r3, #0
 8014c80:	d0ec      	beq.n	8014c5c <GUI__DrawTwinArc4+0x128>
 8014c82:	461d      	mov	r5, r3
 8014c84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014c86:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014c88:	f1c3 0802 	rsb	r8, r3, #2
 8014c8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c8e:	4498      	add	r8, r3
 8014c90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c92:	1a9b      	subs	r3, r3, r2
 8014c94:	9305      	str	r3, [sp, #20]
 8014c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c98:	eb03 0b02 	add.w	fp, r3, r2
 8014c9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c9e:	ebc2 0a03 	rsb	sl, r2, r3
 8014ca2:	e023      	b.n	8014cec <GUI__DrawTwinArc4+0x1b8>
 8014ca4:	4620      	mov	r0, r4
 8014ca6:	ebc4 070b 	rsb	r7, r4, fp
 8014caa:	ebc0 030b 	rsb	r3, r0, fp
 8014cae:	3f01      	subs	r7, #1
 8014cb0:	4454      	add	r4, sl
 8014cb2:	eb00 060a 	add.w	r6, r0, sl
 8014cb6:	4641      	mov	r1, r8
 8014cb8:	4618      	mov	r0, r3
 8014cba:	3401      	adds	r4, #1
 8014cbc:	463a      	mov	r2, r7
 8014cbe:	9301      	str	r3, [sp, #4]
 8014cc0:	f7f2 fa36 	bl	8007130 <LCD_DrawHLine>
 8014cc4:	4641      	mov	r1, r8
 8014cc6:	4632      	mov	r2, r6
 8014cc8:	4620      	mov	r0, r4
 8014cca:	f7f2 fa31 	bl	8007130 <LCD_DrawHLine>
 8014cce:	9b01      	ldr	r3, [sp, #4]
 8014cd0:	463a      	mov	r2, r7
 8014cd2:	4618      	mov	r0, r3
 8014cd4:	4649      	mov	r1, r9
 8014cd6:	f7f2 fa2b 	bl	8007130 <LCD_DrawHLine>
 8014cda:	4632      	mov	r2, r6
 8014cdc:	4649      	mov	r1, r9
 8014cde:	4620      	mov	r0, r4
 8014ce0:	f7f2 fa26 	bl	8007130 <LCD_DrawHLine>
 8014ce4:	3d01      	subs	r5, #1
 8014ce6:	f108 0801 	add.w	r8, r8, #1
 8014cea:	d0b7      	beq.n	8014c5c <GUI__DrawTwinArc4+0x128>
 8014cec:	9b03      	ldr	r3, [sp, #12]
 8014cee:	fb05 f605 	mul.w	r6, r5, r5
 8014cf2:	1b98      	subs	r0, r3, r6
 8014cf4:	9b05      	ldr	r3, [sp, #20]
 8014cf6:	eb05 0903 	add.w	r9, r5, r3
 8014cfa:	f7f1 ffd3 	bl	8006ca4 <GUI__sqrt32>
 8014cfe:	9b02      	ldr	r3, [sp, #8]
 8014d00:	42ab      	cmp	r3, r5
 8014d02:	f04f 0400 	mov.w	r4, #0
 8014d06:	ddcd      	ble.n	8014ca4 <GUI__DrawTwinArc4+0x170>
 8014d08:	9b08      	ldr	r3, [sp, #32]
 8014d0a:	1b98      	subs	r0, r3, r6
 8014d0c:	f7f1 ffca 	bl	8006ca4 <GUI__sqrt32>
 8014d10:	9b04      	ldr	r3, [sp, #16]
 8014d12:	42ab      	cmp	r3, r5
 8014d14:	dd01      	ble.n	8014d1a <GUI__DrawTwinArc4+0x1e6>
 8014d16:	1e44      	subs	r4, r0, #1
 8014d18:	e7c5      	b.n	8014ca6 <GUI__DrawTwinArc4+0x172>
 8014d1a:	2400      	movs	r4, #0
 8014d1c:	e7c3      	b.n	8014ca6 <GUI__DrawTwinArc4+0x172>
 8014d1e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8014d20:	f7f0 fc40 	bl	80055a4 <GUI_SetColor>
 8014d24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014d26:	2b00      	cmp	r3, #0
 8014d28:	d09b      	beq.n	8014c62 <GUI__DrawTwinArc4+0x12e>
 8014d2a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8014d2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014d2e:	eb02 0b01 	add.w	fp, r2, r1
 8014d32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014d34:	1a52      	subs	r2, r2, r1
 8014d36:	9205      	str	r2, [sp, #20]
 8014d38:	f102 0801 	add.w	r8, r2, #1
 8014d3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014d3e:	f1c1 0603 	rsb	r6, r1, #3
 8014d42:	4416      	add	r6, r2
 8014d44:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014d46:	1a52      	subs	r2, r2, r1
 8014d48:	f10b 39ff 	add.w	r9, fp, #4294967295
 8014d4c:	9201      	str	r2, [sp, #4]
 8014d4e:	461c      	mov	r4, r3
 8014d50:	e01d      	b.n	8014d8e <GUI__DrawTwinArc4+0x25a>
 8014d52:	2500      	movs	r5, #0
 8014d54:	9b05      	ldr	r3, [sp, #20]
 8014d56:	ebc5 0a0b 	rsb	sl, r5, fp
 8014d5a:	4631      	mov	r1, r6
 8014d5c:	441d      	add	r5, r3
 8014d5e:	4650      	mov	r0, sl
 8014d60:	464a      	mov	r2, r9
 8014d62:	f7f2 f9e5 	bl	8007130 <LCD_DrawHLine>
 8014d66:	4631      	mov	r1, r6
 8014d68:	462a      	mov	r2, r5
 8014d6a:	4640      	mov	r0, r8
 8014d6c:	f7f2 f9e0 	bl	8007130 <LCD_DrawHLine>
 8014d70:	464a      	mov	r2, r9
 8014d72:	4639      	mov	r1, r7
 8014d74:	4650      	mov	r0, sl
 8014d76:	f7f2 f9db 	bl	8007130 <LCD_DrawHLine>
 8014d7a:	462a      	mov	r2, r5
 8014d7c:	4639      	mov	r1, r7
 8014d7e:	4640      	mov	r0, r8
 8014d80:	f7f2 f9d6 	bl	8007130 <LCD_DrawHLine>
 8014d84:	3c01      	subs	r4, #1
 8014d86:	f106 0601 	add.w	r6, r6, #1
 8014d8a:	f43f af6a 	beq.w	8014c62 <GUI__DrawTwinArc4+0x12e>
 8014d8e:	9b03      	ldr	r3, [sp, #12]
 8014d90:	fb04 f504 	mul.w	r5, r4, r4
 8014d94:	1b58      	subs	r0, r3, r5
 8014d96:	9b01      	ldr	r3, [sp, #4]
 8014d98:	191f      	adds	r7, r3, r4
 8014d9a:	f7f1 ff83 	bl	8006ca4 <GUI__sqrt32>
 8014d9e:	9b02      	ldr	r3, [sp, #8]
 8014da0:	42a3      	cmp	r3, r4
 8014da2:	ddd6      	ble.n	8014d52 <GUI__DrawTwinArc4+0x21e>
 8014da4:	9b08      	ldr	r3, [sp, #32]
 8014da6:	1b58      	subs	r0, r3, r5
 8014da8:	f7f1 ff7c 	bl	8006ca4 <GUI__sqrt32>
 8014dac:	9b04      	ldr	r3, [sp, #16]
 8014dae:	42a3      	cmp	r3, r4
 8014db0:	ddcf      	ble.n	8014d52 <GUI__DrawTwinArc4+0x21e>
 8014db2:	1e45      	subs	r5, r0, #1
 8014db4:	e7ce      	b.n	8014d54 <GUI__DrawTwinArc4+0x220>
 8014db6:	bf00      	nop
 8014db8:	20000018 	.word	0x20000018

08014dbc <GUI__ManageCache>:
 8014dbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014dc0:	4b39      	ldr	r3, [pc, #228]	; (8014ea8 <GUI__ManageCache+0xec>)
 8014dc2:	681b      	ldr	r3, [r3, #0]
 8014dc4:	7c5d      	ldrb	r5, [r3, #17]
 8014dc6:	2d01      	cmp	r5, #1
 8014dc8:	b082      	sub	sp, #8
 8014dca:	dd03      	ble.n	8014dd4 <GUI__ManageCache+0x18>
 8014dcc:	2001      	movs	r0, #1
 8014dce:	b002      	add	sp, #8
 8014dd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014dd4:	4e35      	ldr	r6, [pc, #212]	; (8014eac <GUI__ManageCache+0xf0>)
 8014dd6:	6873      	ldr	r3, [r6, #4]
 8014dd8:	4604      	mov	r4, r0
 8014dda:	b113      	cbz	r3, 8014de2 <GUI__ManageCache+0x26>
 8014ddc:	4601      	mov	r1, r0
 8014dde:	4628      	mov	r0, r5
 8014de0:	4798      	blx	r3
 8014de2:	2c01      	cmp	r4, #1
 8014de4:	d027      	beq.n	8014e36 <GUI__ManageCache+0x7a>
 8014de6:	2c02      	cmp	r4, #2
 8014de8:	d00f      	beq.n	8014e0a <GUI__ManageCache+0x4e>
 8014dea:	2c00      	cmp	r4, #0
 8014dec:	d1ee      	bne.n	8014dcc <GUI__ManageCache+0x10>
 8014dee:	00ac      	lsls	r4, r5, #2
 8014df0:	1937      	adds	r7, r6, r4
 8014df2:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8014eac <GUI__ManageCache+0xf0>
 8014df6:	68bb      	ldr	r3, [r7, #8]
 8014df8:	2b01      	cmp	r3, #1
 8014dfa:	d03a      	beq.n	8014e72 <GUI__ManageCache+0xb6>
 8014dfc:	2001      	movs	r0, #1
 8014dfe:	4426      	add	r6, r4
 8014e00:	2b00      	cmp	r3, #0
 8014e02:	bf18      	it	ne
 8014e04:	3b01      	subne	r3, #1
 8014e06:	60b3      	str	r3, [r6, #8]
 8014e08:	e7e1      	b.n	8014dce <GUI__ManageCache+0x12>
 8014e0a:	4628      	mov	r0, r5
 8014e0c:	f7f0 fdc4 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8014e10:	9001      	str	r0, [sp, #4]
 8014e12:	2800      	cmp	r0, #0
 8014e14:	d0da      	beq.n	8014dcc <GUI__ManageCache+0x10>
 8014e16:	68c3      	ldr	r3, [r0, #12]
 8014e18:	210d      	movs	r1, #13
 8014e1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014e1c:	a801      	add	r0, sp, #4
 8014e1e:	4798      	blx	r3
 8014e20:	4604      	mov	r4, r0
 8014e22:	2800      	cmp	r0, #0
 8014e24:	d0d2      	beq.n	8014dcc <GUI__ManageCache+0x10>
 8014e26:	6833      	ldr	r3, [r6, #0]
 8014e28:	b103      	cbz	r3, 8014e2c <GUI__ManageCache+0x70>
 8014e2a:	4798      	blx	r3
 8014e2c:	2102      	movs	r1, #2
 8014e2e:	9801      	ldr	r0, [sp, #4]
 8014e30:	47a0      	blx	r4
 8014e32:	2000      	movs	r0, #0
 8014e34:	e7cb      	b.n	8014dce <GUI__ManageCache+0x12>
 8014e36:	eb06 0685 	add.w	r6, r6, r5, lsl #2
 8014e3a:	68b7      	ldr	r7, [r6, #8]
 8014e3c:	b11f      	cbz	r7, 8014e46 <GUI__ManageCache+0x8a>
 8014e3e:	1c78      	adds	r0, r7, #1
 8014e40:	60b0      	str	r0, [r6, #8]
 8014e42:	4620      	mov	r0, r4
 8014e44:	e7c3      	b.n	8014dce <GUI__ManageCache+0x12>
 8014e46:	4628      	mov	r0, r5
 8014e48:	f7f0 fda6 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8014e4c:	9001      	str	r0, [sp, #4]
 8014e4e:	2800      	cmp	r0, #0
 8014e50:	d0bc      	beq.n	8014dcc <GUI__ManageCache+0x10>
 8014e52:	68c3      	ldr	r3, [r0, #12]
 8014e54:	210d      	movs	r1, #13
 8014e56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014e58:	a801      	add	r0, sp, #4
 8014e5a:	4798      	blx	r3
 8014e5c:	4603      	mov	r3, r0
 8014e5e:	2800      	cmp	r0, #0
 8014e60:	d0b4      	beq.n	8014dcc <GUI__ManageCache+0x10>
 8014e62:	4621      	mov	r1, r4
 8014e64:	9801      	ldr	r0, [sp, #4]
 8014e66:	4798      	blx	r3
 8014e68:	68b3      	ldr	r3, [r6, #8]
 8014e6a:	3301      	adds	r3, #1
 8014e6c:	4638      	mov	r0, r7
 8014e6e:	60b3      	str	r3, [r6, #8]
 8014e70:	e7ad      	b.n	8014dce <GUI__ManageCache+0x12>
 8014e72:	4628      	mov	r0, r5
 8014e74:	f7f0 fd90 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8014e78:	9001      	str	r0, [sp, #4]
 8014e7a:	b188      	cbz	r0, 8014ea0 <GUI__ManageCache+0xe4>
 8014e7c:	68c3      	ldr	r3, [r0, #12]
 8014e7e:	210d      	movs	r1, #13
 8014e80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014e82:	a801      	add	r0, sp, #4
 8014e84:	4798      	blx	r3
 8014e86:	4605      	mov	r5, r0
 8014e88:	b150      	cbz	r0, 8014ea0 <GUI__ManageCache+0xe4>
 8014e8a:	f8d8 3000 	ldr.w	r3, [r8]
 8014e8e:	b103      	cbz	r3, 8014e92 <GUI__ManageCache+0xd6>
 8014e90:	4798      	blx	r3
 8014e92:	2100      	movs	r1, #0
 8014e94:	9801      	ldr	r0, [sp, #4]
 8014e96:	47a8      	blx	r5
 8014e98:	1933      	adds	r3, r6, r4
 8014e9a:	2000      	movs	r0, #0
 8014e9c:	689b      	ldr	r3, [r3, #8]
 8014e9e:	e7ae      	b.n	8014dfe <GUI__ManageCache+0x42>
 8014ea0:	68bb      	ldr	r3, [r7, #8]
 8014ea2:	2001      	movs	r0, #1
 8014ea4:	e7ab      	b.n	8014dfe <GUI__ManageCache+0x42>
 8014ea6:	bf00      	nop
 8014ea8:	20000018 	.word	0x20000018
 8014eac:	20000634 	.word	0x20000634

08014eb0 <LCD_AA_MixColors16>:
 8014eb0:	b508      	push	{r3, lr}
 8014eb2:	0e0b      	lsrs	r3, r1, #24
 8014eb4:	d103      	bne.n	8014ebe <LCD_AA_MixColors16+0xe>
 8014eb6:	0e03      	lsrs	r3, r0, #24
 8014eb8:	2bff      	cmp	r3, #255	; 0xff
 8014eba:	d00f      	beq.n	8014edc <LCD_AA_MixColors16+0x2c>
 8014ebc:	b14b      	cbz	r3, 8014ed2 <LCD_AA_MixColors16+0x22>
 8014ebe:	4b0c      	ldr	r3, [pc, #48]	; (8014ef0 <LCD_AA_MixColors16+0x40>)
 8014ec0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014ec4:	b2d2      	uxtb	r2, r2
 8014ec6:	681b      	ldr	r3, [r3, #0]
 8014ec8:	4798      	blx	r3
 8014eca:	4b0a      	ldr	r3, [pc, #40]	; (8014ef4 <LCD_AA_MixColors16+0x44>)
 8014ecc:	685a      	ldr	r2, [r3, #4]
 8014ece:	4310      	orrs	r0, r2
 8014ed0:	bd08      	pop	{r3, pc}
 8014ed2:	4b08      	ldr	r3, [pc, #32]	; (8014ef4 <LCD_AA_MixColors16+0x44>)
 8014ed4:	685a      	ldr	r2, [r3, #4]
 8014ed6:	ea41 0002 	orr.w	r0, r1, r2
 8014eda:	bd08      	pop	{r3, pc}
 8014edc:	4b05      	ldr	r3, [pc, #20]	; (8014ef4 <LCD_AA_MixColors16+0x44>)
 8014ede:	685b      	ldr	r3, [r3, #4]
 8014ee0:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8014ee4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014ee8:	4318      	orrs	r0, r3
 8014eea:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
 8014eee:	bd08      	pop	{r3, pc}
 8014ef0:	20000030 	.word	0x20000030
 8014ef4:	200002ec 	.word	0x200002ec

08014ef8 <LCD_AA_SetOrMask>:
 8014ef8:	4b02      	ldr	r3, [pc, #8]	; (8014f04 <LCD_AA_SetOrMask+0xc>)
 8014efa:	685a      	ldr	r2, [r3, #4]
 8014efc:	6058      	str	r0, [r3, #4]
 8014efe:	4610      	mov	r0, r2
 8014f00:	4770      	bx	lr
 8014f02:	bf00      	nop
 8014f04:	200002ec 	.word	0x200002ec

08014f08 <LCD_SetClipRectEx>:
 8014f08:	b530      	push	{r4, r5, lr}
 8014f0a:	4c0a      	ldr	r4, [pc, #40]	; (8014f34 <LCD_SetClipRectEx+0x2c>)
 8014f0c:	4b0a      	ldr	r3, [pc, #40]	; (8014f38 <LCD_SetClipRectEx+0x30>)
 8014f0e:	6822      	ldr	r2, [r4, #0]
 8014f10:	7c52      	ldrb	r2, [r2, #17]
 8014f12:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014f16:	68da      	ldr	r2, [r3, #12]
 8014f18:	b083      	sub	sp, #12
 8014f1a:	4605      	mov	r5, r0
 8014f1c:	4669      	mov	r1, sp
 8014f1e:	4618      	mov	r0, r3
 8014f20:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8014f22:	4790      	blx	r2
 8014f24:	6820      	ldr	r0, [r4, #0]
 8014f26:	466a      	mov	r2, sp
 8014f28:	4629      	mov	r1, r5
 8014f2a:	3008      	adds	r0, #8
 8014f2c:	f7f1 fd9c 	bl	8006a68 <GUI__IntersectRects>
 8014f30:	b003      	add	sp, #12
 8014f32:	bd30      	pop	{r4, r5, pc}
 8014f34:	20000018 	.word	0x20000018
 8014f38:	2001c19c 	.word	0x2001c19c

08014f3c <GUI_MEMDEV_CopyToLCDAt.part.0>:
 8014f3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014f40:	4606      	mov	r6, r0
 8014f42:	b084      	sub	sp, #16
 8014f44:	2000      	movs	r0, #0
 8014f46:	460c      	mov	r4, r1
 8014f48:	4615      	mov	r5, r2
 8014f4a:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8015030 <GUI_MEMDEV_CopyToLCDAt.part.0+0xf4>
 8014f4e:	f7f0 fb4d 	bl	80055ec <GUI_SetDrawMode>
 8014f52:	f8d8 3000 	ldr.w	r3, [r8]
 8014f56:	4681      	mov	r9, r0
 8014f58:	4630      	mov	r0, r6
 8014f5a:	6e1f      	ldr	r7, [r3, #96]	; 0x60
 8014f5c:	f7ef ff8a 	bl	8004e74 <GUI_ALLOC_LockH>
 8014f60:	6803      	ldr	r3, [r0, #0]
 8014f62:	9000      	str	r0, [sp, #0]
 8014f64:	6998      	ldr	r0, [r3, #24]
 8014f66:	f7f1 f9bb 	bl	80062e0 <GUI_SelectLayer>
 8014f6a:	4b30      	ldr	r3, [pc, #192]	; (801502c <GUI_MEMDEV_CopyToLCDAt.part.0+0xf0>)
 8014f6c:	429c      	cmp	r4, r3
 8014f6e:	9b00      	ldr	r3, [sp, #0]
 8014f70:	bf04      	itt	eq
 8014f72:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 8014f76:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 8014f7a:	891a      	ldrh	r2, [r3, #8]
 8014f7c:	895b      	ldrh	r3, [r3, #10]
 8014f7e:	f8ad 4008 	strh.w	r4, [sp, #8]
 8014f82:	3a01      	subs	r2, #1
 8014f84:	3b01      	subs	r3, #1
 8014f86:	4422      	add	r2, r4
 8014f88:	442b      	add	r3, r5
 8014f8a:	4682      	mov	sl, r0
 8014f8c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014f90:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014f94:	f8ad 500a 	strh.w	r5, [sp, #10]
 8014f98:	f7f7 fe96 	bl	800ccc8 <WM_Activate>
 8014f9c:	4668      	mov	r0, sp
 8014f9e:	f7ef ff7b 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014fa2:	a802      	add	r0, sp, #8
 8014fa4:	f7f7 fc18 	bl	800c7d8 <WM__InitIVRSearch>
 8014fa8:	bb10      	cbnz	r0, 8014ff0 <GUI_MEMDEV_CopyToLCDAt.part.0+0xb4>
 8014faa:	4650      	mov	r0, sl
 8014fac:	f7f1 f998 	bl	80062e0 <GUI_SelectLayer>
 8014fb0:	b3a7      	cbz	r7, 801501c <GUI_MEMDEV_CopyToLCDAt.part.0+0xe0>
 8014fb2:	f8d8 3000 	ldr.w	r3, [r8]
 8014fb6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8014fb8:	bb6b      	cbnz	r3, 8015016 <GUI_MEMDEV_CopyToLCDAt.part.0+0xda>
 8014fba:	f7f7 fe8d 	bl	800ccd8 <WM_Deactivate>
 8014fbe:	4638      	mov	r0, r7
 8014fc0:	f7ef ff58 	bl	8004e74 <GUI_ALLOC_LockH>
 8014fc4:	ac04      	add	r4, sp, #16
 8014fc6:	f8d8 3000 	ldr.w	r3, [r8]
 8014fca:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8014fce:	661f      	str	r7, [r3, #96]	; 0x60
 8014fd0:	6800      	ldr	r0, [r0, #0]
 8014fd2:	f7f0 fd43 	bl	8005a5c <GUI_DEVICE_Link>
 8014fd6:	4620      	mov	r0, r4
 8014fd8:	f7ef ff5e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8014fdc:	f7f3 f8ec 	bl	80081b8 <LCD_UpdateColorIndices>
 8014fe0:	f7f2 fbbe 	bl	8007760 <LCD_SetClipRectMax>
 8014fe4:	4648      	mov	r0, r9
 8014fe6:	f7f0 fb01 	bl	80055ec <GUI_SetDrawMode>
 8014fea:	b004      	add	sp, #16
 8014fec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014ff0:	462a      	mov	r2, r5
 8014ff2:	4621      	mov	r1, r4
 8014ff4:	4630      	mov	r0, r6
 8014ff6:	f7f5 f933 	bl	800a260 <GUI_MEMDEV__WriteToActiveOpaque>
 8014ffa:	f7f7 fac7 	bl	800c58c <WM__GetNextIVR>
 8014ffe:	2800      	cmp	r0, #0
 8015000:	d0d3      	beq.n	8014faa <GUI_MEMDEV_CopyToLCDAt.part.0+0x6e>
 8015002:	462a      	mov	r2, r5
 8015004:	4621      	mov	r1, r4
 8015006:	4630      	mov	r0, r6
 8015008:	f7f5 f92a 	bl	800a260 <GUI_MEMDEV__WriteToActiveOpaque>
 801500c:	f7f7 fabe 	bl	800c58c <WM__GetNextIVR>
 8015010:	2800      	cmp	r0, #0
 8015012:	d1ed      	bne.n	8014ff0 <GUI_MEMDEV_CopyToLCDAt.part.0+0xb4>
 8015014:	e7c9      	b.n	8014faa <GUI_MEMDEV_CopyToLCDAt.part.0+0x6e>
 8015016:	f7f0 fab9 	bl	800558c <GUI_SelectLCD>
 801501a:	e7ce      	b.n	8014fba <GUI_MEMDEV_CopyToLCDAt.part.0+0x7e>
 801501c:	f7f0 fab6 	bl	800558c <GUI_SelectLCD>
 8015020:	4648      	mov	r0, r9
 8015022:	f7f0 fae3 	bl	80055ec <GUI_SetDrawMode>
 8015026:	b004      	add	sp, #16
 8015028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801502c:	fffff001 	.word	0xfffff001
 8015030:	20000018 	.word	0x20000018

08015034 <GUI_MEMDEV__WriteToActiveAt>:
 8015034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015038:	b082      	sub	sp, #8
 801503a:	460f      	mov	r7, r1
 801503c:	4690      	mov	r8, r2
 801503e:	4606      	mov	r6, r0
 8015040:	f7ef ff18 	bl	8004e74 <GUI_ALLOC_LockH>
 8015044:	6803      	ldr	r3, [r0, #0]
 8015046:	ac02      	add	r4, sp, #8
 8015048:	68db      	ldr	r3, [r3, #12]
 801504a:	f844 0d04 	str.w	r0, [r4, #-4]!
 801504e:	2116      	movs	r1, #22
 8015050:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015052:	2000      	movs	r0, #0
 8015054:	4798      	blx	r3
 8015056:	4605      	mov	r5, r0
 8015058:	4620      	mov	r0, r4
 801505a:	f7ef ff1d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801505e:	b11d      	cbz	r5, 8015068 <GUI_MEMDEV__WriteToActiveAt+0x34>
 8015060:	4642      	mov	r2, r8
 8015062:	4639      	mov	r1, r7
 8015064:	4630      	mov	r0, r6
 8015066:	47a8      	blx	r5
 8015068:	b002      	add	sp, #8
 801506a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801506e:	bf00      	nop

08015070 <GUI_MEMDEV__CreateFixed>:
 8015070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015074:	f8df 812c 	ldr.w	r8, [pc, #300]	; 80151a4 <GUI_MEMDEV__CreateFixed+0x134>
 8015078:	b087      	sub	sp, #28
 801507a:	f8d8 4000 	ldr.w	r4, [r8]
 801507e:	4681      	mov	r9, r0
 8015080:	468a      	mov	sl, r1
 8015082:	4617      	mov	r7, r2
 8015084:	461e      	mov	r6, r3
 8015086:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015088:	7c63      	ldrb	r3, [r4, #17]
 801508a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801508c:	2200      	movs	r2, #0
 801508e:	f7f0 fc9b 	bl	80059c8 <GUI_DEVICE_Create>
 8015092:	2800      	cmp	r0, #0
 8015094:	d04d      	beq.n	8015132 <GUI_MEMDEV__CreateFixed+0xc2>
 8015096:	6903      	ldr	r3, [r0, #16]
 8015098:	689b      	ldr	r3, [r3, #8]
 801509a:	4605      	mov	r5, r0
 801509c:	4798      	blx	r3
 801509e:	f7f2 fe49 	bl	8007d34 <LCD__GetBPPDevice>
 80150a2:	fb00 f407 	mul.w	r4, r0, r7
 80150a6:	4683      	mov	fp, r0
 80150a8:	f7ef ffaa 	bl	8005000 <GUI_ALLOC_RequestSize>
 80150ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80150ae:	3407      	adds	r4, #7
 80150b0:	f013 0301 	ands.w	r3, r3, #1
 80150b4:	ea4f 04d4 	mov.w	r4, r4, lsr #3
 80150b8:	d03f      	beq.n	801513a <GUI_MEMDEV__CreateFixed+0xca>
 80150ba:	2e00      	cmp	r6, #0
 80150bc:	dd2c      	ble.n	8015118 <GUI_MEMDEV__CreateFixed+0xa8>
 80150be:	2b00      	cmp	r3, #0
 80150c0:	d042      	beq.n	8015148 <GUI_MEMDEV__CreateFixed+0xd8>
 80150c2:	fb04 f006 	mul.w	r0, r4, r6
 80150c6:	3018      	adds	r0, #24
 80150c8:	f7ef fec6 	bl	8004e58 <GUI_ALLOC_AllocNoInit>
 80150cc:	4603      	mov	r3, r0
 80150ce:	b368      	cbz	r0, 801512c <GUI_MEMDEV__CreateFixed+0xbc>
 80150d0:	2200      	movs	r2, #0
 80150d2:	9202      	str	r2, [sp, #8]
 80150d4:	4618      	mov	r0, r3
 80150d6:	9303      	str	r3, [sp, #12]
 80150d8:	f7ef fecc 	bl	8004e74 <GUI_ALLOC_LockH>
 80150dc:	4602      	mov	r2, r0
 80150de:	a806      	add	r0, sp, #24
 80150e0:	9b02      	ldr	r3, [sp, #8]
 80150e2:	f8a2 9004 	strh.w	r9, [r2, #4]
 80150e6:	f840 2d04 	str.w	r2, [r0, #-4]!
 80150ea:	f8a2 a006 	strh.w	sl, [r2, #6]
 80150ee:	8117      	strh	r7, [r2, #8]
 80150f0:	8156      	strh	r6, [r2, #10]
 80150f2:	60d4      	str	r4, [r2, #12]
 80150f4:	f8c2 b010 	str.w	fp, [r2, #16]
 80150f8:	6153      	str	r3, [r2, #20]
 80150fa:	6015      	str	r5, [r2, #0]
 80150fc:	f7ef fecc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015100:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015102:	612b      	str	r3, [r5, #16]
 8015104:	f8d8 2000 	ldr.w	r2, [r8]
 8015108:	9b03      	ldr	r3, [sp, #12]
 801510a:	60ab      	str	r3, [r5, #8]
 801510c:	7c52      	ldrb	r2, [r2, #17]
 801510e:	61aa      	str	r2, [r5, #24]
 8015110:	4618      	mov	r0, r3
 8015112:	b007      	add	sp, #28
 8015114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015118:	2c00      	cmp	r4, #0
 801511a:	d134      	bne.n	8015186 <GUI_MEMDEV__CreateFixed+0x116>
 801511c:	4620      	mov	r0, r4
 801511e:	4276      	negs	r6, r6
 8015120:	4286      	cmp	r6, r0
 8015122:	bfa8      	it	ge
 8015124:	4606      	movge	r6, r0
 8015126:	b393      	cbz	r3, 801518e <GUI_MEMDEV__CreateFixed+0x11e>
 8015128:	2e00      	cmp	r6, #0
 801512a:	dcca      	bgt.n	80150c2 <GUI_MEMDEV__CreateFixed+0x52>
 801512c:	4628      	mov	r0, r5
 801512e:	f7f0 fc49 	bl	80059c4 <GUI_DEVICE_Delete>
 8015132:	2000      	movs	r0, #0
 8015134:	b007      	add	sp, #28
 8015136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801513a:	2800      	cmp	r0, #0
 801513c:	bfb8      	it	lt
 801513e:	3003      	addlt	r0, #3
 8015140:	1080      	asrs	r0, r0, #2
 8015142:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015146:	e7b8      	b.n	80150ba <GUI_MEMDEV__CreateFixed+0x4a>
 8015148:	9300      	str	r3, [sp, #0]
 801514a:	463a      	mov	r2, r7
 801514c:	4633      	mov	r3, r6
 801514e:	4651      	mov	r1, sl
 8015150:	4648      	mov	r0, r9
 8015152:	f000 fbbf 	bl	80158d4 <GUI_USAGE_BM_Create>
 8015156:	9002      	str	r0, [sp, #8]
 8015158:	fb04 f006 	mul.w	r0, r4, r6
 801515c:	3018      	adds	r0, #24
 801515e:	f7f0 f879 	bl	8005254 <GUI_ALLOC_AllocZero>
 8015162:	4603      	mov	r3, r0
 8015164:	2800      	cmp	r0, #0
 8015166:	d1b5      	bne.n	80150d4 <GUI_MEMDEV__CreateFixed+0x64>
 8015168:	4628      	mov	r0, r5
 801516a:	9303      	str	r3, [sp, #12]
 801516c:	f7f0 fc2a 	bl	80059c4 <GUI_DEVICE_Delete>
 8015170:	9b02      	ldr	r3, [sp, #8]
 8015172:	2b00      	cmp	r3, #0
 8015174:	d0dd      	beq.n	8015132 <GUI_MEMDEV__CreateFixed+0xc2>
 8015176:	4618      	mov	r0, r3
 8015178:	f7f0 f806 	bl	8005188 <GUI_ALLOC_Free>
 801517c:	9b03      	ldr	r3, [sp, #12]
 801517e:	4618      	mov	r0, r3
 8015180:	b007      	add	sp, #28
 8015182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015186:	3818      	subs	r0, #24
 8015188:	fbb0 f0f4 	udiv	r0, r0, r4
 801518c:	e7c7      	b.n	801511e <GUI_MEMDEV__CreateFixed+0xae>
 801518e:	9300      	str	r3, [sp, #0]
 8015190:	463a      	mov	r2, r7
 8015192:	4633      	mov	r3, r6
 8015194:	4651      	mov	r1, sl
 8015196:	4648      	mov	r0, r9
 8015198:	f000 fb9c 	bl	80158d4 <GUI_USAGE_BM_Create>
 801519c:	2e00      	cmp	r6, #0
 801519e:	9002      	str	r0, [sp, #8]
 80151a0:	dcda      	bgt.n	8015158 <GUI_MEMDEV__CreateFixed+0xe8>
 80151a2:	e7c3      	b.n	801512c <GUI_MEMDEV__CreateFixed+0xbc>
 80151a4:	20000018 	.word	0x20000018

080151a8 <GUI_MEMDEV_GetBitsPerPixel>:
 80151a8:	b530      	push	{r4, r5, lr}
 80151aa:	b083      	sub	sp, #12
 80151ac:	b918      	cbnz	r0, 80151b6 <GUI_MEMDEV_GetBitsPerPixel+0xe>
 80151ae:	4604      	mov	r4, r0
 80151b0:	4620      	mov	r0, r4
 80151b2:	b003      	add	sp, #12
 80151b4:	bd30      	pop	{r4, r5, pc}
 80151b6:	f7ef fe5d 	bl	8004e74 <GUI_ALLOC_LockH>
 80151ba:	6803      	ldr	r3, [r0, #0]
 80151bc:	ad02      	add	r5, sp, #8
 80151be:	691b      	ldr	r3, [r3, #16]
 80151c0:	f845 0d04 	str.w	r0, [r5, #-4]!
 80151c4:	689b      	ldr	r3, [r3, #8]
 80151c6:	4798      	blx	r3
 80151c8:	f7f2 fdb4 	bl	8007d34 <LCD__GetBPPDevice>
 80151cc:	4604      	mov	r4, r0
 80151ce:	4628      	mov	r0, r5
 80151d0:	f7ef fe62 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80151d4:	4620      	mov	r0, r4
 80151d6:	b003      	add	sp, #12
 80151d8:	bd30      	pop	{r4, r5, pc}
 80151da:	bf00      	nop

080151dc <GUI_MEMDEV_Delete>:
 80151dc:	b1c0      	cbz	r0, 8015210 <GUI_MEMDEV_Delete+0x34>
 80151de:	4b11      	ldr	r3, [pc, #68]	; (8015224 <GUI_MEMDEV_Delete+0x48>)
 80151e0:	b510      	push	{r4, lr}
 80151e2:	681b      	ldr	r3, [r3, #0]
 80151e4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80151e6:	4298      	cmp	r0, r3
 80151e8:	b082      	sub	sp, #8
 80151ea:	4604      	mov	r4, r0
 80151ec:	d016      	beq.n	801521c <GUI_MEMDEV_Delete+0x40>
 80151ee:	4620      	mov	r0, r4
 80151f0:	f7ef fe40 	bl	8004e74 <GUI_ALLOC_LockH>
 80151f4:	6943      	ldr	r3, [r0, #20]
 80151f6:	9001      	str	r0, [sp, #4]
 80151f8:	b95b      	cbnz	r3, 8015212 <GUI_MEMDEV_Delete+0x36>
 80151fa:	6800      	ldr	r0, [r0, #0]
 80151fc:	f7f0 fbe2 	bl	80059c4 <GUI_DEVICE_Delete>
 8015200:	a801      	add	r0, sp, #4
 8015202:	f7ef fe49 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015206:	4620      	mov	r0, r4
 8015208:	f7ef ffbe 	bl	8005188 <GUI_ALLOC_Free>
 801520c:	b002      	add	sp, #8
 801520e:	bd10      	pop	{r4, pc}
 8015210:	4770      	bx	lr
 8015212:	4618      	mov	r0, r3
 8015214:	f7f4 fffc 	bl	800a210 <GUI_USAGE_DecUseCnt>
 8015218:	9801      	ldr	r0, [sp, #4]
 801521a:	e7ee      	b.n	80151fa <GUI_MEMDEV_Delete+0x1e>
 801521c:	f7f0 f9b6 	bl	800558c <GUI_SelectLCD>
 8015220:	e7e5      	b.n	80151ee <GUI_MEMDEV_Delete+0x12>
 8015222:	bf00      	nop
 8015224:	20000018 	.word	0x20000018

08015228 <GUI_MEMDEV_CreateEx>:
 8015228:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801522c:	4d1d      	ldr	r5, [pc, #116]	; (80152a4 <GUI_MEMDEV_CreateEx+0x7c>)
 801522e:	4c1e      	ldr	r4, [pc, #120]	; (80152a8 <GUI_MEMDEV_CreateEx+0x80>)
 8015230:	682e      	ldr	r6, [r5, #0]
 8015232:	f896 e011 	ldrb.w	lr, [r6, #17]
 8015236:	b085      	sub	sp, #20
 8015238:	f854 402e 	ldr.w	r4, [r4, lr, lsl #2]
 801523c:	4606      	mov	r6, r0
 801523e:	460f      	mov	r7, r1
 8015240:	4690      	mov	r8, r2
 8015242:	4699      	mov	r9, r3
 8015244:	e001      	b.n	801524a <GUI_MEMDEV_CreateEx+0x22>
 8015246:	6824      	ldr	r4, [r4, #0]
 8015248:	b1dc      	cbz	r4, 8015282 <GUI_MEMDEV_CreateEx+0x5a>
 801524a:	68e3      	ldr	r3, [r4, #12]
 801524c:	681a      	ldr	r2, [r3, #0]
 801524e:	2a04      	cmp	r2, #4
 8015250:	d1f9      	bne.n	8015246 <GUI_MEMDEV_CreateEx+0x1e>
 8015252:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015254:	2101      	movs	r1, #1
 8015256:	4620      	mov	r0, r4
 8015258:	4798      	blx	r3
 801525a:	4605      	mov	r5, r0
 801525c:	b1c0      	cbz	r0, 8015290 <GUI_MEMDEV_CreateEx+0x68>
 801525e:	6924      	ldr	r4, [r4, #16]
 8015260:	68a3      	ldr	r3, [r4, #8]
 8015262:	4798      	blx	r3
 8015264:	3001      	adds	r0, #1
 8015266:	d017      	beq.n	8015298 <GUI_MEMDEV_CreateEx+0x70>
 8015268:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801526a:	9300      	str	r3, [sp, #0]
 801526c:	9402      	str	r4, [sp, #8]
 801526e:	9501      	str	r5, [sp, #4]
 8015270:	464b      	mov	r3, r9
 8015272:	4642      	mov	r2, r8
 8015274:	4639      	mov	r1, r7
 8015276:	4630      	mov	r0, r6
 8015278:	f7ff fefa 	bl	8015070 <GUI_MEMDEV__CreateFixed>
 801527c:	b005      	add	sp, #20
 801527e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015282:	4670      	mov	r0, lr
 8015284:	f7f0 fb88 	bl	8005998 <GUI_DEVICE__GetpDriver>
 8015288:	4604      	mov	r4, r0
 801528a:	b108      	cbz	r0, 8015290 <GUI_MEMDEV_CreateEx+0x68>
 801528c:	68c3      	ldr	r3, [r0, #12]
 801528e:	e7e0      	b.n	8015252 <GUI_MEMDEV_CreateEx+0x2a>
 8015290:	2000      	movs	r0, #0
 8015292:	b005      	add	sp, #20
 8015294:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015298:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801529a:	4c04      	ldr	r4, [pc, #16]	; (80152ac <GUI_MEMDEV_CreateEx+0x84>)
 801529c:	f043 0301 	orr.w	r3, r3, #1
 80152a0:	930c      	str	r3, [sp, #48]	; 0x30
 80152a2:	e7e1      	b.n	8015268 <GUI_MEMDEV_CreateEx+0x40>
 80152a4:	20000018 	.word	0x20000018
 80152a8:	2001c19c 	.word	0x2001c19c
 80152ac:	0801745c 	.word	0x0801745c

080152b0 <GUI_MEMDEV_Select>:
 80152b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80152b2:	4f13      	ldr	r7, [pc, #76]	; (8015300 <GUI_MEMDEV_Select+0x50>)
 80152b4:	683b      	ldr	r3, [r7, #0]
 80152b6:	b083      	sub	sp, #12
 80152b8:	6e1e      	ldr	r6, [r3, #96]	; 0x60
 80152ba:	b1d8      	cbz	r0, 80152f4 <GUI_MEMDEV_Select+0x44>
 80152bc:	4604      	mov	r4, r0
 80152be:	b9b6      	cbnz	r6, 80152ee <GUI_MEMDEV_Select+0x3e>
 80152c0:	f7f7 fd0a 	bl	800ccd8 <WM_Deactivate>
 80152c4:	4620      	mov	r0, r4
 80152c6:	f7ef fdd5 	bl	8004e74 <GUI_ALLOC_LockH>
 80152ca:	ad02      	add	r5, sp, #8
 80152cc:	683b      	ldr	r3, [r7, #0]
 80152ce:	f845 0d04 	str.w	r0, [r5, #-4]!
 80152d2:	661c      	str	r4, [r3, #96]	; 0x60
 80152d4:	6800      	ldr	r0, [r0, #0]
 80152d6:	f7f0 fbc1 	bl	8005a5c <GUI_DEVICE_Link>
 80152da:	4628      	mov	r0, r5
 80152dc:	f7ef fddc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80152e0:	f7f2 ff6a 	bl	80081b8 <LCD_UpdateColorIndices>
 80152e4:	f7f2 fa3c 	bl	8007760 <LCD_SetClipRectMax>
 80152e8:	4630      	mov	r0, r6
 80152ea:	b003      	add	sp, #12
 80152ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80152ee:	f7f0 f94d 	bl	800558c <GUI_SelectLCD>
 80152f2:	e7e5      	b.n	80152c0 <GUI_MEMDEV_Select+0x10>
 80152f4:	f7f0 f94a 	bl	800558c <GUI_SelectLCD>
 80152f8:	4630      	mov	r0, r6
 80152fa:	b003      	add	sp, #12
 80152fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80152fe:	bf00      	nop
 8015300:	20000018 	.word	0x20000018

08015304 <GUI_MEMDEV_CopyToLCD>:
 8015304:	b900      	cbnz	r0, 8015308 <GUI_MEMDEV_CopyToLCD+0x4>
 8015306:	4770      	bx	lr
 8015308:	4a01      	ldr	r2, [pc, #4]	; (8015310 <GUI_MEMDEV_CopyToLCD+0xc>)
 801530a:	4611      	mov	r1, r2
 801530c:	f7ff be16 	b.w	8014f3c <GUI_MEMDEV_CopyToLCDAt.part.0>
 8015310:	fffff001 	.word	0xfffff001

08015314 <GUI_MEMDEV_Draw>:
 8015314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015318:	f8df b15c 	ldr.w	fp, [pc, #348]	; 8015478 <GUI_MEMDEV_Draw+0x164>
 801531c:	4c54      	ldr	r4, [pc, #336]	; (8015470 <GUI_MEMDEV_Draw+0x15c>)
 801531e:	f8db 5000 	ldr.w	r5, [fp]
 8015322:	7c6f      	ldrb	r7, [r5, #17]
 8015324:	57e4      	ldrsb	r4, [r4, r7]
 8015326:	2c01      	cmp	r4, #1
 8015328:	4606      	mov	r6, r0
 801532a:	b087      	sub	sp, #28
 801532c:	4689      	mov	r9, r1
 801532e:	4692      	mov	sl, r2
 8015330:	461d      	mov	r5, r3
 8015332:	4638      	mov	r0, r7
 8015334:	f340 808a 	ble.w	801544c <GUI_MEMDEV_Draw+0x138>
 8015338:	f7f2 fba0 	bl	8007a7c <LCD_GetXSizeEx>
 801533c:	4604      	mov	r4, r0
 801533e:	4638      	mov	r0, r7
 8015340:	f7f2 fbac 	bl	8007a9c <LCD_GetYSizeEx>
 8015344:	4607      	mov	r7, r0
 8015346:	2e00      	cmp	r6, #0
 8015348:	d07d      	beq.n	8015446 <GUI_MEMDEV_Draw+0x132>
 801534a:	a905      	add	r1, sp, #20
 801534c:	a804      	add	r0, sp, #16
 801534e:	f7f0 f801 	bl	8005354 <GUI_GetOrg>
 8015352:	9a04      	ldr	r2, [sp, #16]
 8015354:	9905      	ldr	r1, [sp, #20]
 8015356:	f9b6 c000 	ldrsh.w	ip, [r6]
 801535a:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 801535e:	f9b6 e004 	ldrsh.w	lr, [r6, #4]
 8015362:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8015366:	4414      	add	r4, r2
 8015368:	440f      	add	r7, r1
 801536a:	3c01      	subs	r4, #1
 801536c:	ea2c 72ec 	bic.w	r2, ip, ip, asr #31
 8015370:	3f01      	subs	r7, #1
 8015372:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8015376:	9202      	str	r2, [sp, #8]
 8015378:	9103      	str	r1, [sp, #12]
 801537a:	4574      	cmp	r4, lr
 801537c:	bfd4      	ite	le
 801537e:	ebc2 0204 	rsble	r2, r2, r4
 8015382:	ebc2 020e 	rsbgt	r2, r2, lr
 8015386:	429f      	cmp	r7, r3
 8015388:	bfd4      	ite	le
 801538a:	ebc1 0107 	rsble	r1, r1, r7
 801538e:	ebc1 0103 	rsbgt	r1, r1, r3
 8015392:	4614      	mov	r4, r2
 8015394:	460f      	mov	r7, r1
 8015396:	3401      	adds	r4, #1
 8015398:	3701      	adds	r7, #1
 801539a:	b905      	cbnz	r5, 801539e <GUI_MEMDEV_Draw+0x8a>
 801539c:	427d      	negs	r5, r7
 801539e:	2c00      	cmp	r4, #0
 80153a0:	dd4d      	ble.n	801543e <GUI_MEMDEV_Draw+0x12a>
 80153a2:	2f00      	cmp	r7, #0
 80153a4:	dd4b      	ble.n	801543e <GUI_MEMDEV_Draw+0x12a>
 80153a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80153a8:	9300      	str	r3, [sp, #0]
 80153aa:	4622      	mov	r2, r4
 80153ac:	462b      	mov	r3, r5
 80153ae:	9903      	ldr	r1, [sp, #12]
 80153b0:	9802      	ldr	r0, [sp, #8]
 80153b2:	f7ff ff39 	bl	8015228 <GUI_MEMDEV_CreateEx>
 80153b6:	4680      	mov	r8, r0
 80153b8:	2800      	cmp	r0, #0
 80153ba:	d04f      	beq.n	801545c <GUI_MEMDEV_Draw+0x148>
 80153bc:	f000 f894 	bl	80154e8 <GUI_MEMDEV_GetYSize>
 80153c0:	4287      	cmp	r7, r0
 80153c2:	4606      	mov	r6, r0
 80153c4:	d004      	beq.n	80153d0 <GUI_MEMDEV_Draw+0xbc>
 80153c6:	f8db 3000 	ldr.w	r3, [fp]
 80153ca:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80153cc:	2800      	cmp	r0, #0
 80153ce:	d14b      	bne.n	8015468 <GUI_MEMDEV_Draw+0x154>
 80153d0:	4640      	mov	r0, r8
 80153d2:	f7ff ff6d 	bl	80152b0 <GUI_MEMDEV_Select>
 80153d6:	463d      	mov	r5, r7
 80153d8:	2400      	movs	r4, #0
 80153da:	e00e      	b.n	80153fa <GUI_MEMDEV_Draw+0xe6>
 80153dc:	1bad      	subs	r5, r5, r6
 80153de:	b9ac      	cbnz	r4, 801540c <GUI_MEMDEV_Draw+0xf8>
 80153e0:	4650      	mov	r0, sl
 80153e2:	47c8      	blx	r9
 80153e4:	4b23      	ldr	r3, [pc, #140]	; (8015474 <GUI_MEMDEV_Draw+0x160>)
 80153e6:	681b      	ldr	r3, [r3, #0]
 80153e8:	4434      	add	r4, r6
 80153ea:	20ff      	movs	r0, #255	; 0xff
 80153ec:	b103      	cbz	r3, 80153f0 <GUI_MEMDEV_Draw+0xdc>
 80153ee:	4798      	blx	r3
 80153f0:	4640      	mov	r0, r8
 80153f2:	f7ff ff87 	bl	8015304 <GUI_MEMDEV_CopyToLCD>
 80153f6:	42a7      	cmp	r7, r4
 80153f8:	dd12      	ble.n	8015420 <GUI_MEMDEV_Draw+0x10c>
 80153fa:	42ae      	cmp	r6, r5
 80153fc:	ddee      	ble.n	80153dc <GUI_MEMDEV_Draw+0xc8>
 80153fe:	4629      	mov	r1, r5
 8015400:	4640      	mov	r0, r8
 8015402:	f000 f88d 	bl	8015520 <GUI_MEMDEV_ReduceYSize>
 8015406:	1bad      	subs	r5, r5, r6
 8015408:	2c00      	cmp	r4, #0
 801540a:	d0e9      	beq.n	80153e0 <GUI_MEMDEV_Draw+0xcc>
 801540c:	9b03      	ldr	r3, [sp, #12]
 801540e:	9902      	ldr	r1, [sp, #8]
 8015410:	4640      	mov	r0, r8
 8015412:	18e2      	adds	r2, r4, r3
 8015414:	f000 f89e 	bl	8015554 <GUI_MEMDEV_SetOrg>
 8015418:	4640      	mov	r0, r8
 801541a:	f000 f82f 	bl	801547c <GUI_MEMDEV_Clear>
 801541e:	e7df      	b.n	80153e0 <GUI_MEMDEV_Draw+0xcc>
 8015420:	4640      	mov	r0, r8
 8015422:	f7ff fedb 	bl	80151dc <GUI_MEMDEV_Delete>
 8015426:	2000      	movs	r0, #0
 8015428:	f7ff ff42 	bl	80152b0 <GUI_MEMDEV_Select>
 801542c:	42b7      	cmp	r7, r6
 801542e:	d006      	beq.n	801543e <GUI_MEMDEV_Draw+0x12a>
 8015430:	f8db 3000 	ldr.w	r3, [fp]
 8015434:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8015436:	b110      	cbz	r0, 801543e <GUI_MEMDEV_Draw+0x12a>
 8015438:	2133      	movs	r1, #51	; 0x33
 801543a:	f7f9 f929 	bl	800e690 <WM__SendMessageNoPara>
 801543e:	2000      	movs	r0, #0
 8015440:	b007      	add	sp, #28
 8015442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015446:	9603      	str	r6, [sp, #12]
 8015448:	9602      	str	r6, [sp, #8]
 801544a:	e7a6      	b.n	801539a <GUI_MEMDEV_Draw+0x86>
 801544c:	f7f2 fb36 	bl	8007abc <LCD_GetVXSizeEx>
 8015450:	4604      	mov	r4, r0
 8015452:	4638      	mov	r0, r7
 8015454:	f7f2 fb42 	bl	8007adc <LCD_GetVYSizeEx>
 8015458:	4607      	mov	r7, r0
 801545a:	e774      	b.n	8015346 <GUI_MEMDEV_Draw+0x32>
 801545c:	4650      	mov	r0, sl
 801545e:	47c8      	blx	r9
 8015460:	2001      	movs	r0, #1
 8015462:	b007      	add	sp, #28
 8015464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015468:	2132      	movs	r1, #50	; 0x32
 801546a:	f7f9 f911 	bl	800e690 <WM__SendMessageNoPara>
 801546e:	e7af      	b.n	80153d0 <GUI_MEMDEV_Draw+0xbc>
 8015470:	2001c14c 	.word	0x2001c14c
 8015474:	2000064c 	.word	0x2000064c
 8015478:	20000018 	.word	0x20000018

0801547c <GUI_MEMDEV_Clear>:
 801547c:	b510      	push	{r4, lr}
 801547e:	b082      	sub	sp, #8
 8015480:	b928      	cbnz	r0, 801548e <GUI_MEMDEV_Clear+0x12>
 8015482:	4b0f      	ldr	r3, [pc, #60]	; (80154c0 <GUI_MEMDEV_Clear+0x44>)
 8015484:	681b      	ldr	r3, [r3, #0]
 8015486:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8015488:	b908      	cbnz	r0, 801548e <GUI_MEMDEV_Clear+0x12>
 801548a:	b002      	add	sp, #8
 801548c:	bd10      	pop	{r4, pc}
 801548e:	f7ef fcf1 	bl	8004e74 <GUI_ALLOC_LockH>
 8015492:	ab02      	add	r3, sp, #8
 8015494:	6944      	ldr	r4, [r0, #20]
 8015496:	f843 0d08 	str.w	r0, [r3, #-8]!
 801549a:	4618      	mov	r0, r3
 801549c:	f7ef fcfc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80154a0:	2c00      	cmp	r4, #0
 80154a2:	d0f2      	beq.n	801548a <GUI_MEMDEV_Clear+0xe>
 80154a4:	4620      	mov	r0, r4
 80154a6:	f7ef fce5 	bl	8004e74 <GUI_ALLOC_LockH>
 80154aa:	ac02      	add	r4, sp, #8
 80154ac:	6882      	ldr	r2, [r0, #8]
 80154ae:	f844 0d04 	str.w	r0, [r4, #-4]!
 80154b2:	6893      	ldr	r3, [r2, #8]
 80154b4:	4798      	blx	r3
 80154b6:	4620      	mov	r0, r4
 80154b8:	f7ef fcee 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80154bc:	b002      	add	sp, #8
 80154be:	bd10      	pop	{r4, pc}
 80154c0:	20000018 	.word	0x20000018

080154c4 <GUI_MEMDEV_GetDataPtr>:
 80154c4:	b170      	cbz	r0, 80154e4 <GUI_MEMDEV_GetDataPtr+0x20>
 80154c6:	b510      	push	{r4, lr}
 80154c8:	b082      	sub	sp, #8
 80154ca:	f7ef fcd3 	bl	8004e74 <GUI_ALLOC_LockH>
 80154ce:	ab02      	add	r3, sp, #8
 80154d0:	f100 0418 	add.w	r4, r0, #24
 80154d4:	f843 0d04 	str.w	r0, [r3, #-4]!
 80154d8:	4618      	mov	r0, r3
 80154da:	f7ef fcdd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80154de:	4620      	mov	r0, r4
 80154e0:	b002      	add	sp, #8
 80154e2:	bd10      	pop	{r4, pc}
 80154e4:	4770      	bx	lr
 80154e6:	bf00      	nop

080154e8 <GUI_MEMDEV_GetYSize>:
 80154e8:	b510      	push	{r4, lr}
 80154ea:	b082      	sub	sp, #8
 80154ec:	b160      	cbz	r0, 8015508 <GUI_MEMDEV_GetYSize+0x20>
 80154ee:	f7ef fcc1 	bl	8004e74 <GUI_ALLOC_LockH>
 80154f2:	ab02      	add	r3, sp, #8
 80154f4:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 80154f8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80154fc:	4618      	mov	r0, r3
 80154fe:	f7ef fccb 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015502:	4620      	mov	r0, r4
 8015504:	b002      	add	sp, #8
 8015506:	bd10      	pop	{r4, pc}
 8015508:	4b04      	ldr	r3, [pc, #16]	; (801551c <GUI_MEMDEV_GetYSize+0x34>)
 801550a:	681b      	ldr	r3, [r3, #0]
 801550c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801550e:	4604      	mov	r4, r0
 8015510:	2800      	cmp	r0, #0
 8015512:	d1ec      	bne.n	80154ee <GUI_MEMDEV_GetYSize+0x6>
 8015514:	4620      	mov	r0, r4
 8015516:	b002      	add	sp, #8
 8015518:	bd10      	pop	{r4, pc}
 801551a:	bf00      	nop
 801551c:	20000018 	.word	0x20000018

08015520 <GUI_MEMDEV_ReduceYSize>:
 8015520:	b510      	push	{r4, lr}
 8015522:	460c      	mov	r4, r1
 8015524:	b082      	sub	sp, #8
 8015526:	b160      	cbz	r0, 8015542 <GUI_MEMDEV_ReduceYSize+0x22>
 8015528:	f7ef fca4 	bl	8004e74 <GUI_ALLOC_LockH>
 801552c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015530:	9001      	str	r0, [sp, #4]
 8015532:	42a3      	cmp	r3, r4
 8015534:	bfc8      	it	gt
 8015536:	8144      	strhgt	r4, [r0, #10]
 8015538:	a801      	add	r0, sp, #4
 801553a:	f7ef fcad 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801553e:	b002      	add	sp, #8
 8015540:	bd10      	pop	{r4, pc}
 8015542:	4b03      	ldr	r3, [pc, #12]	; (8015550 <GUI_MEMDEV_ReduceYSize+0x30>)
 8015544:	681b      	ldr	r3, [r3, #0]
 8015546:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8015548:	2800      	cmp	r0, #0
 801554a:	d1ed      	bne.n	8015528 <GUI_MEMDEV_ReduceYSize+0x8>
 801554c:	b002      	add	sp, #8
 801554e:	bd10      	pop	{r4, pc}
 8015550:	20000018 	.word	0x20000018

08015554 <GUI_MEMDEV_SetOrg>:
 8015554:	b530      	push	{r4, r5, lr}
 8015556:	460c      	mov	r4, r1
 8015558:	b083      	sub	sp, #12
 801555a:	4615      	mov	r5, r2
 801555c:	b928      	cbnz	r0, 801556a <GUI_MEMDEV_SetOrg+0x16>
 801555e:	4b16      	ldr	r3, [pc, #88]	; (80155b8 <GUI_MEMDEV_SetOrg+0x64>)
 8015560:	681b      	ldr	r3, [r3, #0]
 8015562:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8015564:	b908      	cbnz	r0, 801556a <GUI_MEMDEV_SetOrg+0x16>
 8015566:	b003      	add	sp, #12
 8015568:	bd30      	pop	{r4, r5, pc}
 801556a:	f7ef fc83 	bl	8004e74 <GUI_ALLOC_LockH>
 801556e:	b22d      	sxth	r5, r5
 8015570:	b224      	sxth	r4, r4
 8015572:	80c5      	strh	r5, [r0, #6]
 8015574:	8084      	strh	r4, [r0, #4]
 8015576:	9000      	str	r0, [sp, #0]
 8015578:	f7f2 f8f2 	bl	8007760 <LCD_SetClipRectMax>
 801557c:	9b00      	ldr	r3, [sp, #0]
 801557e:	6958      	ldr	r0, [r3, #20]
 8015580:	b920      	cbnz	r0, 801558c <GUI_MEMDEV_SetOrg+0x38>
 8015582:	4668      	mov	r0, sp
 8015584:	f7ef fc88 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015588:	b003      	add	sp, #12
 801558a:	bd30      	pop	{r4, r5, pc}
 801558c:	f7ef fc72 	bl	8004e74 <GUI_ALLOC_LockH>
 8015590:	9a00      	ldr	r2, [sp, #0]
 8015592:	9001      	str	r0, [sp, #4]
 8015594:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 8015598:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 801559c:	80c2      	strh	r2, [r0, #6]
 801559e:	8083      	strh	r3, [r0, #4]
 80155a0:	b113      	cbz	r3, 80155a8 <GUI_MEMDEV_SetOrg+0x54>
 80155a2:	b10a      	cbz	r2, 80155a8 <GUI_MEMDEV_SetOrg+0x54>
 80155a4:	8004      	strh	r4, [r0, #0]
 80155a6:	8045      	strh	r5, [r0, #2]
 80155a8:	a801      	add	r0, sp, #4
 80155aa:	f7ef fc75 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80155ae:	4668      	mov	r0, sp
 80155b0:	f7ef fc72 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80155b4:	e7e8      	b.n	8015588 <GUI_MEMDEV_SetOrg+0x34>
 80155b6:	bf00      	nop
 80155b8:	20000018 	.word	0x20000018

080155bc <GUI_MEMDEV_Paint1Static>:
 80155bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155c0:	f8df b188 	ldr.w	fp, [pc, #392]	; 801574c <GUI_MEMDEV_Paint1Static+0x190>
 80155c4:	b089      	sub	sp, #36	; 0x24
 80155c6:	4606      	mov	r6, r0
 80155c8:	2705      	movs	r7, #5
 80155ca:	4630      	mov	r0, r6
 80155cc:	f7ef fc52 	bl	8004e74 <GUI_ALLOC_LockH>
 80155d0:	4603      	mov	r3, r0
 80155d2:	a807      	add	r0, sp, #28
 80155d4:	f9b3 8000 	ldrsh.w	r8, [r3]
 80155d8:	f9b3 4004 	ldrsh.w	r4, [r3, #4]
 80155dc:	f9b3 9002 	ldrsh.w	r9, [r3, #2]
 80155e0:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 80155e4:	9307      	str	r3, [sp, #28]
 80155e6:	ebc8 0404 	rsb	r4, r8, r4
 80155ea:	3401      	adds	r4, #1
 80155ec:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 80155f0:	ebc9 0505 	rsb	r5, r9, r5
 80155f4:	f7ef fc50 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80155f8:	2c00      	cmp	r4, #0
 80155fa:	f105 0501 	add.w	r5, r5, #1
 80155fe:	dd55      	ble.n	80156ac <GUI_MEMDEV_Paint1Static+0xf0>
 8015600:	2d00      	cmp	r5, #0
 8015602:	dd53      	ble.n	80156ac <GUI_MEMDEV_Paint1Static+0xf0>
 8015604:	f1ba 0f00 	cmp.w	sl, #0
 8015608:	d155      	bne.n	80156b6 <GUI_MEMDEV_Paint1Static+0xfa>
 801560a:	f7f7 feb5 	bl	800d378 <WM_GetDesktopWindow>
 801560e:	4286      	cmp	r6, r0
 8015610:	d07f      	beq.n	8015712 <GUI_MEMDEV_Paint1Static+0x156>
 8015612:	4b4a      	ldr	r3, [pc, #296]	; (801573c <GUI_MEMDEV_Paint1Static+0x180>)
 8015614:	9301      	str	r3, [sp, #4]
 8015616:	f04f 0a01 	mov.w	sl, #1
 801561a:	4649      	mov	r1, r9
 801561c:	4640      	mov	r0, r8
 801561e:	462b      	mov	r3, r5
 8015620:	4622      	mov	r2, r4
 8015622:	f8cd b008 	str.w	fp, [sp, #8]
 8015626:	f8cd a000 	str.w	sl, [sp]
 801562a:	f7ff fd21 	bl	8015070 <GUI_MEMDEV__CreateFixed>
 801562e:	4680      	mov	r8, r0
 8015630:	4630      	mov	r0, r6
 8015632:	f7ef fc1f 	bl	8004e74 <GUI_ALLOC_LockH>
 8015636:	9007      	str	r0, [sp, #28]
 8015638:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 801563c:	f1b8 0f00 	cmp.w	r8, #0
 8015640:	d060      	beq.n	8015704 <GUI_MEMDEV_Paint1Static+0x148>
 8015642:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015644:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8015750 <GUI_MEMDEV_Paint1Static+0x194>
 8015648:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801564c:	6283      	str	r3, [r0, #40]	; 0x28
 801564e:	a807      	add	r0, sp, #28
 8015650:	f7ef fc22 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015654:	4640      	mov	r0, r8
 8015656:	f7ff fe2b 	bl	80152b0 <GUI_MEMDEV_Select>
 801565a:	9005      	str	r0, [sp, #20]
 801565c:	4650      	mov	r0, sl
 801565e:	f000 fe31 	bl	80162c4 <GUI__AlphaPreserveTrans>
 8015662:	4640      	mov	r0, r8
 8015664:	f7ff ff2e 	bl	80154c4 <GUI_MEMDEV_GetDataPtr>
 8015668:	4a35      	ldr	r2, [pc, #212]	; (8015740 <GUI_MEMDEV_Paint1Static+0x184>)
 801566a:	4b36      	ldr	r3, [pc, #216]	; (8015744 <GUI_MEMDEV_Paint1Static+0x188>)
 801566c:	7819      	ldrb	r1, [r3, #0]
 801566e:	6813      	ldr	r3, [r2, #0]
 8015670:	fb05 f204 	mul.w	r2, r5, r4
 8015674:	0092      	lsls	r2, r2, #2
 8015676:	4c34      	ldr	r4, [pc, #208]	; (8015748 <GUI_MEMDEV_Paint1Static+0x18c>)
 8015678:	4798      	blx	r3
 801567a:	4630      	mov	r0, r6
 801567c:	6825      	ldr	r5, [r4, #0]
 801567e:	f8c9 6000 	str.w	r6, [r9]
 8015682:	f7f7 ff87 	bl	800d594 <WM_GetWindowOrgX>
 8015686:	6020      	str	r0, [r4, #0]
 8015688:	4630      	mov	r0, r6
 801568a:	f7f7 f971 	bl	800c970 <WM__Paint1>
 801568e:	2200      	movs	r2, #0
 8015690:	4610      	mov	r0, r2
 8015692:	6025      	str	r5, [r4, #0]
 8015694:	f8c9 2000 	str.w	r2, [r9]
 8015698:	f000 fe14 	bl	80162c4 <GUI__AlphaPreserveTrans>
 801569c:	9805      	ldr	r0, [sp, #20]
 801569e:	f7ff fe07 	bl	80152b0 <GUI_MEMDEV_Select>
 80156a2:	4630      	mov	r0, r6
 80156a4:	f7ef fbdc 	bl	8004e60 <GUI_ALLOC_h2p>
 80156a8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80156aa:	b9f0      	cbnz	r0, 80156ea <GUI_MEMDEV_Paint1Static+0x12e>
 80156ac:	3f01      	subs	r7, #1
 80156ae:	d18c      	bne.n	80155ca <GUI_MEMDEV_Paint1Static+0xe>
 80156b0:	b009      	add	sp, #36	; 0x24
 80156b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156b6:	4650      	mov	r0, sl
 80156b8:	f7ef fbdc 	bl	8004e74 <GUI_ALLOC_LockH>
 80156bc:	4603      	mov	r3, r0
 80156be:	a808      	add	r0, sp, #32
 80156c0:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 80156c4:	f840 3d08 	str.w	r3, [r0, #-8]!
 80156c8:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 80156cc:	f7ef fbe4 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80156d0:	45a8      	cmp	r8, r5
 80156d2:	d00f      	beq.n	80156f4 <GUI_MEMDEV_Paint1Static+0x138>
 80156d4:	464a      	mov	r2, r9
 80156d6:	4641      	mov	r1, r8
 80156d8:	4650      	mov	r0, sl
 80156da:	f7ff ff3b 	bl	8015554 <GUI_MEMDEV_SetOrg>
 80156de:	4630      	mov	r0, r6
 80156e0:	f7ef fbbe 	bl	8004e60 <GUI_ALLOC_h2p>
 80156e4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80156e6:	2800      	cmp	r0, #0
 80156e8:	d0e0      	beq.n	80156ac <GUI_MEMDEV_Paint1Static+0xf0>
 80156ea:	f000 f91f 	bl	801592c <GUI_MEMDEV_Write>
 80156ee:	b009      	add	sp, #36	; 0x24
 80156f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156f4:	45a1      	cmp	r9, r4
 80156f6:	d0d4      	beq.n	80156a2 <GUI_MEMDEV_Paint1Static+0xe6>
 80156f8:	464a      	mov	r2, r9
 80156fa:	4641      	mov	r1, r8
 80156fc:	4650      	mov	r0, sl
 80156fe:	f7ff ff29 	bl	8015554 <GUI_MEMDEV_SetOrg>
 8015702:	e7ec      	b.n	80156de <GUI_MEMDEV_Paint1Static+0x122>
 8015704:	a807      	add	r0, sp, #28
 8015706:	f7ef fbc7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801570a:	4630      	mov	r0, r6
 801570c:	f7f7 f930 	bl	800c970 <WM__Paint1>
 8015710:	e7cc      	b.n	80156ac <GUI_MEMDEV_Paint1Static+0xf0>
 8015712:	f7f2 fa43 	bl	8007b9c <LCD_GetXSize>
 8015716:	4682      	mov	sl, r0
 8015718:	f7f2 fa56 	bl	8007bc8 <LCD_GetYSize>
 801571c:	4554      	cmp	r4, sl
 801571e:	dc03      	bgt.n	8015728 <GUI_MEMDEV_Paint1Static+0x16c>
 8015720:	4285      	cmp	r5, r0
 8015722:	f77f af76 	ble.w	8015612 <GUI_MEMDEV_Paint1Static+0x56>
 8015726:	46a2      	mov	sl, r4
 8015728:	4285      	cmp	r5, r0
 801572a:	bfa8      	it	ge
 801572c:	4605      	movge	r5, r0
 801572e:	462a      	mov	r2, r5
 8015730:	4651      	mov	r1, sl
 8015732:	4630      	mov	r0, r6
 8015734:	f7f8 f8c6 	bl	800d8c4 <WM_SetSize>
 8015738:	4654      	mov	r4, sl
 801573a:	e76a      	b.n	8015612 <GUI_MEMDEV_Paint1Static+0x56>
 801573c:	0801cfc0 	.word	0x0801cfc0
 8015740:	2000003c 	.word	0x2000003c
 8015744:	20000650 	.word	0x20000650
 8015748:	2001c15c 	.word	0x2001c15c
 801574c:	0801745c 	.word	0x0801745c
 8015750:	2001c20c 	.word	0x2001c20c

08015754 <GUI_USAGE_BM_AddPixel>:
 8015754:	b470      	push	{r4, r5, r6}
 8015756:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801575a:	6903      	ldr	r3, [r0, #16]
 801575c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015760:	1b92      	subs	r2, r2, r6
 8015762:	fb03 f202 	mul.w	r2, r3, r2
 8015766:	1b09      	subs	r1, r1, r4
 8015768:	3214      	adds	r2, #20
 801576a:	eb02 02e1 	add.w	r2, r2, r1, asr #3
 801576e:	2580      	movs	r5, #128	; 0x80
 8015770:	5c83      	ldrb	r3, [r0, r2]
 8015772:	f001 0107 	and.w	r1, r1, #7
 8015776:	fa45 f101 	asr.w	r1, r5, r1
 801577a:	4319      	orrs	r1, r3
 801577c:	5481      	strb	r1, [r0, r2]
 801577e:	bc70      	pop	{r4, r5, r6}
 8015780:	4770      	bx	lr
 8015782:	bf00      	nop

08015784 <GUI_USAGE_BM_GetNextDirty>:
 8015784:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015788:	4293      	cmp	r3, r2
 801578a:	dd3c      	ble.n	8015806 <GUI_USAGE_BM_GetNextDirty+0x82>
 801578c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801578e:	680d      	ldr	r5, [r1, #0]
 8015790:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8015794:	42bd      	cmp	r5, r7
 8015796:	da34      	bge.n	8015802 <GUI_USAGE_BM_GetNextDirty+0x7e>
 8015798:	6906      	ldr	r6, [r0, #16]
 801579a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801579e:	fb06 e602 	mla	r6, r6, r2, lr
 80157a2:	3614      	adds	r6, #20
 80157a4:	f005 0307 	and.w	r3, r5, #7
 80157a8:	5d84      	ldrb	r4, [r0, r6]
 80157aa:	fa04 f303 	lsl.w	r3, r4, r3
 80157ae:	3f01      	subs	r7, #1
 80157b0:	3601      	adds	r6, #1
 80157b2:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 80157b6:	ebce 02e7 	rsb	r2, lr, r7, asr #3
 80157ba:	4430      	add	r0, r6
 80157bc:	d108      	bne.n	80157d0 <GUI_USAGE_BM_GetNextDirty+0x4c>
 80157be:	b322      	cbz	r2, 801580a <GUI_USAGE_BM_GetNextDirty+0x86>
 80157c0:	f810 3b01 	ldrb.w	r3, [r0], #1
 80157c4:	3508      	adds	r5, #8
 80157c6:	f025 0507 	bic.w	r5, r5, #7
 80157ca:	3a01      	subs	r2, #1
 80157cc:	2b00      	cmp	r3, #0
 80157ce:	d0f6      	beq.n	80157be <GUI_USAGE_BM_GetNextDirty+0x3a>
 80157d0:	061e      	lsls	r6, r3, #24
 80157d2:	d434      	bmi.n	801583e <GUI_USAGE_BM_GetNextDirty+0xba>
 80157d4:	005b      	lsls	r3, r3, #1
 80157d6:	b2db      	uxtb	r3, r3
 80157d8:	061c      	lsls	r4, r3, #24
 80157da:	f105 0501 	add.w	r5, r5, #1
 80157de:	d5f9      	bpl.n	80157d4 <GUI_USAGE_BM_GetNextDirty+0x50>
 80157e0:	065f      	lsls	r7, r3, #25
 80157e2:	462c      	mov	r4, r5
 80157e4:	d505      	bpl.n	80157f2 <GUI_USAGE_BM_GetNextDirty+0x6e>
 80157e6:	005b      	lsls	r3, r3, #1
 80157e8:	b2db      	uxtb	r3, r3
 80157ea:	065e      	lsls	r6, r3, #25
 80157ec:	f104 0401 	add.w	r4, r4, #1
 80157f0:	d4f9      	bmi.n	80157e6 <GUI_USAGE_BM_GetNextDirty+0x62>
 80157f2:	f004 0307 	and.w	r3, r4, #7
 80157f6:	2b07      	cmp	r3, #7
 80157f8:	d009      	beq.n	801580e <GUI_USAGE_BM_GetNextDirty+0x8a>
 80157fa:	1b62      	subs	r2, r4, r5
 80157fc:	1c50      	adds	r0, r2, #1
 80157fe:	600d      	str	r5, [r1, #0]
 8015800:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015802:	2000      	movs	r0, #0
 8015804:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015806:	2000      	movs	r0, #0
 8015808:	4770      	bx	lr
 801580a:	4610      	mov	r0, r2
 801580c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801580e:	2a00      	cmp	r2, #0
 8015810:	ddf3      	ble.n	80157fa <GUI_USAGE_BM_GetNextDirty+0x76>
 8015812:	7806      	ldrb	r6, [r0, #0]
 8015814:	2eff      	cmp	r6, #255	; 0xff
 8015816:	f100 0701 	add.w	r7, r0, #1
 801581a:	d10d      	bne.n	8015838 <GUI_USAGE_BM_GetNextDirty+0xb4>
 801581c:	1883      	adds	r3, r0, r2
 801581e:	e003      	b.n	8015828 <GUI_USAGE_BM_GetNextDirty+0xa4>
 8015820:	f817 6b01 	ldrb.w	r6, [r7], #1
 8015824:	2eff      	cmp	r6, #255	; 0xff
 8015826:	d107      	bne.n	8015838 <GUI_USAGE_BM_GetNextDirty+0xb4>
 8015828:	42bb      	cmp	r3, r7
 801582a:	f104 0408 	add.w	r4, r4, #8
 801582e:	d1f7      	bne.n	8015820 <GUI_USAGE_BM_GetNextDirty+0x9c>
 8015830:	e7e3      	b.n	80157fa <GUI_USAGE_BM_GetNextDirty+0x76>
 8015832:	0076      	lsls	r6, r6, #1
 8015834:	b2f6      	uxtb	r6, r6
 8015836:	3401      	adds	r4, #1
 8015838:	0633      	lsls	r3, r6, #24
 801583a:	d4fa      	bmi.n	8015832 <GUI_USAGE_BM_GetNextDirty+0xae>
 801583c:	e7dd      	b.n	80157fa <GUI_USAGE_BM_GetNextDirty+0x76>
 801583e:	2bff      	cmp	r3, #255	; 0xff
 8015840:	bf08      	it	eq
 8015842:	1dec      	addeq	r4, r5, #7
 8015844:	d0d5      	beq.n	80157f2 <GUI_USAGE_BM_GetNextDirty+0x6e>
 8015846:	e7cb      	b.n	80157e0 <GUI_USAGE_BM_GetNextDirty+0x5c>

08015848 <_GUI_USAGE_BM_Delete>:
 8015848:	f7ef bc9e 	b.w	8005188 <GUI_ALLOC_Free>

0801584c <GUI_USAGE_BM_Clear>:
 801584c:	4603      	mov	r3, r0
 801584e:	2100      	movs	r1, #0
 8015850:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8015854:	691b      	ldr	r3, [r3, #16]
 8015856:	3014      	adds	r0, #20
 8015858:	fb03 f202 	mul.w	r2, r3, r2
 801585c:	f001 bde1 	b.w	8017422 <memset>

08015860 <GUI_USAGE_BM_AddHLine>:
 8015860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015862:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015866:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 801586a:	1b0c      	subs	r4, r1, r4
 801586c:	42ac      	cmp	r4, r5
 801586e:	da2b      	bge.n	80158c8 <GUI_USAGE_BM_AddHLine+0x68>
 8015870:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015874:	6905      	ldr	r5, [r0, #16]
 8015876:	4423      	add	r3, r4
 8015878:	3b01      	subs	r3, #1
 801587a:	1a52      	subs	r2, r2, r1
 801587c:	10e6      	asrs	r6, r4, #3
 801587e:	fb05 6502 	mla	r5, r5, r2, r6
 8015882:	43df      	mvns	r7, r3
 8015884:	f007 0707 	and.w	r7, r7, #7
 8015888:	21ff      	movs	r1, #255	; 0xff
 801588a:	3514      	adds	r5, #20
 801588c:	f004 0407 	and.w	r4, r4, #7
 8015890:	fa01 f207 	lsl.w	r2, r1, r7
 8015894:	fa41 f404 	asr.w	r4, r1, r4
 8015898:	ebd6 06e3 	rsbs	r6, r6, r3, asr #3
 801589c:	b2d7      	uxtb	r7, r2
 801589e:	b2e4      	uxtb	r4, r4
 80158a0:	eb00 0205 	add.w	r2, r0, r5
 80158a4:	5d43      	ldrb	r3, [r0, r5]
 80158a6:	d010      	beq.n	80158ca <GUI_USAGE_BM_AddHLine+0x6a>
 80158a8:	3e01      	subs	r6, #1
 80158aa:	431c      	orrs	r4, r3
 80158ac:	2e00      	cmp	r6, #0
 80158ae:	f102 0301 	add.w	r3, r2, #1
 80158b2:	5544      	strb	r4, [r0, r5]
 80158b4:	dd05      	ble.n	80158c2 <GUI_USAGE_BM_AddHLine+0x62>
 80158b6:	4618      	mov	r0, r3
 80158b8:	4632      	mov	r2, r6
 80158ba:	f001 fdb2 	bl	8017422 <memset>
 80158be:	4603      	mov	r3, r0
 80158c0:	4433      	add	r3, r6
 80158c2:	781c      	ldrb	r4, [r3, #0]
 80158c4:	433c      	orrs	r4, r7
 80158c6:	701c      	strb	r4, [r3, #0]
 80158c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80158ca:	403c      	ands	r4, r7
 80158cc:	431c      	orrs	r4, r3
 80158ce:	5544      	strb	r4, [r0, r5]
 80158d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80158d2:	bf00      	nop

080158d4 <GUI_USAGE_BM_Create>:
 80158d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80158d8:	f102 040f 	add.w	r4, r2, #15
 80158dc:	1124      	asrs	r4, r4, #4
 80158de:	0064      	lsls	r4, r4, #1
 80158e0:	461d      	mov	r5, r3
 80158e2:	fb03 f304 	mul.w	r3, r3, r4
 80158e6:	b083      	sub	sp, #12
 80158e8:	4680      	mov	r8, r0
 80158ea:	f103 0014 	add.w	r0, r3, #20
 80158ee:	4616      	mov	r6, r2
 80158f0:	4689      	mov	r9, r1
 80158f2:	f7ef fcaf 	bl	8005254 <GUI_ALLOC_AllocZero>
 80158f6:	4607      	mov	r7, r0
 80158f8:	b190      	cbz	r0, 8015920 <GUI_USAGE_BM_Create+0x4c>
 80158fa:	f7ef fabb 	bl	8004e74 <GUI_ALLOC_LockH>
 80158fe:	4601      	mov	r1, r0
 8015900:	a802      	add	r0, sp, #8
 8015902:	4a09      	ldr	r2, [pc, #36]	; (8015928 <GUI_USAGE_BM_Create+0x54>)
 8015904:	f840 1d04 	str.w	r1, [r0, #-4]!
 8015908:	2301      	movs	r3, #1
 801590a:	808e      	strh	r6, [r1, #4]
 801590c:	80cd      	strh	r5, [r1, #6]
 801590e:	610c      	str	r4, [r1, #16]
 8015910:	f8a1 8000 	strh.w	r8, [r1]
 8015914:	f8a1 9002 	strh.w	r9, [r1, #2]
 8015918:	608a      	str	r2, [r1, #8]
 801591a:	818b      	strh	r3, [r1, #12]
 801591c:	f7ef fabc 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015920:	4638      	mov	r0, r7
 8015922:	b003      	add	sp, #12
 8015924:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015928:	0801cfa8 	.word	0x0801cfa8

0801592c <GUI_MEMDEV_Write>:
 801592c:	b900      	cbnz	r0, 8015930 <GUI_MEMDEV_Write+0x4>
 801592e:	4770      	bx	lr
 8015930:	b570      	push	{r4, r5, r6, lr}
 8015932:	b084      	sub	sp, #16
 8015934:	4604      	mov	r4, r0
 8015936:	f7ef fa9d 	bl	8004e74 <GUI_ALLOC_LockH>
 801593a:	4601      	mov	r1, r0
 801593c:	a801      	add	r0, sp, #4
 801593e:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8015942:	f9b1 5006 	ldrsh.w	r5, [r1, #6]
 8015946:	890a      	ldrh	r2, [r1, #8]
 8015948:	894b      	ldrh	r3, [r1, #10]
 801594a:	9101      	str	r1, [sp, #4]
 801594c:	4432      	add	r2, r6
 801594e:	442b      	add	r3, r5
 8015950:	3a01      	subs	r2, #1
 8015952:	3b01      	subs	r3, #1
 8015954:	f8ad 6008 	strh.w	r6, [sp, #8]
 8015958:	f8ad 200c 	strh.w	r2, [sp, #12]
 801595c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015960:	f8ad 500a 	strh.w	r5, [sp, #10]
 8015964:	f7ef fa98 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015968:	a802      	add	r0, sp, #8
 801596a:	f7f6 ff35 	bl	800c7d8 <WM__InitIVRSearch>
 801596e:	b140      	cbz	r0, 8015982 <GUI_MEMDEV_Write+0x56>
 8015970:	462a      	mov	r2, r5
 8015972:	4631      	mov	r1, r6
 8015974:	4620      	mov	r0, r4
 8015976:	f7ff fb5d 	bl	8015034 <GUI_MEMDEV__WriteToActiveAt>
 801597a:	f7f6 fe07 	bl	800c58c <WM__GetNextIVR>
 801597e:	2800      	cmp	r0, #0
 8015980:	d1f6      	bne.n	8015970 <GUI_MEMDEV_Write+0x44>
 8015982:	b004      	add	sp, #16
 8015984:	bd70      	pop	{r4, r5, r6, pc}
 8015986:	bf00      	nop

08015988 <_cbInvalidateOne>:
 8015988:	f7f6 bca2 	b.w	800c2d0 <WM_InvalidateWindow>

0801598c <WM_BringToTop>:
 801598c:	b900      	cbnz	r0, 8015990 <WM_BringToTop+0x4>
 801598e:	4770      	bx	lr
 8015990:	b530      	push	{r4, r5, lr}
 8015992:	b083      	sub	sp, #12
 8015994:	4604      	mov	r4, r0
 8015996:	f7ef fa6d 	bl	8004e74 <GUI_ALLOC_LockH>
 801599a:	6a03      	ldr	r3, [r0, #32]
 801599c:	9000      	str	r0, [sp, #0]
 801599e:	b333      	cbz	r3, 80159ee <WM_BringToTop+0x62>
 80159a0:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80159a2:	0712      	lsls	r2, r2, #28
 80159a4:	d515      	bpl.n	80159d2 <WM_BringToTop+0x46>
 80159a6:	4603      	mov	r3, r0
 80159a8:	699d      	ldr	r5, [r3, #24]
 80159aa:	4668      	mov	r0, sp
 80159ac:	f7ef fa74 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80159b0:	4620      	mov	r0, r4
 80159b2:	f7f5 fdcf 	bl	800b554 <WM__RemoveWindowFromList>
 80159b6:	4629      	mov	r1, r5
 80159b8:	4620      	mov	r0, r4
 80159ba:	f7f5 fd5d 	bl	800b478 <WM__InsertWindowIntoList>
 80159be:	4620      	mov	r0, r4
 80159c0:	f7f6 fc86 	bl	800c2d0 <WM_InvalidateWindow>
 80159c4:	4620      	mov	r0, r4
 80159c6:	2200      	movs	r2, #0
 80159c8:	490e      	ldr	r1, [pc, #56]	; (8015a04 <WM_BringToTop+0x78>)
 80159ca:	f7f7 fcb5 	bl	800d338 <WM_ForEachDesc>
 80159ce:	b003      	add	sp, #12
 80159d0:	bd30      	pop	{r4, r5, pc}
 80159d2:	4618      	mov	r0, r3
 80159d4:	f7ef fa4e 	bl	8004e74 <GUI_ALLOC_LockH>
 80159d8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80159da:	9001      	str	r0, [sp, #4]
 80159dc:	071b      	lsls	r3, r3, #28
 80159de:	d50b      	bpl.n	80159f8 <WM_BringToTop+0x6c>
 80159e0:	4668      	mov	r0, sp
 80159e2:	f7ef fa59 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80159e6:	a801      	add	r0, sp, #4
 80159e8:	f7ef fa56 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80159ec:	e7ef      	b.n	80159ce <WM_BringToTop+0x42>
 80159ee:	4668      	mov	r0, sp
 80159f0:	f7ef fa52 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80159f4:	b003      	add	sp, #12
 80159f6:	bd30      	pop	{r4, r5, pc}
 80159f8:	a801      	add	r0, sp, #4
 80159fa:	f7ef fa4d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80159fe:	9b00      	ldr	r3, [sp, #0]
 8015a00:	e7d2      	b.n	80159a8 <WM_BringToTop+0x1c>
 8015a02:	bf00      	nop
 8015a04:	08015989 	.word	0x08015989

08015a08 <WM_GetWindowSizeX>:
 8015a08:	b510      	push	{r4, lr}
 8015a0a:	b082      	sub	sp, #8
 8015a0c:	b908      	cbnz	r0, 8015a12 <WM_GetWindowSizeX+0xa>
 8015a0e:	f7f6 fdb7 	bl	800c580 <WM_GetActiveWindow>
 8015a12:	f7ef fa2f 	bl	8004e74 <GUI_ALLOC_LockH>
 8015a16:	aa02      	add	r2, sp, #8
 8015a18:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015a1c:	f842 0d04 	str.w	r0, [r2, #-4]!
 8015a20:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015a24:	4610      	mov	r0, r2
 8015a26:	1b1c      	subs	r4, r3, r4
 8015a28:	f7ef fa36 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015a2c:	3401      	adds	r4, #1
 8015a2e:	4620      	mov	r0, r4
 8015a30:	b002      	add	sp, #8
 8015a32:	bd10      	pop	{r4, pc}

08015a34 <WM_GetWindowSizeY>:
 8015a34:	b510      	push	{r4, lr}
 8015a36:	b082      	sub	sp, #8
 8015a38:	b908      	cbnz	r0, 8015a3e <WM_GetWindowSizeY+0xa>
 8015a3a:	f7f6 fda1 	bl	800c580 <WM_GetActiveWindow>
 8015a3e:	f7ef fa19 	bl	8004e74 <GUI_ALLOC_LockH>
 8015a42:	aa02      	add	r2, sp, #8
 8015a44:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8015a48:	f842 0d04 	str.w	r0, [r2, #-4]!
 8015a4c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015a50:	4610      	mov	r0, r2
 8015a52:	1b1c      	subs	r4, r3, r4
 8015a54:	f7ef fa20 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015a58:	3401      	adds	r4, #1
 8015a5a:	4620      	mov	r0, r4
 8015a5c:	b002      	add	sp, #8
 8015a5e:	bd10      	pop	{r4, pc}

08015a60 <WM_PID__SetPrevState>:
 8015a60:	b410      	push	{r4}
 8015a62:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8015a66:	c807      	ldmia	r0, {r0, r1, r2}
 8015a68:	4b03      	ldr	r3, [pc, #12]	; (8015a78 <WM_PID__SetPrevState+0x18>)
 8015a6a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8015a6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8015a72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015a76:	4770      	bx	lr
 8015a78:	20000654 	.word	0x20000654

08015a7c <_Screen2hWin>:
 8015a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a80:	b099      	sub	sp, #100	; 0x64
 8015a82:	9005      	str	r0, [sp, #20]
 8015a84:	b910      	cbnz	r0, 8015a8c <_Screen2hWin+0x10>
 8015a86:	b019      	add	sp, #100	; 0x64
 8015a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a8c:	4692      	mov	sl, r2
 8015a8e:	4699      	mov	r9, r3
 8015a90:	468b      	mov	fp, r1
 8015a92:	f7ef f9ef 	bl	8004e74 <GUI_ALLOC_LockH>
 8015a96:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015a98:	900f      	str	r0, [sp, #60]	; 0x3c
 8015a9a:	079a      	lsls	r2, r3, #30
 8015a9c:	f140 8218 	bpl.w	8015ed0 <_Screen2hWin+0x454>
 8015aa0:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015aa4:	459a      	cmp	sl, r3
 8015aa6:	f2c0 8213 	blt.w	8015ed0 <_Screen2hWin+0x454>
 8015aaa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015aae:	459a      	cmp	sl, r3
 8015ab0:	f300 820e 	bgt.w	8015ed0 <_Screen2hWin+0x454>
 8015ab4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015ab8:	4599      	cmp	r9, r3
 8015aba:	f2c0 8209 	blt.w	8015ed0 <_Screen2hWin+0x454>
 8015abe:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015ac2:	4599      	cmp	r9, r3
 8015ac4:	f300 8204 	bgt.w	8015ed0 <_Screen2hWin+0x454>
 8015ac8:	69c3      	ldr	r3, [r0, #28]
 8015aca:	9308      	str	r3, [sp, #32]
 8015acc:	2b00      	cmp	r3, #0
 8015ace:	f000 81f1 	beq.w	8015eb4 <_Screen2hWin+0x438>
 8015ad2:	455b      	cmp	r3, fp
 8015ad4:	f000 81ee 	beq.w	8015eb4 <_Screen2hWin+0x438>
 8015ad8:	9b05      	ldr	r3, [sp, #20]
 8015ada:	9808      	ldr	r0, [sp, #32]
 8015adc:	930d      	str	r3, [sp, #52]	; 0x34
 8015ade:	f7ef f9c9 	bl	8004e74 <GUI_ALLOC_LockH>
 8015ae2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015ae4:	9010      	str	r0, [sp, #64]	; 0x40
 8015ae6:	079b      	lsls	r3, r3, #30
 8015ae8:	f140 81d6 	bpl.w	8015e98 <_Screen2hWin+0x41c>
 8015aec:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015af0:	459a      	cmp	sl, r3
 8015af2:	f2c0 81d1 	blt.w	8015e98 <_Screen2hWin+0x41c>
 8015af6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015afa:	459a      	cmp	sl, r3
 8015afc:	f300 81cc 	bgt.w	8015e98 <_Screen2hWin+0x41c>
 8015b00:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015b04:	4599      	cmp	r9, r3
 8015b06:	f2c0 81c7 	blt.w	8015e98 <_Screen2hWin+0x41c>
 8015b0a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015b0e:	4599      	cmp	r9, r3
 8015b10:	f300 81c2 	bgt.w	8015e98 <_Screen2hWin+0x41c>
 8015b14:	69c3      	ldr	r3, [r0, #28]
 8015b16:	9309      	str	r3, [sp, #36]	; 0x24
 8015b18:	2b00      	cmp	r3, #0
 8015b1a:	f000 81d0 	beq.w	8015ebe <_Screen2hWin+0x442>
 8015b1e:	459b      	cmp	fp, r3
 8015b20:	f000 81cd 	beq.w	8015ebe <_Screen2hWin+0x442>
 8015b24:	9b08      	ldr	r3, [sp, #32]
 8015b26:	9305      	str	r3, [sp, #20]
 8015b28:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015b2a:	f7ef f9a3 	bl	8004e74 <GUI_ALLOC_LockH>
 8015b2e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015b30:	9011      	str	r0, [sp, #68]	; 0x44
 8015b32:	079f      	lsls	r7, r3, #30
 8015b34:	f140 81a3 	bpl.w	8015e7e <_Screen2hWin+0x402>
 8015b38:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015b3c:	459a      	cmp	sl, r3
 8015b3e:	f2c0 819e 	blt.w	8015e7e <_Screen2hWin+0x402>
 8015b42:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015b46:	459a      	cmp	sl, r3
 8015b48:	f300 8199 	bgt.w	8015e7e <_Screen2hWin+0x402>
 8015b4c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015b50:	4599      	cmp	r9, r3
 8015b52:	f2c0 8194 	blt.w	8015e7e <_Screen2hWin+0x402>
 8015b56:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015b5a:	4599      	cmp	r9, r3
 8015b5c:	f300 818f 	bgt.w	8015e7e <_Screen2hWin+0x402>
 8015b60:	69c3      	ldr	r3, [r0, #28]
 8015b62:	930a      	str	r3, [sp, #40]	; 0x28
 8015b64:	2b00      	cmp	r3, #0
 8015b66:	f000 81bb 	beq.w	8015ee0 <_Screen2hWin+0x464>
 8015b6a:	459b      	cmp	fp, r3
 8015b6c:	f000 81b8 	beq.w	8015ee0 <_Screen2hWin+0x464>
 8015b70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015b72:	930b      	str	r3, [sp, #44]	; 0x2c
 8015b74:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015b76:	f7ef f97d 	bl	8004e74 <GUI_ALLOC_LockH>
 8015b7a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015b7c:	9012      	str	r0, [sp, #72]	; 0x48
 8015b7e:	079e      	lsls	r6, r3, #30
 8015b80:	f140 8176 	bpl.w	8015e70 <_Screen2hWin+0x3f4>
 8015b84:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015b88:	459a      	cmp	sl, r3
 8015b8a:	f2c0 8171 	blt.w	8015e70 <_Screen2hWin+0x3f4>
 8015b8e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015b92:	459a      	cmp	sl, r3
 8015b94:	f300 816c 	bgt.w	8015e70 <_Screen2hWin+0x3f4>
 8015b98:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015b9c:	4599      	cmp	r9, r3
 8015b9e:	f2c0 8167 	blt.w	8015e70 <_Screen2hWin+0x3f4>
 8015ba2:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015ba6:	4599      	cmp	r9, r3
 8015ba8:	f300 8162 	bgt.w	8015e70 <_Screen2hWin+0x3f4>
 8015bac:	69c3      	ldr	r3, [r0, #28]
 8015bae:	9306      	str	r3, [sp, #24]
 8015bb0:	2b00      	cmp	r3, #0
 8015bb2:	f000 8198 	beq.w	8015ee6 <_Screen2hWin+0x46a>
 8015bb6:	459b      	cmp	fp, r3
 8015bb8:	f000 8195 	beq.w	8015ee6 <_Screen2hWin+0x46a>
 8015bbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015bbe:	930c      	str	r3, [sp, #48]	; 0x30
 8015bc0:	9806      	ldr	r0, [sp, #24]
 8015bc2:	f7ef f957 	bl	8004e74 <GUI_ALLOC_LockH>
 8015bc6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015bc8:	9013      	str	r0, [sp, #76]	; 0x4c
 8015bca:	079d      	lsls	r5, r3, #30
 8015bcc:	f140 8149 	bpl.w	8015e62 <_Screen2hWin+0x3e6>
 8015bd0:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015bd4:	459a      	cmp	sl, r3
 8015bd6:	f2c0 8144 	blt.w	8015e62 <_Screen2hWin+0x3e6>
 8015bda:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015bde:	459a      	cmp	sl, r3
 8015be0:	f300 813f 	bgt.w	8015e62 <_Screen2hWin+0x3e6>
 8015be4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015be8:	4599      	cmp	r9, r3
 8015bea:	f2c0 813a 	blt.w	8015e62 <_Screen2hWin+0x3e6>
 8015bee:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015bf2:	4599      	cmp	r9, r3
 8015bf4:	f300 8135 	bgt.w	8015e62 <_Screen2hWin+0x3e6>
 8015bf8:	69c3      	ldr	r3, [r0, #28]
 8015bfa:	9303      	str	r3, [sp, #12]
 8015bfc:	2b00      	cmp	r3, #0
 8015bfe:	f000 816c 	beq.w	8015eda <_Screen2hWin+0x45e>
 8015c02:	459b      	cmp	fp, r3
 8015c04:	f000 8169 	beq.w	8015eda <_Screen2hWin+0x45e>
 8015c08:	9b06      	ldr	r3, [sp, #24]
 8015c0a:	9307      	str	r3, [sp, #28]
 8015c0c:	9803      	ldr	r0, [sp, #12]
 8015c0e:	f7ef f931 	bl	8004e74 <GUI_ALLOC_LockH>
 8015c12:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015c14:	9014      	str	r0, [sp, #80]	; 0x50
 8015c16:	079c      	lsls	r4, r3, #30
 8015c18:	f140 811d 	bpl.w	8015e56 <_Screen2hWin+0x3da>
 8015c1c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015c20:	459a      	cmp	sl, r3
 8015c22:	f2c0 8118 	blt.w	8015e56 <_Screen2hWin+0x3da>
 8015c26:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015c2a:	459a      	cmp	sl, r3
 8015c2c:	f300 8113 	bgt.w	8015e56 <_Screen2hWin+0x3da>
 8015c30:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015c34:	4599      	cmp	r9, r3
 8015c36:	f2c0 810e 	blt.w	8015e56 <_Screen2hWin+0x3da>
 8015c3a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015c3e:	4599      	cmp	r9, r3
 8015c40:	f300 8109 	bgt.w	8015e56 <_Screen2hWin+0x3da>
 8015c44:	69c3      	ldr	r3, [r0, #28]
 8015c46:	9301      	str	r3, [sp, #4]
 8015c48:	2b00      	cmp	r3, #0
 8015c4a:	f000 8115 	beq.w	8015e78 <_Screen2hWin+0x3fc>
 8015c4e:	459b      	cmp	fp, r3
 8015c50:	f000 8112 	beq.w	8015e78 <_Screen2hWin+0x3fc>
 8015c54:	9b03      	ldr	r3, [sp, #12]
 8015c56:	9304      	str	r3, [sp, #16]
 8015c58:	9801      	ldr	r0, [sp, #4]
 8015c5a:	f7ef f90b 	bl	8004e74 <GUI_ALLOC_LockH>
 8015c5e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015c60:	9015      	str	r0, [sp, #84]	; 0x54
 8015c62:	0799      	lsls	r1, r3, #30
 8015c64:	f140 80f1 	bpl.w	8015e4a <_Screen2hWin+0x3ce>
 8015c68:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015c6c:	459a      	cmp	sl, r3
 8015c6e:	f2c0 80ec 	blt.w	8015e4a <_Screen2hWin+0x3ce>
 8015c72:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015c76:	459a      	cmp	sl, r3
 8015c78:	f300 80e7 	bgt.w	8015e4a <_Screen2hWin+0x3ce>
 8015c7c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015c80:	4599      	cmp	r9, r3
 8015c82:	f2c0 80e2 	blt.w	8015e4a <_Screen2hWin+0x3ce>
 8015c86:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015c8a:	4599      	cmp	r9, r3
 8015c8c:	f300 80dd 	bgt.w	8015e4a <_Screen2hWin+0x3ce>
 8015c90:	69c7      	ldr	r7, [r0, #28]
 8015c92:	2f00      	cmp	r7, #0
 8015c94:	f000 80e9 	beq.w	8015e6a <_Screen2hWin+0x3ee>
 8015c98:	45bb      	cmp	fp, r7
 8015c9a:	f000 80e6 	beq.w	8015e6a <_Screen2hWin+0x3ee>
 8015c9e:	9b01      	ldr	r3, [sp, #4]
 8015ca0:	9302      	str	r3, [sp, #8]
 8015ca2:	4638      	mov	r0, r7
 8015ca4:	f7ef f8e6 	bl	8004e74 <GUI_ALLOC_LockH>
 8015ca8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015caa:	9016      	str	r0, [sp, #88]	; 0x58
 8015cac:	079a      	lsls	r2, r3, #30
 8015cae:	f140 80c8 	bpl.w	8015e42 <_Screen2hWin+0x3c6>
 8015cb2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015cb6:	459a      	cmp	sl, r3
 8015cb8:	f2c0 80c3 	blt.w	8015e42 <_Screen2hWin+0x3c6>
 8015cbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015cc0:	459a      	cmp	sl, r3
 8015cc2:	f300 80be 	bgt.w	8015e42 <_Screen2hWin+0x3c6>
 8015cc6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015cca:	4599      	cmp	r9, r3
 8015ccc:	f2c0 80b9 	blt.w	8015e42 <_Screen2hWin+0x3c6>
 8015cd0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015cd4:	4599      	cmp	r9, r3
 8015cd6:	f300 80b4 	bgt.w	8015e42 <_Screen2hWin+0x3c6>
 8015cda:	69c6      	ldr	r6, [r0, #28]
 8015cdc:	2e00      	cmp	r6, #0
 8015cde:	f000 80be 	beq.w	8015e5e <_Screen2hWin+0x3e2>
 8015ce2:	45b3      	cmp	fp, r6
 8015ce4:	bf18      	it	ne
 8015ce6:	46b8      	movne	r8, r7
 8015ce8:	f000 80b9 	beq.w	8015e5e <_Screen2hWin+0x3e2>
 8015cec:	4630      	mov	r0, r6
 8015cee:	f7ef f8c1 	bl	8004e74 <GUI_ALLOC_LockH>
 8015cf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015cf4:	9017      	str	r0, [sp, #92]	; 0x5c
 8015cf6:	079b      	lsls	r3, r3, #30
 8015cf8:	f140 809f 	bpl.w	8015e3a <_Screen2hWin+0x3be>
 8015cfc:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015d00:	459a      	cmp	sl, r3
 8015d02:	f2c0 809a 	blt.w	8015e3a <_Screen2hWin+0x3be>
 8015d06:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015d0a:	459a      	cmp	sl, r3
 8015d0c:	f300 8095 	bgt.w	8015e3a <_Screen2hWin+0x3be>
 8015d10:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015d14:	4599      	cmp	r9, r3
 8015d16:	f2c0 8090 	blt.w	8015e3a <_Screen2hWin+0x3be>
 8015d1a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015d1e:	4599      	cmp	r9, r3
 8015d20:	f300 808b 	bgt.w	8015e3a <_Screen2hWin+0x3be>
 8015d24:	69c4      	ldr	r4, [r0, #28]
 8015d26:	2c00      	cmp	r4, #0
 8015d28:	f000 8093 	beq.w	8015e52 <_Screen2hWin+0x3d6>
 8015d2c:	45a3      	cmp	fp, r4
 8015d2e:	bf18      	it	ne
 8015d30:	4635      	movne	r5, r6
 8015d32:	d102      	bne.n	8015d3a <_Screen2hWin+0x2be>
 8015d34:	e08d      	b.n	8015e52 <_Screen2hWin+0x3d6>
 8015d36:	45a3      	cmp	fp, r4
 8015d38:	d00e      	beq.n	8015d58 <_Screen2hWin+0x2dc>
 8015d3a:	464b      	mov	r3, r9
 8015d3c:	4652      	mov	r2, sl
 8015d3e:	4659      	mov	r1, fp
 8015d40:	4620      	mov	r0, r4
 8015d42:	f7ff fe9b 	bl	8015a7c <_Screen2hWin>
 8015d46:	2800      	cmp	r0, #0
 8015d48:	bf18      	it	ne
 8015d4a:	4605      	movne	r5, r0
 8015d4c:	4620      	mov	r0, r4
 8015d4e:	f7ef f887 	bl	8004e60 <GUI_ALLOC_h2p>
 8015d52:	6a04      	ldr	r4, [r0, #32]
 8015d54:	2c00      	cmp	r4, #0
 8015d56:	d1ee      	bne.n	8015d36 <_Screen2hWin+0x2ba>
 8015d58:	a817      	add	r0, sp, #92	; 0x5c
 8015d5a:	f7ef f89d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015d5e:	2d00      	cmp	r5, #0
 8015d60:	bf18      	it	ne
 8015d62:	46a8      	movne	r8, r5
 8015d64:	4630      	mov	r0, r6
 8015d66:	f7ef f87b 	bl	8004e60 <GUI_ALLOC_h2p>
 8015d6a:	6a06      	ldr	r6, [r0, #32]
 8015d6c:	b10e      	cbz	r6, 8015d72 <_Screen2hWin+0x2f6>
 8015d6e:	45b3      	cmp	fp, r6
 8015d70:	d1bc      	bne.n	8015cec <_Screen2hWin+0x270>
 8015d72:	a816      	add	r0, sp, #88	; 0x58
 8015d74:	f7ef f890 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015d78:	9b02      	ldr	r3, [sp, #8]
 8015d7a:	f1b8 0f00 	cmp.w	r8, #0
 8015d7e:	bf18      	it	ne
 8015d80:	4643      	movne	r3, r8
 8015d82:	9302      	str	r3, [sp, #8]
 8015d84:	4638      	mov	r0, r7
 8015d86:	f7ef f86b 	bl	8004e60 <GUI_ALLOC_h2p>
 8015d8a:	6a07      	ldr	r7, [r0, #32]
 8015d8c:	b10f      	cbz	r7, 8015d92 <_Screen2hWin+0x316>
 8015d8e:	45bb      	cmp	fp, r7
 8015d90:	d187      	bne.n	8015ca2 <_Screen2hWin+0x226>
 8015d92:	a815      	add	r0, sp, #84	; 0x54
 8015d94:	f7ef f880 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015d98:	9a02      	ldr	r2, [sp, #8]
 8015d9a:	9904      	ldr	r1, [sp, #16]
 8015d9c:	4613      	mov	r3, r2
 8015d9e:	2a00      	cmp	r2, #0
 8015da0:	bf08      	it	eq
 8015da2:	460b      	moveq	r3, r1
 8015da4:	9304      	str	r3, [sp, #16]
 8015da6:	9801      	ldr	r0, [sp, #4]
 8015da8:	f7ef f85a 	bl	8004e60 <GUI_ALLOC_h2p>
 8015dac:	6a03      	ldr	r3, [r0, #32]
 8015dae:	9301      	str	r3, [sp, #4]
 8015db0:	b113      	cbz	r3, 8015db8 <_Screen2hWin+0x33c>
 8015db2:	459b      	cmp	fp, r3
 8015db4:	f47f af50 	bne.w	8015c58 <_Screen2hWin+0x1dc>
 8015db8:	a814      	add	r0, sp, #80	; 0x50
 8015dba:	f7ef f86d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015dbe:	9a04      	ldr	r2, [sp, #16]
 8015dc0:	9907      	ldr	r1, [sp, #28]
 8015dc2:	4613      	mov	r3, r2
 8015dc4:	2a00      	cmp	r2, #0
 8015dc6:	bf08      	it	eq
 8015dc8:	460b      	moveq	r3, r1
 8015dca:	9307      	str	r3, [sp, #28]
 8015dcc:	9803      	ldr	r0, [sp, #12]
 8015dce:	f7ef f847 	bl	8004e60 <GUI_ALLOC_h2p>
 8015dd2:	6a03      	ldr	r3, [r0, #32]
 8015dd4:	9303      	str	r3, [sp, #12]
 8015dd6:	b113      	cbz	r3, 8015dde <_Screen2hWin+0x362>
 8015dd8:	459b      	cmp	fp, r3
 8015dda:	f47f af17 	bne.w	8015c0c <_Screen2hWin+0x190>
 8015dde:	a813      	add	r0, sp, #76	; 0x4c
 8015de0:	f7ef f85a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015de4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015de6:	9a07      	ldr	r2, [sp, #28]
 8015de8:	2a00      	cmp	r2, #0
 8015dea:	bf08      	it	eq
 8015dec:	460a      	moveq	r2, r1
 8015dee:	920c      	str	r2, [sp, #48]	; 0x30
 8015df0:	9806      	ldr	r0, [sp, #24]
 8015df2:	f7ef f835 	bl	8004e60 <GUI_ALLOC_h2p>
 8015df6:	6a03      	ldr	r3, [r0, #32]
 8015df8:	9306      	str	r3, [sp, #24]
 8015dfa:	b113      	cbz	r3, 8015e02 <_Screen2hWin+0x386>
 8015dfc:	459b      	cmp	fp, r3
 8015dfe:	f47f aedf 	bne.w	8015bc0 <_Screen2hWin+0x144>
 8015e02:	a812      	add	r0, sp, #72	; 0x48
 8015e04:	f7ef f848 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e08:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015e0a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015e0c:	2a00      	cmp	r2, #0
 8015e0e:	bf08      	it	eq
 8015e10:	460a      	moveq	r2, r1
 8015e12:	920b      	str	r2, [sp, #44]	; 0x2c
 8015e14:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015e16:	f7ef f823 	bl	8004e60 <GUI_ALLOC_h2p>
 8015e1a:	6a03      	ldr	r3, [r0, #32]
 8015e1c:	930a      	str	r3, [sp, #40]	; 0x28
 8015e1e:	b113      	cbz	r3, 8015e26 <_Screen2hWin+0x3aa>
 8015e20:	459b      	cmp	fp, r3
 8015e22:	f47f aea7 	bne.w	8015b74 <_Screen2hWin+0xf8>
 8015e26:	a811      	add	r0, sp, #68	; 0x44
 8015e28:	f7ef f836 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e2c:	9905      	ldr	r1, [sp, #20]
 8015e2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015e30:	2a00      	cmp	r2, #0
 8015e32:	bf08      	it	eq
 8015e34:	460a      	moveq	r2, r1
 8015e36:	9205      	str	r2, [sp, #20]
 8015e38:	e024      	b.n	8015e84 <_Screen2hWin+0x408>
 8015e3a:	a817      	add	r0, sp, #92	; 0x5c
 8015e3c:	f7ef f82c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e40:	e790      	b.n	8015d64 <_Screen2hWin+0x2e8>
 8015e42:	a816      	add	r0, sp, #88	; 0x58
 8015e44:	f7ef f828 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e48:	e79c      	b.n	8015d84 <_Screen2hWin+0x308>
 8015e4a:	a815      	add	r0, sp, #84	; 0x54
 8015e4c:	f7ef f824 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e50:	e7a9      	b.n	8015da6 <_Screen2hWin+0x32a>
 8015e52:	4635      	mov	r5, r6
 8015e54:	e780      	b.n	8015d58 <_Screen2hWin+0x2dc>
 8015e56:	a814      	add	r0, sp, #80	; 0x50
 8015e58:	f7ef f81e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e5c:	e7b6      	b.n	8015dcc <_Screen2hWin+0x350>
 8015e5e:	46b8      	mov	r8, r7
 8015e60:	e787      	b.n	8015d72 <_Screen2hWin+0x2f6>
 8015e62:	a813      	add	r0, sp, #76	; 0x4c
 8015e64:	f7ef f818 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e68:	e7c2      	b.n	8015df0 <_Screen2hWin+0x374>
 8015e6a:	9b01      	ldr	r3, [sp, #4]
 8015e6c:	9302      	str	r3, [sp, #8]
 8015e6e:	e790      	b.n	8015d92 <_Screen2hWin+0x316>
 8015e70:	a812      	add	r0, sp, #72	; 0x48
 8015e72:	f7ef f811 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e76:	e7cd      	b.n	8015e14 <_Screen2hWin+0x398>
 8015e78:	9b03      	ldr	r3, [sp, #12]
 8015e7a:	9304      	str	r3, [sp, #16]
 8015e7c:	e79c      	b.n	8015db8 <_Screen2hWin+0x33c>
 8015e7e:	a811      	add	r0, sp, #68	; 0x44
 8015e80:	f7ef f80a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e84:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015e86:	f7ee ffeb 	bl	8004e60 <GUI_ALLOC_h2p>
 8015e8a:	6a03      	ldr	r3, [r0, #32]
 8015e8c:	9309      	str	r3, [sp, #36]	; 0x24
 8015e8e:	b1c3      	cbz	r3, 8015ec2 <_Screen2hWin+0x446>
 8015e90:	459b      	cmp	fp, r3
 8015e92:	f47f ae49 	bne.w	8015b28 <_Screen2hWin+0xac>
 8015e96:	e014      	b.n	8015ec2 <_Screen2hWin+0x446>
 8015e98:	a810      	add	r0, sp, #64	; 0x40
 8015e9a:	f7ee fffd 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015e9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015ea0:	9305      	str	r3, [sp, #20]
 8015ea2:	9808      	ldr	r0, [sp, #32]
 8015ea4:	f7ee ffdc 	bl	8004e60 <GUI_ALLOC_h2p>
 8015ea8:	6a03      	ldr	r3, [r0, #32]
 8015eaa:	9308      	str	r3, [sp, #32]
 8015eac:	b113      	cbz	r3, 8015eb4 <_Screen2hWin+0x438>
 8015eae:	459b      	cmp	fp, r3
 8015eb0:	f47f ae12 	bne.w	8015ad8 <_Screen2hWin+0x5c>
 8015eb4:	a80f      	add	r0, sp, #60	; 0x3c
 8015eb6:	f7ee ffef 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015eba:	9805      	ldr	r0, [sp, #20]
 8015ebc:	e5e3      	b.n	8015a86 <_Screen2hWin+0xa>
 8015ebe:	9b08      	ldr	r3, [sp, #32]
 8015ec0:	9305      	str	r3, [sp, #20]
 8015ec2:	a810      	add	r0, sp, #64	; 0x40
 8015ec4:	f7ee ffe8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015ec8:	9b05      	ldr	r3, [sp, #20]
 8015eca:	2b00      	cmp	r3, #0
 8015ecc:	d1e9      	bne.n	8015ea2 <_Screen2hWin+0x426>
 8015ece:	e7e6      	b.n	8015e9e <_Screen2hWin+0x422>
 8015ed0:	a80f      	add	r0, sp, #60	; 0x3c
 8015ed2:	f7ee ffe1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015ed6:	2000      	movs	r0, #0
 8015ed8:	e5d5      	b.n	8015a86 <_Screen2hWin+0xa>
 8015eda:	9b06      	ldr	r3, [sp, #24]
 8015edc:	9307      	str	r3, [sp, #28]
 8015ede:	e77e      	b.n	8015dde <_Screen2hWin+0x362>
 8015ee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ee2:	930b      	str	r3, [sp, #44]	; 0x2c
 8015ee4:	e79f      	b.n	8015e26 <_Screen2hWin+0x3aa>
 8015ee6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015ee8:	930c      	str	r3, [sp, #48]	; 0x30
 8015eea:	e78a      	b.n	8015e02 <_Screen2hWin+0x386>

08015eec <WM_Screen2hWin>:
 8015eec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015eee:	4b1f      	ldr	r3, [pc, #124]	; (8015f6c <WM_Screen2hWin+0x80>)
 8015ef0:	b083      	sub	sp, #12
 8015ef2:	4606      	mov	r6, r0
 8015ef4:	6818      	ldr	r0, [r3, #0]
 8015ef6:	460f      	mov	r7, r1
 8015ef8:	f7f7 fa4a 	bl	800d390 <WM_GetDesktopWindowEx>
 8015efc:	4605      	mov	r5, r0
 8015efe:	b908      	cbnz	r0, 8015f04 <WM_Screen2hWin+0x18>
 8015f00:	b003      	add	sp, #12
 8015f02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015f04:	f7ee ffb6 	bl	8004e74 <GUI_ALLOC_LockH>
 8015f08:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8015f0a:	9001      	str	r0, [sp, #4]
 8015f0c:	079b      	lsls	r3, r3, #30
 8015f0e:	d526      	bpl.n	8015f5e <WM_Screen2hWin+0x72>
 8015f10:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015f14:	429e      	cmp	r6, r3
 8015f16:	db22      	blt.n	8015f5e <WM_Screen2hWin+0x72>
 8015f18:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015f1c:	429e      	cmp	r6, r3
 8015f1e:	dc1e      	bgt.n	8015f5e <WM_Screen2hWin+0x72>
 8015f20:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015f24:	429f      	cmp	r7, r3
 8015f26:	db1a      	blt.n	8015f5e <WM_Screen2hWin+0x72>
 8015f28:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015f2c:	429f      	cmp	r7, r3
 8015f2e:	dc16      	bgt.n	8015f5e <WM_Screen2hWin+0x72>
 8015f30:	69c4      	ldr	r4, [r0, #28]
 8015f32:	b174      	cbz	r4, 8015f52 <WM_Screen2hWin+0x66>
 8015f34:	463b      	mov	r3, r7
 8015f36:	4632      	mov	r2, r6
 8015f38:	2100      	movs	r1, #0
 8015f3a:	4620      	mov	r0, r4
 8015f3c:	f7ff fd9e 	bl	8015a7c <_Screen2hWin>
 8015f40:	2800      	cmp	r0, #0
 8015f42:	bf18      	it	ne
 8015f44:	4605      	movne	r5, r0
 8015f46:	4620      	mov	r0, r4
 8015f48:	f7ee ff8a 	bl	8004e60 <GUI_ALLOC_h2p>
 8015f4c:	6a04      	ldr	r4, [r0, #32]
 8015f4e:	2c00      	cmp	r4, #0
 8015f50:	d1f0      	bne.n	8015f34 <WM_Screen2hWin+0x48>
 8015f52:	a801      	add	r0, sp, #4
 8015f54:	f7ee ffa0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015f58:	4628      	mov	r0, r5
 8015f5a:	b003      	add	sp, #12
 8015f5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015f5e:	a801      	add	r0, sp, #4
 8015f60:	f7ee ff9a 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8015f64:	2000      	movs	r0, #0
 8015f66:	b003      	add	sp, #12
 8015f68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015f6a:	bf00      	nop
 8015f6c:	2001c1e0 	.word	0x2001c1e0

08015f70 <WM_SetCapture>:
 8015f70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f72:	4e0e      	ldr	r6, [pc, #56]	; (8015fac <WM_SetCapture+0x3c>)
 8015f74:	4c0e      	ldr	r4, [pc, #56]	; (8015fb0 <WM_SetCapture+0x40>)
 8015f76:	6833      	ldr	r3, [r6, #0]
 8015f78:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
 8015f7c:	4282      	cmp	r2, r0
 8015f7e:	b085      	sub	sp, #20
 8015f80:	4605      	mov	r5, r0
 8015f82:	460f      	mov	r7, r1
 8015f84:	d000      	beq.n	8015f88 <WM_SetCapture+0x18>
 8015f86:	b92a      	cbnz	r2, 8015f94 <WM_SetCapture+0x24>
 8015f88:	4a0a      	ldr	r2, [pc, #40]	; (8015fb4 <WM_SetCapture+0x44>)
 8015f8a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015f8e:	7017      	strb	r7, [r2, #0]
 8015f90:	b005      	add	sp, #20
 8015f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015f94:	a904      	add	r1, sp, #16
 8015f96:	2318      	movs	r3, #24
 8015f98:	f841 3d10 	str.w	r3, [r1, #-16]!
 8015f9c:	4610      	mov	r0, r2
 8015f9e:	f7f8 fb35 	bl	800e60c <WM__SendMessage>
 8015fa2:	6833      	ldr	r3, [r6, #0]
 8015fa4:	2200      	movs	r2, #0
 8015fa6:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8015faa:	e7ed      	b.n	8015f88 <WM_SetCapture+0x18>
 8015fac:	2001c1e0 	.word	0x2001c1e0
 8015fb0:	2001c204 	.word	0x2001c204
 8015fb4:	2001c1e4 	.word	0x2001c1e4

08015fb8 <WM_ReleaseCapture>:
 8015fb8:	b530      	push	{r4, r5, lr}
 8015fba:	4d09      	ldr	r5, [pc, #36]	; (8015fe0 <WM_ReleaseCapture+0x28>)
 8015fbc:	4c09      	ldr	r4, [pc, #36]	; (8015fe4 <WM_ReleaseCapture+0x2c>)
 8015fbe:	682b      	ldr	r3, [r5, #0]
 8015fc0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015fc4:	b085      	sub	sp, #20
 8015fc6:	b148      	cbz	r0, 8015fdc <WM_ReleaseCapture+0x24>
 8015fc8:	a904      	add	r1, sp, #16
 8015fca:	2318      	movs	r3, #24
 8015fcc:	f841 3d10 	str.w	r3, [r1, #-16]!
 8015fd0:	f7f8 fb1c 	bl	800e60c <WM__SendMessage>
 8015fd4:	682b      	ldr	r3, [r5, #0]
 8015fd6:	2200      	movs	r2, #0
 8015fd8:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8015fdc:	b005      	add	sp, #20
 8015fde:	bd30      	pop	{r4, r5, pc}
 8015fe0:	2001c1e0 	.word	0x2001c1e0
 8015fe4:	2001c204 	.word	0x2001c204

08015fe8 <WM_SetFocusOnNextChild>:
 8015fe8:	b570      	push	{r4, r5, r6, lr}
 8015fea:	b910      	cbnz	r0, 8015ff2 <WM_SetFocusOnNextChild+0xa>
 8015fec:	2400      	movs	r4, #0
 8015fee:	4620      	mov	r0, r4
 8015ff0:	bd70      	pop	{r4, r5, r6, pc}
 8015ff2:	4606      	mov	r6, r0
 8015ff4:	f7f8 fa7e 	bl	800e4f4 <WM__GetFocusedChild>
 8015ff8:	4604      	mov	r4, r0
 8015ffa:	2800      	cmp	r0, #0
 8015ffc:	d130      	bne.n	8016060 <WM_SetFocusOnNextChild+0x78>
 8015ffe:	4630      	mov	r0, r6
 8016000:	f7ee ff2e 	bl	8004e60 <GUI_ALLOC_h2p>
 8016004:	69c5      	ldr	r5, [r0, #28]
 8016006:	42ac      	cmp	r4, r5
 8016008:	bf08      	it	eq
 801600a:	2500      	moveq	r5, #0
 801600c:	462c      	mov	r4, r5
 801600e:	e010      	b.n	8016032 <WM_SetFocusOnNextChild+0x4a>
 8016010:	4620      	mov	r0, r4
 8016012:	2c00      	cmp	r4, #0
 8016014:	d0ea      	beq.n	8015fec <WM_SetFocusOnNextChild+0x4>
 8016016:	f7ee ff23 	bl	8004e60 <GUI_ALLOC_h2p>
 801601a:	6a03      	ldr	r3, [r0, #32]
 801601c:	b91b      	cbnz	r3, 8016026 <WM_SetFocusOnNextChild+0x3e>
 801601e:	4630      	mov	r0, r6
 8016020:	f7ee ff1e 	bl	8004e60 <GUI_ALLOC_h2p>
 8016024:	69c3      	ldr	r3, [r0, #28]
 8016026:	429c      	cmp	r4, r3
 8016028:	bf14      	ite	ne
 801602a:	461c      	movne	r4, r3
 801602c:	2400      	moveq	r4, #0
 801602e:	42a5      	cmp	r5, r4
 8016030:	d004      	beq.n	801603c <WM_SetFocusOnNextChild+0x54>
 8016032:	4620      	mov	r0, r4
 8016034:	f7f7 fb74 	bl	800d720 <WM_IsFocusable>
 8016038:	2800      	cmp	r0, #0
 801603a:	d0e9      	beq.n	8016010 <WM_SetFocusOnNextChild+0x28>
 801603c:	2c00      	cmp	r4, #0
 801603e:	d0d5      	beq.n	8015fec <WM_SetFocusOnNextChild+0x4>
 8016040:	4d0a      	ldr	r5, [pc, #40]	; (801606c <WM_SetFocusOnNextChild+0x84>)
 8016042:	4620      	mov	r0, r4
 8016044:	682e      	ldr	r6, [r5, #0]
 8016046:	f7f6 fa81 	bl	800c54c <WM__GetTopLevelLayer>
 801604a:	1c42      	adds	r2, r0, #1
 801604c:	4603      	mov	r3, r0
 801604e:	d0ce      	beq.n	8015fee <WM_SetFocusOnNextChild+0x6>
 8016050:	4620      	mov	r0, r4
 8016052:	602b      	str	r3, [r5, #0]
 8016054:	f7f7 fbd4 	bl	800d800 <WM_SetFocus>
 8016058:	602e      	str	r6, [r5, #0]
 801605a:	2800      	cmp	r0, #0
 801605c:	d1c6      	bne.n	8015fec <WM_SetFocusOnNextChild+0x4>
 801605e:	e7c6      	b.n	8015fee <WM_SetFocusOnNextChild+0x6>
 8016060:	f7ee fefe 	bl	8004e60 <GUI_ALLOC_h2p>
 8016064:	6a05      	ldr	r5, [r0, #32]
 8016066:	2d00      	cmp	r5, #0
 8016068:	d1cd      	bne.n	8016006 <WM_SetFocusOnNextChild+0x1e>
 801606a:	e7c8      	b.n	8015ffe <WM_SetFocusOnNextChild+0x16>
 801606c:	2001c1e0 	.word	0x2001c1e0

08016070 <WM_SetFocusOnPrevChild>:
 8016070:	b538      	push	{r3, r4, r5, lr}
 8016072:	b910      	cbnz	r0, 801607a <WM_SetFocusOnPrevChild+0xa>
 8016074:	2400      	movs	r4, #0
 8016076:	4620      	mov	r0, r4
 8016078:	bd38      	pop	{r3, r4, r5, pc}
 801607a:	f7f8 fa3b 	bl	800e4f4 <WM__GetFocusedChild>
 801607e:	4604      	mov	r4, r0
 8016080:	bb10      	cbnz	r0, 80160c8 <WM_SetFocusOnPrevChild+0x58>
 8016082:	4620      	mov	r0, r4
 8016084:	f7f8 fa5c 	bl	800e540 <WM__GetLastSibling>
 8016088:	4605      	mov	r5, r0
 801608a:	42ac      	cmp	r4, r5
 801608c:	bf08      	it	eq
 801608e:	2500      	moveq	r5, #0
 8016090:	462c      	mov	r4, r5
 8016092:	e00d      	b.n	80160b0 <WM_SetFocusOnPrevChild+0x40>
 8016094:	4620      	mov	r0, r4
 8016096:	b184      	cbz	r4, 80160ba <WM_SetFocusOnPrevChild+0x4a>
 8016098:	f7f8 fa60 	bl	800e55c <WM__GetPrevSibling>
 801609c:	b910      	cbnz	r0, 80160a4 <WM_SetFocusOnPrevChild+0x34>
 801609e:	4620      	mov	r0, r4
 80160a0:	f7f8 fa4e 	bl	800e540 <WM__GetLastSibling>
 80160a4:	4284      	cmp	r4, r0
 80160a6:	bf14      	ite	ne
 80160a8:	4604      	movne	r4, r0
 80160aa:	2400      	moveq	r4, #0
 80160ac:	42a5      	cmp	r5, r4
 80160ae:	d004      	beq.n	80160ba <WM_SetFocusOnPrevChild+0x4a>
 80160b0:	4620      	mov	r0, r4
 80160b2:	f7f7 fb35 	bl	800d720 <WM_IsFocusable>
 80160b6:	2800      	cmp	r0, #0
 80160b8:	d0ec      	beq.n	8016094 <WM_SetFocusOnPrevChild+0x24>
 80160ba:	4620      	mov	r0, r4
 80160bc:	f7f7 fba0 	bl	800d800 <WM_SetFocus>
 80160c0:	2800      	cmp	r0, #0
 80160c2:	d1d7      	bne.n	8016074 <WM_SetFocusOnPrevChild+0x4>
 80160c4:	4620      	mov	r0, r4
 80160c6:	bd38      	pop	{r3, r4, r5, pc}
 80160c8:	f7f8 fa48 	bl	800e55c <WM__GetPrevSibling>
 80160cc:	4605      	mov	r5, r0
 80160ce:	2800      	cmp	r0, #0
 80160d0:	d1db      	bne.n	801608a <WM_SetFocusOnPrevChild+0x1a>
 80160d2:	e7d6      	b.n	8016082 <WM_SetFocusOnPrevChild+0x12>

080160d4 <WM_SetScrollbarH>:
 80160d4:	b570      	push	{r4, r5, r6, lr}
 80160d6:	460d      	mov	r5, r1
 80160d8:	b082      	sub	sp, #8
 80160da:	21ff      	movs	r1, #255	; 0xff
 80160dc:	4606      	mov	r6, r0
 80160de:	f7f7 f9b7 	bl	800d450 <WM_GetDialogItem>
 80160e2:	4604      	mov	r4, r0
 80160e4:	b14d      	cbz	r5, 80160fa <WM_SetScrollbarH+0x26>
 80160e6:	b980      	cbnz	r0, 801610a <WM_SetScrollbarH+0x36>
 80160e8:	4630      	mov	r0, r6
 80160ea:	4621      	mov	r1, r4
 80160ec:	f7fa fbac 	bl	8010848 <SCROLLBAR_CreateAttached>
 80160f0:	1c20      	adds	r0, r4, #0
 80160f2:	bf18      	it	ne
 80160f4:	2001      	movne	r0, #1
 80160f6:	b002      	add	sp, #8
 80160f8:	bd70      	pop	{r4, r5, r6, pc}
 80160fa:	2800      	cmp	r0, #0
 80160fc:	d0f8      	beq.n	80160f0 <WM_SetScrollbarH+0x1c>
 80160fe:	f001 f929 	bl	8017354 <WM_HideWindow>
 8016102:	4620      	mov	r0, r4
 8016104:	f7f6 fc90 	bl	800ca28 <WM__DeleteSecure>
 8016108:	e7f2      	b.n	80160f0 <WM_SetScrollbarH+0x1c>
 801610a:	f7ee feb3 	bl	8004e74 <GUI_ALLOC_LockH>
 801610e:	aa02      	add	r2, sp, #8
 8016110:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8016112:	f842 0d04 	str.w	r0, [r2, #-4]!
 8016116:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801611a:	f043 0302 	orr.w	r3, r3, #2
 801611e:	6283      	str	r3, [r0, #40]	; 0x28
 8016120:	4610      	mov	r0, r2
 8016122:	f7ee feb9 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016126:	e7e3      	b.n	80160f0 <WM_SetScrollbarH+0x1c>

08016128 <WM_SetScrollbarV>:
 8016128:	b570      	push	{r4, r5, r6, lr}
 801612a:	460d      	mov	r5, r1
 801612c:	b082      	sub	sp, #8
 801612e:	21fe      	movs	r1, #254	; 0xfe
 8016130:	4606      	mov	r6, r0
 8016132:	f7f7 f98d 	bl	800d450 <WM_GetDialogItem>
 8016136:	4604      	mov	r4, r0
 8016138:	b14d      	cbz	r5, 801614e <WM_SetScrollbarV+0x26>
 801613a:	b980      	cbnz	r0, 801615e <WM_SetScrollbarV+0x36>
 801613c:	4630      	mov	r0, r6
 801613e:	2108      	movs	r1, #8
 8016140:	f7fa fb82 	bl	8010848 <SCROLLBAR_CreateAttached>
 8016144:	1c20      	adds	r0, r4, #0
 8016146:	bf18      	it	ne
 8016148:	2001      	movne	r0, #1
 801614a:	b002      	add	sp, #8
 801614c:	bd70      	pop	{r4, r5, r6, pc}
 801614e:	2800      	cmp	r0, #0
 8016150:	d0f8      	beq.n	8016144 <WM_SetScrollbarV+0x1c>
 8016152:	f001 f8ff 	bl	8017354 <WM_HideWindow>
 8016156:	4620      	mov	r0, r4
 8016158:	f7f6 fc66 	bl	800ca28 <WM__DeleteSecure>
 801615c:	e7f2      	b.n	8016144 <WM_SetScrollbarV+0x1c>
 801615e:	f7ee fe89 	bl	8004e74 <GUI_ALLOC_LockH>
 8016162:	aa02      	add	r2, sp, #8
 8016164:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8016166:	f842 0d04 	str.w	r0, [r2, #-4]!
 801616a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801616e:	f043 0302 	orr.w	r3, r3, #2
 8016172:	6283      	str	r3, [r0, #40]	; 0x28
 8016174:	4610      	mov	r0, r2
 8016176:	f7ee fe8f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801617a:	e7e3      	b.n	8016144 <WM_SetScrollbarV+0x1c>

0801617c <WM_SetHasTrans>:
 801617c:	b900      	cbnz	r0, 8016180 <WM_SetHasTrans+0x4>
 801617e:	4770      	bx	lr
 8016180:	b530      	push	{r4, r5, lr}
 8016182:	b083      	sub	sp, #12
 8016184:	4604      	mov	r4, r0
 8016186:	f7ee fe75 	bl	8004e74 <GUI_ALLOC_LockH>
 801618a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801618c:	9001      	str	r0, [sp, #4]
 801618e:	07db      	lsls	r3, r3, #31
 8016190:	d504      	bpl.n	801619c <WM_SetHasTrans+0x20>
 8016192:	a801      	add	r0, sp, #4
 8016194:	f7ee fe80 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016198:	b003      	add	sp, #12
 801619a:	bd30      	pop	{r4, r5, pc}
 801619c:	4620      	mov	r0, r4
 801619e:	f7f7 fbdf 	bl	800d960 <WM_ValidateWindow>
 80161a2:	9d01      	ldr	r5, [sp, #4]
 80161a4:	4907      	ldr	r1, [pc, #28]	; (80161c4 <WM_SetHasTrans+0x48>)
 80161a6:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 80161a8:	680b      	ldr	r3, [r1, #0]
 80161aa:	f042 0201 	orr.w	r2, r2, #1
 80161ae:	3301      	adds	r3, #1
 80161b0:	4620      	mov	r0, r4
 80161b2:	62aa      	str	r2, [r5, #40]	; 0x28
 80161b4:	600b      	str	r3, [r1, #0]
 80161b6:	f7f6 f88b 	bl	800c2d0 <WM_InvalidateWindow>
 80161ba:	a801      	add	r0, sp, #4
 80161bc:	f7ee fe6c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80161c0:	b003      	add	sp, #12
 80161c2:	bd30      	pop	{r4, r5, pc}
 80161c4:	2001c210 	.word	0x2001c210

080161c8 <WM_GetHasTrans>:
 80161c8:	b508      	push	{r3, lr}
 80161ca:	b900      	cbnz	r0, 80161ce <WM_GetHasTrans+0x6>
 80161cc:	bd08      	pop	{r3, pc}
 80161ce:	f7ee fe47 	bl	8004e60 <GUI_ALLOC_h2p>
 80161d2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80161d4:	f000 0001 	and.w	r0, r0, #1
 80161d8:	bd08      	pop	{r3, pc}
 80161da:	bf00      	nop

080161dc <GL_FillCircle>:
 80161dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161e0:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 80162c0 <GL_FillCircle+0xe4>
 80161e4:	4e35      	ldr	r6, [pc, #212]	; (80162bc <GL_FillCircle+0xe0>)
 80161e6:	f8db 4000 	ldr.w	r4, [fp]
 80161ea:	4615      	mov	r5, r2
 80161ec:	f240 22c3 	movw	r2, #707	; 0x2c3
 80161f0:	fb02 f205 	mul.w	r2, r2, r5
 80161f4:	4603      	mov	r3, r0
 80161f6:	b085      	sub	sp, #20
 80161f8:	fb86 0902 	smull	r0, r9, r6, r2
 80161fc:	6e60      	ldr	r0, [r4, #100]	; 0x64
 80161fe:	9302      	str	r3, [sp, #8]
 8016200:	17d2      	asrs	r2, r2, #31
 8016202:	ebc2 19a9 	rsb	r9, r2, r9, asr #6
 8016206:	18ef      	adds	r7, r5, r3
 8016208:	ebc5 0803 	rsb	r8, r5, r3
 801620c:	eb05 7ed5 	add.w	lr, r5, r5, lsr #31
 8016210:	fb05 f605 	mul.w	r6, r5, r5
 8016214:	6804      	ldr	r4, [r0, #0]
 8016216:	eb06 036e 	add.w	r3, r6, lr, asr #1
 801621a:	f109 0901 	add.w	r9, r9, #1
 801621e:	463a      	mov	r2, r7
 8016220:	4640      	mov	r0, r8
 8016222:	9301      	str	r3, [sp, #4]
 8016224:	468a      	mov	sl, r1
 8016226:	47a0      	blx	r4
 8016228:	f1b9 0f00 	cmp.w	r9, #0
 801622c:	dd42      	ble.n	80162b4 <GL_FillCircle+0xd8>
 801622e:	9a02      	ldr	r2, [sp, #8]
 8016230:	2401      	movs	r4, #1
 8016232:	1913      	adds	r3, r2, r4
 8016234:	9302      	str	r3, [sp, #8]
 8016236:	1e53      	subs	r3, r2, #1
 8016238:	9303      	str	r3, [sp, #12]
 801623a:	4633      	mov	r3, r6
 801623c:	4616      	mov	r6, r2
 801623e:	e01a      	b.n	8016276 <GL_FillCircle+0x9a>
 8016240:	3d01      	subs	r5, #1
 8016242:	19af      	adds	r7, r5, r6
 8016244:	ebc5 0806 	rsb	r8, r5, r6
 8016248:	f8db 3000 	ldr.w	r3, [fp]
 801624c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801624e:	eb0a 0104 	add.w	r1, sl, r4
 8016252:	463a      	mov	r2, r7
 8016254:	681b      	ldr	r3, [r3, #0]
 8016256:	4640      	mov	r0, r8
 8016258:	4798      	blx	r3
 801625a:	f8db 3000 	ldr.w	r3, [fp]
 801625e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016260:	ebc4 010a 	rsb	r1, r4, sl
 8016264:	463a      	mov	r2, r7
 8016266:	681b      	ldr	r3, [r3, #0]
 8016268:	4640      	mov	r0, r8
 801626a:	3401      	adds	r4, #1
 801626c:	4798      	blx	r3
 801626e:	45a1      	cmp	r9, r4
 8016270:	db20      	blt.n	80162b4 <GL_FillCircle+0xd8>
 8016272:	fb05 f305 	mul.w	r3, r5, r5
 8016276:	9a01      	ldr	r2, [sp, #4]
 8016278:	fb04 3304 	mla	r3, r4, r4, r3
 801627c:	429a      	cmp	r2, r3
 801627e:	dae3      	bge.n	8016248 <GL_FillCircle+0x6c>
 8016280:	45a9      	cmp	r9, r5
 8016282:	dadd      	bge.n	8016240 <GL_FillCircle+0x64>
 8016284:	9a02      	ldr	r2, [sp, #8]
 8016286:	f8db 3000 	ldr.w	r3, [fp]
 801628a:	1b17      	subs	r7, r2, r4
 801628c:	9a03      	ldr	r2, [sp, #12]
 801628e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016290:	eb02 0804 	add.w	r8, r2, r4
 8016294:	4638      	mov	r0, r7
 8016296:	4642      	mov	r2, r8
 8016298:	eb0a 0105 	add.w	r1, sl, r5
 801629c:	681b      	ldr	r3, [r3, #0]
 801629e:	4798      	blx	r3
 80162a0:	f8db 3000 	ldr.w	r3, [fp]
 80162a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80162a6:	4642      	mov	r2, r8
 80162a8:	4638      	mov	r0, r7
 80162aa:	681b      	ldr	r3, [r3, #0]
 80162ac:	ebc5 010a 	rsb	r1, r5, sl
 80162b0:	4798      	blx	r3
 80162b2:	e7c5      	b.n	8016240 <GL_FillCircle+0x64>
 80162b4:	b005      	add	sp, #20
 80162b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162ba:	bf00      	nop
 80162bc:	10624dd3 	.word	0x10624dd3
 80162c0:	20000018 	.word	0x20000018

080162c4 <GUI__AlphaPreserveTrans>:
 80162c4:	b510      	push	{r4, lr}
 80162c6:	4b09      	ldr	r3, [pc, #36]	; (80162ec <GUI__AlphaPreserveTrans+0x28>)
 80162c8:	781c      	ldrb	r4, [r3, #0]
 80162ca:	b938      	cbnz	r0, 80162dc <GUI__AlphaPreserveTrans+0x18>
 80162cc:	4602      	mov	r2, r0
 80162ce:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80162d2:	701a      	strb	r2, [r3, #0]
 80162d4:	f7fe fe10 	bl	8014ef8 <LCD_AA_SetOrMask>
 80162d8:	4620      	mov	r0, r4
 80162da:	bd10      	pop	{r4, pc}
 80162dc:	2201      	movs	r2, #1
 80162de:	2000      	movs	r0, #0
 80162e0:	701a      	strb	r2, [r3, #0]
 80162e2:	f7fe fe09 	bl	8014ef8 <LCD_AA_SetOrMask>
 80162e6:	4620      	mov	r0, r4
 80162e8:	bd10      	pop	{r4, pc}
 80162ea:	bf00      	nop
 80162ec:	2001c184 	.word	0x2001c184

080162f0 <_GetDevData>:
 80162f0:	2901      	cmp	r1, #1
 80162f2:	4802      	ldr	r0, [pc, #8]	; (80162fc <_GetDevData+0xc>)
 80162f4:	bf18      	it	ne
 80162f6:	2000      	movne	r0, #0
 80162f8:	4770      	bx	lr
 80162fa:	bf00      	nop
 80162fc:	0801cfc0 	.word	0x0801cfc0

08016300 <_GetDevFunc>:
 8016300:	2916      	cmp	r1, #22
 8016302:	4802      	ldr	r0, [pc, #8]	; (801630c <_GetDevFunc+0xc>)
 8016304:	bf18      	it	ne
 8016306:	2000      	movne	r0, #0
 8016308:	4770      	bx	lr
 801630a:	bf00      	nop
 801630c:	080171d5 	.word	0x080171d5

08016310 <_GetDevProp>:
 8016310:	2908      	cmp	r1, #8
 8016312:	bf0c      	ite	eq
 8016314:	2020      	moveq	r0, #32
 8016316:	2000      	movne	r0, #0
 8016318:	4770      	bx	lr
 801631a:	bf00      	nop

0801631c <_SetOrg>:
 801631c:	6800      	ldr	r0, [r0, #0]
 801631e:	68c3      	ldr	r3, [r0, #12]
 8016320:	6a1b      	ldr	r3, [r3, #32]
 8016322:	4718      	bx	r3

08016324 <_GetRect>:
 8016324:	b570      	push	{r4, r5, r6, lr}
 8016326:	b082      	sub	sp, #8
 8016328:	6880      	ldr	r0, [r0, #8]
 801632a:	460c      	mov	r4, r1
 801632c:	f7ee fda2 	bl	8004e74 <GUI_ALLOC_LockH>
 8016330:	a902      	add	r1, sp, #8
 8016332:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8016336:	f9b0 5006 	ldrsh.w	r5, [r0, #6]
 801633a:	8902      	ldrh	r2, [r0, #8]
 801633c:	8943      	ldrh	r3, [r0, #10]
 801633e:	f841 0d04 	str.w	r0, [r1, #-4]!
 8016342:	4432      	add	r2, r6
 8016344:	442b      	add	r3, r5
 8016346:	3a01      	subs	r2, #1
 8016348:	3b01      	subs	r3, #1
 801634a:	8026      	strh	r6, [r4, #0]
 801634c:	80a2      	strh	r2, [r4, #4]
 801634e:	8065      	strh	r5, [r4, #2]
 8016350:	80e3      	strh	r3, [r4, #6]
 8016352:	4608      	mov	r0, r1
 8016354:	f7ee fda0 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016358:	b002      	add	sp, #8
 801635a:	bd70      	pop	{r4, r5, r6, pc}

0801635c <_DrawBitmap>:
 801635c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016360:	4caa      	ldr	r4, [pc, #680]	; (801660c <_DrawBitmap+0x2b0>)
 8016362:	6824      	ldr	r4, [r4, #0]
 8016364:	b093      	sub	sp, #76	; 0x4c
 8016366:	6e26      	ldr	r6, [r4, #96]	; 0x60
 8016368:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801636a:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 801636e:	b916      	cbnz	r6, 8016376 <_DrawBitmap+0x1a>
 8016370:	b013      	add	sp, #76	; 0x4c
 8016372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016376:	4607      	mov	r7, r0
 8016378:	4630      	mov	r0, r6
 801637a:	9208      	str	r2, [sp, #32]
 801637c:	9303      	str	r3, [sp, #12]
 801637e:	460c      	mov	r4, r1
 8016380:	f7ee fd78 	bl	8004e74 <GUI_ALLOC_LockH>
 8016384:	6942      	ldr	r2, [r0, #20]
 8016386:	900f      	str	r0, [sp, #60]	; 0x3c
 8016388:	2a00      	cmp	r2, #0
 801638a:	f040 80d6 	bne.w	801653a <_DrawBitmap+0x1de>
 801638e:	4603      	mov	r3, r0
 8016390:	68db      	ldr	r3, [r3, #12]
 8016392:	9304      	str	r3, [sp, #16]
 8016394:	a80f      	add	r0, sp, #60	; 0x3c
 8016396:	9210      	str	r2, [sp, #64]	; 0x40
 8016398:	f7ee fd7e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801639c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801639e:	9810      	ldr	r0, [sp, #64]	; 0x40
 80163a0:	18e3      	adds	r3, r4, r3
 80163a2:	9305      	str	r3, [sp, #20]
 80163a4:	4b99      	ldr	r3, [pc, #612]	; (801660c <_DrawBitmap+0x2b0>)
 80163a6:	681b      	ldr	r3, [r3, #0]
 80163a8:	b120      	cbz	r0, 80163b4 <_DrawBitmap+0x58>
 80163aa:	7c1a      	ldrb	r2, [r3, #16]
 80163ac:	4c97      	ldr	r4, [pc, #604]	; (801660c <_DrawBitmap+0x2b0>)
 80163ae:	0796      	lsls	r6, r2, #30
 80163b0:	f140 8098 	bpl.w	80164e4 <_DrawBitmap+0x188>
 80163b4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80163b6:	f7ee fd5d 	bl	8004e74 <GUI_ALLOC_LockH>
 80163ba:	4604      	mov	r4, r0
 80163bc:	9908      	ldr	r1, [sp, #32]
 80163be:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80163c2:	68e3      	ldr	r3, [r4, #12]
 80163c4:	1a8a      	subs	r2, r1, r2
 80163c6:	fb03 f302 	mul.w	r3, r3, r2
 80163ca:	9905      	ldr	r1, [sp, #20]
 80163cc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80163d0:	a812      	add	r0, sp, #72	; 0x48
 80163d2:	1a8a      	subs	r2, r1, r2
 80163d4:	3318      	adds	r3, #24
 80163d6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80163da:	18e3      	adds	r3, r4, r3
 80163dc:	f840 4d04 	str.w	r4, [r0, #-4]!
 80163e0:	9302      	str	r3, [sp, #8]
 80163e2:	f7ee fd59 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80163e6:	2d17      	cmp	r5, #23
 80163e8:	dd4d      	ble.n	8016486 <_DrawBitmap+0x12a>
 80163ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80163ec:	2b00      	cmp	r3, #0
 80163ee:	dd40      	ble.n	8016472 <_DrawBitmap+0x116>
 80163f0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80163f4:	9707      	str	r7, [sp, #28]
 80163f6:	4443      	add	r3, r8
 80163f8:	9306      	str	r3, [sp, #24]
 80163fa:	9b03      	ldr	r3, [sp, #12]
 80163fc:	f8df 9218 	ldr.w	r9, [pc, #536]	; 8016618 <_DrawBitmap+0x2bc>
 8016400:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8016402:	009b      	lsls	r3, r3, #2
 8016404:	9308      	str	r3, [sp, #32]
 8016406:	9810      	ldr	r0, [sp, #64]	; 0x40
 8016408:	b128      	cbz	r0, 8016416 <_DrawBitmap+0xba>
 801640a:	6883      	ldr	r3, [r0, #8]
 801640c:	9905      	ldr	r1, [sp, #20]
 801640e:	685c      	ldr	r4, [r3, #4]
 8016410:	9b03      	ldr	r3, [sp, #12]
 8016412:	4642      	mov	r2, r8
 8016414:	47a0      	blx	r4
 8016416:	9b07      	ldr	r3, [sp, #28]
 8016418:	691b      	ldr	r3, [r3, #16]
 801641a:	68da      	ldr	r2, [r3, #12]
 801641c:	2a00      	cmp	r2, #0
 801641e:	f040 8085 	bne.w	801652c <_DrawBitmap+0x1d0>
 8016422:	685b      	ldr	r3, [r3, #4]
 8016424:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8016428:	4798      	blx	r3
 801642a:	f8dd a008 	ldr.w	sl, [sp, #8]
 801642e:	9c03      	ldr	r4, [sp, #12]
 8016430:	0e05      	lsrs	r5, r0, #24
 8016432:	463e      	mov	r6, r7
 8016434:	4633      	mov	r3, r6
 8016436:	f04f 0e00 	mov.w	lr, #0
 801643a:	f853 2b04 	ldr.w	r2, [r3], #4
 801643e:	ebb5 6f12 	cmp.w	r5, r2, lsr #24
 8016442:	d058      	beq.n	80164f6 <_DrawBitmap+0x19a>
 8016444:	f1be 0f00 	cmp.w	lr, #0
 8016448:	d159      	bne.n	80164fe <_DrawBitmap+0x1a2>
 801644a:	6830      	ldr	r0, [r6, #0]
 801644c:	0e02      	lsrs	r2, r0, #24
 801644e:	d165      	bne.n	801651c <_DrawBitmap+0x1c0>
 8016450:	3c01      	subs	r4, #1
 8016452:	f10a 0a04 	add.w	sl, sl, #4
 8016456:	3604      	adds	r6, #4
 8016458:	2c00      	cmp	r4, #0
 801645a:	d1eb      	bne.n	8016434 <_DrawBitmap+0xd8>
 801645c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801645e:	9a04      	ldr	r2, [sp, #16]
 8016460:	441f      	add	r7, r3
 8016462:	9b02      	ldr	r3, [sp, #8]
 8016464:	4413      	add	r3, r2
 8016466:	9302      	str	r3, [sp, #8]
 8016468:	9b06      	ldr	r3, [sp, #24]
 801646a:	f108 0801 	add.w	r8, r8, #1
 801646e:	4598      	cmp	r8, r3
 8016470:	d1c9      	bne.n	8016406 <_DrawBitmap+0xaa>
 8016472:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016474:	2b00      	cmp	r3, #0
 8016476:	f43f af7b 	beq.w	8016370 <_DrawBitmap+0x14>
 801647a:	a810      	add	r0, sp, #64	; 0x40
 801647c:	f7ee fd0c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016480:	b013      	add	sp, #76	; 0x4c
 8016482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016486:	2d10      	cmp	r5, #16
 8016488:	d05d      	beq.n	8016546 <_DrawBitmap+0x1ea>
 801648a:	2d08      	cmp	r5, #8
 801648c:	f000 80c6 	beq.w	801661c <_DrawBitmap+0x2c0>
 8016490:	4b5f      	ldr	r3, [pc, #380]	; (8016610 <_DrawBitmap+0x2b4>)
 8016492:	f1ba 0f00 	cmp.w	sl, #0
 8016496:	bf08      	it	eq
 8016498:	469a      	moveq	sl, r3
 801649a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801649c:	2b00      	cmp	r3, #0
 801649e:	f340 80ad 	ble.w	80165fc <_DrawBitmap+0x2a0>
 80164a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80164a4:	9a02      	ldr	r2, [sp, #8]
 80164a6:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80164a8:	009b      	lsls	r3, r3, #2
 80164aa:	930a      	str	r3, [sp, #40]	; 0x28
 80164ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80164ae:	005b      	lsls	r3, r3, #1
 80164b0:	930c      	str	r3, [sp, #48]	; 0x30
 80164b2:	2300      	movs	r3, #0
 80164b4:	2d02      	cmp	r5, #2
 80164b6:	f000 8284 	beq.w	80169c2 <_DrawBitmap+0x666>
 80164ba:	2d04      	cmp	r5, #4
 80164bc:	f000 8134 	beq.w	8016728 <_DrawBitmap+0x3cc>
 80164c0:	2d01      	cmp	r5, #1
 80164c2:	f000 8361 	beq.w	8016b88 <_DrawBitmap+0x82c>
 80164c6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80164c8:	4401      	add	r1, r0
 80164ca:	9804      	ldr	r0, [sp, #16]
 80164cc:	4402      	add	r2, r0
 80164ce:	981c      	ldr	r0, [sp, #112]	; 0x70
 80164d0:	3301      	adds	r3, #1
 80164d2:	4298      	cmp	r0, r3
 80164d4:	dcee      	bgt.n	80164b4 <_DrawBitmap+0x158>
 80164d6:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
 80164da:	46de      	mov	lr, fp
 80164dc:	f1be 0f00 	cmp.w	lr, #0
 80164e0:	d1cb      	bne.n	801647a <_DrawBitmap+0x11e>
 80164e2:	e745      	b.n	8016370 <_DrawBitmap+0x14>
 80164e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80164e6:	9300      	str	r3, [sp, #0]
 80164e8:	9a08      	ldr	r2, [sp, #32]
 80164ea:	9b03      	ldr	r3, [sp, #12]
 80164ec:	9905      	ldr	r1, [sp, #20]
 80164ee:	f7f3 fea5 	bl	800a23c <GUI_USAGE_AddRect>
 80164f2:	6823      	ldr	r3, [r4, #0]
 80164f4:	e75e      	b.n	80163b4 <_DrawBitmap+0x58>
 80164f6:	f10e 0e01 	add.w	lr, lr, #1
 80164fa:	45a6      	cmp	lr, r4
 80164fc:	d19d      	bne.n	801643a <_DrawBitmap+0xde>
 80164fe:	ea4f 0b8e 	mov.w	fp, lr, lsl #2
 8016502:	4631      	mov	r1, r6
 8016504:	4650      	mov	r0, sl
 8016506:	465a      	mov	r2, fp
 8016508:	f8d9 3000 	ldr.w	r3, [r9]
 801650c:	ebce 0404 	rsb	r4, lr, r4
 8016510:	445e      	add	r6, fp
 8016512:	4798      	blx	r3
 8016514:	44da      	add	sl, fp
 8016516:	2c00      	cmp	r4, #0
 8016518:	d18c      	bne.n	8016434 <_DrawBitmap+0xd8>
 801651a:	e79f      	b.n	801645c <_DrawBitmap+0x100>
 801651c:	4b3d      	ldr	r3, [pc, #244]	; (8016614 <_DrawBitmap+0x2b8>)
 801651e:	f8da 1000 	ldr.w	r1, [sl]
 8016522:	681b      	ldr	r3, [r3, #0]
 8016524:	4798      	blx	r3
 8016526:	f8ca 0000 	str.w	r0, [sl]
 801652a:	e791      	b.n	8016450 <_DrawBitmap+0xf4>
 801652c:	f8d9 3000 	ldr.w	r3, [r9]
 8016530:	9a08      	ldr	r2, [sp, #32]
 8016532:	9802      	ldr	r0, [sp, #8]
 8016534:	4639      	mov	r1, r7
 8016536:	4798      	blx	r3
 8016538:	e790      	b.n	801645c <_DrawBitmap+0x100>
 801653a:	4610      	mov	r0, r2
 801653c:	f7ee fc9a 	bl	8004e74 <GUI_ALLOC_LockH>
 8016540:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016542:	4602      	mov	r2, r0
 8016544:	e724      	b.n	8016390 <_DrawBitmap+0x34>
 8016546:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016548:	2b00      	cmp	r3, #0
 801654a:	dd92      	ble.n	8016472 <_DrawBitmap+0x116>
 801654c:	f8dd a020 	ldr.w	sl, [sp, #32]
 8016550:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8016552:	4453      	add	r3, sl
 8016554:	9306      	str	r3, [sp, #24]
 8016556:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016558:	f1a3 0b02 	sub.w	fp, r3, #2
 801655c:	b35e      	cbz	r6, 80165b6 <_DrawBitmap+0x25a>
 801655e:	68b2      	ldr	r2, [r6, #8]
 8016560:	9d03      	ldr	r5, [sp, #12]
 8016562:	6854      	ldr	r4, [r2, #4]
 8016564:	9905      	ldr	r1, [sp, #20]
 8016566:	462b      	mov	r3, r5
 8016568:	4652      	mov	r2, sl
 801656a:	4630      	mov	r0, r6
 801656c:	47a0      	blx	r4
 801656e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016572:	9c05      	ldr	r4, [sp, #20]
 8016574:	46d9      	mov	r9, fp
 8016576:	693b      	ldr	r3, [r7, #16]
 8016578:	f839 0f02 	ldrh.w	r0, [r9, #2]!
 801657c:	685b      	ldr	r3, [r3, #4]
 801657e:	4798      	blx	r3
 8016580:	68b3      	ldr	r3, [r6, #8]
 8016582:	f848 0b04 	str.w	r0, [r8], #4
 8016586:	4621      	mov	r1, r4
 8016588:	681b      	ldr	r3, [r3, #0]
 801658a:	4652      	mov	r2, sl
 801658c:	4630      	mov	r0, r6
 801658e:	4798      	blx	r3
 8016590:	3d01      	subs	r5, #1
 8016592:	f104 0401 	add.w	r4, r4, #1
 8016596:	d1ee      	bne.n	8016576 <_DrawBitmap+0x21a>
 8016598:	9b02      	ldr	r3, [sp, #8]
 801659a:	9a04      	ldr	r2, [sp, #16]
 801659c:	4413      	add	r3, r2
 801659e:	9302      	str	r3, [sp, #8]
 80165a0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80165a2:	449b      	add	fp, r3
 80165a4:	9b06      	ldr	r3, [sp, #24]
 80165a6:	f10a 0a01 	add.w	sl, sl, #1
 80165aa:	459a      	cmp	sl, r3
 80165ac:	f43f af61 	beq.w	8016472 <_DrawBitmap+0x116>
 80165b0:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80165b2:	2e00      	cmp	r6, #0
 80165b4:	d1d3      	bne.n	801655e <_DrawBitmap+0x202>
 80165b6:	9d02      	ldr	r5, [sp, #8]
 80165b8:	9c03      	ldr	r4, [sp, #12]
 80165ba:	465e      	mov	r6, fp
 80165bc:	693b      	ldr	r3, [r7, #16]
 80165be:	f836 0f02 	ldrh.w	r0, [r6, #2]!
 80165c2:	685b      	ldr	r3, [r3, #4]
 80165c4:	4798      	blx	r3
 80165c6:	3c01      	subs	r4, #1
 80165c8:	f845 0b04 	str.w	r0, [r5], #4
 80165cc:	d1f6      	bne.n	80165bc <_DrawBitmap+0x260>
 80165ce:	e7e3      	b.n	8016598 <_DrawBitmap+0x23c>
 80165d0:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 80165d4:	9b06      	ldr	r3, [sp, #24]
 80165d6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80165d8:	3301      	adds	r3, #1
 80165da:	461c      	mov	r4, r3
 80165dc:	9306      	str	r3, [sp, #24]
 80165de:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80165e0:	4413      	add	r3, r2
 80165e2:	931f      	str	r3, [sp, #124]	; 0x7c
 80165e4:	9a04      	ldr	r2, [sp, #16]
 80165e6:	9b02      	ldr	r3, [sp, #8]
 80165e8:	a80f      	add	r0, sp, #60	; 0x3c
 80165ea:	4413      	add	r3, r2
 80165ec:	9302      	str	r3, [sp, #8]
 80165ee:	f7ee fc53 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80165f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80165f4:	461a      	mov	r2, r3
 80165f6:	42a2      	cmp	r2, r4
 80165f8:	f300 82cf 	bgt.w	8016b9a <_DrawBitmap+0x83e>
 80165fc:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8016600:	f1be 0f00 	cmp.w	lr, #0
 8016604:	f47f af39 	bne.w	801647a <_DrawBitmap+0x11e>
 8016608:	e6b2      	b.n	8016370 <_DrawBitmap+0x14>
 801660a:	bf00      	nop
 801660c:	20000018 	.word	0x20000018
 8016610:	0801cff4 	.word	0x0801cff4
 8016614:	20000030 	.word	0x20000030
 8016618:	20000038 	.word	0x20000038
 801661c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801661e:	2b00      	cmp	r3, #0
 8016620:	f340 8380 	ble.w	8016d24 <_DrawBitmap+0x9c8>
 8016624:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8016628:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
 801662c:	9a03      	ldr	r2, [sp, #12]
 801662e:	444b      	add	r3, r9
 8016630:	9306      	str	r3, [sp, #24]
 8016632:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016634:	4658      	mov	r0, fp
 8016636:	189c      	adds	r4, r3, r2
 8016638:	465d      	mov	r5, fp
 801663a:	4bb9      	ldr	r3, [pc, #740]	; (8016920 <_DrawBitmap+0x5c4>)
 801663c:	681b      	ldr	r3, [r3, #0]
 801663e:	7c1b      	ldrb	r3, [r3, #16]
 8016640:	f1ba 0f00 	cmp.w	sl, #0
 8016644:	d041      	beq.n	80166ca <_DrawBitmap+0x36e>
 8016646:	f013 0303 	ands.w	r3, r3, #3
 801664a:	d033      	beq.n	80166b4 <_DrawBitmap+0x358>
 801664c:	2b02      	cmp	r3, #2
 801664e:	d11e      	bne.n	801668e <_DrawBitmap+0x332>
 8016650:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016652:	2d00      	cmp	r5, #0
 8016654:	d05c      	beq.n	8016710 <_DrawBitmap+0x3b4>
 8016656:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801665a:	9f03      	ldr	r7, [sp, #12]
 801665c:	9e05      	ldr	r6, [sp, #20]
 801665e:	f103 3bff 	add.w	fp, r3, #4294967295
 8016662:	f81b 3f01 	ldrb.w	r3, [fp, #1]!
 8016666:	4631      	mov	r1, r6
 8016668:	464a      	mov	r2, r9
 801666a:	3601      	adds	r6, #1
 801666c:	4628      	mov	r0, r5
 801666e:	b143      	cbz	r3, 8016682 <_DrawBitmap+0x326>
 8016670:	f8d5 e008 	ldr.w	lr, [r5, #8]
 8016674:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8016678:	f8c8 3000 	str.w	r3, [r8]
 801667c:	f8de 3000 	ldr.w	r3, [lr]
 8016680:	4798      	blx	r3
 8016682:	3f01      	subs	r7, #1
 8016684:	f108 0804 	add.w	r8, r8, #4
 8016688:	d1eb      	bne.n	8016662 <_DrawBitmap+0x306>
 801668a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801668c:	4628      	mov	r0, r5
 801668e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016690:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8016692:	4413      	add	r3, r2
 8016694:	931f      	str	r3, [sp, #124]	; 0x7c
 8016696:	9a04      	ldr	r2, [sp, #16]
 8016698:	9b02      	ldr	r3, [sp, #8]
 801669a:	4413      	add	r3, r2
 801669c:	9302      	str	r3, [sp, #8]
 801669e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80166a0:	441c      	add	r4, r3
 80166a2:	9b06      	ldr	r3, [sp, #24]
 80166a4:	f109 0901 	add.w	r9, r9, #1
 80166a8:	454b      	cmp	r3, r9
 80166aa:	d1c6      	bne.n	801663a <_DrawBitmap+0x2de>
 80166ac:	2800      	cmp	r0, #0
 80166ae:	f47f aee4 	bne.w	801647a <_DrawBitmap+0x11e>
 80166b2:	e65d      	b.n	8016370 <_DrawBitmap+0x14>
 80166b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80166b6:	9a02      	ldr	r2, [sp, #8]
 80166b8:	f813 1b01 	ldrb.w	r1, [r3], #1
 80166bc:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80166c0:	f842 1b04 	str.w	r1, [r2], #4
 80166c4:	429c      	cmp	r4, r3
 80166c6:	d1f7      	bne.n	80166b8 <_DrawBitmap+0x35c>
 80166c8:	e7e1      	b.n	801668e <_DrawBitmap+0x332>
 80166ca:	f013 0303 	ands.w	r3, r3, #3
 80166ce:	f000 8252 	beq.w	8016b76 <_DrawBitmap+0x81a>
 80166d2:	2b02      	cmp	r3, #2
 80166d4:	d1db      	bne.n	801668e <_DrawBitmap+0x332>
 80166d6:	2d00      	cmp	r5, #0
 80166d8:	f000 8319 	beq.w	8016d0e <_DrawBitmap+0x9b2>
 80166dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80166de:	9f02      	ldr	r7, [sp, #8]
 80166e0:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80166e4:	9e05      	ldr	r6, [sp, #20]
 80166e6:	f103 38ff 	add.w	r8, r3, #4294967295
 80166ea:	f818 3f01 	ldrb.w	r3, [r8, #1]!
 80166ee:	4631      	mov	r1, r6
 80166f0:	464a      	mov	r2, r9
 80166f2:	3601      	adds	r6, #1
 80166f4:	4628      	mov	r0, r5
 80166f6:	b12b      	cbz	r3, 8016704 <_DrawBitmap+0x3a8>
 80166f8:	f8d5 e008 	ldr.w	lr, [r5, #8]
 80166fc:	603b      	str	r3, [r7, #0]
 80166fe:	f8de 3000 	ldr.w	r3, [lr]
 8016702:	4798      	blx	r3
 8016704:	f1bb 0b01 	subs.w	fp, fp, #1
 8016708:	f107 0704 	add.w	r7, r7, #4
 801670c:	d1ed      	bne.n	80166ea <_DrawBitmap+0x38e>
 801670e:	e7bc      	b.n	801668a <_DrawBitmap+0x32e>
 8016710:	9a02      	ldr	r2, [sp, #8]
 8016712:	f813 1b01 	ldrb.w	r1, [r3], #1
 8016716:	b111      	cbz	r1, 801671e <_DrawBitmap+0x3c2>
 8016718:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 801671c:	6011      	str	r1, [r2, #0]
 801671e:	42a3      	cmp	r3, r4
 8016720:	f102 0204 	add.w	r2, r2, #4
 8016724:	d1f5      	bne.n	8016712 <_DrawBitmap+0x3b6>
 8016726:	e7b1      	b.n	801668c <_DrawBitmap+0x330>
 8016728:	911f      	str	r1, [sp, #124]	; 0x7c
 801672a:	9920      	ldr	r1, [sp, #128]	; 0x80
 801672c:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
 8016730:	9306      	str	r3, [sp, #24]
 8016732:	f1c1 0302 	rsb	r3, r1, #2
 8016736:	b2d9      	uxtb	r1, r3
 8016738:	46d8      	mov	r8, fp
 801673a:	f8dd b07c 	ldr.w	fp, [sp, #124]	; 0x7c
 801673e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016740:	4613      	mov	r3, r2
 8016742:	3304      	adds	r3, #4
 8016744:	9307      	str	r3, [sp, #28]
 8016746:	46c6      	mov	lr, r8
 8016748:	4645      	mov	r5, r8
 801674a:	4b75      	ldr	r3, [pc, #468]	; (8016920 <_DrawBitmap+0x5c4>)
 801674c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801674e:	681a      	ldr	r2, [r3, #0]
 8016750:	f89b 3000 	ldrb.w	r3, [fp]
 8016754:	7c12      	ldrb	r2, [r2, #16]
 8016756:	408b      	lsls	r3, r1
 8016758:	f002 0203 	and.w	r2, r2, #3
 801675c:	9907      	ldr	r1, [sp, #28]
 801675e:	2a01      	cmp	r2, #1
 8016760:	b2dc      	uxtb	r4, r3
 8016762:	f1a1 0904 	sub.w	r9, r1, #4
 8016766:	f000 80b9 	beq.w	80168dc <_DrawBitmap+0x580>
 801676a:	d373      	bcc.n	8016854 <_DrawBitmap+0x4f8>
 801676c:	2a02      	cmp	r2, #2
 801676e:	d161      	bne.n	8016834 <_DrawBitmap+0x4d8>
 8016770:	9908      	ldr	r1, [sp, #32]
 8016772:	9a06      	ldr	r2, [sp, #24]
 8016774:	440a      	add	r2, r1
 8016776:	9920      	ldr	r1, [sp, #128]	; 0x80
 8016778:	9209      	str	r2, [sp, #36]	; 0x24
 801677a:	2900      	cmp	r1, #0
 801677c:	f000 80f2 	beq.w	8016964 <_DrawBitmap+0x608>
 8016780:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8016784:	d00a      	beq.n	801679c <_DrawBitmap+0x440>
 8016786:	0924      	lsrs	r4, r4, #4
 8016788:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 801678c:	f8c9 3000 	str.w	r3, [r9]
 8016790:	b125      	cbz	r5, 801679c <_DrawBitmap+0x440>
 8016792:	68ab      	ldr	r3, [r5, #8]
 8016794:	9905      	ldr	r1, [sp, #20]
 8016796:	681b      	ldr	r3, [r3, #0]
 8016798:	4628      	mov	r0, r5
 801679a:	4798      	blx	r3
 801679c:	9b05      	ldr	r3, [sp, #20]
 801679e:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80167a2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80167a6:	3301      	adds	r3, #1
 80167a8:	9302      	str	r3, [sp, #8]
 80167aa:	9b03      	ldr	r3, [sp, #12]
 80167ac:	f10b 0701 	add.w	r7, fp, #1
 80167b0:	1e5e      	subs	r6, r3, #1
 80167b2:	2e01      	cmp	r6, #1
 80167b4:	f340 80c5 	ble.w	8016942 <_DrawBitmap+0x5e6>
 80167b8:	2d00      	cmp	r5, #0
 80167ba:	f000 80db 	beq.w	8016974 <_DrawBitmap+0x618>
 80167be:	9b02      	ldr	r3, [sp, #8]
 80167c0:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 80167c4:	4632      	mov	r2, r6
 80167c6:	f109 0808 	add.w	r8, r9, #8
 80167ca:	960d      	str	r6, [sp, #52]	; 0x34
 80167cc:	4691      	mov	r9, r2
 80167ce:	461e      	mov	r6, r3
 80167d0:	e021      	b.n	8016816 <_DrawBitmap+0x4ba>
 80167d2:	f8d5 e008 	ldr.w	lr, [r5, #8]
 80167d6:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 80167da:	f848 3c08 	str.w	r3, [r8, #-8]
 80167de:	f8de 3000 	ldr.w	r3, [lr]
 80167e2:	4798      	blx	r3
 80167e4:	f014 040f 	ands.w	r4, r4, #15
 80167e8:	d009      	beq.n	80167fe <_DrawBitmap+0x4a2>
 80167ea:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 80167ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80167f0:	f848 3c04 	str.w	r3, [r8, #-4]
 80167f4:	68ab      	ldr	r3, [r5, #8]
 80167f6:	1c71      	adds	r1, r6, #1
 80167f8:	681b      	ldr	r3, [r3, #0]
 80167fa:	4628      	mov	r0, r5
 80167fc:	4798      	blx	r3
 80167fe:	f1a9 0902 	sub.w	r9, r9, #2
 8016802:	f1b9 0f01 	cmp.w	r9, #1
 8016806:	f106 0602 	add.w	r6, r6, #2
 801680a:	f108 0808 	add.w	r8, r8, #8
 801680e:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 8016812:	f340 8087 	ble.w	8016924 <_DrawBitmap+0x5c8>
 8016816:	f014 0ff0 	tst.w	r4, #240	; 0xf0
 801681a:	ea4f 1314 	mov.w	r3, r4, lsr #4
 801681e:	4631      	mov	r1, r6
 8016820:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016822:	4628      	mov	r0, r5
 8016824:	d1d5      	bne.n	80167d2 <_DrawBitmap+0x476>
 8016826:	2c00      	cmp	r4, #0
 8016828:	d0e9      	beq.n	80167fe <_DrawBitmap+0x4a2>
 801682a:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 801682e:	f848 3c04 	str.w	r3, [r8, #-4]
 8016832:	e7df      	b.n	80167f4 <_DrawBitmap+0x498>
 8016834:	9b06      	ldr	r3, [sp, #24]
 8016836:	991c      	ldr	r1, [sp, #112]	; 0x70
 8016838:	3301      	adds	r3, #1
 801683a:	461a      	mov	r2, r3
 801683c:	9306      	str	r3, [sp, #24]
 801683e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016840:	449b      	add	fp, r3
 8016842:	9b04      	ldr	r3, [sp, #16]
 8016844:	428a      	cmp	r2, r1
 8016846:	46a8      	mov	r8, r5
 8016848:	444b      	add	r3, r9
 801684a:	f6ff af7a 	blt.w	8016742 <_DrawBitmap+0x3e6>
 801684e:	46ab      	mov	fp, r5
 8016850:	46de      	mov	lr, fp
 8016852:	e643      	b.n	80164dc <_DrawBitmap+0x180>
 8016854:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016856:	2b00      	cmp	r3, #0
 8016858:	f000 8089 	beq.w	801696e <_DrawBitmap+0x612>
 801685c:	0924      	lsrs	r4, r4, #4
 801685e:	9b03      	ldr	r3, [sp, #12]
 8016860:	1e59      	subs	r1, r3, #1
 8016862:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 8016866:	f8c9 3000 	str.w	r3, [r9]
 801686a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801686e:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8016872:	f10b 0201 	add.w	r2, fp, #1
 8016876:	2901      	cmp	r1, #1
 8016878:	dd18      	ble.n	80168ac <_DrawBitmap+0x550>
 801687a:	104f      	asrs	r7, r1, #1
 801687c:	19d6      	adds	r6, r2, r7
 801687e:	f001 0101 	and.w	r1, r1, #1
 8016882:	f109 0308 	add.w	r3, r9, #8
 8016886:	0920      	lsrs	r0, r4, #4
 8016888:	f004 040f 	and.w	r4, r4, #15
 801688c:	f85a 0020 	ldr.w	r0, [sl, r0, lsl #2]
 8016890:	f843 0c08 	str.w	r0, [r3, #-8]
 8016894:	f85a 0024 	ldr.w	r0, [sl, r4, lsl #2]
 8016898:	f843 0c04 	str.w	r0, [r3, #-4]
 801689c:	f812 4f01 	ldrb.w	r4, [r2, #1]!
 80168a0:	42b2      	cmp	r2, r6
 80168a2:	f103 0308 	add.w	r3, r3, #8
 80168a6:	d1ee      	bne.n	8016886 <_DrawBitmap+0x52a>
 80168a8:	eb09 09c7 	add.w	r9, r9, r7, lsl #3
 80168ac:	b121      	cbz	r1, 80168b8 <_DrawBitmap+0x55c>
 80168ae:	0924      	lsrs	r4, r4, #4
 80168b0:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 80168b4:	f8c9 3000 	str.w	r3, [r9]
 80168b8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80168ba:	9904      	ldr	r1, [sp, #16]
 80168bc:	9b06      	ldr	r3, [sp, #24]
 80168be:	4493      	add	fp, r2
 80168c0:	9a07      	ldr	r2, [sp, #28]
 80168c2:	440a      	add	r2, r1
 80168c4:	9207      	str	r2, [sp, #28]
 80168c6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80168c8:	3301      	adds	r3, #1
 80168ca:	429a      	cmp	r2, r3
 80168cc:	9306      	str	r3, [sp, #24]
 80168ce:	f73f af3c 	bgt.w	801674a <_DrawBitmap+0x3ee>
 80168d2:	f1be 0f00 	cmp.w	lr, #0
 80168d6:	f47f add0 	bne.w	801647a <_DrawBitmap+0x11e>
 80168da:	e549      	b.n	8016370 <_DrawBitmap+0x14>
 80168dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80168de:	9903      	ldr	r1, [sp, #12]
 80168e0:	4658      	mov	r0, fp
 80168e2:	428b      	cmp	r3, r1
 80168e4:	bfc8      	it	gt
 80168e6:	b2cb      	uxtbgt	r3, r1
 80168e8:	1e5a      	subs	r2, r3, #1
 80168ea:	b2d2      	uxtb	r2, r2
 80168ec:	3201      	adds	r2, #1
 80168ee:	1ac9      	subs	r1, r1, r3
 80168f0:	eb09 0282 	add.w	r2, r9, r2, lsl #2
 80168f4:	0123      	lsls	r3, r4, #4
 80168f6:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 80168fa:	b2dc      	uxtb	r4, r3
 80168fc:	d005      	beq.n	801690a <_DrawBitmap+0x5ae>
 80168fe:	f8d9 3000 	ldr.w	r3, [r9]
 8016902:	f083 03ff 	eor.w	r3, r3, #255	; 0xff
 8016906:	f8c9 3000 	str.w	r3, [r9]
 801690a:	f109 0904 	add.w	r9, r9, #4
 801690e:	4591      	cmp	r9, r2
 8016910:	d1f0      	bne.n	80168f4 <_DrawBitmap+0x598>
 8016912:	2900      	cmp	r1, #0
 8016914:	d0d0      	beq.n	80168b8 <_DrawBitmap+0x55c>
 8016916:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 801691a:	2302      	movs	r3, #2
 801691c:	e7e1      	b.n	80168e2 <_DrawBitmap+0x586>
 801691e:	bf00      	nop
 8016920:	20000018 	.word	0x20000018
 8016924:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8016926:	9902      	ldr	r1, [sp, #8]
 8016928:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801692c:	3e02      	subs	r6, #2
 801692e:	0873      	lsrs	r3, r6, #1
 8016930:	3102      	adds	r1, #2
 8016932:	1c5a      	adds	r2, r3, #1
 8016934:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 8016938:	9102      	str	r1, [sp, #8]
 801693a:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
 801693e:	eb09 09c2 	add.w	r9, r9, r2, lsl #3
 8016942:	b166      	cbz	r6, 801695e <_DrawBitmap+0x602>
 8016944:	0924      	lsrs	r4, r4, #4
 8016946:	d00a      	beq.n	801695e <_DrawBitmap+0x602>
 8016948:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 801694c:	f8c9 3000 	str.w	r3, [r9]
 8016950:	b12d      	cbz	r5, 801695e <_DrawBitmap+0x602>
 8016952:	68ab      	ldr	r3, [r5, #8]
 8016954:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016956:	9902      	ldr	r1, [sp, #8]
 8016958:	681b      	ldr	r3, [r3, #0]
 801695a:	4628      	mov	r0, r5
 801695c:	4798      	blx	r3
 801695e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8016960:	46ae      	mov	lr, r5
 8016962:	e7a9      	b.n	80168b8 <_DrawBitmap+0x55c>
 8016964:	9b05      	ldr	r3, [sp, #20]
 8016966:	9e03      	ldr	r6, [sp, #12]
 8016968:	9302      	str	r3, [sp, #8]
 801696a:	465f      	mov	r7, fp
 801696c:	e721      	b.n	80167b2 <_DrawBitmap+0x456>
 801696e:	9903      	ldr	r1, [sp, #12]
 8016970:	465a      	mov	r2, fp
 8016972:	e780      	b.n	8016876 <_DrawBitmap+0x51a>
 8016974:	3e02      	subs	r6, #2
 8016976:	0872      	lsrs	r2, r6, #1
 8016978:	1c51      	adds	r1, r2, #1
 801697a:	1878      	adds	r0, r7, r1
 801697c:	f109 0308 	add.w	r3, r9, #8
 8016980:	4694      	mov	ip, r2
 8016982:	f014 0ff0 	tst.w	r4, #240	; 0xf0
 8016986:	ea4f 1e14 	mov.w	lr, r4, lsr #4
 801698a:	d003      	beq.n	8016994 <_DrawBitmap+0x638>
 801698c:	f85a 202e 	ldr.w	r2, [sl, lr, lsl #2]
 8016990:	f843 2c08 	str.w	r2, [r3, #-8]
 8016994:	f014 040f 	ands.w	r4, r4, #15
 8016998:	d003      	beq.n	80169a2 <_DrawBitmap+0x646>
 801699a:	f85a 4024 	ldr.w	r4, [sl, r4, lsl #2]
 801699e:	f843 4c04 	str.w	r4, [r3, #-4]
 80169a2:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 80169a6:	42b8      	cmp	r0, r7
 80169a8:	f103 0308 	add.w	r3, r3, #8
 80169ac:	d1e9      	bne.n	8016982 <_DrawBitmap+0x626>
 80169ae:	9b02      	ldr	r3, [sp, #8]
 80169b0:	3302      	adds	r3, #2
 80169b2:	eb03 034c 	add.w	r3, r3, ip, lsl #1
 80169b6:	9302      	str	r3, [sp, #8]
 80169b8:	eb09 09c1 	add.w	r9, r9, r1, lsl #3
 80169bc:	eba6 064c 	sub.w	r6, r6, ip, lsl #1
 80169c0:	e7bf      	b.n	8016942 <_DrawBitmap+0x5e6>
 80169c2:	9306      	str	r3, [sp, #24]
 80169c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80169c6:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
 80169ca:	9202      	str	r2, [sp, #8]
 80169cc:	f1c3 0304 	rsb	r3, r3, #4
 80169d0:	b2db      	uxtb	r3, r3
 80169d2:	911f      	str	r1, [sp, #124]	; 0x7c
 80169d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80169d6:	46d0      	mov	r8, sl
 80169d8:	46de      	mov	lr, fp
 80169da:	465f      	mov	r7, fp
 80169dc:	4bab      	ldr	r3, [pc, #684]	; (8016c8c <_DrawBitmap+0x930>)
 80169de:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80169e0:	681b      	ldr	r3, [r3, #0]
 80169e2:	7814      	ldrb	r4, [r2, #0]
 80169e4:	7c1b      	ldrb	r3, [r3, #16]
 80169e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80169e8:	f003 0303 	and.w	r3, r3, #3
 80169ec:	4094      	lsls	r4, r2
 80169ee:	2b01      	cmp	r3, #1
 80169f0:	b2e4      	uxtb	r4, r4
 80169f2:	f000 808f 	beq.w	8016b14 <_DrawBitmap+0x7b8>
 80169f6:	d358      	bcc.n	8016aaa <_DrawBitmap+0x74e>
 80169f8:	2b02      	cmp	r3, #2
 80169fa:	f040 80aa 	bne.w	8016b52 <_DrawBitmap+0x7f6>
 80169fe:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016a00:	9209      	str	r2, [sp, #36]	; 0x24
 8016a02:	9a05      	ldr	r2, [sp, #20]
 8016a04:	9207      	str	r2, [sp, #28]
 8016a06:	9906      	ldr	r1, [sp, #24]
 8016a08:	9a08      	ldr	r2, [sp, #32]
 8016a0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016a0c:	9d02      	ldr	r5, [sp, #8]
 8016a0e:	f8dd a00c 	ldr.w	sl, [sp, #12]
 8016a12:	eb02 0b01 	add.w	fp, r2, r1
 8016a16:	4553      	cmp	r3, sl
 8016a18:	bfc8      	it	gt
 8016a1a:	fa5f f38a 	uxtbgt.w	r3, sl
 8016a1e:	ebc3 0a0a 	rsb	sl, r3, sl
 8016a22:	3b01      	subs	r3, #1
 8016a24:	b35f      	cbz	r7, 8016a7e <_DrawBitmap+0x722>
 8016a26:	b2db      	uxtb	r3, r3
 8016a28:	f103 0901 	add.w	r9, r3, #1
 8016a2c:	9e07      	ldr	r6, [sp, #28]
 8016a2e:	930a      	str	r3, [sp, #40]	; 0x28
 8016a30:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 8016a34:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 8016a38:	4631      	mov	r1, r6
 8016a3a:	ea4f 1394 	mov.w	r3, r4, lsr #6
 8016a3e:	f106 0601 	add.w	r6, r6, #1
 8016a42:	465a      	mov	r2, fp
 8016a44:	4638      	mov	r0, r7
 8016a46:	d007      	beq.n	8016a58 <_DrawBitmap+0x6fc>
 8016a48:	f8d7 e008 	ldr.w	lr, [r7, #8]
 8016a4c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8016a50:	602b      	str	r3, [r5, #0]
 8016a52:	f8de 3000 	ldr.w	r3, [lr]
 8016a56:	4798      	blx	r3
 8016a58:	3504      	adds	r5, #4
 8016a5a:	00a4      	lsls	r4, r4, #2
 8016a5c:	454d      	cmp	r5, r9
 8016a5e:	b2e4      	uxtb	r4, r4
 8016a60:	d1e8      	bne.n	8016a34 <_DrawBitmap+0x6d8>
 8016a62:	9b07      	ldr	r3, [sp, #28]
 8016a64:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016a66:	3301      	adds	r3, #1
 8016a68:	441a      	add	r2, r3
 8016a6a:	9207      	str	r2, [sp, #28]
 8016a6c:	f1ba 0f00 	cmp.w	sl, #0
 8016a70:	d03a      	beq.n	8016ae8 <_DrawBitmap+0x78c>
 8016a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016a74:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8016a78:	9309      	str	r3, [sp, #36]	; 0x24
 8016a7a:	2304      	movs	r3, #4
 8016a7c:	e7cb      	b.n	8016a16 <_DrawBitmap+0x6ba>
 8016a7e:	b2da      	uxtb	r2, r3
 8016a80:	1c50      	adds	r0, r2, #1
 8016a82:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8016a86:	09a1      	lsrs	r1, r4, #6
 8016a88:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 8016a8c:	ea4f 0384 	mov.w	r3, r4, lsl #2
 8016a90:	b2dc      	uxtb	r4, r3
 8016a92:	bf1c      	itt	ne
 8016a94:	f858 3021 	ldrne.w	r3, [r8, r1, lsl #2]
 8016a98:	602b      	strne	r3, [r5, #0]
 8016a9a:	3504      	adds	r5, #4
 8016a9c:	42a8      	cmp	r0, r5
 8016a9e:	d1f2      	bne.n	8016a86 <_DrawBitmap+0x72a>
 8016aa0:	9b07      	ldr	r3, [sp, #28]
 8016aa2:	3301      	adds	r3, #1
 8016aa4:	18d3      	adds	r3, r2, r3
 8016aa6:	9307      	str	r3, [sp, #28]
 8016aa8:	e7e0      	b.n	8016a6c <_DrawBitmap+0x710>
 8016aaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016aac:	9e02      	ldr	r6, [sp, #8]
 8016aae:	9d03      	ldr	r5, [sp, #12]
 8016ab0:	f8dd c07c 	ldr.w	ip, [sp, #124]	; 0x7c
 8016ab4:	42ab      	cmp	r3, r5
 8016ab6:	bfc8      	it	gt
 8016ab8:	b2eb      	uxtbgt	r3, r5
 8016aba:	1e58      	subs	r0, r3, #1
 8016abc:	b2c0      	uxtb	r0, r0
 8016abe:	1aed      	subs	r5, r5, r3
 8016ac0:	eb06 0180 	add.w	r1, r6, r0, lsl #2
 8016ac4:	1f33      	subs	r3, r6, #4
 8016ac6:	09a2      	lsrs	r2, r4, #6
 8016ac8:	00a4      	lsls	r4, r4, #2
 8016aca:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8016ace:	f843 2f04 	str.w	r2, [r3, #4]!
 8016ad2:	428b      	cmp	r3, r1
 8016ad4:	b2e4      	uxtb	r4, r4
 8016ad6:	d1f6      	bne.n	8016ac6 <_DrawBitmap+0x76a>
 8016ad8:	3001      	adds	r0, #1
 8016ada:	eb06 0680 	add.w	r6, r6, r0, lsl #2
 8016ade:	b12d      	cbz	r5, 8016aec <_DrawBitmap+0x790>
 8016ae0:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 8016ae4:	2304      	movs	r3, #4
 8016ae6:	e7e5      	b.n	8016ab4 <_DrawBitmap+0x758>
 8016ae8:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8016aea:	46be      	mov	lr, r7
 8016aec:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016aee:	991e      	ldr	r1, [sp, #120]	; 0x78
 8016af0:	9b06      	ldr	r3, [sp, #24]
 8016af2:	440a      	add	r2, r1
 8016af4:	921f      	str	r2, [sp, #124]	; 0x7c
 8016af6:	9904      	ldr	r1, [sp, #16]
 8016af8:	9a02      	ldr	r2, [sp, #8]
 8016afa:	440a      	add	r2, r1
 8016afc:	9202      	str	r2, [sp, #8]
 8016afe:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8016b00:	3301      	adds	r3, #1
 8016b02:	429a      	cmp	r2, r3
 8016b04:	9306      	str	r3, [sp, #24]
 8016b06:	f73f af69 	bgt.w	80169dc <_DrawBitmap+0x680>
 8016b0a:	f1be 0f00 	cmp.w	lr, #0
 8016b0e:	f47f acb4 	bne.w	801647a <_DrawBitmap+0x11e>
 8016b12:	e42d      	b.n	8016370 <_DrawBitmap+0x14>
 8016b14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016b16:	9b02      	ldr	r3, [sp, #8]
 8016b18:	9803      	ldr	r0, [sp, #12]
 8016b1a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8016b1c:	4282      	cmp	r2, r0
 8016b1e:	bfc8      	it	gt
 8016b20:	b2c2      	uxtbgt	r2, r0
 8016b22:	1e51      	subs	r1, r2, #1
 8016b24:	b2c9      	uxtb	r1, r1
 8016b26:	3101      	adds	r1, #1
 8016b28:	1a80      	subs	r0, r0, r2
 8016b2a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 8016b2e:	00a2      	lsls	r2, r4, #2
 8016b30:	f014 0fc0 	tst.w	r4, #192	; 0xc0
 8016b34:	b2d4      	uxtb	r4, r2
 8016b36:	d003      	beq.n	8016b40 <_DrawBitmap+0x7e4>
 8016b38:	681a      	ldr	r2, [r3, #0]
 8016b3a:	f082 02ff 	eor.w	r2, r2, #255	; 0xff
 8016b3e:	601a      	str	r2, [r3, #0]
 8016b40:	3304      	adds	r3, #4
 8016b42:	428b      	cmp	r3, r1
 8016b44:	d1f3      	bne.n	8016b2e <_DrawBitmap+0x7d2>
 8016b46:	2800      	cmp	r0, #0
 8016b48:	d0d0      	beq.n	8016aec <_DrawBitmap+0x790>
 8016b4a:	f815 4f01 	ldrb.w	r4, [r5, #1]!
 8016b4e:	2204      	movs	r2, #4
 8016b50:	e7e4      	b.n	8016b1c <_DrawBitmap+0x7c0>
 8016b52:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016b54:	991e      	ldr	r1, [sp, #120]	; 0x78
 8016b56:	9b06      	ldr	r3, [sp, #24]
 8016b58:	440a      	add	r2, r1
 8016b5a:	921f      	str	r2, [sp, #124]	; 0x7c
 8016b5c:	9904      	ldr	r1, [sp, #16]
 8016b5e:	9a02      	ldr	r2, [sp, #8]
 8016b60:	440a      	add	r2, r1
 8016b62:	9202      	str	r2, [sp, #8]
 8016b64:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8016b66:	3301      	adds	r3, #1
 8016b68:	429a      	cmp	r2, r3
 8016b6a:	46bb      	mov	fp, r7
 8016b6c:	9306      	str	r3, [sp, #24]
 8016b6e:	f73f af33 	bgt.w	80169d8 <_DrawBitmap+0x67c>
 8016b72:	46de      	mov	lr, fp
 8016b74:	e4b2      	b.n	80164dc <_DrawBitmap+0x180>
 8016b76:	4b46      	ldr	r3, [pc, #280]	; (8016c90 <_DrawBitmap+0x934>)
 8016b78:	9a03      	ldr	r2, [sp, #12]
 8016b7a:	681b      	ldr	r3, [r3, #0]
 8016b7c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8016b7e:	9802      	ldr	r0, [sp, #8]
 8016b80:	4798      	blx	r3
 8016b82:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8016b84:	4628      	mov	r0, r5
 8016b86:	e582      	b.n	801668e <_DrawBitmap+0x332>
 8016b88:	9306      	str	r3, [sp, #24]
 8016b8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016b8c:	f8df b104 	ldr.w	fp, [pc, #260]	; 8016c94 <_DrawBitmap+0x938>
 8016b90:	9202      	str	r2, [sp, #8]
 8016b92:	f1c3 0308 	rsb	r3, r3, #8
 8016b96:	911f      	str	r1, [sp, #124]	; 0x7c
 8016b98:	930a      	str	r3, [sp, #40]	; 0x28
 8016b9a:	4b3c      	ldr	r3, [pc, #240]	; (8016c8c <_DrawBitmap+0x930>)
 8016b9c:	681b      	ldr	r3, [r3, #0]
 8016b9e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016ba0:	f7ee f968 	bl	8004e74 <GUI_ALLOC_LockH>
 8016ba4:	4b39      	ldr	r3, [pc, #228]	; (8016c8c <_DrawBitmap+0x930>)
 8016ba6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016ba8:	681b      	ldr	r3, [r3, #0]
 8016baa:	7812      	ldrb	r2, [r2, #0]
 8016bac:	7c1b      	ldrb	r3, [r3, #16]
 8016bae:	f81b 4002 	ldrb.w	r4, [fp, r2]
 8016bb2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016bb4:	900f      	str	r0, [sp, #60]	; 0x3c
 8016bb6:	f003 0303 	and.w	r3, r3, #3
 8016bba:	2b02      	cmp	r3, #2
 8016bbc:	fa44 f402 	asr.w	r4, r4, r2
 8016bc0:	d048      	beq.n	8016c54 <_DrawBitmap+0x8f8>
 8016bc2:	2b03      	cmp	r3, #3
 8016bc4:	d020      	beq.n	8016c08 <_DrawBitmap+0x8ac>
 8016bc6:	2b01      	cmp	r3, #1
 8016bc8:	d01e      	beq.n	8016c08 <_DrawBitmap+0x8ac>
 8016bca:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016bcc:	9e02      	ldr	r6, [sp, #8]
 8016bce:	9d03      	ldr	r5, [sp, #12]
 8016bd0:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8016bd2:	42a8      	cmp	r0, r5
 8016bd4:	bf28      	it	cs
 8016bd6:	4628      	movcs	r0, r5
 8016bd8:	1a2d      	subs	r5, r5, r0
 8016bda:	4602      	mov	r2, r0
 8016bdc:	4631      	mov	r1, r6
 8016bde:	f004 0301 	and.w	r3, r4, #1
 8016be2:	3a01      	subs	r2, #1
 8016be4:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
 8016be8:	f841 3b04 	str.w	r3, [r1], #4
 8016bec:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8016bf0:	d1f5      	bne.n	8016bde <_DrawBitmap+0x882>
 8016bf2:	eb06 0680 	add.w	r6, r6, r0, lsl #2
 8016bf6:	2d00      	cmp	r5, #0
 8016bf8:	f43f acec 	beq.w	80165d4 <_DrawBitmap+0x278>
 8016bfc:	f817 3f01 	ldrb.w	r3, [r7, #1]!
 8016c00:	2008      	movs	r0, #8
 8016c02:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8016c06:	e7e4      	b.n	8016bd2 <_DrawBitmap+0x876>
 8016c08:	6803      	ldr	r3, [r0, #0]
 8016c0a:	691b      	ldr	r3, [r3, #16]
 8016c0c:	689b      	ldr	r3, [r3, #8]
 8016c0e:	4798      	blx	r3
 8016c10:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016c12:	9f02      	ldr	r7, [sp, #8]
 8016c14:	9e03      	ldr	r6, [sp, #12]
 8016c16:	f8dd e07c 	ldr.w	lr, [sp, #124]	; 0x7c
 8016c1a:	42b5      	cmp	r5, r6
 8016c1c:	bf28      	it	cs
 8016c1e:	4635      	movcs	r5, r6
 8016c20:	1b76      	subs	r6, r6, r5
 8016c22:	462a      	mov	r2, r5
 8016c24:	463b      	mov	r3, r7
 8016c26:	f014 0f01 	tst.w	r4, #1
 8016c2a:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8016c2e:	d002      	beq.n	8016c36 <_DrawBitmap+0x8da>
 8016c30:	6819      	ldr	r1, [r3, #0]
 8016c32:	4041      	eors	r1, r0
 8016c34:	6019      	str	r1, [r3, #0]
 8016c36:	3a01      	subs	r2, #1
 8016c38:	f103 0304 	add.w	r3, r3, #4
 8016c3c:	d1f3      	bne.n	8016c26 <_DrawBitmap+0x8ca>
 8016c3e:	eb07 0785 	add.w	r7, r7, r5, lsl #2
 8016c42:	2e00      	cmp	r6, #0
 8016c44:	f43f acc6 	beq.w	80165d4 <_DrawBitmap+0x278>
 8016c48:	f81e 3f01 	ldrb.w	r3, [lr, #1]!
 8016c4c:	2508      	movs	r5, #8
 8016c4e:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8016c52:	e7e2      	b.n	8016c1a <_DrawBitmap+0x8be>
 8016c54:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016c56:	9209      	str	r2, [sp, #36]	; 0x24
 8016c58:	9908      	ldr	r1, [sp, #32]
 8016c5a:	9a06      	ldr	r2, [sp, #24]
 8016c5c:	f8da 3004 	ldr.w	r3, [sl, #4]
 8016c60:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 8016c64:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016c66:	9e02      	ldr	r6, [sp, #8]
 8016c68:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8016c6c:	9f05      	ldr	r7, [sp, #20]
 8016c6e:	f8cd a084 	str.w	sl, [sp, #132]	; 0x84
 8016c72:	440a      	add	r2, r1
 8016c74:	9207      	str	r2, [sp, #28]
 8016c76:	469a      	mov	sl, r3
 8016c78:	454d      	cmp	r5, r9
 8016c7a:	bf28      	it	cs
 8016c7c:	464d      	movcs	r5, r9
 8016c7e:	ebc5 0909 	rsb	r9, r5, r9
 8016c82:	f1b8 0f00 	cmp.w	r8, #0
 8016c86:	d030      	beq.n	8016cea <_DrawBitmap+0x98e>
 8016c88:	b974      	cbnz	r4, 8016ca8 <_DrawBitmap+0x94c>
 8016c8a:	e02a      	b.n	8016ce2 <_DrawBitmap+0x986>
 8016c8c:	20000018 	.word	0x20000018
 8016c90:	20000038 	.word	0x20000038
 8016c94:	0801bbe8 	.word	0x0801bbe8
 8016c98:	3d01      	subs	r5, #1
 8016c9a:	f107 0701 	add.w	r7, r7, #1
 8016c9e:	f106 0604 	add.w	r6, r6, #4
 8016ca2:	d012      	beq.n	8016cca <_DrawBitmap+0x96e>
 8016ca4:	0864      	lsrs	r4, r4, #1
 8016ca6:	d01c      	beq.n	8016ce2 <_DrawBitmap+0x986>
 8016ca8:	07e1      	lsls	r1, r4, #31
 8016caa:	d5f5      	bpl.n	8016c98 <_DrawBitmap+0x93c>
 8016cac:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8016cb0:	9a07      	ldr	r2, [sp, #28]
 8016cb2:	681b      	ldr	r3, [r3, #0]
 8016cb4:	4639      	mov	r1, r7
 8016cb6:	4640      	mov	r0, r8
 8016cb8:	4798      	blx	r3
 8016cba:	3d01      	subs	r5, #1
 8016cbc:	f8c6 a000 	str.w	sl, [r6]
 8016cc0:	f107 0701 	add.w	r7, r7, #1
 8016cc4:	f106 0604 	add.w	r6, r6, #4
 8016cc8:	d1ec      	bne.n	8016ca4 <_DrawBitmap+0x948>
 8016cca:	f1b9 0f00 	cmp.w	r9, #0
 8016cce:	f43f ac7f 	beq.w	80165d0 <_DrawBitmap+0x274>
 8016cd2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016cd4:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8016cd8:	9209      	str	r2, [sp, #36]	; 0x24
 8016cda:	2508      	movs	r5, #8
 8016cdc:	f81b 4003 	ldrb.w	r4, [fp, r3]
 8016ce0:	e7ca      	b.n	8016c78 <_DrawBitmap+0x91c>
 8016ce2:	eb06 0685 	add.w	r6, r6, r5, lsl #2
 8016ce6:	442f      	add	r7, r5
 8016ce8:	e7ef      	b.n	8016cca <_DrawBitmap+0x96e>
 8016cea:	4653      	mov	r3, sl
 8016cec:	b914      	cbnz	r4, 8016cf4 <_DrawBitmap+0x998>
 8016cee:	e00b      	b.n	8016d08 <_DrawBitmap+0x9ac>
 8016cf0:	0864      	lsrs	r4, r4, #1
 8016cf2:	d008      	beq.n	8016d06 <_DrawBitmap+0x9aa>
 8016cf4:	07e2      	lsls	r2, r4, #31
 8016cf6:	bf48      	it	mi
 8016cf8:	6033      	strmi	r3, [r6, #0]
 8016cfa:	3d01      	subs	r5, #1
 8016cfc:	f106 0604 	add.w	r6, r6, #4
 8016d00:	d1f6      	bne.n	8016cf0 <_DrawBitmap+0x994>
 8016d02:	469a      	mov	sl, r3
 8016d04:	e7e1      	b.n	8016cca <_DrawBitmap+0x96e>
 8016d06:	469a      	mov	sl, r3
 8016d08:	eb06 0685 	add.w	r6, r6, r5, lsl #2
 8016d0c:	e7dd      	b.n	8016cca <_DrawBitmap+0x96e>
 8016d0e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8016d10:	9b02      	ldr	r3, [sp, #8]
 8016d12:	f812 1b01 	ldrb.w	r1, [r2], #1
 8016d16:	b101      	cbz	r1, 8016d1a <_DrawBitmap+0x9be>
 8016d18:	6019      	str	r1, [r3, #0]
 8016d1a:	42a2      	cmp	r2, r4
 8016d1c:	f103 0304 	add.w	r3, r3, #4
 8016d20:	d1f7      	bne.n	8016d12 <_DrawBitmap+0x9b6>
 8016d22:	e4b3      	b.n	801668c <_DrawBitmap+0x330>
 8016d24:	9810      	ldr	r0, [sp, #64]	; 0x40
 8016d26:	2800      	cmp	r0, #0
 8016d28:	f47f aba7 	bne.w	801647a <_DrawBitmap+0x11e>
 8016d2c:	f7ff bb20 	b.w	8016370 <_DrawBitmap+0x14>

08016d30 <_GetPixelIndex>:
 8016d30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016d32:	4b0e      	ldr	r3, [pc, #56]	; (8016d6c <_GetPixelIndex+0x3c>)
 8016d34:	681b      	ldr	r3, [r3, #0]
 8016d36:	b083      	sub	sp, #12
 8016d38:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016d3a:	460e      	mov	r6, r1
 8016d3c:	4617      	mov	r7, r2
 8016d3e:	f7ee f899 	bl	8004e74 <GUI_ALLOC_LockH>
 8016d42:	4605      	mov	r5, r0
 8016d44:	a802      	add	r0, sp, #8
 8016d46:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8016d4a:	68eb      	ldr	r3, [r5, #12]
 8016d4c:	f9b5 4004 	ldrsh.w	r4, [r5, #4]
 8016d50:	f840 5d04 	str.w	r5, [r0, #-4]!
 8016d54:	1abf      	subs	r7, r7, r2
 8016d56:	fb03 f307 	mul.w	r3, r3, r7
 8016d5a:	3318      	adds	r3, #24
 8016d5c:	1b34      	subs	r4, r6, r4
 8016d5e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8016d62:	f7ee f899 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016d66:	5928      	ldr	r0, [r5, r4]
 8016d68:	b003      	add	sp, #12
 8016d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016d6c:	20000018 	.word	0x20000018

08016d70 <_SetPixelIndex>:
 8016d70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016d74:	4c1b      	ldr	r4, [pc, #108]	; (8016de4 <_SetPixelIndex+0x74>)
 8016d76:	6820      	ldr	r0, [r4, #0]
 8016d78:	b083      	sub	sp, #12
 8016d7a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8016d7c:	460f      	mov	r7, r1
 8016d7e:	4690      	mov	r8, r2
 8016d80:	4699      	mov	r9, r3
 8016d82:	f7ee f877 	bl	8004e74 <GUI_ALLOC_LockH>
 8016d86:	6823      	ldr	r3, [r4, #0]
 8016d88:	9000      	str	r0, [sp, #0]
 8016d8a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016d8c:	f7ee f872 	bl	8004e74 <GUI_ALLOC_LockH>
 8016d90:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8016d94:	68c1      	ldr	r1, [r0, #12]
 8016d96:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8016d9a:	ae02      	add	r6, sp, #8
 8016d9c:	ebc2 0208 	rsb	r2, r2, r8
 8016da0:	fb01 f202 	mul.w	r2, r1, r2
 8016da4:	f846 0d04 	str.w	r0, [r6, #-4]!
 8016da8:	3218      	adds	r2, #24
 8016daa:	1b3c      	subs	r4, r7, r4
 8016dac:	4605      	mov	r5, r0
 8016dae:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 8016db2:	4630      	mov	r0, r6
 8016db4:	f7ee f870 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016db8:	f845 9004 	str.w	r9, [r5, r4]
 8016dbc:	9b00      	ldr	r3, [sp, #0]
 8016dbe:	6958      	ldr	r0, [r3, #20]
 8016dc0:	b150      	cbz	r0, 8016dd8 <_SetPixelIndex+0x68>
 8016dc2:	f7ee f857 	bl	8004e74 <GUI_ALLOC_LockH>
 8016dc6:	9001      	str	r0, [sp, #4]
 8016dc8:	6883      	ldr	r3, [r0, #8]
 8016dca:	4642      	mov	r2, r8
 8016dcc:	4639      	mov	r1, r7
 8016dce:	681b      	ldr	r3, [r3, #0]
 8016dd0:	4798      	blx	r3
 8016dd2:	4630      	mov	r0, r6
 8016dd4:	f7ee f860 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016dd8:	4668      	mov	r0, sp
 8016dda:	f7ee f85d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016dde:	b003      	add	sp, #12
 8016de0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016de4:	20000018 	.word	0x20000018

08016de8 <_XorPixel>:
 8016de8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016dec:	4c1e      	ldr	r4, [pc, #120]	; (8016e68 <_XorPixel+0x80>)
 8016dee:	6823      	ldr	r3, [r4, #0]
 8016df0:	b082      	sub	sp, #8
 8016df2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016df4:	460f      	mov	r7, r1
 8016df6:	4690      	mov	r8, r2
 8016df8:	f7ee f83c 	bl	8004e74 <GUI_ALLOC_LockH>
 8016dfc:	6823      	ldr	r3, [r4, #0]
 8016dfe:	9000      	str	r0, [sp, #0]
 8016e00:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016e02:	f7ee f837 	bl	8004e74 <GUI_ALLOC_LockH>
 8016e06:	ae02      	add	r6, sp, #8
 8016e08:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016e0c:	68c2      	ldr	r2, [r0, #12]
 8016e0e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8016e12:	f846 0d04 	str.w	r0, [r6, #-4]!
 8016e16:	ebc3 0308 	rsb	r3, r3, r8
 8016e1a:	fb02 f303 	mul.w	r3, r2, r3
 8016e1e:	4605      	mov	r5, r0
 8016e20:	3318      	adds	r3, #24
 8016e22:	1b3c      	subs	r4, r7, r4
 8016e24:	4630      	mov	r0, r6
 8016e26:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8016e2a:	f7ee f835 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016e2e:	9b00      	ldr	r3, [sp, #0]
 8016e30:	681b      	ldr	r3, [r3, #0]
 8016e32:	691b      	ldr	r3, [r3, #16]
 8016e34:	689b      	ldr	r3, [r3, #8]
 8016e36:	4798      	blx	r3
 8016e38:	592b      	ldr	r3, [r5, r4]
 8016e3a:	9a00      	ldr	r2, [sp, #0]
 8016e3c:	4058      	eors	r0, r3
 8016e3e:	5128      	str	r0, [r5, r4]
 8016e40:	6950      	ldr	r0, [r2, #20]
 8016e42:	b150      	cbz	r0, 8016e5a <_XorPixel+0x72>
 8016e44:	f7ee f816 	bl	8004e74 <GUI_ALLOC_LockH>
 8016e48:	9001      	str	r0, [sp, #4]
 8016e4a:	6883      	ldr	r3, [r0, #8]
 8016e4c:	4642      	mov	r2, r8
 8016e4e:	4639      	mov	r1, r7
 8016e50:	681b      	ldr	r3, [r3, #0]
 8016e52:	4798      	blx	r3
 8016e54:	4630      	mov	r0, r6
 8016e56:	f7ee f81f 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016e5a:	4668      	mov	r0, sp
 8016e5c:	f7ee f81c 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016e60:	b002      	add	sp, #8
 8016e62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016e66:	bf00      	nop
 8016e68:	20000018 	.word	0x20000018

08016e6c <_FillRect>:
 8016e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e70:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8016f58 <_FillRect+0xec>
 8016e74:	f8d8 0000 	ldr.w	r0, [r8]
 8016e78:	b087      	sub	sp, #28
 8016e7a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8016e7c:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 8016e80:	468a      	mov	sl, r1
 8016e82:	4616      	mov	r6, r2
 8016e84:	461f      	mov	r7, r3
 8016e86:	f7ed fff5 	bl	8004e74 <GUI_ALLOC_LockH>
 8016e8a:	f8d8 3000 	ldr.w	r3, [r8]
 8016e8e:	9004      	str	r0, [sp, #16]
 8016e90:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016e92:	f7ed ffef 	bl	8004e74 <GUI_ALLOC_LockH>
 8016e96:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8016e9a:	68c3      	ldr	r3, [r0, #12]
 8016e9c:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 8016ea0:	f8cd a00c 	str.w	sl, [sp, #12]
 8016ea4:	f10d 0b18 	add.w	fp, sp, #24
 8016ea8:	1ab2      	subs	r2, r6, r2
 8016eaa:	fb03 f202 	mul.w	r2, r3, r2
 8016eae:	f84b 0d04 	str.w	r0, [fp, #-4]!
 8016eb2:	4653      	mov	r3, sl
 8016eb4:	1b5d      	subs	r5, r3, r5
 8016eb6:	f102 0118 	add.w	r1, r2, #24
 8016eba:	4604      	mov	r4, r0
 8016ebc:	eb01 0285 	add.w	r2, r1, r5, lsl #2
 8016ec0:	4658      	mov	r0, fp
 8016ec2:	18a5      	adds	r5, r4, r2
 8016ec4:	f7ed ffe8 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016ec8:	9b04      	ldr	r3, [sp, #16]
 8016eca:	f8d8 2000 	ldr.w	r2, [r8]
 8016ece:	6958      	ldr	r0, [r3, #20]
 8016ed0:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 8016ed4:	9b03      	ldr	r3, [sp, #12]
 8016ed6:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8016ed8:	1aff      	subs	r7, r7, r3
 8016eda:	6814      	ldr	r4, [r2, #0]
 8016edc:	3701      	adds	r7, #1
 8016ede:	bb58      	cbnz	r0, 8016f38 <_FillRect+0xcc>
 8016ee0:	454e      	cmp	r6, r9
 8016ee2:	dc10      	bgt.n	8016f06 <_FillRect+0x9a>
 8016ee4:	f8d8 3000 	ldr.w	r3, [r8]
 8016ee8:	7c1b      	ldrb	r3, [r3, #16]
 8016eea:	07db      	lsls	r3, r3, #31
 8016eec:	d411      	bmi.n	8016f12 <_FillRect+0xa6>
 8016eee:	2f00      	cmp	r7, #0
 8016ef0:	dd05      	ble.n	8016efe <_FillRect+0x92>
 8016ef2:	463b      	mov	r3, r7
 8016ef4:	462a      	mov	r2, r5
 8016ef6:	3b01      	subs	r3, #1
 8016ef8:	f842 4b04 	str.w	r4, [r2], #4
 8016efc:	d1fb      	bne.n	8016ef6 <_FillRect+0x8a>
 8016efe:	3601      	adds	r6, #1
 8016f00:	45b1      	cmp	r9, r6
 8016f02:	4455      	add	r5, sl
 8016f04:	daee      	bge.n	8016ee4 <_FillRect+0x78>
 8016f06:	a804      	add	r0, sp, #16
 8016f08:	f7ed ffc6 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016f0c:	b007      	add	sp, #28
 8016f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f12:	9b04      	ldr	r3, [sp, #16]
 8016f14:	681b      	ldr	r3, [r3, #0]
 8016f16:	691b      	ldr	r3, [r3, #16]
 8016f18:	689b      	ldr	r3, [r3, #8]
 8016f1a:	4798      	blx	r3
 8016f1c:	4629      	mov	r1, r5
 8016f1e:	463a      	mov	r2, r7
 8016f20:	680b      	ldr	r3, [r1, #0]
 8016f22:	3a01      	subs	r2, #1
 8016f24:	ea83 0300 	eor.w	r3, r3, r0
 8016f28:	f841 3b04 	str.w	r3, [r1], #4
 8016f2c:	d1f8      	bne.n	8016f20 <_FillRect+0xb4>
 8016f2e:	3601      	adds	r6, #1
 8016f30:	45b1      	cmp	r9, r6
 8016f32:	4455      	add	r5, sl
 8016f34:	dad6      	bge.n	8016ee4 <_FillRect+0x78>
 8016f36:	e7e6      	b.n	8016f06 <_FillRect+0x9a>
 8016f38:	f7ed ff9c 	bl	8004e74 <GUI_ALLOC_LockH>
 8016f3c:	ebc6 0309 	rsb	r3, r6, r9
 8016f40:	3301      	adds	r3, #1
 8016f42:	9300      	str	r3, [sp, #0]
 8016f44:	9903      	ldr	r1, [sp, #12]
 8016f46:	9005      	str	r0, [sp, #20]
 8016f48:	463b      	mov	r3, r7
 8016f4a:	4632      	mov	r2, r6
 8016f4c:	f7f3 f976 	bl	800a23c <GUI_USAGE_AddRect>
 8016f50:	4658      	mov	r0, fp
 8016f52:	f7ed ffa1 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016f56:	e7c3      	b.n	8016ee0 <_FillRect+0x74>
 8016f58:	20000018 	.word	0x20000018

08016f5c <_DrawHLine>:
 8016f5c:	b500      	push	{lr}
 8016f5e:	b083      	sub	sp, #12
 8016f60:	9200      	str	r2, [sp, #0]
 8016f62:	f7ff ff83 	bl	8016e6c <_FillRect>
 8016f66:	b003      	add	sp, #12
 8016f68:	f85d fb04 	ldr.w	pc, [sp], #4

08016f6c <_DrawVLine>:
 8016f6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016f70:	4f35      	ldr	r7, [pc, #212]	; (8017048 <_DrawVLine+0xdc>)
 8016f72:	6838      	ldr	r0, [r7, #0]
 8016f74:	b085      	sub	sp, #20
 8016f76:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8016f78:	4689      	mov	r9, r1
 8016f7a:	4615      	mov	r5, r2
 8016f7c:	461e      	mov	r6, r3
 8016f7e:	f7ed ff79 	bl	8004e74 <GUI_ALLOC_LockH>
 8016f82:	9001      	str	r0, [sp, #4]
 8016f84:	6940      	ldr	r0, [r0, #20]
 8016f86:	2800      	cmp	r0, #0
 8016f88:	d13b      	bne.n	8017002 <_DrawVLine+0x96>
 8016f8a:	683b      	ldr	r3, [r7, #0]
 8016f8c:	9002      	str	r0, [sp, #8]
 8016f8e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8016f90:	f7ed ff70 	bl	8004e74 <GUI_ALLOC_LockH>
 8016f94:	4602      	mov	r2, r0
 8016f96:	a804      	add	r0, sp, #16
 8016f98:	f9b2 4006 	ldrsh.w	r4, [r2, #6]
 8016f9c:	68d3      	ldr	r3, [r2, #12]
 8016f9e:	f840 2d04 	str.w	r2, [r0, #-4]!
 8016fa2:	1b2c      	subs	r4, r5, r4
 8016fa4:	fb03 f304 	mul.w	r3, r3, r4
 8016fa8:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8016fac:	3318      	adds	r3, #24
 8016fae:	ebc4 0409 	rsb	r4, r4, r9
 8016fb2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8016fb6:	18d4      	adds	r4, r2, r3
 8016fb8:	f7ed ff6e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016fbc:	683b      	ldr	r3, [r7, #0]
 8016fbe:	9901      	ldr	r1, [sp, #4]
 8016fc0:	7c1a      	ldrb	r2, [r3, #16]
 8016fc2:	07d2      	lsls	r2, r2, #31
 8016fc4:	d420      	bmi.n	8017008 <_DrawVLine+0x9c>
 8016fc6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016fc8:	9802      	ldr	r0, [sp, #8]
 8016fca:	f8d3 8000 	ldr.w	r8, [r3]
 8016fce:	68cf      	ldr	r7, [r1, #12]
 8016fd0:	b908      	cbnz	r0, 8016fd6 <_DrawVLine+0x6a>
 8016fd2:	e030      	b.n	8017036 <_DrawVLine+0xca>
 8016fd4:	9802      	ldr	r0, [sp, #8]
 8016fd6:	6883      	ldr	r3, [r0, #8]
 8016fd8:	462a      	mov	r2, r5
 8016fda:	681b      	ldr	r3, [r3, #0]
 8016fdc:	4649      	mov	r1, r9
 8016fde:	3501      	adds	r5, #1
 8016fe0:	4798      	blx	r3
 8016fe2:	42ae      	cmp	r6, r5
 8016fe4:	f8c4 8000 	str.w	r8, [r4]
 8016fe8:	443c      	add	r4, r7
 8016fea:	daf3      	bge.n	8016fd4 <_DrawVLine+0x68>
 8016fec:	a801      	add	r0, sp, #4
 8016fee:	f7ed ff53 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016ff2:	9b02      	ldr	r3, [sp, #8]
 8016ff4:	b113      	cbz	r3, 8016ffc <_DrawVLine+0x90>
 8016ff6:	a802      	add	r0, sp, #8
 8016ff8:	f7ed ff4e 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8016ffc:	b005      	add	sp, #20
 8016ffe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017002:	f7ed ff37 	bl	8004e74 <GUI_ALLOC_LockH>
 8017006:	e7c0      	b.n	8016f8a <_DrawVLine+0x1e>
 8017008:	680b      	ldr	r3, [r1, #0]
 801700a:	691b      	ldr	r3, [r3, #16]
 801700c:	689b      	ldr	r3, [r3, #8]
 801700e:	4798      	blx	r3
 8017010:	4607      	mov	r7, r0
 8017012:	9b02      	ldr	r3, [sp, #8]
 8017014:	462a      	mov	r2, r5
 8017016:	4649      	mov	r1, r9
 8017018:	3501      	adds	r5, #1
 801701a:	4618      	mov	r0, r3
 801701c:	b113      	cbz	r3, 8017024 <_DrawVLine+0xb8>
 801701e:	689b      	ldr	r3, [r3, #8]
 8017020:	681b      	ldr	r3, [r3, #0]
 8017022:	4798      	blx	r3
 8017024:	9a01      	ldr	r2, [sp, #4]
 8017026:	6823      	ldr	r3, [r4, #0]
 8017028:	68d2      	ldr	r2, [r2, #12]
 801702a:	407b      	eors	r3, r7
 801702c:	42b5      	cmp	r5, r6
 801702e:	6023      	str	r3, [r4, #0]
 8017030:	4414      	add	r4, r2
 8017032:	ddee      	ble.n	8017012 <_DrawVLine+0xa6>
 8017034:	e7da      	b.n	8016fec <_DrawVLine+0x80>
 8017036:	1b73      	subs	r3, r6, r5
 8017038:	3301      	adds	r3, #1
 801703a:	3b01      	subs	r3, #1
 801703c:	f8c4 8000 	str.w	r8, [r4]
 8017040:	443c      	add	r4, r7
 8017042:	d1fa      	bne.n	801703a <_DrawVLine+0xce>
 8017044:	e7d2      	b.n	8016fec <_DrawVLine+0x80>
 8017046:	bf00      	nop
 8017048:	20000018 	.word	0x20000018

0801704c <_WriteToActiveAlpha>:
 801704c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017050:	b091      	sub	sp, #68	; 0x44
 8017052:	4688      	mov	r8, r1
 8017054:	4614      	mov	r4, r2
 8017056:	4699      	mov	r9, r3
 8017058:	9008      	str	r0, [sp, #32]
 801705a:	f7ed ff0b 	bl	8004e74 <GUI_ALLOC_LockH>
 801705e:	4603      	mov	r3, r0
 8017060:	a810      	add	r0, sp, #64	; 0x40
 8017062:	681a      	ldr	r2, [r3, #0]
 8017064:	4d58      	ldr	r5, [pc, #352]	; (80171c8 <_WriteToActiveAlpha+0x17c>)
 8017066:	6912      	ldr	r2, [r2, #16]
 8017068:	f840 3d08 	str.w	r3, [r0, #-8]!
 801706c:	6852      	ldr	r2, [r2, #4]
 801706e:	9207      	str	r2, [sp, #28]
 8017070:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 8017074:	9206      	str	r2, [sp, #24]
 8017076:	f9b3 a00a 	ldrsh.w	sl, [r3, #10]
 801707a:	f7ed ff0d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801707e:	682a      	ldr	r2, [r5, #0]
 8017080:	4b52      	ldr	r3, [pc, #328]	; (80171cc <_WriteToActiveAlpha+0x180>)
 8017082:	7c52      	ldrb	r2, [r2, #17]
 8017084:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8017088:	68c3      	ldr	r3, [r0, #12]
 801708a:	2108      	movs	r1, #8
 801708c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801708e:	4798      	blx	r3
 8017090:	2817      	cmp	r0, #23
 8017092:	d810      	bhi.n	80170b6 <_WriteToActiveAlpha+0x6a>
 8017094:	2803      	cmp	r0, #3
 8017096:	4606      	mov	r6, r0
 8017098:	bf08      	it	eq
 801709a:	2608      	moveq	r6, #8
 801709c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80170a0:	9309      	str	r3, [sp, #36]	; 0x24
 80170a2:	2000      	movs	r0, #0
 80170a4:	f8d9 3000 	ldr.w	r3, [r9]
 80170a8:	930c      	str	r3, [sp, #48]	; 0x30
 80170aa:	f7ef fb6d 	bl	8006788 <GUI__AllocAlphaBuffer>
 80170ae:	b120      	cbz	r0, 80170ba <_WriteToActiveAlpha+0x6e>
 80170b0:	b011      	add	sp, #68	; 0x44
 80170b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170b6:	2620      	movs	r6, #32
 80170b8:	e7f0      	b.n	801709c <_WriteToActiveAlpha+0x50>
 80170ba:	9906      	ldr	r1, [sp, #24]
 80170bc:	682a      	ldr	r2, [r5, #0]
 80170be:	460b      	mov	r3, r1
 80170c0:	4443      	add	r3, r8
 80170c2:	f9b2 500c 	ldrsh.w	r5, [r2, #12]
 80170c6:	3b01      	subs	r3, #1
 80170c8:	1b5d      	subs	r5, r3, r5
 80170ca:	2d00      	cmp	r5, #0
 80170cc:	bfc4      	itt	gt
 80170ce:	460b      	movgt	r3, r1
 80170d0:	1b5d      	subgt	r5, r3, r5
 80170d2:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 80170d6:	bfd8      	it	le
 80170d8:	460d      	movle	r5, r1
 80170da:	4543      	cmp	r3, r8
 80170dc:	bfc3      	ittte	gt
 80170de:	ebc8 0103 	rsbgt	r1, r8, r3
 80170e2:	1a6d      	subgt	r5, r5, r1
 80170e4:	4698      	movgt	r8, r3
 80170e6:	2100      	movle	r1, #0
 80170e8:	2d00      	cmp	r5, #0
 80170ea:	dde1      	ble.n	80170b0 <_WriteToActiveAlpha+0x64>
 80170ec:	eb0a 0304 	add.w	r3, sl, r4
 80170f0:	f9b2 000e 	ldrsh.w	r0, [r2, #14]
 80170f4:	3b01      	subs	r3, #1
 80170f6:	1a1b      	subs	r3, r3, r0
 80170f8:	2b00      	cmp	r3, #0
 80170fa:	bfc8      	it	gt
 80170fc:	ebc3 0a0a 	rsbgt	sl, r3, sl
 8017100:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
 8017104:	42a3      	cmp	r3, r4
 8017106:	bfc3      	ittte	gt
 8017108:	1b1f      	subgt	r7, r3, r4
 801710a:	ebc7 0a0a 	rsbgt	sl, r7, sl
 801710e:	461c      	movgt	r4, r3
 8017110:	2700      	movle	r7, #0
 8017112:	f1ba 0f00 	cmp.w	sl, #0
 8017116:	ddcb      	ble.n	80170b0 <_WriteToActiveAlpha+0x64>
 8017118:	9b06      	ldr	r3, [sp, #24]
 801711a:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 801711e:	fb07 1703 	mla	r7, r7, r3, r1
 8017122:	eb04 030a 	add.w	r3, r4, sl
 8017126:	00bf      	lsls	r7, r7, #2
 8017128:	930a      	str	r3, [sp, #40]	; 0x28
 801712a:	46b2      	mov	sl, r6
 801712c:	e019      	b.n	8017162 <_WriteToActiveAlpha+0x116>
 801712e:	2304      	movs	r3, #4
 8017130:	9a06      	ldr	r2, [sp, #24]
 8017132:	4631      	mov	r1, r6
 8017134:	4630      	mov	r0, r6
 8017136:	47d8      	blx	fp
 8017138:	2301      	movs	r3, #1
 801713a:	2200      	movs	r2, #0
 801713c:	9205      	str	r2, [sp, #20]
 801713e:	9604      	str	r6, [sp, #16]
 8017140:	9203      	str	r2, [sp, #12]
 8017142:	9301      	str	r3, [sp, #4]
 8017144:	9300      	str	r3, [sp, #0]
 8017146:	4621      	mov	r1, r4
 8017148:	f8cd a008 	str.w	sl, [sp, #8]
 801714c:	462a      	mov	r2, r5
 801714e:	4640      	mov	r0, r8
 8017150:	441c      	add	r4, r3
 8017152:	9e06      	ldr	r6, [sp, #24]
 8017154:	f7f0 f97e 	bl	8007454 <LCD_DrawBitmap>
 8017158:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801715a:	42a3      	cmp	r3, r4
 801715c:	eb07 0786 	add.w	r7, r7, r6, lsl #2
 8017160:	d0a6      	beq.n	80170b0 <_WriteToActiveAlpha+0x64>
 8017162:	9808      	ldr	r0, [sp, #32]
 8017164:	f7fe f9ae 	bl	80154c4 <GUI_MEMDEV_GetDataPtr>
 8017168:	ab0f      	add	r3, sp, #60	; 0x3c
 801716a:	9301      	str	r3, [sp, #4]
 801716c:	9b07      	ldr	r3, [sp, #28]
 801716e:	9300      	str	r3, [sp, #0]
 8017170:	19c2      	adds	r2, r0, r7
 8017172:	462b      	mov	r3, r5
 8017174:	4621      	mov	r1, r4
 8017176:	4640      	mov	r0, r8
 8017178:	f7ef f9c6 	bl	8006508 <GUI__DoAlphaBlending>
 801717c:	4606      	mov	r6, r0
 801717e:	2800      	cmp	r0, #0
 8017180:	d096      	beq.n	80170b0 <_WriteToActiveAlpha+0x64>
 8017182:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017184:	461a      	mov	r2, r3
 8017186:	4b12      	ldr	r3, [pc, #72]	; (80171d0 <_WriteToActiveAlpha+0x184>)
 8017188:	429a      	cmp	r2, r3
 801718a:	d0d5      	beq.n	8017138 <_WriteToActiveAlpha+0xec>
 801718c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8017190:	4652      	mov	r2, sl
 8017192:	464b      	mov	r3, r9
 8017194:	4629      	mov	r1, r5
 8017196:	f7fd fc07 	bl	80149a8 <GUI__CompactPixelIndicesEx>
 801719a:	2800      	cmp	r0, #0
 801719c:	d1cc      	bne.n	8017138 <_WriteToActiveAlpha+0xec>
 801719e:	f8d9 b010 	ldr.w	fp, [r9, #16]
 80171a2:	f1bb 0f00 	cmp.w	fp, #0
 80171a6:	d1c2      	bne.n	801712e <_WriteToActiveAlpha+0xe2>
 80171a8:	46a1      	mov	r9, r4
 80171aa:	f8dd b018 	ldr.w	fp, [sp, #24]
 80171ae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80171b0:	950d      	str	r5, [sp, #52]	; 0x34
 80171b2:	4635      	mov	r5, r6
 80171b4:	6828      	ldr	r0, [r5, #0]
 80171b6:	47a0      	blx	r4
 80171b8:	f1bb 0b01 	subs.w	fp, fp, #1
 80171bc:	f845 0b04 	str.w	r0, [r5], #4
 80171c0:	d1f8      	bne.n	80171b4 <_WriteToActiveAlpha+0x168>
 80171c2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80171c4:	464c      	mov	r4, r9
 80171c6:	e7b7      	b.n	8017138 <_WriteToActiveAlpha+0xec>
 80171c8:	20000018 	.word	0x20000018
 80171cc:	2001c19c 	.word	0x2001c19c
 80171d0:	080042b9 	.word	0x080042b9

080171d4 <GUI_MEMDEV__WriteToActiveAlpha>:
 80171d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171d8:	4c59      	ldr	r4, [pc, #356]	; (8017340 <GUI_MEMDEV__WriteToActiveAlpha+0x16c>)
 80171da:	4b5a      	ldr	r3, [pc, #360]	; (8017344 <GUI_MEMDEV__WriteToActiveAlpha+0x170>)
 80171dc:	f8d4 c000 	ldr.w	ip, [r4]
 80171e0:	f8df 9168 	ldr.w	r9, [pc, #360]	; 801734c <GUI_MEMDEV__WriteToActiveAlpha+0x178>
 80171e4:	f89c 5011 	ldrb.w	r5, [ip, #17]
 80171e8:	f8d9 6000 	ldr.w	r6, [r9]
 80171ec:	f853 4025 	ldr.w	r4, [r3, r5, lsl #2]
 80171f0:	b08b      	sub	sp, #44	; 0x2c
 80171f2:	6923      	ldr	r3, [r4, #16]
 80171f4:	2e00      	cmp	r6, #0
 80171f6:	f000 8088 	beq.w	801730a <GUI_MEMDEV__WriteToActiveAlpha+0x136>
 80171fa:	4617      	mov	r7, r2
 80171fc:	f8dc 2060 	ldr.w	r2, [ip, #96]	; 0x60
 8017200:	4680      	mov	r8, r0
 8017202:	460d      	mov	r5, r1
 8017204:	2a00      	cmp	r2, #0
 8017206:	f000 8085 	beq.w	8017314 <GUI_MEMDEV__WriteToActiveAlpha+0x140>
 801720a:	68e2      	ldr	r2, [r4, #12]
 801720c:	6812      	ldr	r2, [r2, #0]
 801720e:	2a07      	cmp	r2, #7
 8017210:	d078      	beq.n	8017304 <GUI_MEMDEV__WriteToActiveAlpha+0x130>
 8017212:	4a4d      	ldr	r2, [pc, #308]	; (8017348 <GUI_MEMDEV__WriteToActiveAlpha+0x174>)
 8017214:	1a9a      	subs	r2, r3, r2
 8017216:	fab2 f282 	clz	r2, r2
 801721a:	0952      	lsrs	r2, r2, #5
 801721c:	2a00      	cmp	r2, #0
 801721e:	d071      	beq.n	8017304 <GUI_MEMDEV__WriteToActiveAlpha+0x130>
 8017220:	4640      	mov	r0, r8
 8017222:	f7ed fe27 	bl	8004e74 <GUI_ALLOC_LockH>
 8017226:	4603      	mov	r3, r0
 8017228:	a80a      	add	r0, sp, #40	; 0x28
 801722a:	f9b3 b008 	ldrsh.w	fp, [r3, #8]
 801722e:	f840 3d08 	str.w	r3, [r0, #-8]!
 8017232:	f9b3 a00a 	ldrsh.w	sl, [r3, #10]
 8017236:	68db      	ldr	r3, [r3, #12]
 8017238:	9305      	str	r3, [sp, #20]
 801723a:	f7ed fe2d 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801723e:	4b40      	ldr	r3, [pc, #256]	; (8017340 <GUI_MEMDEV__WriteToActiveAlpha+0x16c>)
 8017240:	6818      	ldr	r0, [r3, #0]
 8017242:	eb0b 0405 	add.w	r4, fp, r5
 8017246:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 801724a:	3c01      	subs	r4, #1
 801724c:	1ae4      	subs	r4, r4, r3
 801724e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8017252:	2c00      	cmp	r4, #0
 8017254:	bfcc      	ite	gt
 8017256:	ebc4 040b 	rsbgt	r4, r4, fp
 801725a:	465c      	movle	r4, fp
 801725c:	429d      	cmp	r5, r3
 801725e:	bfbd      	ittte	lt
 8017260:	1b59      	sublt	r1, r3, r5
 8017262:	1a64      	sublt	r4, r4, r1
 8017264:	461d      	movlt	r5, r3
 8017266:	2100      	movge	r1, #0
 8017268:	2c00      	cmp	r4, #0
 801726a:	dd50      	ble.n	801730e <GUI_MEMDEV__WriteToActiveAlpha+0x13a>
 801726c:	eb0a 0307 	add.w	r3, sl, r7
 8017270:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8017274:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8017278:	9107      	str	r1, [sp, #28]
 801727a:	3b01      	subs	r3, #1
 801727c:	ebce 0303 	rsb	r3, lr, r3
 8017280:	2b00      	cmp	r3, #0
 8017282:	bfc8      	it	gt
 8017284:	ebc3 0a0a 	rsbgt	sl, r3, sl
 8017288:	42b8      	cmp	r0, r7
 801728a:	bfc5      	ittet	gt
 801728c:	1bc3      	subgt	r3, r0, r7
 801728e:	ebc3 0a0a 	rsbgt	sl, r3, sl
 8017292:	2300      	movle	r3, #0
 8017294:	4607      	movgt	r7, r0
 8017296:	f1ba 0f00 	cmp.w	sl, #0
 801729a:	9306      	str	r3, [sp, #24]
 801729c:	dd37      	ble.n	801730e <GUI_MEMDEV__WriteToActiveAlpha+0x13a>
 801729e:	4640      	mov	r0, r8
 80172a0:	f7fe f910 	bl	80154c4 <GUI_MEMDEV_GetDataPtr>
 80172a4:	4b26      	ldr	r3, [pc, #152]	; (8017340 <GUI_MEMDEV__WriteToActiveAlpha+0x16c>)
 80172a6:	9907      	ldr	r1, [sp, #28]
 80172a8:	681a      	ldr	r2, [r3, #0]
 80172aa:	9b06      	ldr	r3, [sp, #24]
 80172ac:	f8d2 c060 	ldr.w	ip, [r2, #96]	; 0x60
 80172b0:	fb03 110b 	mla	r1, r3, fp, r1
 80172b4:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 80172b8:	f1bc 0f00 	cmp.w	ip, #0
 80172bc:	d030      	beq.n	8017320 <GUI_MEMDEV__WriteToActiveAlpha+0x14c>
 80172be:	4660      	mov	r0, ip
 80172c0:	f7ed fdd8 	bl	8004e74 <GUI_ALLOC_LockH>
 80172c4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80172c8:	f8d0 800c 	ldr.w	r8, [r0, #12]
 80172cc:	aa0a      	add	r2, sp, #40	; 0x28
 80172ce:	1aed      	subs	r5, r5, r3
 80172d0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80172d4:	f842 0d04 	str.w	r0, [r2, #-4]!
 80172d8:	00ad      	lsls	r5, r5, #2
 80172da:	3518      	adds	r5, #24
 80172dc:	1aff      	subs	r7, r7, r3
 80172de:	fb08 5707 	mla	r7, r8, r7, r5
 80172e2:	4407      	add	r7, r0
 80172e4:	4610      	mov	r0, r2
 80172e6:	f7ed fdd7 	bl	8004e98 <GUI_ALLOC_UnlockH>
 80172ea:	b187      	cbz	r7, 801730e <GUI_MEMDEV__WriteToActiveAlpha+0x13a>
 80172ec:	9b05      	ldr	r3, [sp, #20]
 80172ee:	9301      	str	r3, [sp, #4]
 80172f0:	f8cd 8000 	str.w	r8, [sp]
 80172f4:	f8d9 5000 	ldr.w	r5, [r9]
 80172f8:	4653      	mov	r3, sl
 80172fa:	4622      	mov	r2, r4
 80172fc:	4631      	mov	r1, r6
 80172fe:	4638      	mov	r0, r7
 8017300:	47a8      	blx	r5
 8017302:	e004      	b.n	801730e <GUI_MEMDEV__WriteToActiveAlpha+0x13a>
 8017304:	463a      	mov	r2, r7
 8017306:	4629      	mov	r1, r5
 8017308:	4640      	mov	r0, r8
 801730a:	f7ff fe9f 	bl	801704c <_WriteToActiveAlpha>
 801730e:	b00b      	add	sp, #44	; 0x2c
 8017310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017314:	68e2      	ldr	r2, [r4, #12]
 8017316:	6812      	ldr	r2, [r2, #0]
 8017318:	fab2 f282 	clz	r2, r2
 801731c:	0952      	lsrs	r2, r2, #5
 801731e:	e77d      	b.n	801721c <GUI_MEMDEV__WriteToActiveAlpha+0x48>
 8017320:	7c50      	ldrb	r0, [r2, #17]
 8017322:	f8df e02c 	ldr.w	lr, [pc, #44]	; 8017350 <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8017326:	f8cd a004 	str.w	sl, [sp, #4]
 801732a:	ea4f 028b 	mov.w	r2, fp, lsl #2
 801732e:	9202      	str	r2, [sp, #8]
 8017330:	9400      	str	r4, [sp, #0]
 8017332:	4633      	mov	r3, r6
 8017334:	463a      	mov	r2, r7
 8017336:	4629      	mov	r1, r5
 8017338:	f8de 4000 	ldr.w	r4, [lr]
 801733c:	47a0      	blx	r4
 801733e:	e7e6      	b.n	801730e <GUI_MEMDEV__WriteToActiveAlpha+0x13a>
 8017340:	20000018 	.word	0x20000018
 8017344:	2001c19c 	.word	0x2001c19c
 8017348:	0801745c 	.word	0x0801745c
 801734c:	2001c1b0 	.word	0x2001c1b0
 8017350:	2001c1ac 	.word	0x2001c1ac

08017354 <WM_HideWindow>:
 8017354:	b900      	cbnz	r0, 8017358 <WM_HideWindow+0x4>
 8017356:	4770      	bx	lr
 8017358:	b500      	push	{lr}
 801735a:	b083      	sub	sp, #12
 801735c:	f7ed fd8a 	bl	8004e74 <GUI_ALLOC_LockH>
 8017360:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8017362:	9001      	str	r0, [sp, #4]
 8017364:	0791      	lsls	r1, r2, #30
 8017366:	d405      	bmi.n	8017374 <WM_HideWindow+0x20>
 8017368:	a801      	add	r0, sp, #4
 801736a:	f7ed fd95 	bl	8004e98 <GUI_ALLOC_UnlockH>
 801736e:	b003      	add	sp, #12
 8017370:	f85d fb04 	ldr.w	pc, [sp], #4
 8017374:	f022 0202 	bic.w	r2, r2, #2
 8017378:	6981      	ldr	r1, [r0, #24]
 801737a:	6282      	str	r2, [r0, #40]	; 0x28
 801737c:	6a02      	ldr	r2, [r0, #32]
 801737e:	f7f4 ff23 	bl	800c1c8 <WM__InvalidateRectEx>
 8017382:	a801      	add	r0, sp, #4
 8017384:	f7ed fd88 	bl	8004e98 <GUI_ALLOC_UnlockH>
 8017388:	b003      	add	sp, #12
 801738a:	f85d fb04 	ldr.w	pc, [sp], #4
 801738e:	bf00      	nop

08017390 <__libc_init_array>:
 8017390:	b570      	push	{r4, r5, r6, lr}
 8017392:	4e0d      	ldr	r6, [pc, #52]	; (80173c8 <__libc_init_array+0x38>)
 8017394:	4c0d      	ldr	r4, [pc, #52]	; (80173cc <__libc_init_array+0x3c>)
 8017396:	1ba4      	subs	r4, r4, r6
 8017398:	10a4      	asrs	r4, r4, #2
 801739a:	2500      	movs	r5, #0
 801739c:	42a5      	cmp	r5, r4
 801739e:	d109      	bne.n	80173b4 <__libc_init_array+0x24>
 80173a0:	4e0b      	ldr	r6, [pc, #44]	; (80173d0 <__libc_init_array+0x40>)
 80173a2:	4c0c      	ldr	r4, [pc, #48]	; (80173d4 <__libc_init_array+0x44>)
 80173a4:	f000 f84e 	bl	8017444 <_init>
 80173a8:	1ba4      	subs	r4, r4, r6
 80173aa:	10a4      	asrs	r4, r4, #2
 80173ac:	2500      	movs	r5, #0
 80173ae:	42a5      	cmp	r5, r4
 80173b0:	d105      	bne.n	80173be <__libc_init_array+0x2e>
 80173b2:	bd70      	pop	{r4, r5, r6, pc}
 80173b4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80173b8:	4798      	blx	r3
 80173ba:	3501      	adds	r5, #1
 80173bc:	e7ee      	b.n	801739c <__libc_init_array+0xc>
 80173be:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80173c2:	4798      	blx	r3
 80173c4:	3501      	adds	r5, #1
 80173c6:	e7f2      	b.n	80173ae <__libc_init_array+0x1e>
 80173c8:	0801d15c 	.word	0x0801d15c
 80173cc:	0801d15c 	.word	0x0801d15c
 80173d0:	0801d15c 	.word	0x0801d15c
 80173d4:	0801d160 	.word	0x0801d160

080173d8 <memcpy>:
 80173d8:	b510      	push	{r4, lr}
 80173da:	1e43      	subs	r3, r0, #1
 80173dc:	440a      	add	r2, r1
 80173de:	4291      	cmp	r1, r2
 80173e0:	d100      	bne.n	80173e4 <memcpy+0xc>
 80173e2:	bd10      	pop	{r4, pc}
 80173e4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80173e8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80173ec:	e7f7      	b.n	80173de <memcpy+0x6>

080173ee <memmove>:
 80173ee:	4288      	cmp	r0, r1
 80173f0:	b510      	push	{r4, lr}
 80173f2:	eb01 0302 	add.w	r3, r1, r2
 80173f6:	d803      	bhi.n	8017400 <memmove+0x12>
 80173f8:	1e42      	subs	r2, r0, #1
 80173fa:	4299      	cmp	r1, r3
 80173fc:	d10c      	bne.n	8017418 <memmove+0x2a>
 80173fe:	bd10      	pop	{r4, pc}
 8017400:	4298      	cmp	r0, r3
 8017402:	d2f9      	bcs.n	80173f8 <memmove+0xa>
 8017404:	1881      	adds	r1, r0, r2
 8017406:	1ad2      	subs	r2, r2, r3
 8017408:	42d3      	cmn	r3, r2
 801740a:	d100      	bne.n	801740e <memmove+0x20>
 801740c:	bd10      	pop	{r4, pc}
 801740e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8017412:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8017416:	e7f7      	b.n	8017408 <memmove+0x1a>
 8017418:	f811 4b01 	ldrb.w	r4, [r1], #1
 801741c:	f802 4f01 	strb.w	r4, [r2, #1]!
 8017420:	e7eb      	b.n	80173fa <memmove+0xc>

08017422 <memset>:
 8017422:	4402      	add	r2, r0
 8017424:	4603      	mov	r3, r0
 8017426:	4293      	cmp	r3, r2
 8017428:	d100      	bne.n	801742c <memset+0xa>
 801742a:	4770      	bx	lr
 801742c:	f803 1b01 	strb.w	r1, [r3], #1
 8017430:	e7f9      	b.n	8017426 <memset+0x4>

08017432 <strcpy>:
 8017432:	4603      	mov	r3, r0
 8017434:	f811 2b01 	ldrb.w	r2, [r1], #1
 8017438:	f803 2b01 	strb.w	r2, [r3], #1
 801743c:	2a00      	cmp	r2, #0
 801743e:	d1f9      	bne.n	8017434 <strcpy+0x2>
 8017440:	4770      	bx	lr
	...

08017444 <_init>:
 8017444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017446:	bf00      	nop
 8017448:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801744a:	bc08      	pop	{r3}
 801744c:	469e      	mov	lr, r3
 801744e:	4770      	bx	lr

08017450 <_fini>:
 8017450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017452:	bf00      	nop
 8017454:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8017456:	bc08      	pop	{r3}
 8017458:	469e      	mov	lr, r3
 801745a:	4770      	bx	lr
